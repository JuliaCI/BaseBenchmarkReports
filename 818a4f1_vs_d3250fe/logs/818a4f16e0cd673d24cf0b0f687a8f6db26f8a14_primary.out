cset: moving following pidspec: 29081
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.35416645 seconds)
loading group "string"... done (took 0.554190678 seconds)
loading group "linalg"... done (took 7.056834715 seconds)
loading group "parallel"... done (took 0.159297137 seconds)
loading group "find"... done (took 1.111629154 seconds)
loading group "tuple"... done (took 1.754123456 seconds)
loading group "dates"... done (took 1.247771099 seconds)
loading group "micro"... done (took 0.222889553 seconds)
loading group "io"... done (took 0.916717202 seconds)
loading group "scalar"... done (took 36.232495532 seconds)
loading group "sparse"... done (took 11.075141236 seconds)
loading group "broadcast"... done (took 0.91036998 seconds)
loading group "union"... done (took 11.840715597 seconds)
loading group "simd"... done (took 4.137955365 seconds)
loading group "random"... done (took 8.528778472 seconds)
loading group "problem"... done (took 1.724382854 seconds)
loading group "array"... done (took 19.78365495 seconds)
loading group "misc"... done (took 1.667794179 seconds)
loading group "sort"... done (took 3.094333355 seconds)
loading group "collection"... done (took 16.736010088 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.487381761 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122817024 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114493149 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118225988 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.133209739 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115308397 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122626499 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083685763 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.850981414 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144641325 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118577755 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414511627 seconds)
done (took 5.191592352 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176560255 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084035772 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081114787 seconds)
  done (took 1.346474904 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065203917 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12267654 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066510042 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066766229 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066327896 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065943625 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065948401 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065713859 seconds)
  done (took 1.697632102 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073506108 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069064446 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068361143 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067707146 seconds)
  done (took 1.460456718 seconds)
done (took 5.939256393 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.768369308 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201207033 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183050825 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.400410481 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129016311 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153733464 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.625133948 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321541698 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.1829102 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08138261 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104568108 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.318564942 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107009105 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.637271241 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074481414 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090590708 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136547201 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.433523698 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067252075 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081878648 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088838641 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128003463 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08515921 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074531777 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14357789 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067606353 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130234661 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079997218 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066113931 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206945431 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172256378 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659613595 seconds)
  done (took 10.220834246 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097721733 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096664927 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068202017 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136390994 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09653384 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069824627 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070764093 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067235363 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086847415 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127363155 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088718659 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10122063 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065623388 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068725925 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084288452 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204062934 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.07994206 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081513635 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070419412 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074817795 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116616374 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078215049 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077789551 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077512893 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128599934 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180048342 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097757961 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097608985 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066378741 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080517812 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114466262 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125513937 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065323022 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066223594 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12441642 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094239834 seconds)
  done (took 4.648280065 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.930262271 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.13999805 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090615421 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131208624 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065434409 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10735191 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065554249 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080523016 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.203028769 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.295545847 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.573770421 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110767193 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100576458 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067497457 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.06839865 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066788514 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.345811349 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106122796 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103586747 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081047636 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069357745 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068897694 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.34507439 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067503872 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063464868 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067733648 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057701968 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122711246 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068009125 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.930491402 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126226187 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067110701 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10100012 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164957934 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087444484 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141105373 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.200780304 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.110351559 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06416258 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150842452 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070088821 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066044893 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085816584 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102547506 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113048197 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065326325 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067157294 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16174797 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064871858 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078088826 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.98749411 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152580395 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076167844 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064268178 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.249651199 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086084845 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068748432 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06502955 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.176875824 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133763728 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067731564 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066506928 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068269987 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.06899922 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.349520443 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065759737 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.710005602 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070254336 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075922914 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068818675 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069551579 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0727099 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072321403 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085483916 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066274172 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075275795 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065774904 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065622834 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066802787 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084091173 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.360010099 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066558364 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068089365 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065155685 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08569277 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097179892 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066321837 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065081192 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100241951 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067908826 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066078118 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.209218467 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071269489 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084702348 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069384851 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113263351 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065828312 seconds)
    (97/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.088897542 seconds)
    (98/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069898757 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064434178 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064489504 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095974342 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070464722 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063656272 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098670464 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08080191 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067684154 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.39765877 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06548127 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064456985 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06863535 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064809661 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067394397 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066406909 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078939144 seconds)
  done (took 20.867175347 seconds)
done (took 37.847280572 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.271161055 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075172098 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075124217 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075249606 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075274424 seconds)
  done (took 1.837712707 seconds)
done (took 3.08792156 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119901001 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098642942 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064030757 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095620477 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063958597 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099574672 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09872014 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080600855 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099140166 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064271063 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096052589 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064123474 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064299004 seconds)
  done (took 2.377866612 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083547665 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082785525 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069555 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082856142 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063647639 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081652386 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080909773 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088391284 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080497034 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071792748 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063487876 seconds)
  done (took 2.094429448 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082863593 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083649046 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069803277 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081057099 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063768076 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081243078 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080538076 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085170765 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08125723 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07333173 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063927202 seconds)
  done (took 2.086517642 seconds)
done (took 7.7949721 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07851688 seconds)
  done (took 1.309573608 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.588481886 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.095470801 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082065377 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112368885 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184088838 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119990327 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.280195398 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086831728 seconds)
  done (took 8.961889502 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102811026 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069325151 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071811389 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071490454 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070864862 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071371277 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071105754 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068428228 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071691654 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069560791 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068285579 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06944004 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068043001 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071665993 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068240276 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06929343 seconds)
  done (took 2.460188011 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091702702 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091368773 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072851858 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074560861 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072095758 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072029021 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074377799 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073157448 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070946644 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071846204 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07474962 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073342188 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071790072 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065087559 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074266237 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075882053 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070497877 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073851162 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074915871 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074344471 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074612517 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064280657 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071196328 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07354633 seconds)
  done (took 3.116364462 seconds)
done (took 17.088683084 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112032862 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071363347 seconds)
  done (took 1.421699718 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082293466 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083000674 seconds)
  done (took 1.412506918 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082968222 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065553795 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089617799 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077822746 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066423552 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065423626 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087087855 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066758843 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066391217 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066155946 seconds)
  done (took 1.981577173 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069302782 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077467077 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069975414 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080607631 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073228372 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06421313 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072551049 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06778767 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077301228 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062428323 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071311078 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082004834 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070798524 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083535804 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072229252 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068204357 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070588175 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066950269 seconds)
  done (took 2.549368902 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066769111 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06712287 seconds)
  done (took 1.386110542 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068117441 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063178513 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066446903 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066520174 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063268197 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062312486 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063334908 seconds)
  done (took 1.698741654 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.387129539 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110921284 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.293450972 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070303663 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081662756 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248727396 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065354458 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07005308 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070155225 seconds)
  done (took 2.688117949 seconds)
done (took 14.392017999 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079349253 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084685991 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093172045 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.364243405 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091627527 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065912623 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113738376 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190246361 seconds)
done (took 2.345987026 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212612857 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.614139932 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.381101424 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195239061 seconds)
  done (took 2.445527565 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326059651 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086466938 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058939724 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066697023 seconds)
  done (took 1.801212601 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06691654 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068710153 seconds)
  done (took 1.394495676 seconds)
done (took 7.115104479 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067219329 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06602981 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063388873 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065433309 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063591389 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063048627 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084714711 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062907781 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065672718 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065820359 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068480556 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065424821 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065454347 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063074212 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063274212 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065961001 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065569386 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063233473 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06345785 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066277754 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063215775 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065917792 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063355449 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063092639 seconds)
  done (took 2.865897592 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083688311 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066422958 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071369144 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070573123 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07024831 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070949471 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070851112 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06608216 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071179937 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067753648 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069277801 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.0697426 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067440088 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070011079 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067612426 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070211327 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071321289 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066256959 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068014507 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069800057 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071117707 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066573513 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069412819 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070928188 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069332047 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069593648 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067453902 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066197865 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071013555 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069527788 seconds)
  done (took 3.358531632 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070403634 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062969006 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063258336 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070131425 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063783625 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064039376 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063172775 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063790362 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064498968 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062955588 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065018743 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063647094 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063348085 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064799313 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064256354 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066872676 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079069149 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063610803 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063495654 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063726303 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066615613 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063865924 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063694288 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063088605 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063278444 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063516712 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064352517 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063037969 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063952063 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063169827 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066287088 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067067 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063334955 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069920714 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067235132 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063165391 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067308489 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062916083 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063647816 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063174415 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063204514 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06292339 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063287055 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.182001041 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063183243 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064928399 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063399996 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06442531 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063721046 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065940026 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062642856 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062883743 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065206825 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064461827 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066888009 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06278182 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063943969 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063134326 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063964062 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062870362 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063076683 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062669527 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065110988 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063401577 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077512739 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070036903 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063098019 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066026185 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063812746 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06586625 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064731154 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076189185 seconds)
  done (took 6.067190666 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091984299 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086434704 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065031891 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064914173 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061903461 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064332681 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067202195 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063839467 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06526974 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069475028 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06401142 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064823766 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065000485 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07632229 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064594635 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065139025 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069326042 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061620477 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063983137 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067276901 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063736921 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067264373 seconds)
  done (took 2.778264139 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15592593 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069958358 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105300264 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073276804 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067325999 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072724053 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069844998 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069780205 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069768861 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067897385 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067926345 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069890046 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067417665 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067935917 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067890387 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068187081 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069889492 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067896421 seconds)
  done (took 2.644614407 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078286856 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065884952 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085755388 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065845881 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066014664 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068179875 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0700309 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073995881 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067939451 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065617609 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073889639 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067751436 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068110386 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065973822 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068230948 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06553823 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068381389 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06580323 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074139582 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070091097 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070308251 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073545365 seconds)
  done (took 2.815474488 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08111144 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067636183 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081165337 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068879747 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061866057 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063905874 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069857679 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065703423 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069538862 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067409211 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065717793 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064240307 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068914355 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065959473 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06902703 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065961113 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067418284 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065671266 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067124041 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061628543 seconds)
  done (took 2.635990962 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087730895 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067766541 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0671482 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075274185 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066720485 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067412289 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075378684 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067122815 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067316888 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087130663 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066939661 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067657634 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074896972 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071952839 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066922199 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075059909 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074831884 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074967332 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067422986 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067400072 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087520233 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067451833 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074725036 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067268202 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067280391 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067358666 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066761125 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072004088 seconds)
  done (took 3.28728774 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067771493 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066267657 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063293349 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063377895 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063346543 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063122792 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063370718 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063781484 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065686596 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063891733 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065378985 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065667948 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065868845 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065549035 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06605382 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065610741 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065690492 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063497968 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063487596 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063238759 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065849631 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065904228 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065652352 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063078254 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062977712 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065415655 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063426965 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063000547 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065802821 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063845259 seconds)
  done (took 3.222289272 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076563391 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072744424 seconds)
  done (took 1.433703897 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064203089 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07947933 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06353092 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069738402 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069588391 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066502514 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073325349 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069973454 seconds)
  done (took 1.836025941 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082503923 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077444481 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067274847 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079913291 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076556091 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082387743 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1319222 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06712582 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073096358 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064164945 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079622219 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065742917 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071919772 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066538893 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071820319 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072377074 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063773239 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071997436 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068397543 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064894635 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067196139 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074417001 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068441133 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061778743 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067214744 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087402835 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076889887 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065656263 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068806753 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073375064 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071589394 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06007482 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06578252 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.0664553 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06379506 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075486253 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081279204 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069192956 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074531288 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067375808 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076918145 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061386878 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070423312 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07249702 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076268681 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066335678 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066825754 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06089218 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063656394 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068113334 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061078764 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066415642 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060609095 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074990449 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069635686 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07675302 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064980899 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067389461 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068428524 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069325041 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072839335 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067688749 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068470767 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065611817 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072415754 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070075793 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074931164 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06117685 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062373496 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063925146 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075448987 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088562019 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072551717 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067154641 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067133728 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064130929 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069394266 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067432058 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071640991 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072284487 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065964429 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071414997 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073248999 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066760604 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06854702 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074061068 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06385642 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069392204 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063775761 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082318315 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064720905 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.0637205 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064099961 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076130293 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069255057 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065670251 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064063615 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072728738 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06023196 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066564038 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067089205 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066969586 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076375267 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070440965 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07073604 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.0749035 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072908917 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065905665 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068260815 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061972946 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066210753 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064551928 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072558532 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059799988 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067969281 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066384112 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065412063 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200705005 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065505702 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067101517 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07410775 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072334621 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065145196 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063078895 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069068442 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066970368 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069775894 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074629837 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065962592 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06265284 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061327876 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070382169 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066858794 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069934129 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071877256 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069374482 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061165219 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064407385 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071635896 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07527778 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066857245 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067740679 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07227296 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067585849 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065883154 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073776869 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068593214 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066269985 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071784183 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067004193 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061729376 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069669226 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069287759 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06536928 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070318506 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069427382 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068208826 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067412113 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065138862 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073549873 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067557772 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065701941 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066150047 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064912755 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076330826 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068444281 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060970288 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063736422 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075928853 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064362466 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066156701 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065274774 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068819411 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067162561 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063533567 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066660256 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06914798 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076900007 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070498248 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066944131 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071960794 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07739981 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066293441 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068429528 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066047961 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067645376 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067207347 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075087938 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071609669 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071512552 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06852256 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062668527 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071837208 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073379148 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065937313 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063825517 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065405113 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070301593 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07191098 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070110077 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066783672 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064323739 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06713285 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069361993 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068963266 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065707094 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064959446 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072456211 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063959395 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073137449 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066930685 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.0757405 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069513989 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061307276 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069259763 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064269592 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07196717 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061141771 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063877178 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065550556 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067001282 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065262592 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068545861 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060312797 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073054989 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073562537 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066820853 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064894281 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065676582 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072275159 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066893309 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068853981 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068439068 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071023717 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075203307 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064619801 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068556898 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075363567 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065079339 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.189511573 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072452014 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065466605 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066101187 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064903148 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065545575 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069930525 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07588958 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073225054 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060305561 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069334199 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06429523 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066060111 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06227482 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071390879 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069552099 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068090472 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073368696 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067955138 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067369196 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070228196 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06656677 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067362725 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067794158 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069601217 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068015171 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067828899 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06569397 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069370947 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066164645 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063888726 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069179324 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066484585 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065984918 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071400144 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065992597 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067266732 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068746148 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067612154 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067637604 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067661787 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065623325 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069261426 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06761325 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066598015 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069589184 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061848293 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073802319 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066282165 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07397476 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066751506 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064125323 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073567213 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068473504 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072158286 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066945269 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067674955 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068020362 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065843949 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069242286 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072915719 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064025787 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077124784 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074316197 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067666053 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.06956637 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067133091 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067527836 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065415362 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066969202 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066910989 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066787197 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066124478 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070741423 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068752302 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06616882 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067744507 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067205058 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066513827 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066724739 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060768623 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065063397 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065684591 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065831283 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075522209 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066758932 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065885581 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065212055 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066939226 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064834529 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062511509 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074296489 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075062972 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066592601 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073156656 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065734628 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067784662 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076773308 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060279573 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064391985 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06406272 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063976051 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073290485 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06658466 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075295876 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066368935 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065604048 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063605929 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066950062 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064814295 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060486851 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063540639 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069400851 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064749235 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064523636 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065734521 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068412071 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066247121 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074089941 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064405172 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066316585 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065500068 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062369632 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06407355 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064327409 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.201543545 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067975482 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065218988 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064119111 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067232898 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06786963 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067705914 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065758754 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067383403 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076192534 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066230518 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069372483 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069752378 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061549195 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069621074 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.0658984 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066430992 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065488748 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070454915 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070116705 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067789079 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075742146 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066616777 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067057447 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067110554 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064395128 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066206514 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065546355 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06605324 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066142997 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067971676 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075104203 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064021546 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069628011 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066353148 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066500364 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072615889 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06706369 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068998717 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073000198 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066648543 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068009426 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07426737 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070899818 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069828687 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067237816 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067583498 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072362093 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065821938 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073217452 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066963759 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.0674102 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067869244 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064658194 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066472731 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066702886 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065125686 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072467705 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067368727 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066079939 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066267632 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064054322 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067042786 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069145694 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073461131 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068284791 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069427615 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061658826 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064113346 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066982157 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064568322 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068140025 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068532323 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071581604 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068300516 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067157897 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065154827 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074966709 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072255751 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069874314 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064342645 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069734034 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06678317 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068523822 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067160373 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066453157 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067530724 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070436699 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067580315 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065521816 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073445754 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069364839 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067003754 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067769237 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066942783 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066394804 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061188365 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06678662 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068407959 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071214426 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068970611 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066227446 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076960574 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063830516 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066849768 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069583448 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065719026 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071223505 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06166651 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068238641 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067456555 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066856988 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061261822 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065503987 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06403092 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068211869 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065122985 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060944162 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076066403 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073529437 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067830085 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064817153 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063722444 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060770772 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060229075 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.196801638 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068125242 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068872153 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076556894 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065075483 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065688672 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061946365 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06631065 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069836992 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070036284 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063797274 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061678346 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065546585 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070319107 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071887023 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065541476 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065890145 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070030952 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069074439 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064115322 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069656917 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064117229 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07039963 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079229758 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067590357 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067507339 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07300369 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074122102 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067098028 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062192078 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067145819 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069998221 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067118149 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067347557 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068098565 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081540388 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06992581 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065543956 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065184131 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069773243 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065879418 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073950012 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067588047 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06782325 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071334238 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068580147 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076327207 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070078801 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07361598 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069704264 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069943894 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065155182 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066485246 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064461572 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066037928 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067487305 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067295798 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071887995 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075036322 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065651358 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077214593 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07573325 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068753 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063398275 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065558947 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065810081 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06247698 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06760764 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064712002 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065233315 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064683108 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06502791 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06749471 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071648451 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067740959 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067432871 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065800581 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060533563 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068864746 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068677916 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067052649 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063098784 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066320082 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066997233 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070033197 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069849603 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063962152 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067895263 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068209463 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066737039 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061697997 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072344917 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064730921 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068139234 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065461477 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066032325 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066856149 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069328365 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071193067 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067539645 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068825196 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.06973642 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06826015 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063618802 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063738651 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071126637 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063957932 seconds)
  done (took 42.524485448 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100746579 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062905065 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062383938 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061691189 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07339125 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062660342 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061878844 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062840167 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063210994 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065449726 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061932964 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061559245 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070345127 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077492164 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074064674 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06616688 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062145681 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062748126 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061803528 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062767356 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070837822 seconds)
  done (took 2.783960506 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074286226 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069630606 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072744819 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075657353 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067177562 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070185198 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072232428 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070355025 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07593066 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066832056 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075250128 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070298972 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066726539 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066628255 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066813949 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071105489 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075652769 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067006542 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07851233 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072357835 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070428999 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072778557 seconds)
  done (took 2.922446911 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067582466 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065767377 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067364064 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061842273 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066268677 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061350409 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069083032 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06359943 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068790857 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065042999 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064798987 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064609298 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06732615 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061263244 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065711073 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063798124 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108503909 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069671197 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065550596 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066522229 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061334588 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06784797 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061058153 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061698877 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064499749 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069451642 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066735911 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063613987 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065413303 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06492344 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065467979 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063448643 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067239391 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066403016 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065094392 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064915076 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065364986 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065318961 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061599728 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063790291 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066323198 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061557079 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066264696 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066799553 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063865113 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063438817 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067106355 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065413614 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060540987 seconds)
  done (took 4.587230148 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080564689 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108781018 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06730192 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087953236 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079567953 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075056142 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068988051 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.08883087 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063406265 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06418766 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081341225 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079248031 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066184027 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070169151 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069319464 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065659858 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06664097 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064289886 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069591295 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064748179 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069577016 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071995573 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079602903 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078863234 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069408686 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064559351 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064871472 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070031571 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.0778939 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070182493 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06963462 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070525333 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080289227 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07088586 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064772744 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067666457 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081530329 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065878962 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067744715 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063714968 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067953041 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069849793 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072035082 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081491712 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066087173 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070939423 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065489179 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062878206 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077874974 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067369056 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073126388 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079619262 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069173113 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065346496 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06951734 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080193475 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065256318 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063421955 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067684263 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07769969 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063190573 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068783853 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078893533 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067419695 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072235814 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079273736 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070435732 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068915544 seconds)
  done (took 6.378428461 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076317051 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072366929 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079807818 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080062173 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072213612 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072289273 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071685642 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072043218 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071701514 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077562987 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07188754 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092783272 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067860147 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074519683 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072203661 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072093615 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072411174 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071972717 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071864658 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07174303 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072410699 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080188949 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072482853 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079677203 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098156937 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067867502 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072068331 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072065483 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079970866 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072473593 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07907645 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071988606 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072163873 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079866089 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079033678 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071937264 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065018386 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071613306 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071838519 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071897715 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067330295 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079920567 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072157837 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067351685 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072569705 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071839434 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079690739 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079310457 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074768843 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0769073 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072168991 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079991093 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072002885 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072307158 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079842835 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104529484 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07984127 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079687615 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071712175 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079563529 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079526368 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085848268 seconds)
  done (took 6.067614748 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083824758 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075397388 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076336928 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061411485 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064393541 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070170686 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06386393 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063851453 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07411653 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074252776 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076732464 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069389849 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072652025 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076658293 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069403358 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072850491 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069585443 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069421603 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074171544 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069263984 seconds)
  done (took 2.808095515 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074638464 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083441629 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066736651 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072041625 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068912826 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071504996 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068143915 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069066641 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066677345 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068569153 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075969627 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075910239 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06646749 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071621472 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075372283 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071399466 seconds)
  done (took 2.519548903 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076437056 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072965218 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079836016 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065788293 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063843265 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06266235 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065734028 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061378346 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062105589 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077618306 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065595925 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068630028 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065811377 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064439046 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062757434 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068821089 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062318446 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063248631 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065558408 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078352213 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076238333 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064130051 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066187855 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065568307 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066022945 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070794637 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065107816 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063510784 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063069668 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065934522 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066292631 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06921422 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063206943 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063914253 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064589745 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063423415 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065615082 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066174964 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068480812 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06573616 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063794483 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065318284 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065885318 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066881678 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062285668 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066484072 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062427865 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067712002 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063968004 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06633468 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065634773 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068096283 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066371132 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072654007 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068749968 seconds)
  done (took 5.044223995 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080072066 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07003704 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061606465 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064247249 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068635285 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067667868 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069451144 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067905775 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067643984 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064149548 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067542854 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068851996 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067719197 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069548356 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067710458 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0693816 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061678735 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067674123 seconds)
  done (took 2.608950956 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072428906 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066128242 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072583558 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066112921 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065705331 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067966803 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062216456 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064286249 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065549216 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065851321 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066178662 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068295611 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06453846 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068425046 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066146094 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065994154 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068128815 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064421687 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065716259 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062162919 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067996568 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064117109 seconds)
  done (took 2.841877144 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073645441 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092876915 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.138124783 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083501679 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081775113 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.07848041 seconds)
  done (took 1.928480346 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091634135 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079569711 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066917618 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087868436 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073500611 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06739239 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067090787 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067532752 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076083914 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076586048 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067619131 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076284256 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076203813 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075682014 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073451876 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07323429 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067577434 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06736357 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066510614 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08460519 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067714386 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076008677 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067476956 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067152873 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067622516 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075676166 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076146765 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076435161 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067746115 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075945534 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073135394 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067650751 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076066615 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076165612 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069426586 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076416703 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067668797 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084251562 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073198083 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075865449 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069264861 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073501843 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076518951 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072242704 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075930972 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068058261 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072681061 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067675987 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067739307 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086389082 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073711271 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075121888 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073731534 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076291904 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076120704 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086140162 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076688016 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07538688 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07331926 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0788238 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075280828 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073083849 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074915815 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075837124 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07305468 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07528123 seconds)
  done (took 6.263316129 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082509002 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085703965 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067821925 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076853764 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075604281 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067547228 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067866 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067663231 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068037506 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067446904 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108070964 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068100953 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075702252 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075768932 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06797891 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067668342 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068242174 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075890857 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067561199 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086763064 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067910206 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07516813 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076065746 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075536488 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076801845 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073948004 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067863875 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067625594 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067574196 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068202262 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07254005 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068383433 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075539285 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068011998 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075511406 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068013876 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067606462 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072381168 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067594932 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073326971 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075392182 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083782768 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067228463 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06716075 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07591329 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067373504 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067151535 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067031802 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067465861 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067224178 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07590276 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076287951 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076546107 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075323774 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068271938 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067587093 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067506026 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067314318 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067648642 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072857774 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075211283 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067805042 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085696329 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06712485 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067360372 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075405332 seconds)
  done (took 6.170802558 seconds)
done (took 129.650790264 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185833928 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169025357 seconds)
  done (took 1.727692454 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069654811 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098182494 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077268275 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129044946 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067440136 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100608004 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099734223 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078751358 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066362712 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066305219 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066229521 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068628016 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131654809 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066470052 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066499632 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06910663 seconds)
  done (took 2.710013133 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098142561 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157378188 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099785399 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065482596 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096428175 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073022651 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065261405 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075084207 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071361318 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065500708 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07366876 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070823419 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065490271 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070846296 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07127551 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073570155 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064872315 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073115566 seconds)
  done (took 2.821162715 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102637422 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091884045 seconds)
  done (took 1.587945653 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156627756 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105232748 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.154553565 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346557983 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167482627 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229798771 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127423705 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127855274 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116749743 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123684278 seconds)
  done (took 3.044656574 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098993945 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.15228056 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.256321023 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115567053 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072479761 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095002627 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116677059 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077753709 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080854706 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080387859 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080494785 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076188577 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099036796 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073805302 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07363063 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076320778 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102113903 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072498754 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074146622 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077391903 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099335876 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066489009 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073412184 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072432839 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07750313 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077862029 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065461039 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065491652 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076385096 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074093414 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077274867 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093983491 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077140274 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10718867 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070079191 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107854022 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076686088 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073990872 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074306748 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07383086 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079037844 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078345671 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07226058 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076072096 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065145475 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076348457 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065246064 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065636829 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078258081 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067002441 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078350599 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076814771 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10719862 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068385996 seconds)
  done (took 6.00664454 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103054163 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105649153 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071916038 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109133097 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097709785 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071721935 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101170674 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091554505 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102766027 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09298903 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089130414 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070728256 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082361867 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083463344 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109947327 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102443399 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095448872 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070702164 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102268823 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102968022 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068508646 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094790164 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090825597 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101909684 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067473213 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070756586 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068121768 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.0707485 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076884701 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079097437 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070609626 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.102252595 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084877592 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078622672 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06745787 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06809452 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068349806 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079732046 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097611297 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078882034 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077957456 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067707106 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068781458 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069622459 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091345012 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068115605 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079275764 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080570733 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079160787 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070462461 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070478945 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067826116 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069688524 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080025157 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078057406 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08073698 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080659228 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06823599 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068766694 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072035281 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081368286 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079294241 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07949082 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.093210741 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079264588 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068223636 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080287993 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084906753 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068237908 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069695299 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068963384 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069560614 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069842229 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078122476 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078363046 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07029625 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070309621 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068612578 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08007716 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078803528 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068601922 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076977321 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067263464 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068999592 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070243886 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070013383 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077918626 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079889021 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070454678 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068483725 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069624733 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069157781 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067811474 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076632124 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079602726 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079066431 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07831165 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069055716 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078102651 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078248054 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069332891 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078556793 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.198565187 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071583493 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07051911 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080171071 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078024499 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079510117 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069936153 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068920243 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078598131 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082009248 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069112969 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078731309 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080963742 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079663684 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068366542 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082104055 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068638609 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.0800996 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070305256 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080784155 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069772598 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079637542 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06870428 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068339567 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069110703 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080717944 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070810901 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068922551 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070004453 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070612016 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080384583 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083767679 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071265523 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082615789 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.0793757 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07175553 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07982676 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069105363 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080382073 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070544969 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070304039 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067927844 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083428125 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069209064 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068743995 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07016685 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081483953 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068879759 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080861828 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078936278 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068363047 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081449225 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080585426 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077583071 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079894079 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070513384 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069020728 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068513463 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070153464 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078693892 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080248219 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071302208 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069058704 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079151018 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080352956 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067521684 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078962101 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079237657 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079180191 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068866213 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070404626 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080643629 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081270651 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078848953 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078485469 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078737707 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068535786 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077588631 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078437812 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068510334 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084986225 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068652057 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082599903 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079310508 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076970939 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07879814 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080870348 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08056856 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080037533 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083061339 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068211573 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067893103 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079871263 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068200954 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069510516 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078596839 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070522477 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069995066 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082808001 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068095447 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078627856 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06709552 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077605867 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066950977 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069666541 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.214871386 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069899115 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070529171 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080348787 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070358917 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078158832 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081719562 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080441915 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069420649 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071514345 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080755702 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079331589 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068798977 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068804605 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071294787 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.0785378 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078910009 seconds)
  done (took 18.899926902 seconds)
done (took 38.196599193 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210255352 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150668591 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180386335 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118090731 seconds)
  done (took 2.152339906 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123044259 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101309302 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095014588 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065141969 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103687682 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064815048 seconds)
  done (took 1.986417879 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313468038 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212558468 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183396168 seconds)
  done (took 2.13642447 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198410866 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187787071 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393087628 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252681305 seconds)
  done (took 2.567905754 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144362927 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089397834 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066929018 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.0830944 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134957973 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161576229 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101158625 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125962319 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077803234 seconds)
  done (took 2.467255139 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147599619 seconds)
done (took 12.890902605 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.239707008 seconds)
    (2/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.238772367 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.14704857 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.189743833 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.124603561 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.101096103 seconds)
    (7/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.202114779 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077536176 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.108973057 seconds)
    (10/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.194857111 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073241439 seconds)
    (12/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.204093616 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.147207075 seconds)
    (14/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.19368794 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121889274 seconds)
    (16/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.189652492 seconds)
    (17/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.074060709 seconds)
    (18/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.196662181 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140858807 seconds)
    (20/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.183574534 seconds)
    (21/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.088187984 seconds)
    (22/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.127941093 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.081680169 seconds)
    (24/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078831534 seconds)
    (25/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.156544324 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05082724 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.09503561 seconds)
    (28/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.192612756 seconds)
    (29/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.149258118 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072426027 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.138837547 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086823694 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.0715197 seconds)
    (34/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.147562129 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09066993 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065111771 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139125999 seconds)
    (38/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.208761834 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137972358 seconds)
    (40/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.11059751 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.2089506 seconds)
    (42/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.148611804 seconds)
    (43/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052160994 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.100607252 seconds)
    (45/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072536047 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087303255 seconds)
    (47/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078757326 seconds)
    (48/309) benchmarking ("sort", Int8, false)...
    done (took 0.139181058 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.108747149 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072528831 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171918665 seconds)
    (52/309) benchmarking ("sort", BigInt, false)...
    done (took 0.184262869 seconds)
    (53/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.1187184 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072263308 seconds)
    (55/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053365859 seconds)
    (56/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051254109 seconds)
    (57/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.155640454 seconds)
    (58/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135842906 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.181693428 seconds)
    (60/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.150496791 seconds)
    (61/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076750316 seconds)
    (62/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098694874 seconds)
    (63/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.182298671 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052276551 seconds)
    (65/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072856971 seconds)
    (66/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050896755 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066456116 seconds)
    (68/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074999423 seconds)
    (69/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074288059 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093135755 seconds)
    (71/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.149591924 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076096922 seconds)
    (73/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050904849 seconds)
    (74/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053911277 seconds)
    (75/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081138944 seconds)
    (76/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.105279143 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 0.065960096 seconds)
    (78/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.183581302 seconds)
    (79/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071593928 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089973231 seconds)
    (81/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.10511232 seconds)
    (82/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050736956 seconds)
    (83/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071660992 seconds)
    (84/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.147345938 seconds)
    (85/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.152456946 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088976765 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134340943 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051977765 seconds)
    (89/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.087146304 seconds)
    (90/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079530479 seconds)
    (91/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050354743 seconds)
    (92/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070620941 seconds)
    (93/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.146747182 seconds)
    (94/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071871637 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.098576002 seconds)
    (96/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075151896 seconds)
    (97/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087225923 seconds)
    (98/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050316192 seconds)
    (99/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.146734458 seconds)
    (100/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.106178197 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107650458 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141151455 seconds)
    (103/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051518257 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.089189141 seconds)
    (105/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.060868268 seconds)
    (106/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070369898 seconds)
    (107/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074375515 seconds)
    (108/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.0614404 seconds)
    (109/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.27110448 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.137050294 seconds)
    (111/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073776382 seconds)
    (112/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051547898 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086387591 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064122561 seconds)
    (115/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.171547082 seconds)
    (116/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069791437 seconds)
    (117/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073594741 seconds)
    (118/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074574143 seconds)
    (119/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074039791 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087582392 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050642745 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.087674109 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.130787948 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071836604 seconds)
    (125/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.106920732 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.089116174 seconds)
    (127/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.101458069 seconds)
    (128/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051801387 seconds)
    (129/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07227787 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069118301 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071465672 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.089331448 seconds)
    (133/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.152502363 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.139050409 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065887265 seconds)
    (136/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070804215 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084245685 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096874573 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.074548595 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070942925 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.074283954 seconds)
    (142/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065442367 seconds)
    (143/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.061672313 seconds)
    (144/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.218432417 seconds)
    (145/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.157851289 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070701018 seconds)
    (147/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069515485 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.063747707 seconds)
    (149/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062039691 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064111903 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.063845649 seconds)
    (152/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067535462 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064255022 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.097234027 seconds)
    (155/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.097988188 seconds)
    (156/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.153717677 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071079234 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.063375834 seconds)
    (159/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06431973 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087328157 seconds)
    (161/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.145714139 seconds)
    (162/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.069314939 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.051827187 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.090392441 seconds)
    (165/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.073844807 seconds)
    (166/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066376263 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050272751 seconds)
    (168/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164731264 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.062886641 seconds)
    (170/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050618558 seconds)
    (171/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070505659 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.160029475 seconds)
    (173/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.065448331 seconds)
    (174/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.05217891 seconds)
    (175/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.077944832 seconds)
    (176/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.049786185 seconds)
    (177/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.049394958 seconds)
    (178/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066155399 seconds)
    (179/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065080614 seconds)
    (180/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065462398 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070387699 seconds)
    (182/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.084495375 seconds)
    (183/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.063205882 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.174211331 seconds)
    (185/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.049822598 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084968282 seconds)
    (187/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.065573501 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.063642474 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.352646579 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182692096 seconds)
    (191/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053064974 seconds)
    (192/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.10258231 seconds)
    (193/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.052843167 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092661784 seconds)
    (195/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090566897 seconds)
    (196/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067719427 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053567247 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14777472 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066538248 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070252761 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068691177 seconds)
    (202/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076938549 seconds)
    (203/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074451822 seconds)
    (204/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071173998 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.078757841 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073355043 seconds)
    (207/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075963847 seconds)
    (208/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079284734 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110387056 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075255387 seconds)
    (211/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075719444 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073404644 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093218684 seconds)
    (214/309) benchmarking ("sort", Float32, false)...
    done (took 0.129356915 seconds)
    (215/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099808269 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066569874 seconds)
    (217/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066911596 seconds)
    (218/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053280509 seconds)
    (219/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062551313 seconds)
    (220/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.134297659 seconds)
    (221/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174735982 seconds)
    (222/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065298757 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071040072 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066143353 seconds)
    (225/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.098143192 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06426768 seconds)
    (227/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052677672 seconds)
    (228/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079889773 seconds)
    (229/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.156611129 seconds)
    (230/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051810868 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136531857 seconds)
    (232/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073648162 seconds)
    (233/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067977154 seconds)
    (234/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065628553 seconds)
    (235/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087002729 seconds)
    (236/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066430978 seconds)
    (237/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052184579 seconds)
    (238/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071237954 seconds)
    (239/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068334869 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055275321 seconds)
    (241/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051868502 seconds)
    (242/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.06141292 seconds)
    (243/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060994555 seconds)
    (244/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062948502 seconds)
    (245/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052343226 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066207756 seconds)
    (247/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087358471 seconds)
    (248/309) benchmarking ("sort", Float64, false)...
    done (took 0.125849148 seconds)
    (249/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053100023 seconds)
    (250/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118392489 seconds)
    (251/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052093264 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065971688 seconds)
    (253/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052793937 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06564582 seconds)
    (255/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068038467 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.119196514 seconds)
    (257/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06656884 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065605439 seconds)
    (259/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064492642 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066249564 seconds)
    (261/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103074225 seconds)
    (262/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06171002 seconds)
    (263/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052218232 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.0724371 seconds)
    (265/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072692125 seconds)
    (266/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073344455 seconds)
    (267/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.05191 seconds)
    (268/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07570595 seconds)
    (269/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052003618 seconds)
    (270/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052747823 seconds)
    (271/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.15075322 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073423915 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066637144 seconds)
    (274/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072409406 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068028309 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088000774 seconds)
    (277/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051666403 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065559521 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053754297 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09246057 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.08993389 seconds)
    (282/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078806857 seconds)
    (283/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063552553 seconds)
    (284/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052586004 seconds)
    (285/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067415573 seconds)
    (286/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066843408 seconds)
    (287/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065515043 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073139409 seconds)
    (289/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062279143 seconds)
    (290/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07219557 seconds)
    (291/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078881242 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064356721 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063940467 seconds)
    (294/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065350233 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072699776 seconds)
    (296/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071646502 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051744931 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100641203 seconds)
    (299/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052569516 seconds)
    (300/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081458586 seconds)
    (301/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071008688 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070566596 seconds)
    (303/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066867154 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095413107 seconds)
    (305/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065467722 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071081527 seconds)
    (307/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.05284806 seconds)
    (308/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051972421 seconds)
    (309/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062138195 seconds)
  done (took 30.398342071 seconds)
done (took 31.838678813 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088343806 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094259579 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076372087 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093809348 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082192582 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07766759 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074353884 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079825814 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081426698 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083133216 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080175692 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056261684 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075324004 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075559381 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075993189 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092724334 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079402008 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073971102 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074448092 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065517113 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073771923 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06676574 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068004678 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055539865 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078580207 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072285221 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072960111 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075002397 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066457261 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066361231 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069444976 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073570339 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066340063 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078301509 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072687145 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073504522 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075466468 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076851801 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068192369 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066893303 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07432324 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066605489 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073114644 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073925807 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072710429 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071622637 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073665544 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078127128 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092052934 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06857885 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074806907 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076227365 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07646058 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07291108 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070025485 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073612405 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071340089 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091776966 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073634018 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068595033 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074486529 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07429496 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071315785 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073492277 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073601939 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075464184 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075908269 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071404155 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075261713 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071300666 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066169321 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07353183 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069050186 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066343882 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076341892 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077759286 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064985587 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071710033 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072860041 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071752882 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065353377 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06784082 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067714403 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07192095 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06790735 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054902377 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069454152 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072094487 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064710125 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073659132 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071871718 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072538994 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067339816 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076029644 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064962093 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07074598 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065731422 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065907594 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067425662 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069651485 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065553516 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06792244 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074538011 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066889452 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071690348 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079147721 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065371138 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071704236 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064600852 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065316912 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079878218 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075298823 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066003428 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067987239 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065022776 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072618322 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064669019 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065570761 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065774704 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065713892 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071360324 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065614846 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067347728 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072411298 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078077702 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065572027 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068457766 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067527122 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06547631 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070725094 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065235162 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065373494 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066735177 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061542758 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067198217 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065101495 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072286333 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067551511 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072724561 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066919315 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073429842 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.06994136 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070790232 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070952481 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06434041 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058538194 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067569243 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067280372 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067415684 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06537925 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066582248 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065376809 seconds)
done (took 12.487778437 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072331754 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143998829 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100270989 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096162581 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086686709 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067959322 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.0771175 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103348533 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067980752 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10326408 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088177706 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085845309 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113705038 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065129716 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066605617 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070347675 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067542242 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082153317 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101458342 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086625076 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116781942 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06576979 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094782991 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090615172 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087696619 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092550657 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067523249 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070239322 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069874785 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101099051 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086698322 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070172572 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066992621 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.1007062 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092817576 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083619331 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066734699 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083348189 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067223063 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066495802 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067876439 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098842186 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081052447 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081048244 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070366789 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069827262 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067749881 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084203457 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089759845 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079639818 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087457963 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103330299 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069555273 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066477155 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065713902 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086000364 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066093991 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069458169 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067428347 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068881748 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066556464 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070440946 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081645357 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082853246 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070709745 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080664003 seconds)
  done (took 6.928471748 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085313985 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090021787 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084397882 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084232706 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066661724 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066741971 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067174701 seconds)
  done (took 2.131704532 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06901198 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088665077 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089579959 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089880748 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084450524 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088506198 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076197005 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06693062 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08125029 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068787246 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087730135 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102375523 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06743273 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073524859 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091632876 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067250079 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090829173 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067110795 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06994873 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090680582 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068988515 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082610339 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070444265 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067298201 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081874587 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067785485 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113589548 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072138074 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068579266 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070068485 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064925468 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107623904 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081136216 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076371501 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066896893 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08192675 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081567299 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065126476 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083661129 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072814982 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081110837 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067614779 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068068712 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065027903 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071732447 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077461117 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067905869 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067902719 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069500206 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086796742 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067857957 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079978337 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071447755 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068977489 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06804836 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070076221 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076317847 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067329729 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086196963 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067861835 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083445506 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082913344 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080359959 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082627663 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068758818 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080564884 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08023693 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069287978 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068369255 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069901379 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08265742 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065038306 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068213284 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077128248 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068716257 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089537229 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08959373 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0679647 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075596081 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067545109 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066654017 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066903655 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089208579 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068718002 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066344141 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070886831 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070157358 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065102508 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065674711 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070002658 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064423421 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068291185 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06953529 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069947916 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06938907 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083348349 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069263871 seconds)
  done (took 8.89221705 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070533797 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068909367 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069435786 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067692043 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06768716 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068514902 seconds)
  done (took 2.023292353 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095525705 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07010704 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08055715 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072594248 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105009048 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087265794 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08769509 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079204975 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08410578 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079157062 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087309398 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088424693 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093005384 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073063697 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086894289 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072532754 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087464861 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076095787 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079375673 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073438633 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086899567 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07350476 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073335567 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082027787 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07637053 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072546543 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067718979 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079417673 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078805887 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079174983 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073144888 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075990375 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071221583 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078831623 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087182988 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070650232 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072241572 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077893143 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072886331 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075572522 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088017025 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073807888 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075246957 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077485535 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078818943 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071112267 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07789529 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07614058 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086620615 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077639131 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078067359 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071859817 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075546838 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076901855 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070405713 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078495994 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077049273 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086443501 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072304586 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070209154 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069194385 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075523852 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078211851 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075247421 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078905861 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077199732 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070651539 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073065338 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073000305 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071996094 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077215701 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069439275 seconds)
  done (took 7.199985943 seconds)
done (took 28.775193787 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.546240586 seconds)
  done (took 2.120052986 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.606480834 seconds)
  done (took 2.207925766 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.665217418 seconds)
  done (took 8.266877803 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.394621855 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.478428565 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.694887449 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131797547 seconds)
  done (took 3.35167789 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.667961208 seconds)
  done (took 2.279645468 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.213171094 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.198065547 seconds)
  done (took 2.030847684 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377246542 seconds)
  done (took 1.979529471 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.112963225 seconds)
  done (took 2.718749081 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.264011434 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.168013586 seconds)
  done (took 2.040633252 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.464673566 seconds)
  done (took 2.072749511 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.889245878 seconds)
  done (took 6.499930749 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.21563844 seconds)
  done (took 1.869818507 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242243832 seconds)
  done (took 1.852557454 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.7333466 seconds)
  done (took 3.34199546 seconds)
done (took 44.242472008 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081084694 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080613696 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080699736 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078411268 seconds)
  done (took 1.915723642 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078134798 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072198055 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076461025 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072075208 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076450036 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071852769 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074710113 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076452136 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072292131 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073131778 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072558058 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071971119 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074529459 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074407724 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.0712073 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07498883 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07585081 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072394187 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075372021 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07218869 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070770754 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074221275 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074731764 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071677395 seconds)
  done (took 3.382228188 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079187779 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072408075 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074710168 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071189659 seconds)
  done (took 1.915904119 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078622549 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091602581 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08926042 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077775093 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092391144 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086438901 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069213311 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068945325 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072734472 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07731906 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06834187 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095873959 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087614815 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077042574 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079256786 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065940404 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068339079 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086835734 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076953313 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077835462 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070362615 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076711006 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068212144 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088157711 seconds)
  done (took 3.508701685 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078853847 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103717372 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076957908 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08769558 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089131497 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065966783 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074462907 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.08904273 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122658929 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065152769 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069507742 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065403824 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072305481 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065097726 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075790964 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104622145 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107869593 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068631448 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095731078 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065381325 seconds)
  done (took 3.270096677 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074250344 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069651617 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065378324 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068913635 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077113376 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073186946 seconds)
  done (took 2.054148864 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069278948 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066901135 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067377864 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06636732 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072046745 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067102825 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065796843 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066929234 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067153986 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067069702 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066273899 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066352742 seconds)
  done (took 2.428780602 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.425310769 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068291522 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069262357 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065567977 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070540291 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066551195 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079880379 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06791372 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.09026166 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06598276 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066202817 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068432755 seconds)
  done (took 2.827745433 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207233987 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075810475 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237855778 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136288079 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111117712 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115454821 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104334997 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113078534 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143497201 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101864258 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167688847 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165565163 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10731858 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137007455 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088925206 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097615931 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155625206 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162435241 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103360798 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165734257 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143695072 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124614002 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146736663 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101337521 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105613781 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121947302 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071049558 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079953525 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170055825 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131216499 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146059553 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110465015 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093264762 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176174286 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170461332 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142859314 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134362114 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08418438 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102324428 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134100747 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199823579 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088583823 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164898769 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245027667 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0805783 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132906692 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121231564 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119810917 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106623086 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089843173 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145734256 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181383721 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138691757 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087133493 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112007826 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115620832 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116537198 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103748467 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181715399 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16179892 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128050887 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071439264 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09909984 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152990738 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131004451 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108641343 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126773174 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094673974 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133377998 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154531101 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119110389 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143052043 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128502328 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088208114 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119086681 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139709764 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128021321 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169815128 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124523971 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072706713 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12473087 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10349256 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080699703 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141103033 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074987991 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175528041 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098923203 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107015261 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11319362 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108639241 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108547237 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16126515 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143923504 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243357888 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06571783 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103882258 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119428792 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148347437 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087743958 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108962526 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116113677 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077174478 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139134705 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075078765 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123194667 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075389586 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125626806 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132071718 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075508457 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121167529 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101142785 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099711053 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133573602 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159246513 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088612735 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081942124 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167903237 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122123053 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104618369 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144266934 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155859938 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099197072 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103518003 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149930662 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17992689 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089302396 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162263684 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107235042 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083504701 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08732242 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123768347 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112304274 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121682812 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081684079 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118679991 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168942105 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074764015 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094856416 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133945796 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078906 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080488913 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10387717 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100445818 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094904976 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099901826 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104093039 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137211563 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122933368 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104470598 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269490006 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098729287 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170096981 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08887493 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100684057 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104502759 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070088672 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13697563 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157448848 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079076281 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16472706 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124265372 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105318655 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1197121 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082893851 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140215491 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079323031 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070150124 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144389384 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110380726 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110761762 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151459047 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104549931 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12715907 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119814233 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135235764 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132484998 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128742302 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104739134 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087788048 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111082706 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125673253 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073013014 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091406901 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080097141 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103987054 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09525569 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083613048 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142445466 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125045123 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100265933 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111965446 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096601253 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146676801 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07671996 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129061614 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119072859 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094063825 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152387691 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152379337 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131124763 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099232738 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144751229 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070066452 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073793494 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088991553 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.265738616 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083382968 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083711308 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118145306 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148038101 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130221058 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138435713 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110572176 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121941954 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155138379 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069467538 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115276322 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147930886 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12164921 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103754945 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08957741 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099805268 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141494203 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108048673 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181864354 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114242039 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126544289 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152712716 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099515763 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079396657 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108304997 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135138703 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105067841 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144615061 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099979059 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087431541 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110038577 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074245988 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099830266 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127433776 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120014297 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13534919 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114007884 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132441111 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076931634 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117012494 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120288273 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122770038 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064270103 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119993506 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162127843 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09348182 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118259681 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153225059 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07907294 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123535052 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319163577 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146352711 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084231524 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110184365 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117735453 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12724527 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119755151 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14111873 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108446053 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134953151 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109995266 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085087907 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087016555 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097469145 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104595402 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094795833 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109051132 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115113062 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094908746 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132610504 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102708276 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10889533 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11729842 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09603005 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089413326 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096958718 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173446804 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119757225 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172172795 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098988052 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144994557 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164256727 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074526623 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078632443 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077921673 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139738998 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083804478 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130816034 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097528254 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105400662 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123636002 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142335293 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095039986 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068228634 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107952424 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134738853 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112112959 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097970795 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10749019 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164062535 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100828737 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079209087 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113474807 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103696857 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10211027 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171950181 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.20334842 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09831769 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075619394 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081183254 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128683472 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153650693 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080217502 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102338741 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119837744 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110578985 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128720626 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102071953 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099579299 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114873115 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149383235 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130249836 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089904406 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112460365 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13001907 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155914877 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105427351 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095570062 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171416858 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152419872 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160027297 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088707241 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131619225 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113600801 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107583499 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138932789 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08309802 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163186357 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082048131 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136242694 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104390869 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090479245 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130297508 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098893389 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088392974 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147820878 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117577059 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08261291 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077298022 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117714807 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120906857 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106646302 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075275961 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140116245 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072911084 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131737879 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167977057 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080886682 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104353808 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238894497 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079448237 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109139467 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101743907 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089586558 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097747029 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172638436 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088256427 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150197875 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141706133 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113587627 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137271676 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100370287 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637196 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078148173 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151939022 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116142421 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173108372 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096946749 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11766223 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109255731 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123712371 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145115149 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10478562 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176308484 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131263844 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11626353 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079061623 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102509703 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102677764 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088917727 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10526051 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113079411 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115937028 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093515398 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116111859 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12294967 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081698214 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094922861 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155658012 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116820168 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144901662 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140564313 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084796375 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117760099 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139044524 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080132169 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122141237 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151605103 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105988708 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09726822 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079849368 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.245819244 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169637196 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073333701 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163558288 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1200213 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109351199 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112501819 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114393064 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131942495 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107597195 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121293822 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093953369 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111199851 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112373199 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081578359 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076916874 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104628175 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112432897 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097405289 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098085408 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097558047 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150883764 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070997027 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096234768 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103180048 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146392165 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174173119 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087387972 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082363297 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11853257 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113070115 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112630645 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120038935 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07877907 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082186584 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081815958 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076822029 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10821634 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111832778 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103612753 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111109817 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163443728 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081985139 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225598609 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094761881 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104085881 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069460069 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078603636 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096625868 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097480307 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108052833 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100236676 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17033998 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095012567 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089970508 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093249837 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072690728 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082049481 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127463233 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254400263 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119878389 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097316488 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062840065 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108605808 seconds)
  done (took 58.949105242 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109669466 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082250194 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096353434 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14948217 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122140187 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212150869 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157162436 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19961636 seconds)
  done (took 2.855366273 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069485918 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.0938514 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098999671 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082701578 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06685322 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068968692 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224794478 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080408465 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066317328 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.08856956 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079170912 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069119633 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.424660933 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06615729 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068249107 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062527058 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.0668563 seconds)
  done (took 3.496342436 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.364926334 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.36633115 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371726794 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072580138 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.812771427 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089101467 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.082561564 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096178957 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07157045 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.283458258 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.700909228 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.092168191 seconds)
  done (took 14.13556981 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077629299 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069631696 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.0843337 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083608895 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072141122 seconds)
  done (took 2.115440722 seconds)
done (took 104.502322466 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081360533 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.393101223 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053698658 seconds)
  done (took 2.203886157 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083623781 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084147102 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083805684 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082549218 seconds)
  done (took 2.073554903 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075495434 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076563737 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083609521 seconds)
  done (took 1.965009685 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223979392 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139301756 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086308333 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08296934 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077676735 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077983443 seconds)
  done (took 1.973687578 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072981947 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074166847 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072488726 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076152182 seconds)
  done (took 2.025213973 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077196536 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052677329 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05484772 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055974658 seconds)
  done (took 1.972118247 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087621173 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.07802879 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078468104 seconds)
  done (took 1.97269773 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108757058 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085277512 seconds)
  done (took 1.924606843 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082470917 seconds)
  done (took 1.812191776 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099418317 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113657632 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.12889145 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109511277 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136441353 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.10877275 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085463209 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086741849 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077021984 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087084498 seconds)
  done (took 2.76209464 seconds)
done (took 22.942697581 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080078977 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367617206 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360714959 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090456158 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668335077 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356750586 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.029196804 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092291737 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113481235 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067565407 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083348358 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647421955 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983809038 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324659953 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.968906726 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.41834588 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649653838 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068096804 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067633354 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067637366 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.013689675 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067561636 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067606549 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068318581 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648161862 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370832082 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067827569 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.413487097 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06776766 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069432087 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355849642 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067850423 seconds)
  done (took 16.498619419 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071997136 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117422528 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073845029 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083842775 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.06976684 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069437745 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071285504 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068734103 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11938354 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06768214 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08443164 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067514435 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071616201 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068341472 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086681617 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068118789 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06864114 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068181584 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06823657 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068089342 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085948807 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06744481 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067967984 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06843504 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06753676 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080004116 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068131646 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0676741 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067595315 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070382211 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071238509 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068832041 seconds)
  done (took 4.128492693 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115675675 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1248308 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074395534 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102683025 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112108509 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070090536 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143088896 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092701758 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128216628 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06799074 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084583397 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068115479 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100408098 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068909135 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087600898 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068326328 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069051505 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068751624 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068477227 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068493295 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087095525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067986205 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068413569 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068783174 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068703397 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081240819 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068632918 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06841868 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068661533 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070344885 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071405091 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068555553 seconds)
  done (took 4.387925733 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07314132 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075064144 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082478227 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083293346 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07031186 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07296636 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072373135 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069969179 seconds)
  done (took 2.349036157 seconds)
done (took 29.10255282 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079937266 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.0686076 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072324301 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080747578 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07228812 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078292792 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06736584 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07462736 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071661063 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072605535 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074388692 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067418289 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070784695 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067279976 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073335925 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06767028 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079174954 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071719387 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079075155 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079693572 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069652687 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072686354 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073760281 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078745515 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078710273 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079067906 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077093829 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072570447 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069058012 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070293466 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07682126 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.0836961 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068457435 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078829868 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067536211 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068007109 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071132449 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067930358 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079353206 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076263788 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069559737 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076256438 seconds)
  done (took 4.819561848 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089933875 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091163468 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083774937 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061004716 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066479892 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064884157 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088505643 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059360308 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059449931 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087282416 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055912156 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.0592904 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062401986 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053999138 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059193042 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056580992 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061250394 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055925303 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05950431 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059150141 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057849589 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054093976 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060183846 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065063391 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056254508 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061996088 seconds)
  done (took 3.453139138 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075652291 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083069417 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088125915 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125264686 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102937037 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076530109 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078028168 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091808026 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085036498 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066975976 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071236928 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093552524 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088381311 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073792194 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067640469 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084500002 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081845529 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069295523 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073563411 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091163153 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084518934 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083477257 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092390849 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080884504 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066611919 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069418223 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071001665 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081385834 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072396715 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076459211 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071348978 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070791605 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069953529 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078395733 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071370221 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069485288 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089895637 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07670777 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077476681 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067786704 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070666335 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06803711 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088961667 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122150581 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066566953 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073903157 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074969374 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076561899 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067248302 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08519822 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07840623 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067219684 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070797459 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066691508 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067438191 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0805457 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069291733 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069719664 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07596777 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070429531 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085332894 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071455953 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082209745 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067049497 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074962437 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06666317 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068205043 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066603751 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092291659 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069118878 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108215988 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068402335 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068593895 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.0760087 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.086841477 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073375693 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068141661 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082497453 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077449282 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070986756 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075919992 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070552687 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070813166 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087886552 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069558265 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069149795 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068216245 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073633332 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070339158 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069278106 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080102883 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067619348 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070708712 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083944945 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067174467 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06863995 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07353215 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072527755 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067396166 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078696751 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072604186 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068642387 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076711369 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067562322 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07050194 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077904698 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073326022 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066181904 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071741474 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073421533 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06838183 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068972737 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070300209 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069239111 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075737576 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074585133 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072217568 seconds)
  done (took 10.658491031 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162085451 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152887875 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071043556 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144424629 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076074117 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078963864 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147045175 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094477605 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067824597 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067901875 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06843598 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109487937 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105870348 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114854473 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078491617 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067682394 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082872445 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113686907 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149031134 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142813542 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08355522 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076232132 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.06950599 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068492417 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070189303 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07824449 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085463732 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076819163 seconds)
  done (took 4.494050688 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081714311 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100138145 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074030321 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089184586 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.0906703 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067756522 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.0702482 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068846919 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.0806979 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078541931 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067524727 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073221267 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074525472 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07117725 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068803595 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074872073 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075489301 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069442611 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071448124 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073093953 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077126923 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080387679 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071871771 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067079867 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074119674 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066823597 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064333686 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084721387 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068568605 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090344908 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065730419 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075063718 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081564126 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068889913 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067619215 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067543859 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067391859 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067051426 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069298769 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066577155 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066179954 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057674161 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066722161 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079363698 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074209282 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056911917 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07243953 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072633158 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072384755 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06568335 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070728333 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070358708 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070838799 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074709909 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072685008 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072921188 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068938131 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065935756 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075461726 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067737927 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064558509 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066603701 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072258176 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066050002 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075434509 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071973994 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066477726 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067175235 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069786471 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074050291 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067413601 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070565057 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06505956 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068992331 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071800461 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069068738 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068819514 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065804609 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066994749 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067418755 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055434259 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067326836 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053548334 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070540686 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065292107 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066003901 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067175213 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072229957 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079760478 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068554819 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072939657 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067959537 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066348028 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07013627 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060345411 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07032991 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082557663 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082947123 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067381722 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065315989 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08183117 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072280163 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066130075 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056628143 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07458433 seconds)
  done (took 9.234623925 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095726836 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087923869 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069371735 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082767374 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091135026 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086045562 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075041158 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076466792 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069197935 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082095266 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07333348 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076349809 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06819609 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077103161 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092983214 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076011617 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069665042 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076389647 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071819972 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100473901 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082531016 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081912074 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.07459893 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068490784 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075697108 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079850182 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089150603 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079692999 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078161993 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075353778 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079963339 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089311571 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.07380761 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071658024 seconds)
  done (took 4.491281507 seconds)
done (took 38.893703872 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.82765954 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.996634501 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.817836705 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.16512814 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.060219908 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.843071479 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.990928125 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.819335298 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.009016672 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.865675344 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.040139024 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.866512098 seconds)
done (took 66.062672116 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.838322232 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.958070279 seconds)
    (2/2) benchmarking "String"...
    done (took 2.089993832 seconds)
  done (took 5.808074223 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.118327771 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.358772893 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.063396018 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.816067222 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.822081773 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.127556575 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.632453731 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.374104143 seconds)
  done (took 30.954975114 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.149410069 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.033041128 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.551178857 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.59297591 seconds)
  done (took 16.146252084 seconds)
done (took 64.715987381 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.835407283 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.838423971 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.826196636 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.799993222 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.876353977 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.833861026 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.225902329 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.976562773 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.818104933 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.803035402 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.818476205 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.255853651 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.817534052 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.328494217 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.817428859 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.825970486 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.860768584 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.456852839 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.974290433 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.831138298 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.825956461 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.853644064 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.82052523 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.82793183 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.820215707 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.819804457 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.271891769 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.823770216 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.311388937 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.697333689 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.721578944 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.20733691 seconds)
  done (took 205.581708964 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.692800585 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.753267126 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.821429592 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.732834086 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.17328275 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.892413992 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.831537976 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.219705446 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.694765592 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.712877118 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.931864733 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.692217447 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.980171217 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.688954511 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.69816669 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.768407102 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.856725187 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.936974299 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.695401878 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.96765921 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.712499718 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.968182029 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.964116535 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.910171481 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.716828147 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.772481172 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.70833089 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.852346134 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.883391329 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.844408711 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.697783246 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.709869017 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.918887828 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.565492289 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.704545541 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.703690806 seconds)
  done (took 168.01509415 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.828584341 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.695755995 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.694438222 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.695348909 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.706548232 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.694417947 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.816787459 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.817546983 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.155917928 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.383423866 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.745940762 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.488506901 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.695693537 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.762105805 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.708536577 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.695049612 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.710728728 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.72210149 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.695398595 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.696460783 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.819462751 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.707723897 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.950982739 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.702753317 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.69671181 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.700697697 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.065582321 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.695931734 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.701627974 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.955854448 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.69576504 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.695602873 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.239741804 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.35661244 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.785418464 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.696769335 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.701776085 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.696088117 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.696058393 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.91590653 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.696215071 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.696476314 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.699407751 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.842568467 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.695299967 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.821595793 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.696415895 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.180876233 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.696556246 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.698145081 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.960956606 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.331419206 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.694993365 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.696458984 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.700229658 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.696599703 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.696370981 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.702166324 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.917852631 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.769434126 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.699559027 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.700722696 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.702938928 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.696101203 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.930210391 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.698559851 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.895629966 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.750364585 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.809874399 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.819140165 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.697957152 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.761813172 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.791280152 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.697359423 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.697454717 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.697283942 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.698149998 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.779919504 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.695465948 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.795076722 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.704158589 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.698921831 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.748027232 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.767275908 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.697972047 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.528488464 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.698101014 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.69839535 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.984931709 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.761548516 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.697522427 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.698875291 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.698772808 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.797083621 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.820114565 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.458295568 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.699242257 seconds)
    (97/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.079223697 seconds)
    (98/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.701030324 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.697419802 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.699622582 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.845960064 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.701270028 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.698636422 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.885415302 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.701500649 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.781571791 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.706254677 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.702155053 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.701202536 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.73001629 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.700127284 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.753044191 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.700659729 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.071431447 seconds)
  done (took 392.627873091 seconds)
done (took 769.874337664 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.397370194 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.347498988 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.463253706 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.374396039 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.358644082 seconds)
  done (took 13.585365291 seconds)
done (took 15.226139182 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.784984993 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.789226184 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.724219769 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.788215893 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.72042798 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.78844885 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.768737282 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.72524707 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.756098873 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.725118759 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.756968208 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.72473039 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.712684579 seconds)
  done (took 24.408599076 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.927267376 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.93491094 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.770750943 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.937007182 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.742870649 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.926967417 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.857010346 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.848727699 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.847156237 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.714328571 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.713277079 seconds)
  done (took 21.867233023 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.931088855 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.938381925 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.773140724 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.945270787 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.747582741 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.955097224 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.862192099 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.850110699 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.849300361 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.715946958 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.712591084 seconds)
  done (took 21.926116947 seconds)
done (took 69.843693747 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.708324277 seconds)
  done (took 3.352904094 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.731294039 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.867824071 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.713824902 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.713342282 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.707067158 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.709885043 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.713349881 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.708602255 seconds)
  done (took 15.512495372 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.709072088 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.706087344 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.709473836 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.708100404 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.707438142 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.708383277 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.709797556 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.70633313 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.70808059 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.705357073 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.706285464 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.705727972 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.705460959 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.70943764 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.706112729 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.706807159 seconds)
  done (took 28.967237303 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.707208079 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.7064986 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.706209533 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.707496324 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.707847238 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.70852071 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.707239512 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.707002212 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.706659203 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.708463308 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.708329103 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.707523493 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.708527905 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.707687923 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.706589035 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.70791602 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.706058717 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.708273638 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.711803663 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.709003305 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.708330344 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.708808174 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.707798786 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.708488344 seconds)
  done (took 42.639234511 seconds)
done (took 92.114138252 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.34281891 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.077655364 seconds)
  done (took 8.06706522 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.711032162 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.708822296 seconds)
  done (took 5.102072237 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.710302307 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.709303254 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.711464949 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.709478083 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.70873239 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.710109766 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.710326565 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.709444357 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.711083478 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.711133737 seconds)
  done (took 18.751069618 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.712406832 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.711067536 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.709079628 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.712016799 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.710244188 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.706946817 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.711970653 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.712008256 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.710145344 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.708690334 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.711408728 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.708773479 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.711431217 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.707981533 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.711225999 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.709991044 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.709930327 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.709441459 seconds)
  done (took 32.434851149 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.712012066 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.712682797 seconds)
  done (took 5.076238191 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.710151862 seconds)
    (2/7) benchmarking "second"...
    done (took 1.710869211 seconds)
    (3/7) benchmarking "month"...
    done (took 1.708741897 seconds)
    (4/7) benchmarking "year"...
    done (took 1.708714645 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.709904675 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.709509553 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.708830921 seconds)
  done (took 13.618227561 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.713066763 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.86443357 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.923908113 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.39432824 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.713466115 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.717514638 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.671961808 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.716067387 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.717193445 seconds)
  done (took 19.082975629 seconds)
done (took 103.777848766 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.521034023 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.707821814 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.045279399 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.764867593 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.72759341 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.005481795 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.734455063 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.931457372 seconds)
done (took 42.087171647 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.737548536 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.139082677 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.168441187 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.365008317 seconds)
  done (took 12.320901192 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.693923217 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.221584595 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.741596927 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.294054682 seconds)
  done (took 19.642737881 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.074461344 seconds)
    (2/2) benchmarking "read"...
    done (took 2.062876007 seconds)
  done (took 5.792756734 seconds)
done (took 46.142252496 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.713305017 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.712076817 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.708472898 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.710829014 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.831346239 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.834783038 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.839858172 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.834764095 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.837613094 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.843103323 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.838041006 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.838188636 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83748002 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.836153962 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838104557 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.837515805 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.837273502 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.834743071 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834655021 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.836005953 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.836436717 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.836962677 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.834855775 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.834853274 seconds)
  done (took 45.225753296 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.844288045 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.836757719 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.838701413 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.838286912 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.835116658 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.838713604 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.838591268 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.834628258 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.83948218 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.836883383 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.835307246 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.836043779 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.837889895 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.835634355 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838508311 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.835135767 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.837194054 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839300211 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838339464 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.835535735 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.837911408 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836004693 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.838485397 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837784113 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.836453039 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.836288484 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.839537477 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.835618463 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.838912644 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.833179874 seconds)
  done (took 56.894798488 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.838641821 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.844186393 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.835570212 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.8334634 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.833457087 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.834101104 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.832719108 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.834358832 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.838110482 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.834718694 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.833206519 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.834445304 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.833694318 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.83693264 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.834159432 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.834701217 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.834311897 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.834474968 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.836592538 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.833104963 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.83361485 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.832219194 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.834116381 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.832242855 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.833000221 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.835458987 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.834037551 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.833979963 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.833133951 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.833456572 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.834424459 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.834747303 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.833214911 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.833754535 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.83447792 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.834026031 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.84018549 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.844180619 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.836159969 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.835339936 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.834829717 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.834083386 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.834246087 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.834652676 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.835315953 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.835665839 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.836536067 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.835270097 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.835874906 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.836443139 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.83603823 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.838214053 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.835724494 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.8343697 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.835967747 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.83620942 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.834339371 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.836558896 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.837010006 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.836576864 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.836814899 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.836226639 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.840380441 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.838350154 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.837236338 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.835180015 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.836300654 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.839246658 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.838165168 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.834395458 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.836803043 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.837617617 seconds)
  done (took 133.932701108 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.838649956 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.831313461 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.83110526 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.829935354 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.831083471 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.839080061 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.832230579 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8341013 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833170334 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.834470278 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833522399 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.838468063 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832677768 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.835414769 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.836399008 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.831991038 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.841151108 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.832692703 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.834124072 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.836973915 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.834644839 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.832890936 seconds)
  done (took 42.125326205 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.83444872 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.835833534 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.831209455 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.834216653 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.836909127 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.834692569 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.833893565 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.835623922 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834082829 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.83336376 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836294885 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835601123 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.834008507 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.833634821 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.832415054 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.835064109 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833055023 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.831238337 seconds)
  done (took 34.783384234 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.831782081 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.83254642 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.834409166 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.830820085 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.830418005 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.83320719 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.830247569 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.834093791 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.832905742 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.830062784 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.834389041 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832750202 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.834460486 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833125593 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832562644 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.82910304 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.830378195 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828896251 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.834133753 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.828267304 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.828513355 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.830286716 seconds)
  done (took 42.064308767 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.828872666 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.827055993 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.822392418 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.823052976 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.822670951 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.825389437 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.825074042 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.822522869 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.824508693 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.826106117 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.822463381 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.825220172 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.823740923 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.825145224 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.824264756 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.822697309 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.8276157 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.823028222 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.825964889 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.821669457 seconds)
  done (took 38.250877453 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.826488689 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.826042361 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.826873053 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.825523902 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.825977872 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.826717443 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.827844231 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.825908602 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.826133441 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.826773782 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.824780395 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.824875278 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.829283238 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.827710542 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.827277504 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.82621047 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.828193291 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.827639875 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.828427691 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.828141806 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.826849534 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.826857712 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.827694943 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.830530691 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.823721429 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.826108557 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.827036821 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.826014448 seconds)
  done (took 52.910129365 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.827264942 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.824896111 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.823419174 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.823517388 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.8235849 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.826122164 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.823926107 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.823420621 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.826754425 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.82376752 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.827094598 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.826347204 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.825685566 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.827141562 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.825320393 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.827479374 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829021025 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.823481142 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.823897247 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.825416586 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.826688703 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826145572 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.828822526 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.825910072 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826078745 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.827271154 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.824773617 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.827961294 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.82810401 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.825266408 seconds)
  done (took 56.533040524 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.847023736 seconds)
    (2/2) benchmarking "in"...
    done (took 1.845786583 seconds)
  done (took 5.45189049 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.82260242 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.8251595 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.828107896 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.822886529 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.830629491 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.826080708 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.825414265 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.82347772 seconds)
  done (took 16.364588691 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.82661044 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.82798142 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.825756235 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.826452377 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.82563063 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.826658031 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.835547909 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.825120264 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.827295568 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.82717712 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.83429514 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.835393176 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.832645943 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.828192609 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.82885528 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.834124255 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.826073341 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.828399292 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.823605933 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.828335514 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.828470569 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.827720762 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.832579432 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.82473256 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.826409793 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.836675267 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.825972328 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.826006317 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.830388865 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.826893345 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.824706865 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.820015607 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.822938564 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.821768797 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.829314719 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.820444398 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.830351239 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.821342812 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.82831377 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.827863002 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.820439852 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.818418619 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.823823763 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.823230438 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.825902535 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.821007074 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.820988167 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.818590269 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.819976256 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.829282259 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.830824496 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.819266452 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.817197842 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.822951554 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.821526849 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.827674178 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.823801083 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.826221813 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.833847746 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.831914883 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.8347794 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.833099881 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.82445441 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.823205492 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.83511066 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.846700076 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.830114647 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.823147192 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.816926583 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.82211611 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.825802634 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.831927676 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.836871185 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.818623606 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.822871018 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.817771035 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.819783148 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.819332317 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.830823477 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.819502586 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.819741652 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.818915123 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.831884591 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.848740695 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.821350764 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.817892482 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.821400044 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.821302777 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.820004629 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.83002711 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.81806964 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.819551773 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.818937564 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.819499205 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.82330296 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.817352485 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.820017752 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.820262344 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.821029106 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.820898542 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.8216834 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.823752314 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.831619925 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.818859948 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.824798284 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.825962168 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.818517031 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.821177507 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.832312811 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.820947903 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.826792499 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.821213968 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.82541565 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.8164272 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.823265808 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.831556848 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.820026075 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.818848948 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.819471589 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.815521147 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.82777363 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.848114601 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.819591854 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.820073769 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.825992027 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.829669681 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.815734192 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.826139312 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.820695433 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.814761349 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.813675981 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.820361717 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.824690414 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.817875712 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.814354988 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.821602098 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.812436615 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.82038829 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.82082575 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.816592676 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.819649289 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.819641064 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.820859803 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.824304809 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.818002032 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.820620206 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.825565037 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.815495557 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.82173297 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.824831172 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.815580157 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.815236755 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.819330671 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.815598794 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.824189616 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.815438451 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.820933838 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.817541329 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.815775114 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.81642952 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.817312026 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.818739804 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.819332269 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.813889301 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.818329799 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.818556902 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.811816066 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.813663553 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.813427318 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.815762444 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.814720506 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.819204681 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.819799349 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.821990938 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.814017768 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.814896403 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.823826735 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.814427683 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.814665477 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.81302996 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.818254971 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.824219016 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.817687492 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.82136224 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.814718949 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.814342547 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.816517756 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.819617198 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.813274609 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.814691763 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.820420525 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.822842695 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.830230137 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.829907616 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.816235644 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.817618873 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.817494695 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.818220068 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.821444954 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.813474138 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.815469298 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.816204907 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.814626017 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.813971761 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.820933914 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.814228091 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.814069575 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.813845386 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.814457134 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.816983415 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.815698435 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.817659751 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.81793491 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.812537727 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.815477767 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.816636143 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.816286095 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.813546891 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.815146041 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.814542756 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.817489922 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.816374093 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.821547732 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.812448859 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.815566968 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.81551871 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.815915285 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.814485578 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.813778136 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.815570402 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.81619904 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.821652517 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.815934673 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.816953568 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.821338238 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.814564622 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.815498946 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.820481356 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.815302723 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.812201527 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.81826649 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.822506089 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.815778627 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.815088095 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.815502597 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.815376032 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.817939457 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.820755219 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.815963804 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.81489252 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.816515087 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.816387646 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.811135182 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.818854596 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.817869298 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.817507888 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.81811297 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.814816963 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.818019785 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.819826238 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.817929754 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.818393569 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.815785167 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.819653252 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.824667753 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.823599148 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.820309945 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.819033677 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.816807622 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.818237647 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.823704951 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.819217453 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.816692796 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.833954601 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.827464486 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.827538139 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.824153329 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.819453163 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.824065848 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.823358667 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.822117256 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.823249929 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.817947014 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.820563073 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.820110841 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.816181832 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.823260711 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.8180433 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.821901767 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.820885777 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.82251453 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.8203161 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.822788125 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.817908224 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.818574373 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.82160951 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.821743336 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.823396862 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.823372079 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.821484537 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.821196771 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.821690613 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.828047274 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.825905696 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.822069839 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.819693964 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.819663293 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.821439488 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.825535063 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.819906031 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.826033115 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.829061829 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.826061148 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.830938018 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.822513337 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.829672161 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.820525352 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.822658899 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.828069717 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.818460114 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.821399409 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.821348625 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.821260925 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.826967882 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.822979141 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.826024107 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.823006718 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.822229734 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.821466446 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.820154229 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.822427511 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.822553965 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.821258831 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.830703743 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.822149373 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.826547317 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.825120608 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.819104784 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.819115562 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.821722146 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.821666553 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.826328541 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.818857103 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.821988201 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.822920317 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.821109667 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.823500201 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.827571933 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.823375303 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.821458449 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.824743796 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.832027537 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.829105698 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.824368605 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.822870243 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.833371731 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.823859672 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.828689836 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.827876342 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.823129575 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.822345135 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.820812683 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.824195125 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.826017809 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.826965583 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.82200311 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.826823264 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.825285309 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.823632043 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.830123746 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.826744208 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.822273594 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.827312919 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.831783293 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.846719013 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.8259369 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.826608332 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.820498676 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.824952646 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.82729484 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.827068601 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.823802942 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.825443745 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.833955118 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.828639405 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.828789127 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.823455287 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.825554665 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.825136052 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.822645506 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.822802526 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.827441012 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.823503644 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.827062734 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.826292543 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.82812964 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.826627164 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.824260341 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.82574378 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.827215639 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.835331195 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.823495478 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.82974854 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.825070768 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.823808978 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.826717666 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.827171718 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.827456457 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.826827058 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.826585045 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.826993813 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.831538262 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.833681814 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.830712137 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.826398801 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.823351641 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.82362331 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.828377585 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.828114152 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.825891675 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.823455299 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.828036869 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.826744289 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.827137924 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.827248952 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.826760298 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.827046073 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.827598813 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.828184186 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.834942578 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.829741294 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.826122814 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.826070149 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.828725107 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.83207328 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.826436949 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.836390447 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.832367168 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.837258271 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.832253967 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.834051069 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.827688102 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.831712224 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.835946134 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.825296476 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.83046733 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.824961996 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.828713779 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.827000667 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.828948635 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.826667044 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.835582426 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.828631211 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.826980568 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.834278706 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.827152373 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.828071108 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.829426194 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.831452341 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.827263595 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.824426235 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.825989378 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.830332245 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.833767641 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.829204117 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.827531404 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.828772058 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.827370042 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.828288424 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.831186022 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.82776241 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.830392552 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.825878697 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.834620084 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.828568089 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.825811369 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.826148741 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.827891016 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.830329232 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.830422044 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.834298226 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.824763175 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.82961219 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.827959985 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.830725801 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.828268174 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.826961964 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.824812422 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.825393367 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.833197175 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.827670382 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.829699495 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.831993363 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.826332935 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.830402301 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.832592321 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.826697076 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.832066609 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.838042635 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.834196501 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.827544441 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.829464856 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.828799944 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.833747167 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.831181295 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.828317557 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.8347454 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.833456173 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.829263042 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.829326507 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.830480178 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.836238967 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.844780105 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.830177329 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.830416874 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.833980693 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.840736506 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.830515835 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.828951631 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.828996958 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.833463619 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.834230853 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.841048737 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.828787931 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.838309919 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.831741292 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.833171504 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.839950834 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.834439652 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.83809741 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.83288545 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.830562416 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.829884754 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.835718838 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.845514332 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.832054037 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.840316918 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.857438445 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.835152235 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.832838544 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.830399827 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.830014597 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.830060466 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.832400882 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.833955414 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.829862104 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.831177621 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.831169793 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.833029281 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.841544477 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.832500696 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.830358372 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.833949632 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.833427981 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.832943671 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.832314005 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.830257513 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.831951106 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.831314676 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.832358762 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.835716307 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.832726157 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.845442597 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.842749113 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.831116592 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.8340968 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.829197529 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.836138861 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.836589112 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.842101267 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.838457549 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.83675975 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.831350657 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.836263014 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.832479548 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.829010175 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.838798885 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.8325059 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.834472841 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.831027713 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.845060292 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.839969535 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.844124913 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.834763305 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.833594906 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.834315215 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.834947629 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.832737171 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.833940126 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.836058195 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.835253946 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.837923294 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.832761904 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.835486637 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.837236293 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.841800107 seconds)
  done (took 1089.662185039 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.832899945 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.833260007 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.831460946 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.83027801 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.831455382 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.830449208 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.833165368 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.82970788 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.830805409 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.831479852 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.830593755 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.831893189 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.83372689 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.832919076 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.831253876 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.831965881 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.831318558 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.831708141 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.832758215 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.83342611 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.834527079 seconds)
  done (took 40.236193838 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.835555329 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.833284318 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.831561716 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.834856323 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.831022706 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.833961446 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.83358445 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.835476616 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.833236371 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834365529 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.835704985 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83582528 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.83396875 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.834415324 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834538253 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.835966427 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.83726974 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.833027891 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.835918949 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.833125924 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.836395768 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.834903108 seconds)
  done (took 42.124975273 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.837132221 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.836969636 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.838796775 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.833358715 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.83591106 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.834666834 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.838357471 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.83814448 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.839539791 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.837267324 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.837433128 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.838970006 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.843039818 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.84129289 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.839198581 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.837974519 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.979397543 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.836408281 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.838896822 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.838030067 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.834029035 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.843432197 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.8359051 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.835164073 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.836976309 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.835636018 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.838082144 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.837775219 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.839552232 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.840184017 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.841501957 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.839571884 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.840350424 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.842114651 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.841792239 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.838756943 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.840077993 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.839689013 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.83877458 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.836842693 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.847642139 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.855500275 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.839878342 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.846273176 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.836471587 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.836841281 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.842352653 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.846354134 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.835319397 seconds)
  done (took 92.034070796 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.837857368 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.839629441 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.83657894 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.840229549 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.840536774 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.839929686 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.837633696 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.837892234 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.840220641 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.837259122 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.838163897 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.838764128 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.838192073 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.839986804 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.837433571 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.83778843 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.837692708 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.839328448 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.835467983 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.835703915 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.836372828 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.839223121 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.838347941 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.839939038 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.839619978 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.837183 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.836712631 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.842196278 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.836160617 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.836444936 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.83988762 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.840554673 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.840532664 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.837361388 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.8391232 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.840355495 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.84160572 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.838348572 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.839722644 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.840232863 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.840939063 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.839385891 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.840470597 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.839390062 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.838577377 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.839300492 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.838409605 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.839370708 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.840025713 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.842345711 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.841901845 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.840158977 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.839343703 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.838613593 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.842901515 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.842597551 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.838312663 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.840115123 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.840309613 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.838979424 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.841335692 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.841537391 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.842380424 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.842438105 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.844876462 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.841705743 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.841218327 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.842168825 seconds)
  done (took 126.857399588 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.842762757 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.843602633 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.841803159 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.844746242 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.843032359 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.843976579 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.842638249 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.842750068 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.840337183 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.842429796 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.842067814 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.843276885 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.842901587 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.841729941 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.842146286 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.84388154 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.842850135 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.841598397 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.843081518 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.843639332 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.84486746 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.843647578 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.841796394 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.842580407 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.844568233 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.843643249 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.842609185 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.843144179 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.842272676 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.843617587 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.845032304 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.843294422 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.843586712 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.842753916 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.844404503 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.842770775 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.843346143 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.844575048 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.845017004 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.844278567 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.842350365 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.844669152 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.843292203 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.843467276 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.843199193 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.844898191 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.84674901 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.84627337 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.848777862 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.842923548 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.844082199 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.843430513 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.844364454 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.842349855 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.846118254 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.842622599 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.842393388 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.844016932 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.843609327 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.844050887 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.845745354 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.845065205 seconds)
  done (took 116.078977301 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.844650659 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.843760122 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.842565304 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.84198479 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.845017496 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.841931429 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.845844704 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.843916345 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.845101262 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.844568883 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845192699 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.844249877 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843280366 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844674867 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.843810376 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842253942 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.841904225 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.843358618 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.84433219 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.842985862 seconds)
  done (took 38.652024899 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.842499508 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.844818369 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.842411208 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.845192908 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.846431218 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.844358205 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.847458224 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.846139757 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843971663 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846065673 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.845966161 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.846441108 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845061973 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.844562471 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.84690879 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.843379853 seconds)
  done (took 31.300029643 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.844106829 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.846870103 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.844796835 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.846924758 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.845060092 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.842852586 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.845930124 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.842729448 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.844365776 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.84690965 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.848179859 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.847806285 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.848406803 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.848071766 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.846065798 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.848685283 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.843596715 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.844748423 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.846149295 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.848856776 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.846103341 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.844507446 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.847107444 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.845882384 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.845827179 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.845527435 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.844465923 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.845455653 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.844503328 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.847741853 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.846415361 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.847680312 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.844372591 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.845825748 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.848982831 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.84608923 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.845719361 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.85067963 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.848852392 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.849546443 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.847028159 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.844641472 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.847072732 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.847519836 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.846301004 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.848518787 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.845520706 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.846905098 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.844130032 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.845241636 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.848349478 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.849602583 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.849269432 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.850334344 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.848097618 seconds)
  done (took 103.339566483 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.849579691 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.848367273 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.845768646 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.848647821 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.849332468 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.846437357 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.84969171 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.846862944 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.845974922 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.849760918 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.846276453 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.849279849 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.846919216 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.850271656 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.847693139 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.847765612 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.84685643 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.845635433 seconds)
  done (took 35.041525309 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.848949452 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.84750409 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.849810346 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.846620956 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.845894982 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.850451827 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.848500093 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.849844979 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850066087 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.848596325 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847390412 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.849469067 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849016806 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.850752543 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.847855602 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848007773 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.850494204 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.849511216 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.847687074 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.84817232 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.850738382 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.849407062 seconds)
  done (took 42.456636197 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.851646756 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.851117949 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.865018051 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.890200543 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.881645527 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.851825977 seconds)
  done (took 12.972721754 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849649958 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84980672 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.848544957 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852227524 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852771045 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850112554 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848141869 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849657622 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851449534 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849917728 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849177466 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851406028 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850545184 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851020797 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850364932 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851046877 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850197245 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848526056 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851431387 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85198169 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849357299 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852417285 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850228259 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84874689 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850045286 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849693504 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852201777 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849382901 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848506482 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851799304 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851649501 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848013447 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852015513 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851735599 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852954953 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851575515 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849518716 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853428398 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852386606 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848241581 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.852584616 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851561645 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851517919 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849571924 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851806689 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849824759 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851435976 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850946901 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849978839 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85363593 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851487425 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850418967 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852939121 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854139046 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852815557 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855283909 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852305261 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849976949 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853583461 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8541853 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851662876 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854450471 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852201173 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853018622 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853134593 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851323066 seconds)
  done (took 123.961661304 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851457076 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.852051772 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850157168 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850981118 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851063185 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851272783 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851972223 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85210474 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851216707 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852094024 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853801881 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85213025 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852408634 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851674698 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85106597 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851070368 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854184032 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853123089 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850995605 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856710838 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85182045 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851089144 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851778595 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852217592 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851875717 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8540816 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852202162 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854221038 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851573991 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852775005 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85345715 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853370678 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852341866 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.853708864 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852853615 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852597058 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854592741 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853798636 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854379967 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856440924 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854548324 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855969507 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853384397 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853121868 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853611405 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853352775 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853763692 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855047629 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85539199 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853501425 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854878422 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85452936 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85422902 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85475968 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853705519 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854113437 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853762231 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85381841 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854297608 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858446752 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855454681 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852999553 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857465522 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854232815 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853280148 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856018939 seconds)
  done (took 124.109326558 seconds)
done (took 2545.010214784 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.941513855 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.890892058 seconds)
  done (took 15.619882038 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.03197474 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.986157795 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.86959176 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.888093973 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.868390769 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.867133104 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.884764543 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.868849055 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.867187667 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.869454008 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.871742914 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.055676862 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.877989584 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.869352649 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.871591605 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.965239652 seconds)
  done (took 52.514074041 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.874662539 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.874147859 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.886260299 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.878470484 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.875533695 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.894712756 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.908036915 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.879446941 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.933066134 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.887147328 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.00116811 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.885778538 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.874069859 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.928608606 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.887099686 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.890528493 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.964950941 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.952162528 seconds)
  done (took 36.078115972 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.957134815 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.882948667 seconds)
  done (took 10.656077045 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.892528066 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.874527925 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.894875913 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.875061027 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.892418764 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.879758118 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.889641944 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.897955667 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.874237833 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.883531846 seconds)
  done (took 70.661226471 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.882104817 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.876192289 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.878131551 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.875918169 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.864813784 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.869741537 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.87664965 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.870374711 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.57415764 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.912427453 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.880451558 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.884355124 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.877517486 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.87676179 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.87236854 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.898314196 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.993605369 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.871592114 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.872833903 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.88148313 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.877898181 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.971602019 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.888300113 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.875229407 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.907720094 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.571422375 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.888374211 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.882173908 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.010340581 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.871970606 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.875527758 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.879077248 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.876050097 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.275486789 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.171427399 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.8777287 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.884916833 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.886952924 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.876283113 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.050199783 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.877900561 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.88288838 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.869539023 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.152987591 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.96300405 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.919828809 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.247481254 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.880322252 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.87718719 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.906967101 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.878817745 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.87963058 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.887623271 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.388613678 seconds)
  done (took 133.210540612 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.874093829 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.446014264 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.034095745 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.872926241 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.155257153 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.113289588 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.870044558 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.922450999 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.875525329 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.123084889 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.050176573 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.994662245 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.871426805 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.878185795 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.870927041 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.869752922 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.02764357 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.94364732 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.873422297 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.868402048 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.90773625 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.14275338 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.999422193 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.874697728 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.897102688 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.102614216 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.997830466 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.989034113 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.379203732 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.873669253 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.943269595 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.87570466 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.872390117 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.870887257 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.040117523 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.981283194 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.972729421 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.874090503 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.874187044 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.870144369 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.534408247 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09656326 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.985448024 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.013995875 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.122020007 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.104544137 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.52249481 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.873947912 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.509740503 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.071102581 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.082232263 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.130563193 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.006047852 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.875687653 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.118527555 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.873372021 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.872813662 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.137197582 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.103601888 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.988924269 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.875449721 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.872711347 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.87353926 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.191102595 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.873203256 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.984269785 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.876616748 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.872251987 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.987159232 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.992468363 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.106651615 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.120479955 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.90730703 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.782673081 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.381658929 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.161302921 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.946988534 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.13895798 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.875547276 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.874623026 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.9700207 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.626301772 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.05280701 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.194579396 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.140906655 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.915493014 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.478909428 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.87479357 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.12522428 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.125308184 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.108269735 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.121439059 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.044596912 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.183459327 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.874188683 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.876635004 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.079987294 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.009224964 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.878462325 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.23979134 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.132616077 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.607954873 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.905622065 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.183707719 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.014506697 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.872916333 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.500084151 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.879877459 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.079135434 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.920646806 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.875467385 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.874732304 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.122668383 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.745853782 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.874317375 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.663558381 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.943385392 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.874733085 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.144304348 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.87942871 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.116675289 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.877189495 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.185633582 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.504987144 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.92026914 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.06938729 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.121551487 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.665108387 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.145617104 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.189653406 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.999749609 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.136977238 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.698319805 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.878438222 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.161024005 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.87979717 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.881119601 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.047426169 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.878489401 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.034475738 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.879938656 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.139815589 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.901553311 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.051586381 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.882279338 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.151755628 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.922809871 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.931280331 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.878400408 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.993706702 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.879334603 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.920075292 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.060935781 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.877177811 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.878573554 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.460499973 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.877415963 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.026207061 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.176974631 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.902998113 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.950829153 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.410276588 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.876364394 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.973802613 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.907218812 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.485876408 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.879362288 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.052487022 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.882239234 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.854262738 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.875725529 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.1893388 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.102182439 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.879498029 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.875608477 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.674716123 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.565619755 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.880126388 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.056182435 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.120951579 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.529227381 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.098957974 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.881219332 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.012487881 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.882443596 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.954747294 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.22816469 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.878861937 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.879165475 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.878756269 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.879044007 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.878983439 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.106443334 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.908000619 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.562079225 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.015107368 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.125421515 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.188422998 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.144853832 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.931917227 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.883490886 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.147224582 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.883614986 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.94619369 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.87965509 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.905269005 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.131532101 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.883765302 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.109484323 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.16812994 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.929429059 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933325438 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.883180699 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.879945177 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.877074079 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.025965625 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.984281028 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.883029357 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.880819674 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.001094876 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.010780972 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.071075835 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.472393369 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.055920458 seconds)
  done (took 905.897831242 seconds)
done (took 1226.426658451 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.880355927 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.878902166 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.868631109 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.884334355 seconds)
  done (took 29.330078045 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.891613779 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.890703412 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.889984477 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.8888522 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.891046592 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.888190539 seconds)
  done (took 13.160465145 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.94044966 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.884836101 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.883696682 seconds)
  done (took 21.52947932 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.960617422 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.299306068 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.996224094 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.339270358 seconds)
  done (took 10.415632488 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.891221546 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.890878706 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.890573509 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.891727143 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.892077644 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.892601579 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.890706982 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.891932757 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.893609351 seconds)
  done (took 18.847365252 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.054325567 seconds)
done (took 99.154067806 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.791589157 seconds)
    (2/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.946331153 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.242234864 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.887839981 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.898528223 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.033004424 seconds)
    (7/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.2547681 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.925418931 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.543426635 seconds)
    (10/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.182440435 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.917955993 seconds)
    (12/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.870613131 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 3.6508183 seconds)
    (14/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.878427616 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.596889513 seconds)
    (16/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.072370831 seconds)
    (17/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.939654392 seconds)
    (18/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.246868146 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.914623052 seconds)
    (20/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.476093582 seconds)
    (21/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.895065807 seconds)
    (22/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.830345066 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.057367704 seconds)
    (24/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.887922292 seconds)
    (25/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.115366334 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.066993802 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.27426115 seconds)
    (28/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.730601795 seconds)
    (29/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.240717913 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.133500904 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.985658452 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.799161289 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.000812946 seconds)
    (34/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.225798143 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.272296337 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.26224274 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.997963815 seconds)
    (38/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.392759567 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.894100048 seconds)
    (40/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.028109368 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.75968352 seconds)
    (42/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.0390807 seconds)
    (43/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.40098544 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.931900647 seconds)
    (45/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.904444241 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.785788123 seconds)
    (47/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.020278137 seconds)
    (48/309) benchmarking ("sort", Int8, false)...
    done (took 4.920830136 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.873579621 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.043836806 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.889303677 seconds)
    (52/309) benchmarking ("sort", BigInt, false)...
    done (took 6.890122405 seconds)
    (53/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.176199812 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.145667691 seconds)
    (55/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.062969576 seconds)
    (56/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.059208217 seconds)
    (57/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.460020962 seconds)
    (58/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.889471134 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.873170545 seconds)
    (60/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.970158779 seconds)
    (61/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.629537979 seconds)
    (62/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.689809651 seconds)
    (63/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.217694625 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.476348888 seconds)
    (65/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.986291236 seconds)
    (66/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.051560278 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.949988543 seconds)
    (68/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.972741998 seconds)
    (69/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.889816103 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.994669742 seconds)
    (71/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.959079961 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.979705276 seconds)
    (73/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.199248748 seconds)
    (74/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.880250236 seconds)
    (75/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.792314376 seconds)
    (76/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.074006437 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 5.617658269 seconds)
    (78/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.491618713 seconds)
    (79/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.008623723 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.042389296 seconds)
    (81/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.877554294 seconds)
    (82/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.288179495 seconds)
    (83/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.917647909 seconds)
    (84/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.053994802 seconds)
    (85/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.51711656 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.805306409 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.896696242 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.157496998 seconds)
    (89/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.91101227 seconds)
    (90/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.80387219 seconds)
    (91/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.998680251 seconds)
    (92/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.00977055 seconds)
    (93/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.088002044 seconds)
    (94/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.475421693 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.642476356 seconds)
    (96/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.897212129 seconds)
    (97/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.978606744 seconds)
    (98/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.955470325 seconds)
    (99/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.98410916 seconds)
    (100/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.179818803 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.87716632 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.034204308 seconds)
    (103/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.779471552 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.10586318 seconds)
    (105/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.188879212 seconds)
    (106/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.302767957 seconds)
    (107/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.922989924 seconds)
    (108/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.098445126 seconds)
    (109/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.270711805 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.905517191 seconds)
    (111/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.965978872 seconds)
    (112/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.27969752 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.909475539 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.150681885 seconds)
    (115/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.90566638 seconds)
    (116/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.058821168 seconds)
    (117/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.950203138 seconds)
    (118/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.90952332 seconds)
    (119/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.984218895 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.902730293 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.142960196 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.595874149 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 2.362606414 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.923567085 seconds)
    (125/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.403688521 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.177991327 seconds)
    (127/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.120744508 seconds)
    (128/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.889789686 seconds)
    (129/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.505514299 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.217657321 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.927777731 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.17794984 seconds)
    (133/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.069838719 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.911774743 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.973177808 seconds)
    (136/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.014245831 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.814233138 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.910102564 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 3.647200547 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.259184004 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.286298405 seconds)
    (142/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.031309335 seconds)
    (143/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.030102775 seconds)
    (144/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.193085796 seconds)
    (145/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.100202305 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.932006207 seconds)
    (147/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.984694123 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.124757129 seconds)
    (149/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.892208121 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.29830477 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.241378414 seconds)
    (152/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.973576308 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.492451417 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.976353009 seconds)
    (155/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.037516345 seconds)
    (156/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.104224161 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.932493135 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.049072459 seconds)
    (159/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.90938067 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.211435049 seconds)
    (161/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.171114989 seconds)
    (162/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.932462411 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.891783853 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 3.289005015 seconds)
    (165/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.9047289 seconds)
    (166/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.032360374 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.201445554 seconds)
    (168/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.88043488 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.296934921 seconds)
    (170/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.012869133 seconds)
    (171/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.937539055 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.789234717 seconds)
    (173/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.971767957 seconds)
    (174/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.203938929 seconds)
    (175/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.751060486 seconds)
    (176/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.114392659 seconds)
    (177/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.105921146 seconds)
    (178/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.971130634 seconds)
    (179/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.999993857 seconds)
    (180/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.015408692 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.930199171 seconds)
    (182/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.063246833 seconds)
    (183/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.997221997 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.942770228 seconds)
    (185/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.264947696 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.895597745 seconds)
    (187/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.302617517 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.693720902 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.94927959 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.905176635 seconds)
    (191/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.243438611 seconds)
    (192/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.054004008 seconds)
    (193/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.114178296 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.717562644 seconds)
    (195/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.001509198 seconds)
    (196/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.00545509 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.281635768 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.91095441 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.97163759 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.893471054 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.910644247 seconds)
    (202/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.016740205 seconds)
    (203/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.027723433 seconds)
    (204/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.987436192 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.241110338 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.127087009 seconds)
    (207/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.923576079 seconds)
    (208/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.082446416 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.985311216 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.695798019 seconds)
    (211/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.931800527 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.123075577 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.558885342 seconds)
    (214/309) benchmarking ("sort", Float32, false)...
    done (took 5.699487686 seconds)
    (215/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.262481009 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.236362037 seconds)
    (217/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.513068395 seconds)
    (218/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.534930497 seconds)
    (219/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.114991371 seconds)
    (220/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.173626626 seconds)
    (221/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.912941407 seconds)
    (222/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.989894216 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.931776738 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.207461317 seconds)
    (225/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.043017192 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.952587414 seconds)
    (227/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.051679203 seconds)
    (228/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.630167905 seconds)
    (229/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.517080829 seconds)
    (230/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.212317015 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.899921474 seconds)
    (232/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.921789585 seconds)
    (233/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.014322988 seconds)
    (234/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.129279388 seconds)
    (235/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.928619991 seconds)
    (236/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.911586791 seconds)
    (237/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.137256405 seconds)
    (238/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.92619575 seconds)
    (239/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.078668911 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.893042353 seconds)
    (241/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 3.636784773 seconds)
    (242/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.110761411 seconds)
    (243/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.08772235 seconds)
    (244/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.438518361 seconds)
    (245/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.037102169 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.912087638 seconds)
    (247/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.959392186 seconds)
    (248/309) benchmarking ("sort", Float64, false)...
    done (took 5.69371258 seconds)
    (249/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.51268745 seconds)
    (250/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.912078126 seconds)
    (251/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.214691502 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.162295873 seconds)
    (253/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.3217547 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.009228298 seconds)
    (255/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.259143866 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.938046323 seconds)
    (257/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.007465033 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.243214659 seconds)
    (259/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.994393164 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.178542456 seconds)
    (261/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.895529244 seconds)
    (262/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 4.037559646 seconds)
    (263/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.794090423 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.934168616 seconds)
    (265/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.933273523 seconds)
    (266/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.933791851 seconds)
    (267/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.895564888 seconds)
    (268/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.057151492 seconds)
    (269/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.209013601 seconds)
    (270/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.299212888 seconds)
    (271/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.150618532 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.310107262 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.90745994 seconds)
    (274/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 3.654410868 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.91096985 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.548867775 seconds)
    (277/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.975255636 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.207027194 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.896748566 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.963334106 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.71173013 seconds)
    (282/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.430805223 seconds)
    (283/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.208584393 seconds)
    (284/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.159220119 seconds)
    (285/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.040216437 seconds)
    (286/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.155780145 seconds)
    (287/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.414827476 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.002236065 seconds)
    (289/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.123493452 seconds)
    (290/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.948169333 seconds)
    (291/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.428652937 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.004216741 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.027656761 seconds)
    (294/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.853123608 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.657104232 seconds)
    (296/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.995667693 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.287815242 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.98490753 seconds)
    (299/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.331324998 seconds)
    (300/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.848607563 seconds)
    (301/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.948795492 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.954382898 seconds)
    (303/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.148274642 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.26967143 seconds)
    (305/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.279197472 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.939140889 seconds)
    (307/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.286626438 seconds)
    (308/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.346915831 seconds)
    (309/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.199521662 seconds)
  done (took 1027.178914542 seconds)
done (took 1029.015941282 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.948021847 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.940353 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.921736481 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.942472275 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.036436914 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.954105098 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.937171199 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.924569259 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.96910563 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.974171702 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.922001325 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.953283397 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.926040973 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.925511546 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.924294706 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.940239241 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.234113634 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.949552828 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.941252208 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.931598094 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.94179026 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.921390686 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.97118538 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.95245165 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.929234627 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.929099615 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.928634259 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.942431331 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.03530757 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.9256762 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.928666704 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.933452027 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.230112477 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.946001977 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.919061376 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.945501402 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.935741458 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.932504378 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.92780235 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.955784781 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.370753718 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.929715705 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.925659195 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.923998646 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.923545556 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.92938786 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.927176193 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.928495104 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.937748674 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.939726951 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.367889712 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.945763069 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.927478269 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.923833142 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.935246655 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.926129358 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.928048778 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.940852292 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.9449952 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.940924338 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.220910359 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.953641567 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.925209678 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.941573527 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.933349054 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.404172134 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.924532345 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.929640087 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.371832699 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.934608983 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.407951467 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.943237972 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.929492667 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.939605256 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.956044396 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.231116095 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.943294841 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.923943968 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.933386238 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.923157889 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.935191168 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.939207972 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.931074088 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.926608854 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.939919384 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.954885126 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.934958335 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.92734219 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.937292764 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.946018043 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.934570163 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.938686145 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.928245438 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.923261149 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.936124081 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.931046559 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.930526526 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.930373286 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.930984924 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.937696824 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.369949208 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.948364226 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.923299099 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.923118572 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.925125399 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.941343754 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.37091052 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.932007525 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.947991206 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.977503584 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.927552883 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.224585069 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.956818251 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.944624322 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.938068944 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.93029282 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.922126812 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.224234907 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.395729514 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.948268208 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.9300135 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.92642573 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.943815889 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.928935219 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.924776364 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.234899413 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.952103543 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.942880214 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.050786086 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.939337106 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.960173571 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.928224042 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.933143418 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.957382636 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.945900714 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.961053357 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.932745091 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.945755136 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.945244467 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.926394365 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.941372559 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.940451834 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.932207741 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.939398343 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.923692622 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.958863341 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.943972264 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.941261734 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.950761796 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.051288191 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.927572163 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.225915788 seconds)
done (took 302.624615436 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.996805187 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.919650365 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.026287256 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.924690832 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.010355154 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.01535695 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.923373867 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.924628387 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.921907089 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.310911216 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.923820211 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.921722011 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.923962446 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.92482587 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.01705658 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.925779908 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.921800569 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.270631084 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.929083609 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.998003482 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.923524997 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.923222664 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.927063916 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.30891258 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.930465752 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.927918295 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.001406706 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.927232097 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.274867002 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.924410332 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.921197678 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.273291036 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.019541309 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.945729358 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.939328229 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.933570317 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.012941399 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.931579301 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.009509695 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.009299997 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.027398684 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.966517261 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.927860838 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.927048666 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.92998001 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.930078745 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.925067417 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.957601245 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.923745205 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.92413061 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.270434237 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.938363942 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.926964368 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.923528734 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.926694937 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.958947193 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.926519003 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.929591671 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.022564962 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.929005605 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.993920488 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.311733593 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.310532841 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.929606949 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.926920931 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.925805735 seconds)
  done (took 188.244269223 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.999645311 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.001954026 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.996667135 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.934478049 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.979592042 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.003337928 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.933628019 seconds)
  done (took 15.704225047 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.937301065 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.932855157 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.981669116 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.982791 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.92883659 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.088966175 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.932383293 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.943958855 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.928896411 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.987463338 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.932978965 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.932129298 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.941175695 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.922888284 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.980051358 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.94537241 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.048512491 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.933033539 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.932225434 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.085728936 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.938517018 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.941305508 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.989200376 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.947464965 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.932138278 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.940420599 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.523658171 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.931686331 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.930252925 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.93186482 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.929579619 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.974842188 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.92915324 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.92823793 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.929293315 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.050547846 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.932072986 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.930189632 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.93497058 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.931774943 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.93526195 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.932680063 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.933014877 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.930633678 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.932292349 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.957093756 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.930359876 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.930428358 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.931813317 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.932507293 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.988015774 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.934629441 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.930889126 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.935744078 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.992784652 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.940728566 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.935626632 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.932740114 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.936885242 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.934748249 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.088646123 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.985058197 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.934680273 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.984987033 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.931004284 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.937443114 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.933193165 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.937080861 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.989155334 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.934646931 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.981994124 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.93479809 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.099536625 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.958789211 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.936873603 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.942039187 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.941805638 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.934731588 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.931400539 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.94625382 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.932959649 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.941599947 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.942632052 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.933065896 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.368264491 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.051532577 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.047061639 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.933383624 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.95153073 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.947497208 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.936152614 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.991092441 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.939099663 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.934686722 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.991618841 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.051787414 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.994901455 seconds)
  done (took 212.600528252 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.942235295 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.943514907 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.937721789 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.952637333 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.936337719 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.940175879 seconds)
  done (took 13.519444441 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.943771513 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.940984454 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.938337055 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.938657307 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.936369407 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.941048144 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.937323123 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.938881263 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.940127375 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.939264902 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.935613278 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.938122117 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.937036888 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.934781235 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.936964386 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.933691657 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.937903863 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.933061194 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.937235042 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.936572833 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.08082872 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.933684597 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.939420442 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.940495415 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.942385364 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.936275426 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.944790669 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.935504716 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.937437233 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.949563933 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.944472799 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.937260706 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.939200434 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.94832753 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.942785807 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.940408102 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.943327966 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.938588602 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.935834699 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.938802008 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.942112666 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.9340098 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.941015821 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.942665307 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.940330434 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.944678239 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.944785615 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.945555269 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.941329346 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.939556551 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.941654775 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.935004485 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.941240063 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.937609571 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.941700764 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.945677367 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.94773417 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.940243282 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.938648657 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.94219027 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.942924248 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.942311454 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.938064058 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.940889562 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.94783391 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.940405832 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.938062791 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.941871801 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.939244105 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.937927323 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.940878106 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.937218277 seconds)
  done (took 142.694237227 seconds)
done (took 574.631503388 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.211473591 seconds)
  done (took 9.078740202 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.009676957 seconds)
  done (took 8.97613619 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.566044703 seconds)
  done (took 10.433807071 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.947146373 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.968011138 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.94418739 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.945392642 seconds)
  done (took 29.684432423 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.97422257 seconds)
  done (took 8.845590764 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.948421881 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.932716311 seconds)
  done (took 15.785098237 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.083533474 seconds)
  done (took 8.95446051 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.081758161 seconds)
  done (took 8.959189682 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.949295044 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.932832233 seconds)
  done (took 15.764488018 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.921923143 seconds)
  done (took 8.792277832 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.686214535 seconds)
  done (took 11.568014419 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.948488248 seconds)
  done (took 8.833637259 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.947136854 seconds)
  done (took 8.819068652 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.136936708 seconds)
  done (took 10.008684865 seconds)
done (took 166.373301342 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.939340377 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.938904753 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.938369989 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.938045416 seconds)
  done (took 29.625383388 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.977499853 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.976013826 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.979359559 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.988021036 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.977575397 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.975440748 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.971083592 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.968307123 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.985390878 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.978944161 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.98111033 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.981474498 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.976868982 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.971636431 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.980384688 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.975135009 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.989593936 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.980776257 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.968720974 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.979126523 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.942642992 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.990322738 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.98124162 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.945935697 seconds)
  done (took 49.294059191 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.145654653 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.013055983 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.099272586 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.99934774 seconds)
  done (took 10.129138201 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.997291977 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.998694337 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.0103905 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.049113803 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.0857937 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.007103864 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.972439913 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.962654945 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.954631627 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.996022374 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.076207796 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.014725135 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.084128398 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.943858021 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.130413806 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.945026479 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.944087529 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.999804268 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.047773875 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.064778372 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.944576089 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.997732186 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.001410015 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.013628139 seconds)
  done (took 50.115165822 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.943070287 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.950929632 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.951414694 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.944264697 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.945992233 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.945689586 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.950009737 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.945603214 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.964895612 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.946781191 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.944226105 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.941906534 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.948062198 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.945778033 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.947653043 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.957848729 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.959558897 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.945211401 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.950120693 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.953203737 seconds)
  done (took 40.854799039 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.941896853 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.795093042 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.293804883 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.196295574 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.941060036 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.946692745 seconds)
  done (took 31.991110127 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.958469596 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.01261732 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.95523333 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.002253897 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.084132826 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.954791979 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.945313757 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.013615956 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.059390055 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.016912046 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.965382536 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.974783842 seconds)
  done (took 25.817090092 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.941579001 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.943333267 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.955699266 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.958552835 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.959211271 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.955424261 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.950946318 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.941498258 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.958403334 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.968202325 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.95791935 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.958780521 seconds)
  done (took 45.327038945 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030897323 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.98863285 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.965498919 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.62628907 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.321356933 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.147319656 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.546555335 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.27716717 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.945480114 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216184853 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.974086838 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044901268 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.200483059 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.439883817 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.972412407 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.406466003 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.244479538 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145667518 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.96435825 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.640589768 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006062904 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.122995139 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.749474244 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.004964026 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.151896863 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.074423033 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.204189715 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.943224095 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076122343 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979696046 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953079373 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.941732327 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21604684 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.33053964 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046559068 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954244564 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.561533781 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.654395234 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.930699311 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.723334509 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.694155022 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.065795668 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953248443 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941440348 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.876582115 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.08873574 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318510895 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.948032779 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.650590842 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.945495204 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952291954 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039847955 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.949752395 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.759000441 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858175862 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.945267084 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.942555495 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950481879 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.520611532 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.079205695 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.129389574 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.916243835 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.039729295 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.702976892 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.327974651 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.093178198 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.945736013 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947037728 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.879817757 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.639895974 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.004077603 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275591869 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.962748651 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.593651435 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247838302 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.035169405 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.889094836 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206952983 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.485437527 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.916366008 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172979546 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941508771 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.881012856 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.890554597 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.883336426 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201771605 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9826222 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.706646515 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984659823 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.276093067 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.951351646 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961501188 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966216066 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.169016178 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.829720349 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945909099 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.776712421 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.095857831 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9650099 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.273213439 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877797946 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.950359387 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201034378 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.15386464 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.013068525 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.437782094 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108686211 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.500456215 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.996771267 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.087187864 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.993328597 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.207965117 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004603578 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.071045802 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002603436 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.947149939 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230230797 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.538319186 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.083820803 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.987944485 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.074750393 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.252248215 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.968061841 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028746512 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.955719525 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.94734203 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.765104646 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.500069562 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.944471201 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.94872362 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.015152832 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.993634675 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.944541392 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.895399317 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.574918456 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.028382306 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.960464577 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.173734387 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.514485865 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.260937107 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.881043344 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277730565 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.040693175 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.168482366 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.59344782 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.027548447 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208159243 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.021827792 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.071494591 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998145677 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965493958 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045719923 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969601095 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.093266614 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.244856958 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.950653445 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.953552729 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.756304256 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.987009367 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946994797 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.952874017 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.705743931 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216739286 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977588904 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.959312366 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.837483216 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.962478428 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013124181 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.954115391 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.959433597 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.495844337 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.663917709 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.954627491 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.543576536 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170907706 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961163078 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.651154639 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070788408 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.033403515 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.215913258 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010622036 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.887684837 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.662128277 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.643271482 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950612604 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.885879815 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.94859571 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96133397 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962180042 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.149961344 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.218219397 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.995928281 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.66069447 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.993319272 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962205672 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.953788871 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952335001 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.464590518 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.092342894 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.147401415 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.998366459 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098156382 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.966324079 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.885723134 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.95804402 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.959714099 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.951133283 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.955234933 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984536917 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.65765534 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33213828 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.211528948 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.56155903 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965147943 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.701752048 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.015630157 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.954021951 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.797921564 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.132779489 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.992413455 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963244875 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.961499337 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.734198484 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.660576717 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.524680088 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266262898 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.247917459 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387835024 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.170047651 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.982861277 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.287798106 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.888357857 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.510861292 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.007971888 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.312564178 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.897496018 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037103461 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.595270207 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.298338183 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962711702 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180204173 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338070491 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.717474892 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098866315 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.167307125 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989109139 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.103283279 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.913915659 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.239763997 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095185159 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.685160232 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160802027 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290872303 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.654904946 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.081883334 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.95601041 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.62609108 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038166877 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.671437886 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.12465411 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.139855689 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.883459474 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437923987 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.958991219 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.184293696 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293806655 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.114613597 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.078713483 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.89097456 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.966516388 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.968718292 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.952344388 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.957018712 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.837877896 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.205999808 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967729524 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.889743037 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.069116543 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.244054482 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.859897172 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.960079269 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958012303 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243462448 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.499565951 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126559671 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.068655681 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.47572473 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.969404028 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.892940746 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.893881647 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.651782144 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.966166505 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.935869254 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161697749 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.062168341 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.873359521 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.046690426 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.119195531 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.213235079 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.970057726 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.2240824 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.235731488 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.658634111 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978927881 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.058070395 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.654968129 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.069307448 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.957380595 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.19694733 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711986266 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.184560281 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.993275139 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.908694873 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.960963017 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.173494527 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.958926579 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.857286814 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.192614151 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.679066166 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.017953615 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279481279 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034799325 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.852316264 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.004343482 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.051990699 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968005803 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037349133 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969889942 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.969962005 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.967379688 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005983371 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.866053592 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.084426021 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.968655922 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052525575 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.09459821 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.487852961 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.967885146 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239349001 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319279706 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.280174321 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.020598028 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.960437145 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.961067165 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.896268323 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110070532 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.187202333 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234707578 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.093235443 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.078765748 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985772802 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.661647842 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.186225647 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203266281 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.236679434 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.857945149 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.480399905 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.000846345 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.961586989 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971663882 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.172955758 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162949228 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253103229 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.105374917 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.03840464 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323091236 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.237563464 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.961687173 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.961899539 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.552609956 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.038977866 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.63876016 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.001351501 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.883566873 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240600768 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97305746 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.340924693 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.984961311 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.120297055 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.732628724 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.737323136 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.2566052 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.943947109 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.023600122 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.232396248 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.342677308 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279603715 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03176987 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972641442 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.075939658 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112491492 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.832190954 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.965668548 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.964072864 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015033474 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.677435301 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.975327886 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236130736 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279044791 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.963459832 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.849505934 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989781662 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.977497864 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.190094647 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.221534776 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.219200606 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975407847 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.972440135 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.78103628 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.234237845 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023909309 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.900080672 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.966520903 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064647029 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.214231665 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983391471 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.419314556 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.677502178 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227314564 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.967144217 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98857474 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.12341779 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.324493101 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286280259 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.505726637 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171269317 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.55367901 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.585426551 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.269912114 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.969326235 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.117306905 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.270595769 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.972094147 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.056574543 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006295292 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.231331625 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.279456396 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.014753525 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.680146611 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.939517917 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.311116884 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.528030886 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.907115608 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.978089247 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.026621831 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.966370976 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.097696941 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97773304 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.855407402 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.118325528 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.745629022 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241767105 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.973863617 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.955421976 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.721158725 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.257771606 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001889337 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110420884 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.96815293 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.644783061 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.320044887 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.225707085 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.043727279 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.977137059 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.972650614 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.968781858 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.955240878 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.164592828 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.167464981 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239151507 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.071647884 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.005687182 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.97500022 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.186267253 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180285321 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.860617292 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110340985 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.052351844 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011889052 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.876661677 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.47262951 seconds)
  done (took 1715.5760119 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.977747765 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.00161541 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.992203888 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.02595357 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.989380612 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.060263256 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.996887546 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.990576501 seconds)
  done (took 57.940243069 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.969751245 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.19538971 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.980680258 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.972213578 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.982202081 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.97440517 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.139490236 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.982764832 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.983140895 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.984261048 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.97229516 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.971078435 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.294339773 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.996558377 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.975366724 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.976060339 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.981636808 seconds)
  done (took 76.241128946 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.974989831 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.019822852 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.987957674 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.989475374 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.975634107 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.979034521 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.781863356 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.989135214 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.975010161 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.117578782 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.605343346 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.990904139 seconds)
  done (took 88.292399169 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.980079349 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.977754351 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.97619116 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.978295166 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.976304711 seconds)
  done (took 11.794870694 seconds)
done (took 2234.897657158 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.228616486 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.180218082 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.188295464 seconds)
  done (took 6.267938644 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.115127211 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.164433315 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.28410182 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.304593715 seconds)
  done (took 10.769314135 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.252633232 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.355495431 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.180814076 seconds)
  done (took 8.690576439 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.37484347 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.971966732 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.078055342 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.956963861 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.961624358 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.957548848 seconds)
  done (took 22.778524529 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.962640836 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.964617224 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.963517036 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.967211956 seconds)
  done (took 9.751332794 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.946099612 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.705330678 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.939971377 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.950767154 seconds)
  done (took 21.435537366 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.70367919 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.718616144 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.702852034 seconds)
  done (took 10.012051511 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.629138128 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.881531766 seconds)
  done (took 9.396830267 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.226712151 seconds)
  done (took 4.117882635 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.097894819 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.23370724 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.426143369 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.459000433 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.52363092 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.847007538 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.281263216 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.216302302 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.359357356 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.413424419 seconds)
  done (took 25.750560406 seconds)
done (took 144.527613109 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.352543674 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.214963902 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.171237498 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.350717862 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.192949441 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.17212311 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.394342091 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.331808892 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.815205923 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.812774705 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.303645146 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.191397346 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.126149871 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.201944815 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.127759641 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.329395656 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.186074032 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.353461705 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.038678959 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.200058327 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.400006043 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.942703519 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.14996645 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.953731922 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.191088862 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.19334029 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.536116636 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.333306552 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.193898812 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.545301369 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.124312094 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.353399098 seconds)
  done (took 174.688888067 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.74346076 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.969007811 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.968745897 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.968368729 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.422303509 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.972149889 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.973291872 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.971178789 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.154738734 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.15286702 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.981818808 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.443895055 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.985825965 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.972343063 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.974123065 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.970886689 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.282061653 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.79779112 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.982235144 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.982005298 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.985436945 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.349198825 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.98829401 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.406855721 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.318384375 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.992773114 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.971220541 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.992475195 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.978873499 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.970917452 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.981455462 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.971142295 seconds)
  done (took 211.479593703 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.971153605 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.972992579 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.972809862 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.970104723 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.97274504 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.969741524 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.972044449 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.971932591 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.741337506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.767667 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.003180604 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.988529065 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.988045979 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.971099595 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.988846585 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.972138489 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.985962981 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.986900182 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.985017086 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.988496674 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.991717435 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.813323774 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.977463934 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.80707885 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.97899292 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.981095029 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.971270273 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.982246523 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.987340061 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.987548694 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.983680793 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.972197584 seconds)
  done (took 224.49655102 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.170528073 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.976075791 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.978596856 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.911667598 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.980203758 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.977836375 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.978685242 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.168280863 seconds)
  done (took 20.074494629 seconds)
done (took 632.65770405 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.429073571 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.272708765 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.158712262 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.001838727 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.235355858 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.040713064 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.000294274 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.062055112 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.721797358 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.072399746 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.639405976 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.015641072 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.73043057 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.021330544 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.123879701 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.051193681 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.53997802 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.632884153 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.177399918 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.049132959 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.173220413 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.960579262 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.070365758 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.755316558 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.75099328 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.004395035 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.175062279 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.545257566 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.006845078 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.16110027 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.717750153 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.385851707 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.011619987 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.995520395 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.050707015 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.032381959 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.35341791 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.011800251 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.126839016 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.770006669 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.054025539 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.611522397 seconds)
  done (took 107.608709281 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.97209061 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.97076698 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.97077087 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.970922935 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.97133045 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.971744671 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.969834104 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.969424837 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.970943225 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.96981473 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.969522772 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.972534581 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.970717024 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.971197299 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.967746692 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.966767316 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.969115055 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.972568157 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.972286007 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.96987359 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.971269221 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.969512602 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.971013663 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.974109033 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.970734946 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.971604596 seconds)
  done (took 53.161485988 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.982218764 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.127459617 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.20774426 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.001475976 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.983436082 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.98507301 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.001041542 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.987602615 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.986799098 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.986426883 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.080120107 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.98575273 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.001699976 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.211924703 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.998549589 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.981680202 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.98339558 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.983634077 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.133360474 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.000970288 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.003719082 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.988656055 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.003415444 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.996543688 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.987617215 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.98470219 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.988652901 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.423822743 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.991747079 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.079093077 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.02800655 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.005166111 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.384770084 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.217173478 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.037562626 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.989468907 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.986350582 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.087735327 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.989651237 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.98530383 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.002978687 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.989587984 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.210079671 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.482818652 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.996069045 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.980939956 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.431969435 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.091570802 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.023253689 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.993580434 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.20943746 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.995756374 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.98562823 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.987139861 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.019798064 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.99392033 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.987690718 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.294670008 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.99633896 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.002551207 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.983752489 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.986288086 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.138532225 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.991174398 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.12983007 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.991037287 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.990705176 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.988302897 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.210337028 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.999734716 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.48096145 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.000908876 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.982923136 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.083078586 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.141659177 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.456545934 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.993830993 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.143499127 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.395341714 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.006523088 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.991934448 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.412992637 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.010863163 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.990987333 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.981562422 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.984023483 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.983866419 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.02803142 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.000635563 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.419847299 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.481531239 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.312960174 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.007942885 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.000079863 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.985464571 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.295549299 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.989417481 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.982494774 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.201658506 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.493130458 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.999666052 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.992164617 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.465953383 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.998218484 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.003410971 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.992084869 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.213007418 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.998033494 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.027961082 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.983250847 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.990693154 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.989427044 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.002451935 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.991362258 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.982623262 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.459191514 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.096304861 seconds)
  done (took 245.193290489 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.979682949 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.981546784 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.983736319 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.978750295 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.976660348 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.985413559 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.978667772 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.979421975 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.984215704 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.979360325 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.979554293 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.976852738 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.977594709 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.987183541 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.497293874 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.998218741 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.600475079 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.988863734 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.989813955 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.005351759 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.675380174 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.996355604 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.992205882 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.989427651 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.991852505 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.992001631 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.994470608 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.035833682 seconds)
  done (took 171.389034878 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.999025162 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.187177862 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.010079078 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.030651192 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.005386745 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.991178815 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.021177009 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.021053672 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.000335953 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.989391343 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.994578055 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.05957554 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.005266734 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.132074328 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.025917175 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.030273082 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.100288288 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.001887193 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.994223743 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.997557812 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.026412515 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.993802367 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.057932858 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.123412429 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.011972119 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.118128809 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.998981636 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.997100984 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.993680076 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.11125706 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.008587471 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.05351479 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.025276217 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.010563116 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.117576272 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.113243554 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.103043619 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.020604573 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.998624835 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.991468139 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.990195565 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.982125615 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.109989972 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.011544751 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.996659802 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.101281593 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.009832655 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.995187181 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.002325866 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.99011763 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.007421715 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.011224794 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.062173062 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.12841253 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.024095306 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.016848197 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.020126595 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.283819573 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.004928866 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.098539794 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.987145903 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.113065447 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.014029718 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.983018487 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.994305116 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.999072257 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.025670096 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.026395678 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.104838906 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.003011248 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.097879109 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.02889069 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.003072858 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.995899151 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.995680694 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.117239161 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.115824999 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.030288238 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.034658725 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.031983243 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.994741914 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.999490605 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.984160225 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.014985844 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.000347024 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.114840976 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.120148284 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.001669709 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.997938094 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.996808104 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.998144809 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.024916891 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.126941109 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.033401305 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.094359668 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.063898421 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.071377502 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.010689474 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.007819014 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.000349362 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.062603968 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.009495728 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.009121074 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.332338482 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.070504738 seconds)
  done (took 216.088181482 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.096062433 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.467635804 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.052042416 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.052745115 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.28291835 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.417331571 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.792363697 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.045760106 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.048783634 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.076014432 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.210463408 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.108642963 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.057833992 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.032376204 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.444246204 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.040265364 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.044509276 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.073166407 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.052928519 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.579710351 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.342509468 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.168835049 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.041883323 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.177048442 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 2.025844102 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.332846973 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.368848293 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.422113728 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.077953227 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.386439452 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.386469616 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.729100334 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.252119467 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.289493151 seconds)
  done (took 78.909404429 seconds)
done (took 874.254862283 seconds)
SAVING RESULT...
DONE!
