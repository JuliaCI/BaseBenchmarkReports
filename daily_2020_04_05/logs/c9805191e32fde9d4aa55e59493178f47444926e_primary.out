cset: moving following pidspec: 16187
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.271370069 seconds)
loading group "string"... done (took 0.619064263 seconds)
loading group "linalg"... done (took 7.52761064 seconds)
loading group "parallel"... done (took 0.157344742 seconds)
loading group "find"... done (took 1.11389516 seconds)
loading group "tuple"... done (took 1.810017984 seconds)
loading group "dates"... done (took 1.209506575 seconds)
loading group "micro"... done (took 0.212885633 seconds)
loading group "io"... done (took 0.897899081 seconds)
loading group "scalar"... done (took 36.341934061 seconds)
loading group "sparse"... done (took 11.566892006 seconds)
loading group "broadcast"... done (took 0.916150535 seconds)
loading group "union"... done (took 12.345205205 seconds)
loading group "simd"... done (took 4.334507336 seconds)
loading group "random"... done (took 8.426282461 seconds)
loading group "problem"... done (took 1.8450379 seconds)
loading group "array"... done (took 19.939312537 seconds)
loading group "misc"... done (took 1.634657242 seconds)
loading group "sort"... done (took 3.101464358 seconds)
loading group "collection"... done (took 16.883485312 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.527585017 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.131151892 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136553377 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.122910068 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151781225 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.122895853 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.129273664 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090487483 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.906866206 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151896029 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.12147059 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.408247883 seconds)
done (took 5.445599881 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17819604 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086050033 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087437337 seconds)
  done (took 1.302118376 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.071116632 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130048748 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.072187961 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.072835578 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072115335 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07325299 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.071876601 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.071748191 seconds)
  done (took 1.692417166 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077637622 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07384355 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070999116 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072976081 seconds)
  done (took 1.425941998 seconds)
done (took 5.81055925 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.767618944 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.210738934 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189660323 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.392009576 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131914862 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.174101893 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674252617 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.319472292 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.191623123 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080101778 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.111949661 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.344271052 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124469258 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.646687546 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08189132 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094422246 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141424905 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.442585299 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071972319 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087255773 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093765395 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133624218 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.091192374 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078460825 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150491773 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07272674 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138295686 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085057182 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071005459 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.216840324 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177105538 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.667445687 seconds)
  done (took 10.41442158 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.105604852 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.102993573 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.073503687 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129902285 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102654707 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.075392174 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079888084 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.072273279 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093661948 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133301375 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095473636 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110169256 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071788713 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.073898702 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08781867 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212877401 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.086618961 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086594218 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074588763 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083027842 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11125129 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082561034 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084508518 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084548231 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133501226 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.18539084 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102374643 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.10248217 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071533229 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.085454014 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119045862 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133453296 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070894425 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070645781 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.129139116 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.101556363 seconds)
  done (took 4.791997807 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.970765865 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145277035 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092111223 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135849785 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069931767 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111431276 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.071553059 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084907729 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.208579225 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.369904355 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.089873754 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.572596691 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.114225428 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114822346 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10682391 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07271834 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073072222 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072819132 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.476976523 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.103830038 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112029045 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085358791 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075562966 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07406614 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.070787249 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073234615 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069595043 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073973936 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.118532651 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079053728 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.305740923 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126704245 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072957948 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.932188065 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168340303 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070284793 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.245850297 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.174009326 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.071414481 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094250018 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142623694 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073341701 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070591395 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16253974 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069632217 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07469521 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071159993 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089142574 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110417569 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124498145 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070834342 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071427777 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171390598 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070295625 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083241816 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.131337764 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.098168419 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.156947223 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071763597 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288483598 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094273412 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075233346 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06997401 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.179737912 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123048138 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072455281 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.071955416 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073677799 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073530699 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.366458634 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071100247 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.185042633 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075218408 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081495941 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074483999 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074177932 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076825355 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076944931 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092486608 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.071529267 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078208981 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070835396 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.071539406 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071606639 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06894159 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087279937 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.478670894 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.071921699 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073671005 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.070279289 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094941678 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100046468 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071977145 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.071186573 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103915356 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072765986 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.071902246 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071639228 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08716659 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.074360911 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.118572295 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071603188 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.102182406 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101643056 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074687615 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103441412 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083899635 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079481297 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.404508644 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.070616987 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072476272 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070554712 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072377346 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071398888 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082516438 seconds)
  done (took 22.295499663 seconds)
done (took 39.602175958 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.24315285 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074546801 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073966609 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074909726 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074268043 seconds)
  done (took 1.745218666 seconds)
done (took 2.939557591 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.1239946 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102154082 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070415864 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101186496 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069784782 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106085874 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10322782 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081409227 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102290751 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.069650339 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100327874 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06946879 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069277246 seconds)
  done (took 2.372680576 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088009744 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08820156 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07457389 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087401971 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06895732 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087103369 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086472012 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093177073 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088324598 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077609567 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068606038 seconds)
  done (took 2.093431915 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087408462 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087965168 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075712245 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086430708 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068487017 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085976339 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086034794 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090362337 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086393495 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078718167 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068447187 seconds)
  done (took 2.081363261 seconds)
done (took 7.727705295 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081048784 seconds)
  done (took 1.249918185 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.52608185 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.616990326 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083555175 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.108071421 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.190165108 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.114501861 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.243135321 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.0884568 seconds)
  done (took 8.295816265 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.093219573 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085984073 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077290256 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073897863 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.073520651 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076121668 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.074207346 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.0731678 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076701874 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075578967 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.076085732 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076368606 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.075508781 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074238713 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.074056564 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075002091 seconds)
  done (took 2.472750014 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09620779 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094873413 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078052565 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079032742 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076828339 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076233606 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078039853 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077249172 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07492719 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076722781 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.079306361 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077675377 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07636713 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06808619 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078530638 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080692755 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07523767 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07865858 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078825911 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07998516 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078968981 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068026216 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076311256 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078066595 seconds)
  done (took 3.143619857 seconds)
done (took 16.340272539 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110383533 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072430484 seconds)
  done (took 1.354192378 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083278219 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085243786 seconds)
  done (took 1.349002911 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084120458 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069155247 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091156659 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080507566 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069960238 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069596701 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088403649 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069734086 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069494522 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069321552 seconds)
  done (took 1.942484337 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071796607 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079493823 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073620949 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08394014 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076403926 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068224747 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074845837 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071083847 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07934161 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066870235 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074681451 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086443203 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074208542 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08904005 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075276272 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071989315 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073929496 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071397282 seconds)
  done (took 2.546797752 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069889667 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070536582 seconds)
  done (took 1.32566718 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070467931 seconds)
    (2/7) benchmarking "second"...
    done (took 0.068154795 seconds)
    (3/7) benchmarking "month"...
    done (took 0.071035474 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070526095 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067835542 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066952221 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067590646 seconds)
  done (took 1.664120192 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.357810279 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.12031133 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.303642134 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07690138 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086421506 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256798804 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.071109282 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075840963 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076243313 seconds)
  done (took 2.648060502 seconds)
done (took 14.018242456 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.0859255 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091299228 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09995321 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.37974983 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096747194 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.07207945 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.118747582 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18093772 seconds)
done (took 2.325173122 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211203672 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.656698851 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.402578588 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207276561 seconds)
  done (took 2.456636394 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33338002 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092750342 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066651937 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07338298 seconds)
  done (took 1.763423423 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073036924 seconds)
    (2/2) benchmarking "read"...
    done (took 0.074977044 seconds)
  done (took 1.344225022 seconds)
done (took 6.972638265 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071348584 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089516357 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.071687323 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.181662744 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.069884045 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071922682 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.071158773 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.068914654 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068814301 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.071702614 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071235887 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.068602295 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.071009069 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.071589701 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071468805 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068985398 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068922369 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071031942 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06920116 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069084131 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068814289 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071532042 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.068771366 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069500821 seconds)
  done (took 3.04023111 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08785857 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071455164 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074933751 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074767703 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073259227 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074759339 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07497189 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.070776854 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075169441 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073079598 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072910268 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073008369 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.07267815 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072711848 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072929913 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072724668 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075221028 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071202783 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073002127 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07315456 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07516171 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070899108 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073144834 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075059328 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073000557 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073077375 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073660212 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070962735 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07475286 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073585936 seconds)
  done (took 3.41370439 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074811791 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.068320805 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068672129 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075612355 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068596572 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.069213144 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067679026 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.068433964 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068647075 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067504433 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06856836 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067907707 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067791336 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.068468471 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068956486 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.07241785 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084006384 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068045149 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06768157 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068355399 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.071942943 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07070603 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067968538 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.0676213 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068109196 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067919647 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.068039139 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068028981 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068565951 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067510962 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071807959 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.07219329 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067924156 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.075694442 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072831792 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067855194 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072829698 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067610485 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068415927 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.068194546 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067663092 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067793697 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067594246 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.075849482 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068415072 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068857406 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068166997 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069084525 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068492986 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070062357 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.067493068 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068015741 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070373437 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068954 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072034163 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067809091 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068182918 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067827044 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068573322 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06798876 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067747841 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067342505 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071474249 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068565138 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.084934926 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.075738967 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067705677 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069125483 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.069099614 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.071429032 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069486279 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.083642918 seconds)
  done (took 6.239718368 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090996829 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091061521 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070612322 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070795798 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066361974 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068354315 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074105929 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06824301 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070725526 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08760674 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068871717 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07060432 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070383385 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072941923 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068695252 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070701813 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07679379 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066385791 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068318692 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072132896 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068891004 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073814103 seconds)
  done (took 2.824006937 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152247175 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074802894 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109545982 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07980961 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074919324 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07929668 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074741991 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074525488 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074569343 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072328046 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07242326 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07450414 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074541066 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072277902 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072580344 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072420057 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074378759 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07242884 seconds)
  done (took 2.659791743 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082435895 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.070968862 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09242351 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071779137 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.071115427 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073264647 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075358901 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078330754 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072957151 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.07085865 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078271432 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07357581 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073116902 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071101931 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073239757 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071171021 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073048184 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071064244 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078257423 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074823366 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074599214 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078267722 seconds)
  done (took 2.858495602 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084210626 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07367468 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085903951 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072558104 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066692339 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068445343 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074177955 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.071021133 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074654369 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072663909 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0706059 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068300676 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072708276 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070614039 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072844282 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070590705 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072725391 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070469125 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072732254 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066215314 seconds)
  done (took 2.663339197 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088454359 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072107137 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071122401 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078500812 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072207821 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071676109 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078391265 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071542953 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071588711 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092212169 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071674698 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072208789 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077640416 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078121484 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071864239 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078355697 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077759291 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078009708 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071889999 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072256529 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092350573 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072215678 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077932626 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071905687 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071556382 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072062137 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071888758 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075961198 seconds)
  done (took 3.336248732 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071447384 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070745921 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06896492 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.069192573 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.0692425 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068430071 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.069607381 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069674764 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071828577 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068937581 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070957369 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.071197115 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071057005 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.070744112 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070673662 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.070606077 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071058428 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068888906 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069040449 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068656512 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071196105 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070907734 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071145557 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068948056 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068579615 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071076026 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068702157 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068591644 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070695488 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068600345 seconds)
  done (took 3.317544233 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079997243 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077257417 seconds)
  done (took 1.37418637 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067537793 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084666691 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.068089774 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076632018 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074142632 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0713976 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077136445 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073937473 seconds)
  done (took 1.806567385 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085924459 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07984937 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070896245 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08054566 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079582032 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08716689 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126880882 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070541978 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077606278 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.069893779 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083824221 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07071073 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077854168 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071343894 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077281144 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078460198 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068206099 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074827221 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071666621 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068841235 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071146126 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079724365 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074544581 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066282831 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072752887 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093448654 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081589231 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070120332 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074430359 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078776783 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077561382 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065025003 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.07276007 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070311898 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068123458 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078841129 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08462227 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07409484 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079837206 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070577107 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078483214 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065803279 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075355865 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.078395363 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083209956 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070829686 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070518694 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065708672 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.069685538 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073582718 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066107987 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071627128 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065315116 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078316674 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074797768 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081788801 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069104101 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.073007126 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.074186343 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074319368 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.078025109 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073186547 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074614317 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069853801 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081537232 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076325802 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078479249 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065629101 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065134802 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068968774 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080395561 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095111776 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076849044 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070284305 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070865539 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06828291 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074182758 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070584908 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07591018 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077809989 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070111755 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074332825 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078527081 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07227729 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073533496 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076286747 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068752609 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072536011 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06952327 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087067661 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.071947749 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068702402 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06962778 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080978168 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075385598 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069719369 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.069349605 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078421262 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.065180428 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069707 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070239889 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0717634 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079491155 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072966383 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073057201 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.0789609 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076247874 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070912792 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072414336 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066785136 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.197489706 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.071607041 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.080892327 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.065727634 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075004635 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.0731517 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071159153 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080089966 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069502798 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070081104 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079827087 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07764978 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069333158 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06698252 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074599936 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070263727 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072904424 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.080454783 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069045754 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066557162 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06632746 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074608697 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070584596 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.075071818 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074517622 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074592107 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065062742 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068954228 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074072273 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07946615 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.072013202 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072559192 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077160424 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072864027 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070564304 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078103838 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073583999 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070518333 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076592601 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.072716363 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065652889 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072256022 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073812602 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069080261 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.075434654 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072706591 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072748028 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070694415 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069062874 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075640727 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070867348 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070783534 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071424765 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069439519 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080953826 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073186586 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065994996 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.070575092 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077517626 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.069388776 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069544823 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.070363093 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073547196 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070624764 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068813962 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069491274 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073836591 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077555578 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072756694 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070820621 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076215452 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083999804 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06962682 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073472989 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070183715 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070911147 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070858003 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080807857 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076964674 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073881842 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073959868 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067453119 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076121776 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079117145 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070838605 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068387763 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.071051329 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07374206 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077392391 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074037659 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070689264 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06872777 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072136731 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072954517 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073663769 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070084382 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070841301 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07474561 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068652185 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075466123 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070736156 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081009288 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07390346 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065131656 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0717387 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068216121 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07688574 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065416861 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.069284647 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.070928996 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069761726 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068086063 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073223017 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06417715 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.207995869 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080121499 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07291013 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.071229546 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071093551 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079087149 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.073794782 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076063076 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.075747023 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077507801 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081965645 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071281831 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.076143279 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.084514699 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070316357 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065371573 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076929254 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069201468 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069591926 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069619938 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068918311 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074041834 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077445434 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.0774671 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06545101 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.074420783 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069919354 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.071367055 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065730124 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07592077 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074427749 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072459682 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077921916 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070601967 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070205458 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074666346 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070324963 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071015292 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070920049 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074470141 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071067692 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072693379 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.071099871 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074584741 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070259001 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068491925 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.073799712 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069894117 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071586761 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075375901 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069676151 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071222014 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07379756 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070455281 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071921336 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072150327 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070790776 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074071074 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072162501 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071786289 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073664435 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065487438 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079077414 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069330734 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078244398 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071514711 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067573161 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075442026 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073146386 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074423907 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070372655 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070566052 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072751077 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06985841 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073679244 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078167118 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.069792936 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081954377 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078431396 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072136879 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.0737852 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072338199 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072809612 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.070647557 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072704151 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070657195 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.072082296 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069985202 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075573923 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07392137 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071824475 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073702614 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070932789 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071759981 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071362319 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06573919 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.071059694 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.071400078 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070715602 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079528206 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070383012 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.071161741 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069277771 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070523792 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069297981 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067372083 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075952223 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076094086 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069360159 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076641068 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069930701 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072044912 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080559824 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064351696 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067726662 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.199898734 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.070744984 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079463459 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071312812 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.08113141 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072442378 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.071541659 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.068506551 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071301419 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069613423 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065807691 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.0689269 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075311582 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.070770544 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070197449 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070438517 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074426069 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071205428 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080040039 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070196473 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072760732 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069985406 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068449834 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.07136688 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.071301733 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074258891 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071598906 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069578487 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067964209 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070114093 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072416949 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073290685 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070976932 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073127322 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078626723 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07029769 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074363586 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072657844 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.066336368 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07478241 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070131045 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070160725 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070575314 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.075059202 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076650218 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071798857 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080511139 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.07057812 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072839638 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070758843 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068229986 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069626328 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069553029 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069877331 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.07067632 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070920944 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078983309 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068773952 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074311666 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071407353 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.07174258 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077177545 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.07092555 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074125884 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075514205 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.07264775 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07300695 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079294524 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073278086 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07421167 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071316293 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072659847 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077806145 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070854724 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078051924 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071951915 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070460969 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073923469 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.069780557 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06998774 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069693749 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070069669 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076647779 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.07071038 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070991865 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.07103327 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068484074 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072311336 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07257641 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079198196 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073885492 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074756213 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065761074 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068218175 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070714905 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.070484977 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073188056 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073437776 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076844971 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.074570817 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.072783466 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069331085 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080050762 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076492148 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07451024 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.070329898 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074646583 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070287606 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073082182 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072379249 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071183858 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070510732 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07441667 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071874771 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0698913 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076512901 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074152065 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.20229222 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.074607409 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.073902159 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072824255 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066282485 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070939819 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074467528 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076934114 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074557296 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071646431 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081746652 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.070204994 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072435648 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072790723 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070106753 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.077065061 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066498654 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073651079 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071742849 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071208912 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066131899 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071936492 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.070316541 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074520054 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.071171997 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065773063 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082233591 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080249072 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074445698 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070272196 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069775307 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065924194 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065617866 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070930516 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070950987 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073757058 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081368266 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070894045 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070545787 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066294898 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070554287 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075103705 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074973102 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068794913 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066170498 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070933123 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07427762 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077229869 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069184282 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069306574 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074259101 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073581198 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068632913 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072652765 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067908137 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075309478 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083331289 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070608181 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073410191 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077248142 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079141527 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070844461 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066445785 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071117909 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074436431 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.072787062 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070846042 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071802606 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085593908 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074642452 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.07104803 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.070064202 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073682016 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.073503489 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079703276 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071180153 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071282543 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076197519 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073203486 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077134511 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074924374 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077674984 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074362746 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074291668 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069836926 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07189819 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068798379 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.070699747 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071146224 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070503225 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074487665 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076195632 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070465641 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082262674 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080126229 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.073148964 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.068237399 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.070699052 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.071345693 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065945523 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.07070805 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068430379 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068535174 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.069036746 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069526472 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072444593 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075621161 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.072357706 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070283383 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.0698901 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064723568 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073308938 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073516324 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071780504 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067434473 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069395841 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.203109512 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077505429 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074737691 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.07043723 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07469768 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.073903262 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07318482 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066682526 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.079003582 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070207299 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07354395 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.071159764 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070901683 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071304976 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075164993 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074626586 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071830395 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07399746 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076368128 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07238059 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068496361 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068089606 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.077003891 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069145781 seconds)
  done (took 45.339470327 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103918653 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067580111 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066549645 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066406574 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076390516 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067196841 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065996477 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067283844 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06696349 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068960546 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066313676 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066157554 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073975952 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080682895 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075946373 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070443774 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066407697 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067186427 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066560316 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066980324 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073496425 seconds)
  done (took 2.781500503 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077045605 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.08207689 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079558733 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08633404 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075239123 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073879855 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078461257 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073536247 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081788918 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07651214 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081665104 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073814918 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076764375 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076502604 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07623998 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074067309 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.081554066 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074917723 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073953647 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0788188 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074527021 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078852232 seconds)
  done (took 2.985494085 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071818259 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070495845 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.073053245 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065904192 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.070387231 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065706911 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073255535 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068054431 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072380498 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070177935 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069920018 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070224629 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072714056 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065742383 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071365302 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068263429 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110549836 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.080512025 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.071853468 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071024088 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065811681 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072495242 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065648813 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066277696 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.071048763 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072048325 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070461402 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068241737 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069734781 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069976021 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069987869 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06799891 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072749152 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071368522 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.070676347 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070277255 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069578076 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.072476851 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.0662486 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068658043 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071201269 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066558762 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070438839 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072573667 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068627221 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.069036646 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072613561 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069894868 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065289573 seconds)
  done (took 4.755475871 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080656692 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112602587 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072306028 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092102283 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083242577 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075536949 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074895408 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092444305 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067519731 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068393837 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08404654 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081480965 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069390637 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073625947 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076497831 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069377543 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070471303 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068648321 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072583828 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068859223 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072591902 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07612631 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083041198 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080741375 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073042509 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06927675 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069004487 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07365428 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080923291 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073606612 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074004492 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074766638 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083881445 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072412133 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068851009 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071355028 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083852904 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070228177 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071795278 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067534973 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071588919 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073484357 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075991267 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084495836 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069708424 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074028816 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069161116 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067250669 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081024459 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.07198116 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07669649 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082035559 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073446841 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069899218 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073183092 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082939771 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069642273 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06846361 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072065251 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080451267 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067658804 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073115541 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081735019 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071111187 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075729019 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081763348 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074562491 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072638667 seconds)
  done (took 6.532770688 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081272684 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101240985 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086417632 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086365398 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079792509 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079585596 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079311793 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.080220528 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079797942 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083537823 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079270959 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119172422 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084058517 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081995476 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080486694 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079482722 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079644046 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080069048 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079722233 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080141745 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079751163 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086078321 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079869602 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.085891936 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082988441 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075739355 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07946209 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079542574 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086421935 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080085009 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08239089 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.0796465 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07985894 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.085767004 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082488344 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079575138 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069449125 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079385993 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079542518 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079850389 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075692451 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085773502 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079644845 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075931373 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079435967 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080141881 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086154541 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082442605 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081590558 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083502581 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079978707 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085862756 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079695691 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080356573 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.085919458 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088231662 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085678924 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085834533 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079683171 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086097921 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085869362 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088623393 seconds)
  done (took 6.427594122 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084974219 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077034018 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.086408995 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066545602 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071645769 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076371299 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069345194 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068789503 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07715291 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077655854 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078977341 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076307359 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078453322 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079565139 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076933126 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07902918 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076250412 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076139995 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076624207 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076218374 seconds)
  done (took 2.83968701 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080581823 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088689773 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.072561931 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075911541 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073859798 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076257865 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073467239 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074162129 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071905262 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074906685 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079676699 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079580881 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072583501 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075884822 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079541137 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076105841 seconds)
  done (took 2.522513721 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08801258 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076624594 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.098560713 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070444814 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071689223 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066613301 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069578002 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065863434 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066323271 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082528821 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069694616 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.081889847 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069478458 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068586617 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066981162 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075201534 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066650984 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067725673 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069710524 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081052529 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073892772 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068290429 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.074275434 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069864714 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072769017 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074109731 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069579386 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.07135328 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067431343 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070309992 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072986748 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073858759 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067079129 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068089875 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069256442 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067603723 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069757341 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070425927 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075727866 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069798946 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068594717 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072971079 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069967082 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070679789 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066909159 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070103547 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066431481 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072939622 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067973498 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073270443 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069822072 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072213223 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070326718 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076705276 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072545775 seconds)
  done (took 5.248745531 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085803566 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074513354 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06604879 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068180518 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07413149 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072540795 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074020017 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072474954 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072718217 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068520341 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071960914 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073840457 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072188631 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073942801 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071909998 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074156306 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066132938 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071203249 seconds)
  done (took 2.632533971 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076791619 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071078371 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.078325799 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071223139 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.071765721 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073284574 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066581378 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068912386 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068786335 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070833042 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070946869 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073259963 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069297089 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073183947 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070701024 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070874007 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07298278 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068922309 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070996508 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066290887 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072957479 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068970016 seconds)
  done (took 2.883038794 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097946133 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087841017 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142851746 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.084649512 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090756392 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.077484237 seconds)
  done (took 1.899285287 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096658515 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104692029 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070907547 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073779072 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080002345 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074957673 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074439249 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074364971 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081106908 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079779201 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074536575 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083429773 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081342447 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080715748 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079133906 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079229576 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074489376 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074740113 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070770245 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086667486 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074545039 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081085608 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07461355 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074475758 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07481039 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081064032 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081399829 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079289597 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074302168 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081494671 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079425908 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074700229 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08183518 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079195428 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073678415 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081625914 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074523062 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085771144 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079780336 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080957758 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073963446 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079422579 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081344173 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078369839 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081561966 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075010469 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078331028 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075023767 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074692348 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087568489 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079482232 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080370054 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079200261 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081552582 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080961544 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086962198 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07929862 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081076016 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079065924 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079113454 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080642436 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079083076 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080152086 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079264451 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079395714 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080481439 seconds)
  done (took 6.5565593 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108211845 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071916147 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074877649 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079915219 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08087057 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074841211 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075243015 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074297049 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074471918 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072074232 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111943147 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075048113 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080849922 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080652662 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075325802 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074896769 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074715441 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081063246 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071540443 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08755916 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07445132 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080620492 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080472695 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0806843 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079715602 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079269951 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074780235 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0745089 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074651017 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074513023 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078713694 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074933908 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080703397 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071769651 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08133441 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074602656 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074549412 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07818673 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07445061 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0793384 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081134056 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085974274 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074682847 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075356807 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079207247 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075010534 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074335311 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071580399 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074805543 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072053361 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079268442 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079135073 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079194832 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080730544 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074701137 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074612674 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0745271 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074455321 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074756205 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079384445 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081028667 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07457746 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087262053 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074406122 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074543571 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08105768 seconds)
  done (took 6.491312821 seconds)
done (took 134.627799224 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.19723005 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175755054 seconds)
  done (took 1.680175879 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073668425 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.1009761 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081451532 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132740172 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072254704 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104940347 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103380947 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08136612 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071210054 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071231232 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071083092 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073420553 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135854904 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071154451 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070851671 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073288076 seconds)
  done (took 2.713789812 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102197745 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.159428919 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105618037 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070170553 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10202196 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076153489 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069888955 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080903696 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075135166 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069988273 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076423835 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07430408 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070099712 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074057763 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07515879 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076144993 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070152153 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076470762 seconds)
  done (took 2.831252374 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101715825 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094246758 seconds)
  done (took 1.524137156 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160713953 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137239847 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205515738 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.33943494 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.156195611 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149393024 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145126758 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143590493 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117783391 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140597047 seconds)
  done (took 3.019540937 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105133742 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152327955 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.273436949 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120053175 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077291976 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094233167 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124081482 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083244333 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08363138 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082960175 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082878671 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080053965 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102596805 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077845992 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078690175 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079945662 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106098529 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078640445 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079488237 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079509111 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104211938 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071609344 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077653745 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077956966 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080485854 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080400398 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071446872 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070975449 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079180048 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079733365 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080078401 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093286284 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079965924 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10468475 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075928577 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10593478 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080416392 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077297014 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079423511 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077227521 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081532038 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081308307 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077992775 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080345296 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071306695 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080849855 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071374237 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071390913 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081339363 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071784895 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080992114 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080138338 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104871447 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072110336 seconds)
  done (took 6.147969549 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11167252 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110517602 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074956768 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116338915 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109064481 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074524415 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108775381 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102467617 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111032343 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075278445 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073156224 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074654404 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082581101 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084382485 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11881213 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.110946986 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076616192 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073829763 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111151813 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110647626 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073335056 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10497246 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101651163 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110531256 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.072532947 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074243818 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073000863 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074125858 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079143118 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080819769 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073130596 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082111602 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086700124 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080233084 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072072024 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073781091 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073226318 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081897935 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081747474 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081467542 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079763804 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072363028 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073579539 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074235359 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07361907 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071959793 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080920922 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081920364 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080962813 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07280852 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07450605 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073437532 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073998058 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081739643 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079785553 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082356653 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082017135 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073474977 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073602998 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075905828 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082573629 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082877793 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081635093 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073670994 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082100205 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075720449 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.0831411 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085919877 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073777479 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074056306 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073088748 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072714525 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073782801 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079874314 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080080356 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074772005 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072904531 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073062981 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082259131 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080799353 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073240961 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080008527 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072411353 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073757269 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074468814 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074240474 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079411414 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081763071 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074396906 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072803499 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07265999 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072303014 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071833675 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078800714 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080502102 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080544444 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079979305 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072696026 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079849446 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078768242 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.205585873 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.08280997 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.074235837 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075523662 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074912989 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081390229 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080241998 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082757003 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07372741 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073688106 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081380878 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082921635 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074007545 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080605349 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082780953 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080965804 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072719108 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084090757 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073953878 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082164002 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074164389 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082680237 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074383229 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08125438 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07322146 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072216454 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073667608 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.082593614 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073931959 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07341568 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074152918 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073673577 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08095183 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084503258 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074239639 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080910491 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.081519226 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075057325 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080898794 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073017343 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081774832 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07316395 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074203153 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072697521 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083702816 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07296863 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073266993 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073564941 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08202869 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07291734 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082195704 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080024668 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072193352 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083700647 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082325534 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079643832 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082154922 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074042989 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072903243 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072583259 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07263041 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079998688 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081578809 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075833031 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073339256 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080764376 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082548145 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071993283 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080351279 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081027723 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080820567 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073172282 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073546227 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083144958 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082499285 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081108566 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080668567 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080819925 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073285583 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080333369 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080032227 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07306368 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08514144 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073238825 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084188849 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080689056 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079463766 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08100736 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082275721 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081229633 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082343533 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084224691 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072064646 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072683828 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080572272 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072322603 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072536786 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079177005 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073468016 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073202089 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083856278 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072236846 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.215897223 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.074081369 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.08263086 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07319751 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075388663 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085894403 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073698049 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07506412 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081769294 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07540104 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081291402 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083215494 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081443499 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073631514 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074093914 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082157029 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082282184 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073397395 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073590661 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074973269 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080486375 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080487559 seconds)
  done (took 19.436812678 seconds)
done (took 38.69625323 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.195366977 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148078987 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.160139951 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115701459 seconds)
  done (took 2.02975015 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.113473495 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101344146 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092522537 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.070858634 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098311942 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069831609 seconds)
  done (took 1.90353213 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275638695 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.191464499 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.175523773 seconds)
  done (took 1.995554208 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199947558 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186446729 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.425857287 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.262664197 seconds)
  done (took 2.522920183 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14107334 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089281076 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.07089369 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087370342 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.12798548 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.155928125 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098611468 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123277074 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082757449 seconds)
  done (took 2.375477755 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146107622 seconds)
done (took 12.332914128 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096911227 seconds)
    (2/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.082987789 seconds)
    (3/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.211347822 seconds)
    (4/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.080353809 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073115257 seconds)
    (6/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.191436409 seconds)
    (7/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.255387422 seconds)
    (8/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.091931136 seconds)
    (9/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.084850385 seconds)
    (10/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.138547195 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080554496 seconds)
    (12/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.189463408 seconds)
    (13/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.074696797 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.057315092 seconds)
    (15/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.078986566 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.125868803 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107235475 seconds)
    (18/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.108761844 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.078686831 seconds)
    (20/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082915231 seconds)
    (21/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.081037411 seconds)
    (22/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.077479205 seconds)
    (23/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.172306052 seconds)
    (24/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.237154538 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.330305652 seconds)
    (26/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.189152521 seconds)
    (27/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.079134911 seconds)
    (28/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.203559218 seconds)
    (29/309) benchmarking ("sort", BigInt, false)...
    done (took 0.200996263 seconds)
    (30/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078419846 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091922963 seconds)
    (32/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07969488 seconds)
    (33/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.069032524 seconds)
    (34/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.079686088 seconds)
    (35/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.182634705 seconds)
    (36/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.071471906 seconds)
    (37/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.216544995 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.077707505 seconds)
    (39/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078578897 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.070411167 seconds)
    (41/309) benchmarking ("sort", Bool, false)...
    done (took 0.157072981 seconds)
    (42/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.181215395 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116308963 seconds)
    (44/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.168016273 seconds)
    (45/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.078138524 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.087213938 seconds)
    (47/309) benchmarking ("sort", Int64, false)...
    done (took 0.072049588 seconds)
    (48/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.081733149 seconds)
    (49/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.163907059 seconds)
    (50/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.058461105 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086657032 seconds)
    (52/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.07013274 seconds)
    (53/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.079282272 seconds)
    (54/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.112144704 seconds)
    (55/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.057814985 seconds)
    (56/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.161035051 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.082027697 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069335657 seconds)
    (59/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.159685146 seconds)
    (60/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.168223381 seconds)
    (61/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.078892354 seconds)
    (62/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071735773 seconds)
    (63/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.204013004 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.09441065 seconds)
    (65/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.179457745 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.070137724 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05744516 seconds)
    (68/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.1568116 seconds)
    (69/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.056699895 seconds)
    (70/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.080357425 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080657635 seconds)
    (72/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.213464757 seconds)
    (73/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079113134 seconds)
    (74/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.11637503 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090617801 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.080763687 seconds)
    (77/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.076941055 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.070157405 seconds)
    (79/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.116351158 seconds)
    (80/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.115283737 seconds)
    (81/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084386303 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069484265 seconds)
    (83/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.15442314 seconds)
    (84/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.208879475 seconds)
    (85/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.298009479 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.1654672 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.071235616 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.100744278 seconds)
    (89/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.079491415 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071137643 seconds)
    (91/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.169861727 seconds)
    (92/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.079993712 seconds)
    (93/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.079548796 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094696165 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.180827437 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095287476 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117739991 seconds)
    (98/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.197344508 seconds)
    (99/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.15183661 seconds)
    (100/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079368809 seconds)
    (101/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05850536 seconds)
    (102/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.194453474 seconds)
    (103/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.184923312 seconds)
    (104/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.157572095 seconds)
    (105/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.056914217 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.087427938 seconds)
    (107/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07889153 seconds)
    (108/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.077494902 seconds)
    (109/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.160673597 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.084502475 seconds)
    (111/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.057260667 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097277332 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172752904 seconds)
    (114/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183814304 seconds)
    (115/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073714147 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088122626 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092631273 seconds)
    (118/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.151909694 seconds)
    (119/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06926255 seconds)
    (120/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.124988425 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.056823235 seconds)
    (122/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.1164015 seconds)
    (123/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.05697398 seconds)
    (124/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.057447153 seconds)
    (125/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078975826 seconds)
    (126/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.057848214 seconds)
    (127/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083282549 seconds)
    (128/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.057123807 seconds)
    (129/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082686927 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077234976 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091273479 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.097550956 seconds)
    (133/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.204334712 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.086750276 seconds)
    (135/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113817127 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131483338 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091444758 seconds)
    (138/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076643659 seconds)
    (139/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.155456211 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069984549 seconds)
    (141/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078054733 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.060254106 seconds)
    (143/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.080971181 seconds)
    (144/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078213138 seconds)
    (145/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17455866 seconds)
    (146/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.087305927 seconds)
    (147/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.058001264 seconds)
    (148/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.057094402 seconds)
    (149/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069203164 seconds)
    (150/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070570845 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143042623 seconds)
    (152/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.056556734 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.112579149 seconds)
    (154/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078440068 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.160844418 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.081743021 seconds)
    (157/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.181180758 seconds)
    (158/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.097068861 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070247926 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.072510979 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148811455 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181785376 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091208937 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09334891 seconds)
    (165/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07261221 seconds)
    (166/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074939825 seconds)
    (167/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.058156813 seconds)
    (168/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078023051 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.135893955 seconds)
    (170/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.057543753 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.202261713 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111262456 seconds)
    (173/309) benchmarking ("sort", Int8, false)...
    done (took 0.148363631 seconds)
    (174/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05805964 seconds)
    (175/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.10720937 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.080795643 seconds)
    (177/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067928293 seconds)
    (178/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.057426283 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069540623 seconds)
    (180/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.069752154 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073987094 seconds)
    (182/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073016205 seconds)
    (183/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.058857787 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070853092 seconds)
    (185/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122957 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.243520664 seconds)
    (187/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.059607477 seconds)
    (188/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.109136648 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.057732037 seconds)
    (190/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084123793 seconds)
    (191/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.057451716 seconds)
    (192/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072288707 seconds)
    (193/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072386078 seconds)
    (194/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.057354189 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.070956757 seconds)
    (196/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.0752258 seconds)
    (197/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.071478087 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.113591112 seconds)
    (199/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070463228 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116823447 seconds)
    (201/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.057261104 seconds)
    (202/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05730665 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.078125812 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.122362787 seconds)
    (205/309) benchmarking ("sort", Float64, false)...
    done (took 0.13562222 seconds)
    (206/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.069961703 seconds)
    (207/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069823709 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.121355653 seconds)
    (209/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076944271 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.077668398 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092587498 seconds)
    (212/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077363723 seconds)
    (213/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.080889628 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.072873068 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080198441 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077239238 seconds)
    (217/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.120628017 seconds)
    (218/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.077136505 seconds)
    (219/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.056989824 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.144051399 seconds)
    (221/309) benchmarking ("sort", Float32, false)...
    done (took 0.136464219 seconds)
    (222/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.057061317 seconds)
    (223/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072798933 seconds)
    (224/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.082247204 seconds)
    (225/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06903317 seconds)
    (226/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07833696 seconds)
    (227/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.05692064 seconds)
    (228/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.071229106 seconds)
    (229/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.083355956 seconds)
    (230/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083952588 seconds)
    (231/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094155573 seconds)
    (232/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.06901184 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083770681 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099248794 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.151243918 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12593617 seconds)
    (237/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094936185 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.070508505 seconds)
    (239/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.059138994 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094919898 seconds)
    (241/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.061265407 seconds)
    (242/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078566405 seconds)
    (243/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.058619709 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094563966 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.057005308 seconds)
    (246/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.076874682 seconds)
    (247/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093379464 seconds)
    (248/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069189233 seconds)
    (249/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.066859739 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.141318776 seconds)
    (251/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.075802669 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170658279 seconds)
    (253/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.058760822 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.057310781 seconds)
    (255/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077937033 seconds)
    (256/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05825917 seconds)
    (257/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.059044159 seconds)
    (258/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.059602736 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070078594 seconds)
    (260/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07302402 seconds)
    (261/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.108146964 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094615482 seconds)
    (263/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.11278727 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143978738 seconds)
    (265/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081962642 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090426836 seconds)
    (267/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095720006 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.106515675 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.070915512 seconds)
    (270/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05907025 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084047258 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07842238 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.056576242 seconds)
    (274/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.056691561 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.070056816 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07644085 seconds)
    (277/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.058300961 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.073295254 seconds)
    (279/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.068778874 seconds)
    (280/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078162898 seconds)
    (281/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.080425676 seconds)
    (282/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070584299 seconds)
    (283/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072642419 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070138055 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150061367 seconds)
    (286/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.057785025 seconds)
    (287/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.0699366 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077276574 seconds)
    (289/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077373127 seconds)
    (290/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177366811 seconds)
    (291/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.058327665 seconds)
    (292/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.056347729 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070554263 seconds)
    (294/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071171491 seconds)
    (295/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070786557 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07614365 seconds)
    (297/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.057541677 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179359709 seconds)
    (299/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078340239 seconds)
    (300/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.069475931 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071531813 seconds)
    (302/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.057718664 seconds)
    (303/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.067927346 seconds)
    (304/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.055915741 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05664488 seconds)
    (306/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.057518378 seconds)
    (307/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.056419792 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069854279 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.226149946 seconds)
  done (took 32.33591238 seconds)
done (took 33.700469817 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087510475 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097763805 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080775033 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097805324 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.086265481 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.082557925 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078653683 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082820345 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084922936 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.087115654 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083956916 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.060879803 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079477291 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079650361 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079702399 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09452272 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.084450787 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.078559734 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078534253 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069933095 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078909142 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.07040104 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072504952 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.06065681 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.083987858 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076947624 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.079378922 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079170975 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070960757 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070879529 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.074875252 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.079187153 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.070261866 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.084881791 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.078900378 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.078962636 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080137521 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.082430807 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071951112 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.071270858 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.080437296 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070573753 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.078005931 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078418453 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.077196387 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.076237422 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.078807314 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.08192284 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094972914 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072187614 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.080029864 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080732262 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081689856 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.077576568 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.075047077 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.078483202 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075871439 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094349632 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078529715 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072522477 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.079749646 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078777463 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.076151989 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.078156417 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078174829 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080588695 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081697489 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076612167 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080482996 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076721733 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070245404 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077954828 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.074350475 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070221937 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.081954269 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.085158962 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069039938 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076894127 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.078179159 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.078635952 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070006644 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072886813 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.07169952 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076911856 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073160777 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.060972595 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075086282 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.077067083 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069566608 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078366128 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.077486849 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.078432025 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072030763 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.082453954 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06997493 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075991458 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070398728 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070494516 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072780648 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074953728 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069999298 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07273425 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.081338971 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071666502 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077081471 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083315149 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070240019 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.077502782 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069395341 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069328039 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082933204 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079534981 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.07035929 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072425936 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06925041 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077992581 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069100462 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069325226 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069632712 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069684756 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075793059 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06955566 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071886964 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077283911 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.221978794 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.071299996 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.075537713 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074239066 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070873866 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.077048539 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.070924496 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070878722 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071998754 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.068382251 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073374492 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070632033 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.078326666 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073281099 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.078648289 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071595594 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079901438 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.076721399 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.077563395 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.076860429 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.069698504 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.066627631 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072865135 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072493574 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.072227906 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.07039007 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.072008066 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071135966 seconds)
done (took 13.179782005 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071716971 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.135658554 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096760669 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097621123 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08825043 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.071942405 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079216453 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.098273583 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072851559 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101156474 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091311585 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089914174 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112417202 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069880078 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070469978 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.074781973 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072091717 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084210876 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099267206 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090618477 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114950259 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.07011441 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094122774 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092087565 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.089582756 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104733289 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071648678 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074610479 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075076064 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093892674 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092552833 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074886917 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.071696915 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.09829178 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.096693066 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085353542 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.071501611 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08510575 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071181058 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.07041941 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071964274 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09921258 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.082825233 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083353709 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074638777 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.081162264 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072171414 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085227535 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091133193 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082102347 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08787793 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.100838015 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073452201 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.086730928 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069607139 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087836901 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.07976807 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.073166375 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071919951 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078457809 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071031615 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.074292682 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084030139 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082932439 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074668101 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086622601 seconds)
  done (took 6.987174233 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088126132 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.098761747 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087276555 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.089863262 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070799561 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071958577 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071322749 seconds)
  done (took 2.035843202 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.0723215 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091291449 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092652162 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091793935 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08517721 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09560269 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080286035 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071316822 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095907799 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.072345236 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091041019 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100844766 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07452858 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.084460014 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092950263 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071489556 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093493936 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.07182506 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075054623 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093121451 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077109091 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100734306 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07899395 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.071487849 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084022701 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071557297 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116178844 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075321608 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073288599 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074635411 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072505553 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109766518 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083811263 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078546189 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071538366 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085867104 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08517849 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074551161 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082582026 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.080370843 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083864947 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072282186 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072455717 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.072857959 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07538472 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080881341 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072179913 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.075645787 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.076145016 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090162617 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.07011135 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083736769 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073739156 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076539228 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073513053 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077365561 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081719103 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073010662 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090553689 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073247771 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086751206 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086018664 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084109409 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085979329 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073410377 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084050723 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084235433 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074283377 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074057381 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075193268 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085959305 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070593766 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07317673 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081163775 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073571347 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093553728 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.092804112 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073048566 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084587321 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072292627 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071798898 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071622385 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093016753 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076649643 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071777083 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07637453 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075486036 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.074999942 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070848293 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.075950485 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070018918 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.078151605 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074797665 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074891011 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074479319 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086187327 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07468458 seconds)
  done (took 9.233591827 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073856054 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073455209 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.074087361 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073141609 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07270672 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072547552 seconds)
  done (took 1.918187246 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093297902 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072929334 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083666634 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076217728 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10649284 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.089523526 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090402094 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081557626 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086918323 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082473347 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090300115 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.090667292 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.094425882 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076287605 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.089912636 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075332171 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.090075563 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077847933 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082198511 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076778456 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088853855 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076455185 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077419863 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084321728 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079438439 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076002242 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082633117 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08286502 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082299564 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081504356 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076123022 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079312248 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075111089 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080856774 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.093506231 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074985907 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075525577 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081574772 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076257122 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.081965511 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.09078317 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077189246 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077900602 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.08142654 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081424866 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074784655 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.080657938 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082649094 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.089822179 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080770098 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.08128235 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07543761 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079504229 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080811805 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074638864 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080961816 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.080938458 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090406436 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076166003 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074432575 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072986766 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.079815762 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080378791 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079917171 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081058095 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081012617 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074679671 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076458594 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076556222 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075608666 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081123551 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073263317 seconds)
  done (took 7.310066825 seconds)
done (took 28.92406072 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540428334 seconds)
  done (took 1.975814462 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.600667151 seconds)
  done (took 2.065361596 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.539286366 seconds)
  done (took 7.999223516 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.369137457 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.473150012 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.708945436 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138179395 seconds)
  done (took 3.192102098 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.728508544 seconds)
  done (took 2.197852251 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237263879 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229099104 seconds)
  done (took 1.947589127 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.379843813 seconds)
  done (took 1.838498198 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.114196759 seconds)
  done (took 2.574765894 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.239349003 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181742084 seconds)
  done (took 1.884921341 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.441126295 seconds)
  done (took 1.903863425 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.851611328 seconds)
  done (took 6.315618142 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224390359 seconds)
  done (took 1.729627829 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241603192 seconds)
  done (took 1.703082863 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.744653205 seconds)
  done (took 3.209449618 seconds)
done (took 42.012255574 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08839159 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090875256 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090248612 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085851732 seconds)
  done (took 1.798465121 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081758011 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078058359 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.083073809 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077195389 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081067488 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077340738 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079017242 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080087075 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077661617 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077876338 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077605505 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077506881 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079603973 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07896756 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075990373 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079924406 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080688382 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078237962 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079878881 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077757021 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076071278 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080001524 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079628148 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076875928 seconds)
  done (took 3.355269739 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083108529 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077991575 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080303372 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076758344 seconds)
  done (took 1.786092462 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082987069 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094298353 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093413316 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083792255 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09472406 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090464989 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07384145 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074299636 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075355141 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082836236 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072904123 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098853492 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092097922 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082887284 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084623407 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070268263 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072006159 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.090910967 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083336473 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084093301 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075128215 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.083835568 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07344643 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093806468 seconds)
  done (took 3.469103942 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088859756 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105529161 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08498575 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095140071 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096837809 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070788892 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.090902537 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096468389 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.130302891 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070618801 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076543986 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071074741 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.079480724 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.070674443 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08484953 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.114587649 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115954085 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.076108897 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102097964 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071043285 seconds)
  done (took 3.266880565 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077295011 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07464004 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.075113699 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070900499 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082869014 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.078136458 seconds)
  done (took 1.935751206 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073695078 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.073086123 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072841791 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072423043 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077142037 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072740561 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071519711 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.073029537 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.07267383 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072305942 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071711459 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070979183 seconds)
  done (took 2.346341859 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.185950724 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073055581 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07571187 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071571972 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075229073 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.072204973 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086180692 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073192178 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096179426 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071945878 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071749517 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073654078 seconds)
  done (took 2.50041814 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196929178 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08045797 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225777585 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152145066 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109624699 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114583494 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113252795 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113069685 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.137734259 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100532002 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16005244 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162722661 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107920035 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136856317 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092602536 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.10532403 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149619559 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16212447 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10799448 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161010961 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14212851 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1270095 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144144168 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103247267 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106300683 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119514033 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076287149 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084416943 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164006538 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130243382 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140381159 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113004852 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095838819 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171273433 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162281466 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13794555 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14793395 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0875323 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106046413 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131841421 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189554326 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091296682 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.300516139 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113785378 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084900656 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134503232 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119913576 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120668263 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106479772 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092727797 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143373844 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176071296 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13311618 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09053545 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124708948 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113330885 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112683176 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115185564 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172431306 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156003365 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128588643 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076584243 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11328806 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148780072 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132211724 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108656958 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123369186 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096064468 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131889003 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151520797 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122796842 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139507109 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116916393 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091422791 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121077844 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136124783 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125971803 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157238172 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124660676 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077463231 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12165256 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100987699 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084206436 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147344121 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079487782 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1708497 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101976528 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10827169 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124514926 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108780592 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110609586 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152304244 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285310474 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106959786 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073467933 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107991538 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120894071 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141911202 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091151553 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109656519 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117618826 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081990064 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134459314 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.08025764 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124131653 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082093603 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124730929 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130061429 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082708317 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123670829 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106249085 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.104334694 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130748298 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156528938 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091623741 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085694047 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161858843 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122417387 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104397778 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140922514 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154031767 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.105216696 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100740079 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144554877 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166473848 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09306492 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159437664 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106462178 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087397924 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091686471 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123688702 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112527882 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124708005 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085508826 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118735732 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161550254 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079542766 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099085698 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134397654 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082692078 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084486152 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106733407 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105045078 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09917849 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100594712 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103130452 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134030053 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271537449 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111701635 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126583307 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102547937 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163632693 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092347237 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106291395 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106469714 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075469912 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.131368628 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152931819 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082788811 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157081302 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12206279 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117486245 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120290782 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087852502 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135590721 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082946142 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075249365 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139627086 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112755312 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110543787 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.146682571 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11669008 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.123220455 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119090749 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129501472 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128534142 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128850255 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109118405 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092812288 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114541582 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127384013 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078223052 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092989843 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084087426 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107321756 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097254296 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087543887 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139026108 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123043652 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113786424 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11377542 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099387603 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14429936 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080182266 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124978038 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120124702 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098035247 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148150206 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147274549 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131695735 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101186759 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282143982 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.076737704 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079951722 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090777354 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124074809 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088365046 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087549942 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116708525 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14477831 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128123473 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134620752 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124843004 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120206039 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153096698 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074935474 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.124327745 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141756273 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122333474 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107587344 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095301662 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101762091 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13990757 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107114486 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171903669 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115050502 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125359573 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152602107 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105666266 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083775453 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105416297 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131071745 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104448492 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139752393 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101164906 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091116798 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109978611 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.083058292 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09964829 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126247076 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118009682 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133512753 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115077648 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132302012 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082295454 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11384401 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121917852 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120541275 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069840917 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117839766 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153192884 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097765269 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117334016 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295974065 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084260128 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139242993 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168917775 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143481745 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089017134 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11070112 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121638735 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125973702 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120534352 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137310893 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107500891 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137198673 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112418788 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089705212 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090781738 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099078569 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106471306 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097913862 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104137703 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113860628 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099453484 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130751377 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105600591 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112005194 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118912576 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103234983 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096244654 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099258506 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170804777 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118807612 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16549111 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103571419 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.139162155 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156919384 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079977546 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08322636 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082779213 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136353993 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08854258 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130078419 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112322959 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117069376 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123576851 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137687614 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098895506 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07376678 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10963893 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130689186 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123617707 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100277041 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103069443 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155840065 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100478075 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081576888 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259430991 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119391079 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106443834 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165078604 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.069196126 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108948916 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081426633 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085004572 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126524506 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148302163 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084260758 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103062941 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121344081 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113626182 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125177233 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101671808 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114108927 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125348439 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144811741 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127003428 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093574094 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111586807 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126247985 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150572703 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104324796 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.10095552 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167508133 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147933576 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.154519897 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089118657 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115515417 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115316288 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110560711 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136229331 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087740754 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156753969 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087266694 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133646204 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103732597 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090942315 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127217048 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112620335 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091750203 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1416926 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116902773 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085874453 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081517624 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115601493 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118424108 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104878583 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079116548 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283810133 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.080669916 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133847655 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157951944 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086112113 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107874777 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098453593 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084701155 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10797537 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105123255 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090344849 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103458198 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165395771 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088960043 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144011189 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132581625 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113644741 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132532738 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104369213 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643153614 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081383681 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147261366 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115499171 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165252739 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102105019 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118123009 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111664407 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120326253 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140166431 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104023475 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180461098 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130202523 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116831213 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08320981 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104256442 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105758291 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089709797 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109296692 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114983411 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115403999 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095543145 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116232111 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123231465 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086603383 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099405686 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151932471 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115566698 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140665295 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13542482 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088060463 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117747699 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134534501 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082961454 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.114815671 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143238237 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104554314 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100454059 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083736056 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.097569451 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149206719 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076463759 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161705602 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119265178 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108695146 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111089722 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.105274644 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125202523 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102880904 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118512455 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090999382 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104968503 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111593269 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083101915 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078986078 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103847515 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107221623 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09932213 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09460956 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.10067333 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142753451 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075524159 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097350552 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112428799 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130490032 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154842694 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08859304 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083918526 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112769154 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111210384 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.107775258 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115788183 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080522847 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082522736 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.078792377 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.085510409 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.103759918 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109354699 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109519247 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104347727 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146576011 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084423702 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22471958 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093582113 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102372412 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073428707 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077961395 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094607423 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093751962 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.365725896 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117855024 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162063947 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.104526698 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.098532445 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098649997 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.083290186 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090974211 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130423624 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113750863 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12280165 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106722259 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.071432049 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111326257 seconds)
  done (took 58.99460136 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11457872 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.090427254 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.104090777 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150453749 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.128539196 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206873907 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.163522839 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195260829 seconds)
  done (took 2.742947059 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.075042273 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.100789324 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.11070274 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.091042399 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.073273463 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.076431735 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227918825 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08894942 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072951217 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100005958 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.084706669 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.076736856 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.411682465 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.072198807 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.074779272 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06958474 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073148142 seconds)
  done (took 3.458092118 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.39074955 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.62559993 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.346340635 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.082634169 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.918650934 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.098759077 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.291806451 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140150624 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.084963151 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.531268747 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.411328041 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134976663 seconds)
  done (took 18.649847326 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.08752434 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.080755668 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094023829 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.094537433 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.083960458 seconds)
  done (took 2.029744093 seconds)
done (took 107.849232358 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.088288194 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.417158263 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060578184 seconds)
  done (took 2.095890783 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092013626 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089498735 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090902 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087739524 seconds)
  done (took 1.956865179 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079750757 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081148368 seconds)
  done (took 1.74941056 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.230481477 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169722013 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.10131526 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08766582 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084227853 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.085217921 seconds)
  done (took 1.852437466 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076908965 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080255668 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077475699 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.08076093 seconds)
  done (took 1.905368504 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081001073 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057802431 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059900066 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.063439164 seconds)
  done (took 1.853849013 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091074293 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087021916 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084052221 seconds)
  done (took 1.854515668 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106196971 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09189042 seconds)
  done (took 1.790762802 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08534078 seconds)
  done (took 1.678514025 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09683026 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102886045 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132456826 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112470823 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13906189 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109905796 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088349375 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089069562 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080354059 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089113449 seconds)
  done (took 2.632496577 seconds)
done (took 21.548351716 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082750308 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367303773 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364801688 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093664546 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673799903 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361314767 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.973475604 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097637513 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1441104 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073065188 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089325264 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65373873 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.963292802 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.3282158 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.952052835 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.329417003 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65447739 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073414884 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073029056 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073217673 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.959215965 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073130722 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07286505 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074109113 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.66835832 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377461945 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073913553 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.330048203 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073413451 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074836769 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.375064172 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073522811 seconds)
  done (took 16.223163108 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074434319 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123144616 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07758169 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089108471 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075218026 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074382182 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.076533905 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.074177017 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124576126 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073561979 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090475603 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073403946 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076903158 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074023485 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092420133 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074061767 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074541802 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074517943 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076321233 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074810869 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092759387 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073747221 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073638707 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074189036 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073432359 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085927491 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073777244 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073812872 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073631654 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07572381 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077181933 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074526069 seconds)
  done (took 4.172470923 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119958506 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127565558 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078412624 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108186212 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11623075 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075731714 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148108868 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098799816 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131635614 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073585024 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090256611 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073893203 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106234445 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074629229 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093960153 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074200282 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074760117 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07473124 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07357008 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07384531 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094963834 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073612754 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074093546 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074587352 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074176977 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087617451 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074217434 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074383329 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074289143 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075436817 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07731813 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074078117 seconds)
  done (took 4.42552733 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077201518 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07937527 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087068756 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087726653 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073930129 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076551815 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.079427147 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074788771 seconds)
  done (took 2.245770113 seconds)
done (took 28.666235097 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084158603 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074212799 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.077968128 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.093075496 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.078729812 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083182329 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072509979 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.080999519 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078932652 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.078386499 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079972098 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073431124 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07662864 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072064028 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079498058 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073187256 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083490125 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077218663 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083308831 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.0837325 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.075374245 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077925373 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.080547027 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083337343 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083442072 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083016472 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081526087 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078031614 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073184843 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075963475 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081499646 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088688352 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073441229 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083129175 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.073076326 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072519917 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.077028284 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072598292 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08280793 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081319753 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074855145 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081270449 seconds)
  done (took 4.902557334 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092400969 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096009641 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089859747 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067867251 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073932158 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.071332135 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094583695 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066329157 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066276315 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093846199 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063588593 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06539508 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069050739 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.060245319 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066110183 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.063542638 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.067501372 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.0615605 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.065938589 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.065382777 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094789407 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.060448128 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081800558 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06890769 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.062908961 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.067802974 seconds)
  done (took 3.515354661 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079117086 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088255894 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095021284 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145465986 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114534761 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081793894 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083301973 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097277763 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099072743 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071961232 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075914774 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098397427 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092062117 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078502041 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073295625 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088859495 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.089774891 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074138584 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077516894 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096672607 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.09085104 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090066232 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09623428 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088311083 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071974729 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075008431 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076001811 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085162826 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074916695 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081173576 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074855632 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075423937 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074012642 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083366633 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074784732 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073935138 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098801889 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082318257 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083187685 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.073469066 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080603713 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073778645 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095512711 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127911477 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071840905 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078298592 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075963033 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082272895 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071929739 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098112616 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083560811 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.072259754 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075283661 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071775598 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.072360642 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075292008 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074016811 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074938751 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080499151 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07778466 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.096218789 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077127736 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.090670916 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072069383 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080078205 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.07172687 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07319855 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071403543 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097019844 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074277235 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111391463 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073165902 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073153913 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081141556 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080474148 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079041186 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.07232838 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088395386 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081848725 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076101962 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080414889 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075682121 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076433265 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100793292 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074848443 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074157258 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.073323214 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077531301 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075222295 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073570147 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084700609 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.072507187 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074720214 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088730085 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.072422746 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073902355 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078201938 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076610285 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071847237 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08293448 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076912679 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073092651 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082275283 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072501004 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074764966 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084825527 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078991859 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071151243 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075809805 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077108335 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.07272067 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073666964 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074440285 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074231336 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080646365 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079406958 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076475895 seconds)
  done (took 11.135188016 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164598033 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155843594 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075516804 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148920127 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.08109496 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08335712 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149700929 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097392115 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.073306628 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073790277 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072973565 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11183797 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107854062 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117449881 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082573593 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073163186 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.09463216 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115855734 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.151204258 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147822675 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095054879 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082176636 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074934978 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07497632 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074547951 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082300897 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089740667 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081502992 seconds)
  done (took 4.485051463 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083781193 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106600279 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07927936 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094795819 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.093290976 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073233264 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074654186 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074314831 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.089766904 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082257703 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073270712 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077419012 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07922166 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075516241 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073988743 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079197864 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07931515 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074223304 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075981475 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077385841 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083117053 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09585137 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075757041 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.07415587 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077430547 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072232749 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067667126 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087501392 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07436373 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096851215 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.071004381 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077744863 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086315434 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073771046 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072672163 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07279807 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072546724 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072940221 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074549523 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.071090766 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071273808 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06290208 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071816817 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082475901 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.085703686 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.061762623 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076945985 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077439896 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078066473 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070320926 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075750237 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075666482 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075418343 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080275888 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077044357 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.077925322 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.0743228 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081543907 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081110207 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07263981 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070041082 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071481982 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077945292 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069259841 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087976426 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077614341 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071977112 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072685242 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074715767 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.086097677 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072780264 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07776797 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070227456 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075083125 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077410103 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075067323 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073803947 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071313953 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072640724 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073016252 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061020633 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.07268905 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058969446 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075212891 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070877784 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071685479 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073070265 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076783245 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082812687 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074240752 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078392168 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073709171 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072027974 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07522724 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064964465 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075685799 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083499201 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086321247 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073139103 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070887705 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08524901 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078360489 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072075968 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063158055 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076716591 seconds)
  done (took 9.66150442 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095849416 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07505731 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087029715 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094329158 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091149699 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079726191 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082904826 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074711114 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089352963 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07916707 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082871163 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072960105 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083780076 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082117006 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074877018 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083289459 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076846807 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087779457 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087263269 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073740102 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081226225 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085319123 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.09344433 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085569113 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083543319 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085139939 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.093898517 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082236343 seconds)
  done (took 4.000931064 seconds)
done (took 39.305513542 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.706943037 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.863282584 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.689028348 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.002075184 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.763478964 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.728783468 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.871795087 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.685502651 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.866399417 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.723391481 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.017997339 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.799199856 seconds)
done (took 64.461962294 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.742311902 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.825899887 seconds)
    (2/2) benchmarking "String"...
    done (took 1.921886257 seconds)
  done (took 5.362598096 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.992021625 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.262533223 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.927592646 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.682686238 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.689184906 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.981515537 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.478391788 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.195366948 seconds)
  done (took 29.831502136 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.836821619 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.917292121 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.385531087 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.424159507 seconds)
  done (took 15.233010789 seconds)
done (took 61.86668004 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.687596841 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.689709428 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.691313841 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.668926611 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.742815047 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.705976408 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.973251383 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.73226323 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.682366597 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.67088983 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.685023643 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.106545118 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.694324076 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.91505251 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.682989828 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.694752559 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.685384354 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.242755047 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.841020534 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.697845067 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.690352076 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.742939201 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.686291916 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.689987417 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.691896748 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.682890475 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.07185392 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.691738277 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.530511799 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.688449712 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.739839538 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.099265726 seconds)
  done (took 201.111690085 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.686680022 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.622624232 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.706114286 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.728174038 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.051645058 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.868838051 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.774294457 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.118781521 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.692088014 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.708040219 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.846456042 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.689416894 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.875002715 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.674964291 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.715264384 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.799252195 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.860011255 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.875060749 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.722637599 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.837945 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.713045495 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.759341275 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.712137677 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.823607578 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.702313036 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.759576234 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.702070199 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.691166665 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.882655569 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.819620731 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.692166578 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.69700615 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.883876751 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.559581301 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.71339163 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.708208978 seconds)
  done (took 166.290647135 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.881415247 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.689819844 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.686270769 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.687331026 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.694015047 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.6900303 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.824503158 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816554808 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.322374873 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.110751322 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.689772854 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.739235419 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.687720329 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.491266385 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.689762672 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.754986242 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.700554978 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.689468263 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.703786881 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.716119833 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.689515613 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.688646252 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.815463349 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.701714237 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.688327438 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.695366153 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.690602298 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.69392783 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.058954338 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.687703859 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.816846396 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.690697708 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.694312543 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.928813672 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.69008758 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.688321595 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.557789668 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.936914052 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.690905961 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.771562925 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.691149589 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.695901558 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.689482208 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.908041339 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.689602163 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.689785298 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.689577595 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.694595545 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.839157761 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.691167853 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.818076099 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.690568462 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.170855525 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.689472646 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.690664666 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.391233741 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.691950766 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.29921947 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.691774189 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.692340894 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.690817135 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.690526134 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.697659279 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.460249503 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.763191981 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.691302991 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.693772267 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.696744435 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.690256356 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.750779536 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.692597884 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.328727332 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.751748461 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.806757777 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.811186636 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.693147506 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.756869769 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.784026936 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.692427247 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.69030338 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.692546187 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.690824634 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.772448083 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.693176196 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.690618149 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.818058787 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.699357913 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.693181941 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.743145314 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.759854601 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.69134727 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.546013922 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.693711555 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.690815581 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.964730536 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.757078769 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.692525331 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.691512761 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.819281103 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.813404274 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.410636595 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.693709299 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.442912108 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.831505387 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.693020079 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.837970662 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.693809423 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.774010808 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.698256436 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.695109425 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.725125344 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.694992295 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.751863866 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.692665026 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.065798616 seconds)
  done (took 393.151512957 seconds)
done (took 764.108150046 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.29638038 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.259948118 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.3596142 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.277474151 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.251550652 seconds)
  done (took 13.067449194 seconds)
done (took 14.690227676 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.780122125 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.786647473 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.715983873 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.783881922 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.713698942 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.781992813 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.765177586 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.716642735 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.750754711 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.7178964 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.751830879 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.716935741 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.705174094 seconds)
  done (took 24.3103701 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.929118284 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.940323923 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.765296368 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.934554937 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.740919105 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.933293216 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.863024752 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.84533752 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.849216696 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.709706048 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.707301501 seconds)
  done (took 21.842626293 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.948550349 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.936798168 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.773819984 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.938990523 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.746053276 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.939075114 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.866056101 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.851088844 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.850448027 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.711199392 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.707330028 seconds)
  done (took 21.894112564 seconds)
done (took 69.670406917 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.702865885 seconds)
  done (took 3.328370777 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.729730352 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.898924329 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.710078661 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.70706253 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.701885057 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.703268519 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.705911446 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.70192247 seconds)
  done (took 15.485204294 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.698739583 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.70138222 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.701956349 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.699311432 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.698820366 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.702477418 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.699329065 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.699434546 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.701507619 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.702647951 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.702956045 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.70284576 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.702828994 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.70042563 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.700076006 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.700578587 seconds)
  done (took 28.842090084 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.703229674 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.699709718 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.701571363 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.701731081 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.700257768 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.701292678 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.701037188 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.700377074 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.699795611 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.700850721 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.700989403 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.700305125 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.700187313 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.700062605 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.70159473 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.700856717 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.700703823 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.701414976 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.705216889 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.701869105 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.702631236 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.700832417 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.701682495 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.702248376 seconds)
  done (took 42.458530657 seconds)
done (took 91.740877105 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.446082593 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.723547008 seconds)
  done (took 9.796638196 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.704994076 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.703881153 seconds)
  done (took 5.040918317 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.706189367 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.704939148 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.704108363 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.705690506 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.704484433 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.704821767 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.704836843 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.704733236 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.704986112 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.705254955 seconds)
  done (took 18.677567375 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.704428508 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.705721789 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.701839643 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.705390574 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.705465115 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.702804407 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.705007809 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.70598391 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.70477274 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.702129973 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.706478699 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.704524957 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.705015005 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.702913404 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.705717163 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.702269248 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.703062775 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.703308075 seconds)
  done (took 32.305256248 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.70590109 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.705185833 seconds)
  done (took 5.03989166 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.702938674 seconds)
    (2/7) benchmarking "second"...
    done (took 1.702893177 seconds)
    (3/7) benchmarking "month"...
    done (took 1.703746514 seconds)
    (4/7) benchmarking "year"...
    done (took 1.704223785 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.703104913 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.703809991 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.703525656 seconds)
  done (took 13.552779415 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.707164504 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.855962972 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.918236266 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.382975035 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.708472842 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.709719423 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.666346048 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.71039214 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.711700097 seconds)
  done (took 19.000219061 seconds)
done (took 105.039833118 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.572182558 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.704941516 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.921193065 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.767223237 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.765559327 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.043231277 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.727497629 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.983868191 seconds)
done (took 42.115999502 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.770668677 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.440592462 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.500683024 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.788249579 seconds)
  done (took 15.359499835 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.686677137 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.010153979 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.708195047 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.50852457 seconds)
  done (took 21.548021212 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.068684445 seconds)
    (2/2) benchmarking "read"...
    done (took 2.054883319 seconds)
  done (took 5.759062504 seconds)
done (took 51.068599306 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.707262344 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.706889353 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.706947343 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.70842104 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.707084284 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.707949303 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.707716757 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.704919372 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.705386376 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.707641184 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.709117442 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.70527984 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.708121824 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.708704299 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7080573 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.705609278 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.705987564 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.709037386 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.706334451 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.707155923 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.706621488 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.708318782 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.706564403 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.706494285 seconds)
  done (took 42.60302608 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.708195956 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.707064766 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.708889052 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.709037912 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.706206334 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.709034904 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.708937396 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.706478011 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.710076961 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.708803365 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.70647331 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.706973952 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.710367448 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.706593458 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.709256769 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.707498262 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.710512198 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.706833941 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.70963077 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.707586362 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.709612439 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.706347969 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.707309126 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.709604131 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.707433998 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.707985074 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.71063803 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.708232353 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.711707951 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.710243769 seconds)
  done (took 52.885977963 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.715209317 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.717369969 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.710937503 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.710335331 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.7110998 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.711455924 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.710301372 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.714028038 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.711282661 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.710784596 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.710849214 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.712162411 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.712025324 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.71148047 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.711664524 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.711249046 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.712489852 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.711470315 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.712905304 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.711913226 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.711306515 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.712578055 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.711343349 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.711196523 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.711184666 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.711614633 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.712498872 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.710740253 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.710958994 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.712121819 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.713086791 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.711550211 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.711516514 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.713501203 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.713646032 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.71201702 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.716773348 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.71930969 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.712154205 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.711771912 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.711799712 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.711870859 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.713351638 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.71256423 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.71229215 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.711878197 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.712486834 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.711821799 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.712883838 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.712673316 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.712700984 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.716093349 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.712622053 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.713537042 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.713076492 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.713499817 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.712710956 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.713044313 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.713552647 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.714236926 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.713694281 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.713319589 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.713694838 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.713195854 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.713936382 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.713018863 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.712880652 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.714299054 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.714256134 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.715354248 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.713323141 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.713905608 seconds)
  done (took 124.951076311 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.71360708 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.711769777 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.711625547 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.710399903 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.710401424 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.713210181 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.712249173 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.713459346 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.711199366 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.714485646 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.714938385 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.711769963 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.711734117 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.717680912 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.714453983 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.711866107 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.714011338 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.711652368 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.713905493 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.71411386 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.715009464 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.713087922 seconds)
  done (took 39.323243555 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.715037353 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.714826246 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.712258834 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.714880864 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.712651502 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.71444702 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.714148495 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.714891666 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718844653 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.713087353 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.712442403 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.715062624 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.712364412 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.71265726 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.713013106 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.712823226 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.715817678 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.713094617 seconds)
  done (took 32.489000869 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.712416978 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.713734218 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.71549878 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.713275058 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.713714452 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.716505718 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.715490333 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.71727258 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.716607742 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.713974671 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.716835775 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.716760448 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.717301308 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.713887636 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.717625111 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.714344319 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.717508184 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.714265979 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.71633482 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.714670567 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.714532406 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.716222418 seconds)
  done (took 39.377195123 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.716998617 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.719378071 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.714761841 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.714654218 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.713548948 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.716333689 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.717707497 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.713580706 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.717938816 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.716669652 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.713888643 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.717867421 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.714529269 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.715648446 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.714728274 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.715997223 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.718054638 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.715328811 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.717765167 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.715229898 seconds)
  done (took 35.960985328 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.718067302 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.718916159 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.720110171 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.719505015 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.718839805 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.72028176 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.718520842 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.71980555 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.71902396 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.719677781 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.718278834 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.718872957 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.72029945 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.720020935 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.720693668 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.720656511 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.720060749 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.721832805 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.719732829 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.719897478 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.719971875 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.719709111 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.72026695 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.720334318 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.721408489 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.720437354 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.720641879 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.720592305 seconds)
  done (took 49.797953949 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.719609146 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.7192675 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.716855578 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.718611161 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.716525384 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.7160631 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.716964048 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.71693748 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.719144912 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.716448181 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.720344481 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.720342545 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.719609917 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.720112899 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.718549376 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.7193502 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.719807335 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.716433276 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.716914738 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.71771403 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.719178269 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.721116206 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.720440889 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.718100563 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.716873301 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.720269833 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.718173889 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.718250595 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.720319376 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.717099377 seconds)
  done (took 53.198402787 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.737391474 seconds)
    (2/2) benchmarking "in"...
    done (took 1.739068797 seconds)
  done (took 5.118080424 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.716999202 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.720068867 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.719707133 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.717220267 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.719209473 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.720358017 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.720487842 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.717357488 seconds)
  done (took 15.394602637 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.720299734 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.721775288 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.721837586 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.723123714 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.722675307 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.720689328 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.727379997 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.722533536 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.722283855 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.722136941 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.726513739 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.730136155 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.723017826 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.721808116 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.720424625 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.723908333 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.721077002 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.722683329 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.722443384 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.721358629 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.723159921 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.723381545 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.72349303 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.719259294 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.722866252 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.731319707 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.72539427 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.722291295 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.721920426 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.725570535 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.722807675 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.719272147 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.723673256 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.723074345 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.722856664 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.723833005 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.729452642 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.723454511 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.728611484 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.722952218 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.722319097 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.720489122 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.723381548 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.724195029 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.723627955 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.723974941 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.723553171 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.721008226 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.722712038 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.725788375 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.728039797 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.722855461 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.720127977 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.727162127 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.72451576 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.730401445 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.725629553 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.725210261 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.731752456 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.732956073 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.736829982 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.732232339 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.724686343 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.724097404 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.733640908 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.747091684 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.730432159 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.722391109 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.722331309 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.724203906 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.729991258 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.736405011 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.734147915 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.725389593 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.725678218 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.72531968 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.724105572 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.725191817 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.730808343 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.72721522 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.725311702 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.725117614 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.734578268 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.745486256 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.724263146 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.726701408 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.726333877 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.725098171 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.72590423 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.734769859 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.727400722 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.72524946 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.725051982 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.72545143 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.725975963 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.725728586 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.724593366 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.726054055 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.722725676 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.725510028 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.728447932 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.72801855 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.733833758 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.726481335 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.726825803 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.731257514 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.726371666 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.725431381 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.732718796 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.726182956 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.727443642 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.726843412 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.731505903 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.723985154 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.728721649 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.733472712 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.72760002 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.729328028 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.727974701 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.726100946 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.735586107 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.75164559 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.728045455 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.727470096 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.731670186 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.739366339 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.727568285 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.730645099 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.72723106 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.724698932 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.723992276 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.727553948 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.727491456 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.727791543 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.72718668 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.72888451 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.726827361 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.726321377 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.728999931 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.728257349 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.728893376 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.727266632 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.728840347 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.730568585 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.72795573 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.729339497 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.733227336 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.726518582 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.729469091 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.729633931 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.724354976 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.728637219 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.730104261 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.729662392 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.728570498 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.729250518 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.727161734 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.729947376 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.729342317 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.729332161 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.729015551 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.728818519 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.732139193 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.729314102 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.731862495 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.729279992 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.726402264 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.728296725 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.729119814 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.728849264 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.730165433 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.727656939 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.731548983 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.736847216 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.728951024 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.729131608 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.732283032 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.730499467 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.729180004 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.730715245 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.731994055 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.73693147 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.730656711 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.734874247 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.730826314 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.730401874 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.73035903 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.732808958 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.728548933 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.731749789 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.733366994 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.737016907 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.742838431 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.739630504 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.731022171 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.73451824 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.731546846 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.735085342 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.73448081 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.731806939 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.731208766 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.730650932 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.73024514 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.73199641 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.733773837 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.731863057 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.730751917 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.730894785 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.730737219 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.731409151 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.730880581 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.731769864 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.731653259 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.72785637 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.731293816 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.732524056 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.730978375 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.728601819 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.730147451 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.730821154 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.731472199 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.732662812 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.739778156 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.728833923 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.733988467 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.73360383 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.730830352 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.730530466 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.731230156 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.734106572 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.731590109 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.738818069 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.732718138 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.733341572 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.738372881 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.731987388 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.730855393 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.735125845 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.733263941 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.732026224 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.735632098 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.73991261 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.732505283 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.733993589 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.733441448 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.731990872 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.733561661 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.739518354 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.730654833 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.733286448 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.733309315 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.734137731 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.730574435 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.733291235 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.733672547 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.733341274 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.73684469 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.733444548 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.733817291 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.734093175 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.733882842 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.733802426 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.733648949 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.735974027 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.740502001 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.737891021 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.733090629 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.735425915 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.734099704 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.737351866 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.735126158 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.735583501 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.733031969 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.746663907 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.74265735 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.740758998 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.735675239 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.733821144 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.738687209 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.734461717 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.737606204 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.734027189 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.73450852 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.733383933 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.733075316 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.731768529 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.734936021 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.734315684 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.735491874 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.734856507 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.738604154 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.736392632 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.734763639 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.736048522 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.736717218 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.734805457 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.734268645 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.735178123 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.736242288 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.736861427 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.733835 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.733892068 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.741328358 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.735874553 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.736299408 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.734076214 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.73483274 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.735142133 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.737833176 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.740682929 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.738373082 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.744290296 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.739146673 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.744739723 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.736601211 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.745686145 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.737248874 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.738587444 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.744927022 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.73376318 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.734442398 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.73577274 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.736270831 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.741929096 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.737717673 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.737134933 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.742365676 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.736892973 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.737243537 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.735984951 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.736650134 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.736355198 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.737067322 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.744353761 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.737010385 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.740957201 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.737853502 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.734153774 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.738620072 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.736699571 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.736053037 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.739642144 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.737507377 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.740027704 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.737576443 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.737215809 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.737550018 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.738312266 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.737578812 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.735427061 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.738091833 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.744151337 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.73906095 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.743259262 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.738995435 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.745100608 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.740181962 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.745860302 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.739902092 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.738035279 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.740621885 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.738461469 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.740363925 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.737895005 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.738918493 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.739855688 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.739208484 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.742743155 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.740644676 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.740781579 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.739075973 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.740773731 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.739225677 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.747833553 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.761549792 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.740130907 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.743294886 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.737310688 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.74013556 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.743733532 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.738802483 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.738482121 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.741257186 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.748856792 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.747095441 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.740160078 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.740461798 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.739239847 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.741492352 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.739437933 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.739721737 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.739795204 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.739497131 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.740097762 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.740097178 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.744814128 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.739724313 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.740953778 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.741124955 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.740078343 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.750211124 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.741734804 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.741892487 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.740732583 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.740437958 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.740489148 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.740460591 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.742162359 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.74090308 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.741237742 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.742222875 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.746704297 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.748365577 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.743733917 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.740018746 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.742931202 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.741234244 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.740930041 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.742327998 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.742409607 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.742124761 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.743448944 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.741718382 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.742351846 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.740361383 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.74159755 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.741605715 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.741347098 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.743970106 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.749561688 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.742948779 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.739610075 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.741831043 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.742546819 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.741034868 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.743707077 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.748621946 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.745428585 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.752452336 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.750335436 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.747264296 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.743466072 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.745930259 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.751441709 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.740687866 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.743900342 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.744533328 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.745060373 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.743541189 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.745723803 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.743716326 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.748375606 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.7431632 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.742490157 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.750830244 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.745655241 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.74381718 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.744243191 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.747164895 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.743268145 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.741165178 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.743606825 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.74366984 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.748906891 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.748089615 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.744449992 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.745348476 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.741980413 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.74520198 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.748873443 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.744547297 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.745225593 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.741351673 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.744638102 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.744763222 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.745065124 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.741903507 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.743774153 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.744562066 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.747197538 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.751739721 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.743651619 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.74691462 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.745210947 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.745894404 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.744942181 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.744422107 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.743710209 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.742121218 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.74481966 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.745773789 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.745321505 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.747894287 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.744798832 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.744861125 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.7461083 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.745752559 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.747410679 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.755654399 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.752018068 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.743170499 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.745150861 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.746481119 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.748035393 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.746375638 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.747473982 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.74585344 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.746892148 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.744906233 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.746207252 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.745180894 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.748840236 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.761692115 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.746392534 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.746340821 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.748704481 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.750001724 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.745596513 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.742983526 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.746136 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.74749729 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.748517377 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.754320996 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.748126387 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.754565085 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.746846793 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.748513697 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.750198118 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.750441752 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.754059109 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.750515753 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.747678924 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.748395296 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.752803367 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.762966211 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.747600418 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.757432446 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.774557747 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.748470094 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.74837578 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.748706914 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.74660771 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.74768878 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.749117572 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.748222829 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.748744139 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.747631879 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.74801933 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.748626547 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.753726413 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.750533095 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.747790613 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.747316252 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.747536365 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.74890716 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.744857887 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.748704593 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.748250987 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.748559516 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.748855353 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.748558673 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.748696693 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.761220836 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.757639655 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.749314523 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.749257863 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.745874319 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.752430547 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.752386905 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.758171929 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.755822135 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.748583255 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.748883268 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.751460049 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.748921297 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.745782145 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.749437865 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.749185894 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.74937712 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.747623975 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.761373636 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.757543756 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.753286375 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.748997709 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.750811818 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.750065623 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.75033318 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.750230143 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.749901552 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.752181151 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.750880215 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.753816818 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.749270425 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.74973688 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.753115051 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.75723342 seconds)
  done (took 1037.078919597 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.746966587 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.746849438 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.747911602 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.746770275 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.747957069 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.747925764 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.747451004 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.747219607 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.74777015 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.747408145 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.747632072 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.747348696 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.747786113 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.74769221 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.748529686 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.74744903 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.747300189 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.747873637 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.747868844 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.747130369 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.748114431 seconds)
  done (took 38.37069166 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.75121559 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.748589268 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.750027357 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.751721377 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.748531662 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.750462588 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.748503373 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750618876 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.752098959 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74859048 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.751351476 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750871343 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.747871096 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.748152979 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74860703 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.75096978 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.751904058 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.751002439 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.750973273 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.749088674 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.751524388 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.749834394 seconds)
  done (took 40.175266973 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.752471846 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.752412153 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.750827567 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.749853391 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.753414328 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.749927798 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.754211979 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.751752589 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.752240544 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.752312414 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.751652832 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.754115896 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.758911087 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.758708552 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.754754264 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.752187175 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.89594248 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.753002235 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.753765958 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.753183311 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.750990256 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.758327523 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.749913007 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.750471239 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.752012647 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.754106107 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.752783143 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.752877442 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.754528423 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.753626095 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.758421902 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.754071177 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.752788992 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.755431297 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.75373829 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.754844612 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.757720316 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.754421354 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.750842811 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.752893301 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.763162902 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.772888789 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.755304869 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.759881678 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.753857354 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.755065226 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.757719295 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.762332256 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.752347773 seconds)
  done (took 87.787942064 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.754570627 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.75527099 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.752290791 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.754698337 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.755188958 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.754849772 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.755386123 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.754374657 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.751417424 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.752637625 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.754519842 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.752332448 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.752753931 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.756029778 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.754312899 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.7519597 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.751837497 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.751234935 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.752334923 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.752624885 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.753290204 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.754999615 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.754804507 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.753171048 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.754932289 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.75224154 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.752765728 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.755036681 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.752493236 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.753185085 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.755780276 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.755117998 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.755775688 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.754175548 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.752272774 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.756157155 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.756397255 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.752763642 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.755903557 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.752522652 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.755771378 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.754967647 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.755855242 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.756851266 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.75265895 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.753743203 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.753884814 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.753439872 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.753185409 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.754791214 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.756523946 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.754376943 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.756191698 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.75427463 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.75687752 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.756810098 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.753762248 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.753993467 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.757116565 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.75456871 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.753822882 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.757177025 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.754859025 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.756571448 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.757364234 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.754255656 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.755614968 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.757574885 seconds)
  done (took 120.978886803 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.758225948 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.758561559 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.758061155 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.760071106 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.758517944 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.758287186 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.758758279 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.75868544 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.758127474 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.758408043 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.758833949 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.75752687 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.759824686 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.757680572 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.758869141 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.758888312 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.758927334 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.758083888 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.760412395 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.759021911 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.759383451 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.758996792 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.759095798 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.75931118 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.759172262 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.758542301 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.759588899 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.758923631 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.758922252 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.760190166 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.758862651 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.759566562 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.759808951 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.759431724 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.759838478 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.759902527 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.759178101 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.76048475 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.76010063 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.760119304 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.759997716 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.760186336 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.759417534 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.759725545 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.759768116 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.760129629 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.760767268 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.761013191 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.760116353 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.759453091 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.760642173 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.760764018 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.761473664 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.76003806 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.761580416 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.759696917 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.760899823 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.761026581 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.761274503 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.760938288 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.760543587 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.761198174 seconds)
  done (took 110.774415794 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.764035655 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.761017287 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.757158405 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.75765746 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.760221163 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.757024467 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.759985868 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.760183686 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.760747544 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.759861476 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761336238 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758124296 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759742638 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760541349 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.758591878 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760190816 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758071314 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.761132648 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761310145 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.75807582 seconds)
  done (took 36.876381482 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.760143249 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.76108919 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.759577564 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.75867042 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.761483451 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.759033121 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.761316988 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761179299 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75959673 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761728483 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.761898247 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.761831338 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759437147 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.76169721 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.762533243 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.7589 seconds)
  done (took 29.852068826 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.759408824 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.761318195 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.763988114 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.763111231 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.760156851 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.760283637 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.762730995 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.75930168 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.761310321 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.762837936 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.761635101 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.763062029 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.762045537 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.764854057 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.761715336 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.762662967 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.760909476 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.75961239 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.762447775 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.763917617 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.761178669 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.760302254 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.763084978 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.76247582 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.760139643 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.761845024 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.760023442 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.760135742 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.760738519 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.763135428 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.761665966 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.763333854 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.760675275 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.761190709 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.764429986 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.761038173 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.763225245 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.763330159 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.763150734 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.763101195 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.763685316 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.761711531 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.764431537 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.763668427 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.761495939 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.763585705 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.761399942 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.761475545 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.763393328 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.760665341 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.76421413 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.765124858 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.764306758 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.765457529 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.76439245 seconds)
  done (took 98.608636237 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.764428526 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.764260551 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.762222465 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.764761847 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.764616195 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.761712975 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.764531142 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.762591145 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.762260037 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.768411166 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.762517739 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.764794072 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.761669931 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.764539558 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.764191715 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.764706343 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.763225683 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.763197666 seconds)
  done (took 33.433633599 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.763735516 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.764008897 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.765960529 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.762946068 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.763290166 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.765924224 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.762048921 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.767700977 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765083838 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.763338737 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762967549 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.765731278 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766423277 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.765813122 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.763098382 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.763782675 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.766156689 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.765537676 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.764001816 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.763384052 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.766694532 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.766099917 seconds)
  done (took 40.509663016 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.764714419 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.767431946 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.780788888 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.784072519 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.786934154 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.796831401 seconds)
  done (took 12.367097247 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764119773 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765937479 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.763913884 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766577093 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765786343 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765944038 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763682979 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764254531 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766609125 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764402298 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764356739 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76811168 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76767502 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765876941 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768065229 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767405209 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76636338 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764504489 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7647666 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768486428 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764344073 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768588854 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764569078 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7666577 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765190166 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765603021 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767300137 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765149201 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765975083 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768231954 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767903979 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764704175 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767686652 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766607681 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768275655 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.7687093 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765066401 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768441988 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768119493 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766364803 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.768449608 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767902126 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768189663 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766103754 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768997391 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768373896 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765707 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76634195 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766122916 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76891593 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769126798 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766731538 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768543766 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768352332 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769132687 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769141217 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767066819 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767100197 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770053307 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766218453 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766987132 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769066964 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768674672 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76799032 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769527603 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767154787 seconds)
  done (took 118.306188217 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767308208 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.76744415 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766792838 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767703443 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767096078 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768281965 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76724724 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76724952 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76762635 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768566031 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770854138 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767597842 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77042598 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768404269 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767445353 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768754194 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76782711 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7682067 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768012362 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771261475 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768382832 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768462684 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768016347 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768545083 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768222841 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770752283 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767967987 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768068966 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768489458 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769400529 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768226565 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768554483 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767568793 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.768535884 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769153417 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770137636 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770113759 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7682672 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768000812 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77130372 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769074892 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771853661 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767909788 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768927405 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769243903 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769504627 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770395125 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769058304 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769636954 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768855721 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76975658 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769561589 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769767168 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769860729 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769230245 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769188542 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769508826 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769407165 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769564675 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772148625 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770222983 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77001214 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77307019 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770432808 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770568824 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77070513 seconds)
  done (took 118.450105721 seconds)
done (took 2416.30508276 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.759665049 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.777640391 seconds)
  done (took 15.230259914 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.931236447 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.885293065 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.771157211 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.774243307 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.770391713 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.795188907 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.790792071 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.770983974 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.770782231 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.771341192 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.77118703 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.957619867 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.823410932 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.770217834 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.771397673 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.863320021 seconds)
  done (took 50.68493951 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.773439211 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.776794937 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.786028841 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.778084311 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.774874567 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.786117987 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.808638227 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.77712539 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.808842196 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.789974872 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.844141188 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.786118729 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.774614109 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.823999794 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.78971328 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.7892314 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.865712109 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.852348595 seconds)
  done (took 34.080216995 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.852344391 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.784946641 seconds)
  done (took 10.338455898 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.783014657 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.819452568 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.792463562 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.803290797 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.805365957 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.777747735 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.796645585 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.796584697 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.813398148 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.783303106 seconds)
  done (took 69.669925725 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.779856291 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.774745885 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.774337053 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.772595067 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.767352823 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.771784741 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.774856175 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.772507694 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.435483925 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.81060583 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.781761893 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.778811631 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.773514498 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.776483917 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.773844121 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.798004858 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.872978421 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.771658263 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.771967693 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.779599409 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.775748094 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.824687167 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.787857142 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.776632927 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.803549186 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.437502182 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.78261052 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.780343357 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.898011833 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.773471981 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.774492495 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.775838044 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.776580952 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.16766208 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.055129648 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.777411788 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.789750076 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.782060333 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.773150396 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.87871341 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.775768108 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.779731767 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.535263735 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.023770399 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.883653606 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.817981735 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.102153435 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.795791202 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.777505707 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.804185364 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.78049691 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.776735365 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.787838008 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.266191931 seconds)
  done (took 127.110813672 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.77291943 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.121120093 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.941255482 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.772278993 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.060679707 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.981081078 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.773157659 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.821264909 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.773350469 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.007152092 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.032122508 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.881430918 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.773563406 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.772580818 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.77536815 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.769307151 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.931741308 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.846930592 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.777206525 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.77259748 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.803226388 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.017145583 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.898283345 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.775385702 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.801888288 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.987401318 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.89898369 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.880329136 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.548283918 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.770841985 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.83804155 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.774500588 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.771878927 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.773628894 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.930526206 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.870418145 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.857653384 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.774760675 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.771945432 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.77096267 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.534107313 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.974746153 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.871801741 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.916417626 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.923704565 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.981063066 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.557256568 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.771981453 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.520328909 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.939084497 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.004186316 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.012153886 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.899393157 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.775258001 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.122397903 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.771437409 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.77125337 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.026428468 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.917837702 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.874189721 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.775047567 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.772981737 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.771831358 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.072848774 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.777707645 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.870746913 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.77704552 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.773765914 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.873540017 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.87575269 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.914232986 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.98886062 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.806293898 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.510578093 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.979318001 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.0246428 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.843591038 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.028195419 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.776573416 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.773538587 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.856173321 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.612962741 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.030731195 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.066777913 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.030398978 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.812444448 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.502327078 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.772686811 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.003219054 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.998802095 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.039493024 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.925132588 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.015547894 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.092975135 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.773871853 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.773441174 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.987755706 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.913659833 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.77722818 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.12219946 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.009262277 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.321730539 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.796111916 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.0841115 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.910513088 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.777484883 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.417630202 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.776904034 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.008782614 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.81895555 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.77665302 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.776005531 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.998604333 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.772852247 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.776212011 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.414239967 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.840059515 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.779260538 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.011361801 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.779988802 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.04779529 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.778004438 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.016290924 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.246294654 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.810239921 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.954713668 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.92435039 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.779074287 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.023009256 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.025674262 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.895218725 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.000897849 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.401188817 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.777864902 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.068107063 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.779419562 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.775715139 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.948534334 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.778865874 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.924576363 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.780431178 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.074053926 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802289897 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.012443314 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.779505754 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.038394589 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.814849416 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.83077005 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.780683256 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.898952645 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.778804242 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.61783969 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.936786185 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.780191913 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.776967899 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.326097031 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.776345977 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.929936486 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.013640478 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.803841873 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.854243975 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.450127803 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.780173436 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.859947072 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.803573276 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.609689377 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.778816223 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.032753611 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.781357405 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.778370056 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.777941254 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.072641825 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.963711365 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.781314041 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.777340158 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.692161592 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.777248546 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.777475731 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.964153941 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.292433004 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.777577451 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.984879656 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.785119275 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.909458586 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.78260961 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.851963064 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.118154285 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.778308728 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.778847129 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.779344669 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.778009727 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.778379662 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.990434345 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.809254603 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.299387595 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.918972988 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.058944875 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.094272328 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.030857244 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.827913427 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.783641826 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.037664359 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.783287138 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.847168267 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.782626735 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.803923409 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.015146434 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.783636458 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.994409921 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.063055089 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.633125479 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.831482223 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.783368049 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.779539064 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.77936949 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.930523263 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.866722908 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.782949118 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.782103955 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.899967116 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.906006244 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.994804726 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.782292976 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.814956161 seconds)
  done (took 881.395798729 seconds)
done (took 1190.203855036 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.780813044 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.783149654 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.769144437 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.783251127 seconds)
  done (took 28.823453023 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.791478169 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.786814503 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.789014491 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.788611264 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.787989377 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.786566959 seconds)
  done (took 12.437553736 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.782382099 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.783024015 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.783227073 seconds)
  done (took 21.056232711 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.855017151 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.174646238 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.891231124 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.218510213 seconds)
  done (took 9.84741249 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.789800534 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.789226367 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.78857723 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.789459838 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.792081303 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.79172543 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.788589995 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.788928371 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.792837844 seconds)
  done (took 17.820760087 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.886329496 seconds)
done (took 95.579065949 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.863710203 seconds)
    (2/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.940451224 seconds)
    (3/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.903389894 seconds)
    (4/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.956217602 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.947950224 seconds)
    (6/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.045644995 seconds)
    (7/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.076247966 seconds)
    (8/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.950611701 seconds)
    (9/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.792447827 seconds)
    (10/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.877519914 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.806279555 seconds)
    (12/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.137522127 seconds)
    (13/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.853554514 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.957433103 seconds)
    (15/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.95218974 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.90284548 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.469390583 seconds)
    (18/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.787172991 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.900755953 seconds)
    (20/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.787635336 seconds)
    (21/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.949522598 seconds)
    (22/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.877109061 seconds)
    (23/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.882671499 seconds)
    (24/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.734104891 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.582366166 seconds)
    (26/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.016803245 seconds)
    (27/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.92483653 seconds)
    (28/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.126761599 seconds)
    (29/309) benchmarking ("sort", BigInt, false)...
    done (took 6.786992505 seconds)
    (30/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.963159522 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.125219261 seconds)
    (32/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.786837977 seconds)
    (33/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 3.520180165 seconds)
    (34/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.912394173 seconds)
    (35/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.964400867 seconds)
    (36/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.884368312 seconds)
    (37/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.427290857 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.003662762 seconds)
    (39/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.871182063 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.412241434 seconds)
    (41/309) benchmarking ("sort", Bool, false)...
    done (took 2.011600866 seconds)
    (42/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.860276107 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.777397105 seconds)
    (44/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.379618003 seconds)
    (45/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.876426673 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.113738108 seconds)
    (47/309) benchmarking ("sort", Int64, false)...
    done (took 5.470249202 seconds)
    (48/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.872436006 seconds)
    (49/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.917857788 seconds)
    (50/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.081212275 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.043531343 seconds)
    (52/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.942315987 seconds)
    (53/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.809451479 seconds)
    (54/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.962603992 seconds)
    (55/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.895024913 seconds)
    (56/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.935483155 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.114417972 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.881138043 seconds)
    (59/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.401103093 seconds)
    (60/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.269281727 seconds)
    (61/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.818108105 seconds)
    (62/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.883133284 seconds)
    (63/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.162483998 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.792292263 seconds)
    (65/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.462476649 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.111532167 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.159629118 seconds)
    (68/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.024218224 seconds)
    (69/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.896649173 seconds)
    (70/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.810308271 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.804088552 seconds)
    (72/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.117499641 seconds)
    (73/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.007376292 seconds)
    (74/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.030046762 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.185170399 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.799716204 seconds)
    (77/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.119771605 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.038276726 seconds)
    (79/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.918088197 seconds)
    (80/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.639706018 seconds)
    (81/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.701003327 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.194320297 seconds)
    (83/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.88127186 seconds)
    (84/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.778004746 seconds)
    (85/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.729587387 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.794208599 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.188858408 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.798574961 seconds)
    (89/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.820533262 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.038985086 seconds)
    (91/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.243780552 seconds)
    (92/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.819517303 seconds)
    (93/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.806015464 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.75473159 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.103561434 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.123837854 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.971342035 seconds)
    (98/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.647288139 seconds)
    (99/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.995928035 seconds)
    (100/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.807301436 seconds)
    (101/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.205830686 seconds)
    (102/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.35505236 seconds)
    (103/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.996162123 seconds)
    (104/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.861019825 seconds)
    (105/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.930746088 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.021333064 seconds)
    (107/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.816201305 seconds)
    (108/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.884578241 seconds)
    (109/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.035217052 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.975842812 seconds)
    (111/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.895512996 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.447771024 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.965661138 seconds)
    (114/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.796087989 seconds)
    (115/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.858287902 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.976497189 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.740959836 seconds)
    (118/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.074383031 seconds)
    (119/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.900553228 seconds)
    (120/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.780249201 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.097951831 seconds)
    (122/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.927178938 seconds)
    (123/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.220666707 seconds)
    (124/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.860810708 seconds)
    (125/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.830476624 seconds)
    (126/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.884561839 seconds)
    (127/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.485032022 seconds)
    (128/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.098270891 seconds)
    (129/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.8044347 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.095444929 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.747475321 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.448936276 seconds)
    (133/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.785014538 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.138353752 seconds)
    (135/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.809039816 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.819147934 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.941342906 seconds)
    (138/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.894265153 seconds)
    (139/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.889986061 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.030146817 seconds)
    (141/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.819754641 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.7777912 seconds)
    (143/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.007430911 seconds)
    (144/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.909317583 seconds)
    (145/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.794553893 seconds)
    (146/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.205172285 seconds)
    (147/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.786669868 seconds)
    (148/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.322240434 seconds)
    (149/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.814175675 seconds)
    (150/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.793570176 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.004340204 seconds)
    (152/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.967601699 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.783646842 seconds)
    (154/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 3.185228849 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.803838699 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.227166606 seconds)
    (157/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.112089617 seconds)
    (158/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.843743771 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.473179946 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.022548446 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.875677888 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.793946115 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.730680967 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.731060718 seconds)
    (165/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.931377 seconds)
    (166/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.888557151 seconds)
    (167/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.292504167 seconds)
    (168/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.808840825 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.910988193 seconds)
    (170/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.773208556 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.760920357 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.455493392 seconds)
    (173/309) benchmarking ("sort", Int8, false)...
    done (took 4.68293751 seconds)
    (174/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.109730311 seconds)
    (175/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.065698404 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.05359308 seconds)
    (177/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.855702683 seconds)
    (178/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.080151953 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.083340596 seconds)
    (180/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.018812763 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.809104793 seconds)
    (182/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.850039715 seconds)
    (183/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.229501385 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.87770141 seconds)
    (185/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.871029652 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.83290133 seconds)
    (187/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.906206739 seconds)
    (188/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.889695057 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.998173118 seconds)
    (190/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.512756319 seconds)
    (191/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.978855367 seconds)
    (192/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.898299778 seconds)
    (193/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.793637913 seconds)
    (194/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.204186697 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.10233868 seconds)
    (196/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.901767125 seconds)
    (197/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.796173537 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.836380527 seconds)
    (199/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.149265843 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.912292158 seconds)
    (201/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.980688638 seconds)
    (202/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.161281949 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.869686941 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.809970227 seconds)
    (205/309) benchmarking ("sort", Float64, false)...
    done (took 5.566058231 seconds)
    (206/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.783641952 seconds)
    (207/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.883340893 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.906466899 seconds)
    (209/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.816132464 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.036383016 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.953611785 seconds)
    (212/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.937678573 seconds)
    (213/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.946482021 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.103844524 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.734547368 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.001099809 seconds)
    (217/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.780520789 seconds)
    (218/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 3.093952973 seconds)
    (219/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.059336231 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.799961315 seconds)
    (221/309) benchmarking ("sort", Float32, false)...
    done (took 5.537642403 seconds)
    (222/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.979053032 seconds)
    (223/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.801402215 seconds)
    (224/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.278295368 seconds)
    (225/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.016420983 seconds)
    (226/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.834124242 seconds)
    (227/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.833009547 seconds)
    (228/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.800195609 seconds)
    (229/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.241421172 seconds)
    (230/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.35404521 seconds)
    (231/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.808543484 seconds)
    (232/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.487755275 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.515339462 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.939807894 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.797055249 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.890991232 seconds)
    (237/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.060023983 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 3.129833562 seconds)
    (239/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.044772148 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.516886971 seconds)
    (241/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.315607722 seconds)
    (242/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.925286099 seconds)
    (243/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.788854889 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.911759863 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.072103432 seconds)
    (246/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.19022107 seconds)
    (247/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.814603381 seconds)
    (248/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.900407512 seconds)
    (249/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.253734942 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.803572893 seconds)
    (251/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.20746509 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.804090914 seconds)
    (253/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.096038705 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.715240974 seconds)
    (255/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.825182279 seconds)
    (256/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.784762545 seconds)
    (257/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.208055119 seconds)
    (258/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.918271279 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.017516599 seconds)
    (260/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.872671796 seconds)
    (261/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.878505273 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.712718352 seconds)
    (263/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.757803213 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.80444037 seconds)
    (265/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.318817756 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.768437322 seconds)
    (267/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.842614238 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.911706823 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.207565966 seconds)
    (270/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.788623498 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.917761548 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.150973649 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.0830874 seconds)
    (274/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.11673736 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.161325491 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.822339766 seconds)
    (277/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.221860265 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.949043312 seconds)
    (279/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.984216356 seconds)
    (280/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.841287553 seconds)
    (281/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.801183614 seconds)
    (282/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.879623656 seconds)
    (283/309) benchmarking ("perf_sum", Float64, false)...
    done (took 3.230142923 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.172585821 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.80384301 seconds)
    (286/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.872021124 seconds)
    (287/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.963830714 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.588723186 seconds)
    (289/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.822051484 seconds)
    (290/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.798009815 seconds)
    (291/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.223750759 seconds)
    (292/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.908821461 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.804293566 seconds)
    (294/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.030016895 seconds)
    (295/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.808167154 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.832646931 seconds)
    (297/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.802192452 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.800862671 seconds)
    (299/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.812702946 seconds)
    (300/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.180921979 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.234998304 seconds)
    (302/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.400883345 seconds)
    (303/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.962776783 seconds)
    (304/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.942246703 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.967661884 seconds)
    (306/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.239760053 seconds)
    (307/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.788309017 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.121838515 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.789691078 seconds)
  done (took 986.569531475 seconds)
done (took 988.345284136 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.834218525 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.824910561 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.811576624 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.831094068 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.921833563 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.834722565 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.818808841 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.80966741 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.85639425 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.857314108 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.805513101 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.832378407 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.808075643 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.80648807 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.806220126 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.82078681 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.122389467 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.838054246 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.822313831 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.81502855 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.821791123 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.802110491 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.853393662 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.828512296 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.807555609 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.806499996 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.806966018 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.820835687 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.91315148 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.804740118 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.805891891 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.812807258 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.119770292 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.832769425 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.796024829 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.821358013 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.811792455 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.810764372 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.80278701 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.830996704 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.203935428 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.840753466 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.803229769 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.798029768 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.798368421 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.801598556 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.799567971 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.805173741 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.809748498 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.809992051 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.195479331 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.859696078 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.799498935 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.798761746 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.80594206 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.794295947 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.799665852 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.811173434 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.815728639 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.811084947 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.094467945 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.83006761 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.796373921 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.810638614 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.801787901 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.225485728 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.831507988 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.798614247 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.196941128 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.84371055 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.222647864 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.844452479 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.792862812 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.805313271 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.82468423 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.106633271 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.81880473 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.790087241 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.799429954 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.787259472 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.80028901 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.801710044 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.795446933 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.791479982 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.803730986 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.818453976 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.800630321 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.790873163 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.799151265 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.810054058 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.799045987 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.800737281 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.792571293 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.784803173 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.798062461 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.794730054 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.79272022 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.78968063 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.792743151 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.796902664 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.189606158 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.850811217 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.782538533 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.78167153 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.785199038 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.798406228 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.185832467 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.831344948 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.805598518 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.830693654 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.785341368 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.08218908 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.822822361 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.797968448 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.791091083 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.785502245 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.77917044 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.081954113 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.209278407 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.838942499 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.780785934 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.775878161 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.794903053 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.78235655 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.777460973 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.096208743 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.815559235 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.794193061 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.90281489 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.790141832 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.810282546 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.777078636 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.783119327 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.808996678 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.793616735 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.810840292 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.781127573 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.793828782 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.795477664 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.77615452 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.790988356 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.787640423 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.78110261 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.782717923 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.771464578 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.808425582 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.787604748 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.787796014 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.797119487 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.898012162 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.773442187 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.075072482 seconds)
done (took 282.246766455 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.843505037 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.772546057 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.870315634 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.771162507 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.852688087 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.86097867 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.765852057 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.766427428 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.765899216 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.143666477 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.768179489 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.766504558 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.763637624 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.766850239 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.850163611 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.766286881 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.764030957 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.105310444 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.76852573 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.841400925 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.766076375 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.765163867 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.764699863 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.136730027 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.756865623 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.764537256 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.834045279 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.764368307 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.098225429 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.763157296 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.755467933 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.097360236 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.853100029 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.787792084 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.760574216 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.767509575 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.840325284 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.774081656 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.841182884 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.838664447 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.857483446 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.790517191 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.758252481 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.755141417 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.759841483 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.757797022 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.752714255 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.783088984 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.750253392 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.762537045 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.09534484 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.765442179 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.753243509 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.751475997 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.751156406 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.785069636 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.752486071 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.757345199 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.845714935 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.755438399 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.814571382 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.125169474 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.127100063 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.753603772 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.753472218 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.750898606 seconds)
  done (took 177.061585038 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.818065728 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.828419006 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.815782315 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.754428553 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.801727815 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.81603636 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.753513493 seconds)
  done (took 14.258834119 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.754850061 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.749499088 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.800928815 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.799026379 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.748434973 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.901971172 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.74867249 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.759664514 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.743941372 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.798629522 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.748070082 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.747350226 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.753686643 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.747828121 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.795400582 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.756729978 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.862799116 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.744749273 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.746022792 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.895959766 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.743358975 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.753602132 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.775694902 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.754745604 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.743912961 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.749881298 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.332728045 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.745651119 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.740191548 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.742395891 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.740033655 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.783373762 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.74399265 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.738373743 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.739807689 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.859252444 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.741387518 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.737875007 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.74021434 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.734704495 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.73944562 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.74017111 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.738946618 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.73702702 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.739047612 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.760469351 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.738494345 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.739074743 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.740669243 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.739433828 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.770953058 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.738351003 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.734994942 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.735770788 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.792927311 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.746121617 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.738396262 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.733983118 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.737756382 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.734202869 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.888390462 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.787114144 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.736111864 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.786056141 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.735971949 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.738032763 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.736911999 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.735186541 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.830845252 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.734949788 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.785378874 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.732711124 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.893490829 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.755170423 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.735344903 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.73681315 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.736984208 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.735662607 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.731243662 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.738429315 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.732322993 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.734078751 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.736948009 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.729541025 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.729881263 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.842906884 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.839988322 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.726209871 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.741989939 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.73578944 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.72696801 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.764864483 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.729917659 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.725892451 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.7844408 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.843196461 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.783058218 seconds)
  done (took 192.993294688 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.733083907 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.734050364 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.728422699 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.745100187 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.727483654 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.726604925 seconds)
  done (took 12.04500294 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.727311381 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.726314703 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.725490106 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.724986212 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.725890644 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.728617357 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.72677583 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.727417554 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.729240212 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.726552564 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.728374745 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.726139746 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.725519819 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.724219046 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.724448305 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.723276541 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.726105424 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.720333875 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.723642481 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.724767683 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.879458713 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.72481826 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.724000681 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.724212089 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.728266855 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.722759221 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.734653628 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.724175225 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.723305245 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.729640464 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.728608372 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.724747124 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.724369739 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.730723292 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.728895466 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.725286772 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.728215454 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.726109909 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.722312892 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.725018335 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.725727757 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.724502317 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.723752784 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.729103871 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.726449128 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.728381202 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.731015435 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.731880678 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.725774552 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.727784238 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.727431745 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.724928606 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.725841472 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.726857109 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.725936876 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.731103833 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.731520641 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.726080634 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.725420116 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.72592485 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.726092113 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.728541457 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.72639461 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.731405382 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.722609877 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.727254862 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.725795038 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.729835963 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.725159804 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.724951383 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.726773816 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.722700942 seconds)
  done (took 127.108676611 seconds)
done (took 525.176584181 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.824637572 seconds)
  done (took 8.470707215 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.992612751 seconds)
  done (took 8.784317101 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.403637109 seconds)
  done (took 10.154286935 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.841023572 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.874613173 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.840046385 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.833006533 seconds)
  done (took 29.165064778 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.969677881 seconds)
  done (took 8.717054918 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.847077397 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.822924797 seconds)
  done (took 15.45086519 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.835475701 seconds)
  done (took 8.583129994 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.916674708 seconds)
  done (took 8.689038125 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.843321778 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.861094503 seconds)
  done (took 15.465323658 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.809347112 seconds)
  done (took 8.556735801 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.459518214 seconds)
  done (took 11.29565929 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.849359519 seconds)
  done (took 8.701847767 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.828938846 seconds)
  done (took 8.577776212 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.926394232 seconds)
  done (took 8.674168326 seconds)
done (took 160.932724971 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.827965963 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.826585306 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.826090583 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.824233433 seconds)
  done (took 29.052777197 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.86348113 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.863481106 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.864159259 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.874218275 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.86588099 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.862609521 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.856198736 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.855979933 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.87402855 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.866569977 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.866232955 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.866729909 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.863481908 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.856432417 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.865638773 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.865320216 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.875192643 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.865797001 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.855711983 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.86542717 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.831116631 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.874855525 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.867439066 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.832006322 seconds)
  done (took 46.445206291 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.024727642 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.903204612 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.984079629 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.882028833 seconds)
  done (took 9.542569695 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.882950454 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.885175156 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.895233872 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.93512111 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.957740394 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.894480789 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.858232015 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.853190014 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.838901937 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.884726004 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.960828482 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.879762803 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.986314638 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.831467535 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.018431523 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.833097816 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.83225696 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.884086788 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.93567809 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.948851788 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.832183877 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.883331411 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.887838306 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.880344591 seconds)
  done (took 47.229910355 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.830709089 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.838782349 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.837109856 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.831917237 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.831598963 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.832538064 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.837911777 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.832753314 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.854096242 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.832776045 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.830244369 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.831415116 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.830457088 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.831964352 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.831321504 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.844234559 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.844851517 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.83386946 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.837717981 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.838529114 seconds)
  done (took 38.465041589 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.827223393 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.002860223 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.177145172 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.081926601 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.827471131 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.82961796 seconds)
  done (took 31.498002908 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.846858376 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.840021 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.833271777 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.891083363 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.976832901 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.84268689 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.832156803 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.845664956 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.881685274 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.9034858 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.857073745 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.862753139 seconds)
  done (took 24.164109992 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.829692985 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.829375487 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.829951865 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.845128188 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.845324165 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.840619208 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.840086877 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.827137718 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.847509979 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.852987129 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.842173191 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.846778198 seconds)
  done (took 43.831978931 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917843884 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.716919285 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.470834701 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.539475174 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.363742631 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039603423 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.357164321 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.00163444 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.834727708 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.101696136 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.414501834 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079408817 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.08293912 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.830167888 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.907913026 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.285727481 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125899925 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067336012 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856632486 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.557682012 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951312277 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.439336118 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.577958605 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.95746125 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040196337 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.963172001 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.090598249 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.78611632 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964311056 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866766245 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839923253 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.830832558 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103767458 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04045561 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960036486 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842169954 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.480761817 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.544794047 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.815547709 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.512710018 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.525196665 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.968090048 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839482388 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832813897 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.763855702 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432274372 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015536112 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.835059968 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.532373838 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.83101452 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840239244 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919966626 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.833821759 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.643661216 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781378916 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.108186511 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.82939359 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83581516 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407124638 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.900215271 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.530356939 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.778921562 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.923341635 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.517113099 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.304590692 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.992011268 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.835421058 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.835572767 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.765013788 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.573783579 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955967946 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977335735 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.851730445 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.481553588 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131005607 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.499542725 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.919724102 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130110903 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.692470569 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.776511221 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054980409 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.784878356 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759869127 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.683921648 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.761260251 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092092838 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862886365 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.473487881 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865278709 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.996095916 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.837250915 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849413352 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834741726 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.050622592 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.709758844 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829638181 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.360559946 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.114525811 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84986735 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.000326299 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76089905 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.832019736 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08359178 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.038603167 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.151550071 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.296090109 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98825213 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829844403 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.91860047 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.828744502 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.849178647 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.099819989 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891392575 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.916143839 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965876188 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.789301788 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135021575 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862648575 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.008961636 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.454537085 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09917416 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.154846941 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.083928148 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913965906 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.832849025 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.83030632 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.573528928 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.459181212 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.057667668 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.834321751 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401727344 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.85471754 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.835565946 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767813729 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.496702138 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.415738832 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.944399179 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.056373888 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.836824883 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.10939212 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767772003 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.978407159 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.945531505 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.055339812 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.491483324 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.91403336 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092559631 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41724647 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.170550716 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854917649 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853847194 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953481342 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858417791 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.346513379 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.098273286 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.838178346 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.838656484 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.583832386 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.90774369 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84250687 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.840723521 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.631135898 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119272594 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.865520221 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.838209066 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.772174734 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.848811267 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918255456 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841583692 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.845591692 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.359895704 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.589048718 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.846728861 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.491216825 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060757149 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846151178 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.581480491 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.032292541 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.919209792 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111893398 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903501471 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.769750131 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.540058687 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.54075786 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838105526 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.77215817 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.837350256 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84661542 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848114093 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.058205773 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.117203927 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888916764 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.517315212 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.953583114 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847968279 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.842171737 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838029579 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.33807963 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.92931165 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.535692744 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.856918726 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9745255 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.851700714 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.770008908 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.841582395 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.842776636 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.838487589 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.796376384 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890272457 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.519896435 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172303969 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096585143 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.484228461 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85416123 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.594673612 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.971858566 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.860596098 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.390193837 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.999746625 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.846274516 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92236959 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.85030775 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.570607119 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.608511313 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.412084996 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149905622 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163547961 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.290079053 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.427352306 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.067862991 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.011523506 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072409676 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.367162662 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900043007 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.017751101 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785339737 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924267867 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.493408306 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197504878 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855150023 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065967811 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.231796419 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.430777265 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.005351401 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.049655289 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874652836 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.842957325 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.766867523 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.362848627 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995351902 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.433329919 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072194455 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007827502 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.362322406 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.955074789 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.839317515 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.309488106 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923118559 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.54862249 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.201325094 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.463656008 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.461224711 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216792048 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.843469927 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.2864763 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202157848 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.270311571 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.942503934 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774916118 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.850585005 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.851557731 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.840282244 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.818349137 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.694290447 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.092669949 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851851997 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074264675 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.195229342 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12670071 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.750885711 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.845985742 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842783021 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140733991 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.704542545 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980246059 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.381436916 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.319337809 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854009661 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.774694225 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775545704 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.545643476 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.843196534 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.816071933 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071095968 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.950516454 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.795390178 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418022867 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057647884 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.095223027 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.857151564 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.120578047 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122591311 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.609933155 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871170324 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.944070921 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.391734633 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.565701277 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.064478449 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.077002223 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.63992238 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.071677984 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.490571474 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.817134646 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.842950324 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.057025053 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.064067967 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.443095269 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097230648 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.567680427 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.860884212 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222560886 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909383222 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.452098917 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.062766923 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.935968796 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854231846 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925767358 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854018025 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.854755819 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.856886425 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892212341 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.468667461 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.982499722 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.858919016 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935838114 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.926870077 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.430518953 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.85510617 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125110204 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214381006 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.184246812 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911616742 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.846056422 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848045948 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77751684 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9843063 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.290237565 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.121639114 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.973645314 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.985089087 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870663652 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.374346924 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.322785994 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056625321 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120728737 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.739190176 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849794499 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.93988819 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.068716744 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856701713 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.055337064 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077399867 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167702273 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314890806 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.178470465 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.020105774 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120585419 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.216733266 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.847813258 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.434128932 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.85710697 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.389930743 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.885339045 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.454166754 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139958043 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858702751 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062286756 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.868821031 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.048225628 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.300085815 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.584920817 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.213844669 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.837109955 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.905780017 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128284413 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.251343722 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164652761 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928058757 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858327466 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.546112995 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985063991 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.706432748 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.078536729 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.849377471 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058662844 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.56095013 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.857085986 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127472062 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163409434 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.846357989 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.746110526 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876742605 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.858001157 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.072234475 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.118771927 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099305395 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857820071 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.849524786 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.662545086 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129651242 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914281404 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783305377 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.852937125 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947814399 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.097660708 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869139754 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.365993837 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.552220197 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15277747 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.767479334 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871102161 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.32117441 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310843279 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184562029 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.377554857 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091290636 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.407801765 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.767839376 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.237845628 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.855424647 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.31343424 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242593847 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.853003117 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.412955697 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973956458 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.125932355 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17775329 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.861446288 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.657076528 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.897859901 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071746099 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.44093424 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791207836 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.855800025 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.911078035 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.852454107 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.982399744 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.861890088 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.77790139 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.766149875 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.704980235 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340526222 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.856887854 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.843099865 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.410856858 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.479153491 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972462456 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006802488 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854600427 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.561782484 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.141164279 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.104113846 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.410539489 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.93793043 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.854973067 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852271337 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.777699403 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.047114746 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.04803936 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154900011 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.265973744 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.976866066 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.854903581 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.065954807 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062217107 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.484572322 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017707119 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302987432 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979856496 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.780549435 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.563055456 seconds)
  done (took 1665.491851035 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.865702458 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.865864753 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.85186702 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.874801298 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.876750938 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.868433859 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.927943311 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.94571216 seconds)
  done (took 56.852247899 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.851265868 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.03377834 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.861894481 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.852321309 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.872264213 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.852336697 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.043571798 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.866438987 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.871572449 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.86109462 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.853153538 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.863622392 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.150484575 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.880572245 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.856257351 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.858084937 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.867258992 seconds)
  done (took 74.079519718 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.854776096 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.046729672 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.87633396 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.881080769 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.74579521 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.862828637 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.854631374 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.889971609 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.861413783 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.033712298 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.190669018 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.913317393 seconds)
  done (took 89.789394349 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.871430765 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.861920372 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.861516199 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.860715998 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.860562356 seconds)
  done (took 11.102384369 seconds)
done (took 2169.317776612 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.097768171 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.041904677 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.092287683 seconds)
  done (took 5.912438704 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.002176637 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.05189647 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.168561895 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.176962697 seconds)
  done (took 10.18167593 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.149758583 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.23944515 seconds)
  done (took 6.168421981 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.187124729 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.876226986 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.274669429 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.855800846 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.855929979 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.857549823 seconds)
  done (took 22.353328589 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.860230928 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.86226778 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.860253865 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.862850741 seconds)
  done (took 9.223914193 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.842267639 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.535027184 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.841782786 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.857395226 seconds)
  done (took 20.855772872 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.609108756 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.984644713 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.603952007 seconds)
  done (took 8.975999297 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.462389447 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.081143422 seconds)
  done (took 9.323317504 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.023056667 seconds)
  done (took 3.802115543 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.888203053 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.131988467 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.429415298 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.399580701 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.477468797 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.691332098 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.163300539 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.091333487 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.310400289 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.317766987 seconds)
  done (took 24.681644711 seconds)
done (took 136.692603134 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.198565499 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.880160487 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.057207468 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.209835359 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.086898452 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.055856184 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.077733429 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.199677397 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.889075916 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.878041999 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.214518183 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.08631618 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.02683855 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.877645307 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.031977498 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.872881816 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.077490282 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.216009287 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.900115182 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.135686219 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.088306605 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.860724335 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.051883498 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.874886484 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.084296965 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.008076894 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.405462028 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.878166612 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.036066589 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.416579775 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.013325297 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.275345586 seconds)
  done (took 167.74617008 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.86025538 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.860535911 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.859095582 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.858943144 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.408465034 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.861265035 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.862276287 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.858737501 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.306911801 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.306589625 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.86184357 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.397572272 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.862541193 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.860613551 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.862825605 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.86094375 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.46514295 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.861184198 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.859795281 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.860020966 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.858833356 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.247883483 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.862457582 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.249886918 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.466484584 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.861692132 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.860924561 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.861097442 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.859642022 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.860240479 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.862431841 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.860689975 seconds)
  done (took 209.291728634 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.860353229 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.861304755 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.864858599 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.860647537 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.862089547 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.860908163 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.860637873 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.86147513 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.578626677 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.578136453 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.879493461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.861500875 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.865739414 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.861224692 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.860755517 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.862496547 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.863824317 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.863426328 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.86328967 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.864289254 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.8634005 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.600024732 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.862897247 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.627818449 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.870776792 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.876973059 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.862912128 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.88190751 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.883935823 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.88136145 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.887054585 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.861214547 seconds)
  done (took 220.439481161 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.125093407 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.86939383 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.870146996 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.777728358 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.871579822 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.870318405 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.87611582 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.118423324 seconds)
  done (took 19.189591222 seconds)
done (took 618.455903619 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.345318868 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.192705722 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.05331216 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.893450424 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.15665753 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.927248053 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.887594943 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.95970491 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.51033435 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.960986387 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.534353781 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.912726582 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.617941189 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.916264992 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.012033578 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.95307538 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.460028746 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.549582617 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.067268819 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.976703872 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.066299167 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.823356071 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.975671488 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.538443808 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.640941722 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.876424033 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.952855467 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.465392099 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.902060846 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.049364863 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.659475167 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.200447356 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.906209473 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.888453663 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.947283494 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.925557519 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.154089328 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.903909103 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.018100517 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.632712667 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.96239588 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.420337571 seconds)
  done (took 102.582020958 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.860085643 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.858078393 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.856998847 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.861389396 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.859167529 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.857735551 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.858357476 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.857042735 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.858928512 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.85863821 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.85885236 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.859744423 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.857904116 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.858886138 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.857901405 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.857506662 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.860900126 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.859648853 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.858705786 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.858090621 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.860965029 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.858585371 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.873024171 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.858502561 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.859351476 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.859406603 seconds)
  done (took 50.142559326 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.872192539 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.041227355 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.110848719 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.89404522 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.871866829 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.876039726 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.889648838 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.879178379 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.875658177 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.873369372 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.980619011 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.879949032 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.890688704 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.111958537 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.890979197 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.873558622 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.873069058 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.871883046 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.050813372 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.889763356 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.892865679 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.879714879 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.890934651 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.887647043 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.874169867 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.872521095 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.876748971 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.342014293 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.882633657 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.979675576 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.918972369 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.899201959 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.313577699 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.125219084 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.931441897 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.882460039 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.874375316 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.98356087 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.878898549 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.874504539 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.892062687 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.878211126 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.108001013 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.369343058 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.889367199 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.873533691 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.354095543 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.994644823 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.917155176 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.884349362 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.113087166 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.893609176 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.875560751 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.875670677 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.912500484 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.881388018 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.873778272 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.228082389 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.889057786 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.892142251 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.880027183 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.873973383 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.054681358 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.88449614 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.039802275 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.885544092 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.881822356 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.875579554 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.113196446 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.894624773 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.370321942 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.891184878 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.877047616 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.984245234 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.047672148 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.382021252 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.889247217 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.051475705 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.33251622 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.899901628 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.881736055 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.333218375 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.904300637 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.883237397 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.878515102 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.878557043 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.877382858 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.920133145 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.892390397 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.304046455 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.37783478 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.24551859 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.903505517 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.889651813 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.875751253 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.227130617 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.886103226 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.876921642 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.108282994 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.38568746 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.891686113 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.882093559 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.359978595 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.892589545 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.895505104 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.885702299 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.117871799 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.895084311 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.922605051 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.878489999 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.882333528 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.879399268 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.894635565 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.884973297 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.878275364 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.350972087 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.006371494 seconds)
  done (took 232.9840945 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.872021543 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.877054995 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.870933819 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.875322331 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.870411594 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.877409308 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.872204479 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.869716737 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.877346901 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.871802201 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.870969478 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.871590245 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.874597043 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.873490399 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.900955759 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.878415238 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.477037611 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.871649194 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.872934244 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.892059817 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.528012306 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.88108591 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.872365583 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.873180532 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.872913876 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.871616687 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.877711265 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.896846843 seconds)
  done (took 167.589222892 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.87860742 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.993228608 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.898470586 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.905683988 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.888084124 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.875805481 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.903211905 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.893408966 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.886302258 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.875740775 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.877123519 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.939458006 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.89091039 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.977388823 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.912070739 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.911339457 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.981956039 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.889760732 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.87785063 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.879478536 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.906778171 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.874412203 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.939269085 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.005955351 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.898340481 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.996194791 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.883227789 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.880458963 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.878855621 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.997100361 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.896222633 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.940530824 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.908747027 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.895449514 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.99991009 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.997694176 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.988094109 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.912906385 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.88596245 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.879113038 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.879002094 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.867300715 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.996025667 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.900636993 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.880613417 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.982609916 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.899938017 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.88308772 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.888495774 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.878834253 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.895433965 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.900856576 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.94829155 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.010834018 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.918317834 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.905885533 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.90677226 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.170824933 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.890331217 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.980237678 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.875805814 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.999423626 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.903881598 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.868433239 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.881961142 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.886025873 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.910131783 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.91262651 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.98337473 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.890404636 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.979433764 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.919710751 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.888945732 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.880158079 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.884641079 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.99766804 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.002179364 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.919384887 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.917952793 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.913825959 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.878163433 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.881529732 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.869245207 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.898520896 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.884983205 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.996957702 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.000648858 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.891021416 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.884008041 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.883798821 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.885011188 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.907006421 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.009871802 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.919692084 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.975670661 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.950855274 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.955574646 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.896654236 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.895353417 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.887675026 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.945803721 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.898778704 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.894319331 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.22110552 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.953389949 seconds)
  done (took 203.765820677 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.335378599 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.937856667 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.940492023 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.196788128 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.324673606 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.897434039 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.930798576 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.934807706 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.957295157 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.122511034 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.995381418 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.950390477 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.918772364 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.906972427 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.934448163 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.955187577 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.943506545 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.263125339 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.042909505 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.071485381 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.913852687 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.222595097 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.203939443 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.322708059 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.967588936 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.26959689 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.585184677 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.077690291 seconds)
  done (took 61.930526823 seconds)
done (took 820.780935539 seconds)
SAVING RESULT...
DONE!
