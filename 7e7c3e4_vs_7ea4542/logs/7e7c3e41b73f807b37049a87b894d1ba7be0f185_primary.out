cset: moving following pidspec: 14315
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.229502871 seconds)
loading group "string"... done (took 0.550379687 seconds)
loading group "linalg"... done (took 7.55834868 seconds)
loading group "parallel"... done (took 0.168398458 seconds)
loading group "find"... done (took 1.163916641 seconds)
loading group "tuple"... done (took 2.062671492 seconds)
loading group "dates"... done (took 1.31993355 seconds)
loading group "micro"... done (took 0.241246952 seconds)
loading group "io"... done (took 0.702484051 seconds)
loading group "scalar"... done (took 40.325617392 seconds)
loading group "sparse"... done (took 12.579610983 seconds)
loading group "broadcast"... done (took 1.126062311 seconds)
loading group "union"... done (took 13.389383685 seconds)
loading group "simd"... done (took 4.732705189 seconds)
loading group "random"... done (took 9.625949286 seconds)
loading group "problem"... done (took 2.130557637 seconds)
loading group "array"... done (took 22.390569658 seconds)
loading group "misc"... done (took 2.074050983 seconds)
loading group "sort"... done (took 3.44098886 seconds)
loading group "collection"... done (took 19.575498141 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.584469725 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142648864 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149453831 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147417089 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187253531 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.15505797 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159068304 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097823045 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.937360869 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.17951658 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155568276 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.511506942 seconds)
done (took 5.13393279 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.2205476 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093639645 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10326525 seconds)
  done (took 0.867127898 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.08004664 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147189448 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094238951 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078354442 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094847808 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078834415 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09405043 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07825936 seconds)
  done (took 1.348573423 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.088212 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097323105 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082696419 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097445476 seconds)
  done (took 1.04880282 seconds)
done (took 4.25363157 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.749775857 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.280425703 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201753509 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464291883 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.17777412 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.242911889 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684982497 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.363670558 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252005144 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101557991 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144744261 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.390040631 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.143724004 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.687687789 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088911187 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123627103 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179825466 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.450095217 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083747623 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.11038612 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117225906 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143156032 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127648243 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09323594 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185681205 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083009533 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.197359892 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109966015 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079362194 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289412667 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199889485 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.694797599 seconds)
  done (took 10.96353053 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110464514 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133690748 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097326384 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138274134 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133513431 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098703093 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086029244 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096573978 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122419299 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176437209 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113852703 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135063579 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095121612 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081731918 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115532513 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246015105 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120371724 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105165071 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.10145536 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103998985 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121760643 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113215052 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109074597 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092843169 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167255847 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.219647539 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11014313 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124202828 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095700447 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111150206 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142032619 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141591581 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094002173 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080141054 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173245342 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123496753 seconds)
  done (took 5.128044388 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.039905013 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186583315 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119916991 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164389615 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080676044 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139133723 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.093448009 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11124666 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255354784 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.189772659 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.126939452 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.159546111 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142306328 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114539695 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079662337 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097562177 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094026749 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.657744642 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.155674004 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114425904 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114541741 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101600913 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084052449 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.378601788 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102137412 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079068361 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100525969 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065170188 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.156642468 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097964699 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.149042845 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119741518 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083065641 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133658209 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.206643472 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109320798 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134008691 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095135575 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078722274 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.171885912 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102864524 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.103399708 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096297753 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.118148817 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132824887 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116372006 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097816774 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095859854 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.201588347 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094323039 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096723044 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.981635818 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179678899 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.101242672 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094607827 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.329436189 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096080722 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096548525 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.08119574 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.303443066 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.185973624 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097365285 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079229387 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09569557 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080091179 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400053644 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080445741 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.898788074 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082607047 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.105403853 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081371177 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095047699 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10271947 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086582472 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112066379 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080864125 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.096631567 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077574402 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095480935 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080248125 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.092945863 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105252629 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084479683 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096496764 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147669602 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.093404003 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097706986 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126721527 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099356901 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078244208 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130520293 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098662039 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080174307 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.131815858 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097536961 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.089646351 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098902373 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142247722 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095585268 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.16725627 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079254336 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123736343 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098826783 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11402665 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111732443 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097165636 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083931024 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095142458 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077028074 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163537374 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078218779 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096389402 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.08012763 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094712693 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108421457 seconds)
  done (took 22.670968639 seconds)
done (took 40.481611033 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.314316331 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101069399 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101565155 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101163825 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100342871 seconds)
  done (took 1.476130403 seconds)
done (took 2.204218498 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.284677212 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172494892 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094428335 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165037454 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091841232 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172039788 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157572164 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110649608 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.199879542 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093609555 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162172702 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092839132 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076353528 seconds)
  done (took 2.631737114 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09444147 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114487512 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083537543 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110369158 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075836018 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111262792 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091259425 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114782492 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110543775 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083447141 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09293701 seconds)
  done (took 1.809076734 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094315263 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114259374 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081885548 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109343943 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07705993 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110701462 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093674036 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117276969 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111099397 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085430612 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094535505 seconds)
  done (took 1.81616348 seconds)
done (took 6.971296298 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091568188 seconds)
  done (took 0.814124717 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.920657528 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.913903129 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11103669 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148267421 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.292983059 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.189064473 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.475063194 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123522583 seconds)
  done (took 11.103838239 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.11475683 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.111459138 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102476677 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.084407078 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100272803 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081819685 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.099624074 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.1009472 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082398336 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097786791 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084145574 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097767674 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098476748 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081325582 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.1014261 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085447947 seconds)
  done (took 2.314293801 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118105394 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117752198 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103984989 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107856442 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086959584 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103276848 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104775981 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088998273 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.099838149 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103546246 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089789312 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104505606 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101580177 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079488768 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104022282 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.105684122 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085240489 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104390224 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.104843432 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088517779 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104137535 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094412903 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085668836 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105054101 seconds)
  done (took 3.223147566 seconds)
done (took 18.181288023 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.155620041 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107364079 seconds)
  done (took 0.985393842 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094343181 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11162779 seconds)
  done (took 0.933610752 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098112405 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093981776 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.119546184 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109658923 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079912161 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095689778 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11809262 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080047018 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094783527 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079451006 seconds)
  done (took 1.70017983 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082585913 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108898266 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100336811 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09420073 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104806388 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094122738 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086317718 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097606619 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109121376 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076707278 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101945507 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11208079 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084638936 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114803019 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104069119 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082451884 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100877382 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09803472 seconds)
  done (took 2.485644774 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078565147 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096437559 seconds)
  done (took 0.90551475 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080376583 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092382673 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080783031 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09597109 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093511458 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075654037 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093372849 seconds)
  done (took 1.34346959 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.47980928 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135190228 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.25790812 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.100789757 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101984996 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.298850479 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096906691 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083668557 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101642201 seconds)
  done (took 2.443563234 seconds)
done (took 11.524491267 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094016592 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116482698 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111473791 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.456009408 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106344394 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097825566 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146193726 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.24350285 seconds)
done (took 2.113430144 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.142208481 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322477797 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112604454 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066311823 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094169788 seconds)
  done (took 1.337585171 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079214511 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098679054 seconds)
  done (took 0.91745381 seconds)
done (took 3.138538383 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080876703 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.095754688 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.077154495 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.095883296 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.076857429 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09437099 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.110605419 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097409073 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079254139 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.097767172 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.094593584 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079191765 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095750689 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077142924 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093949561 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.078877189 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096881997 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076511815 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093615034 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077227667 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095725918 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077840033 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.092944724 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079188328 seconds)
  done (took 2.889409021 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099600639 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.0963754 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102010945 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084228602 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101021596 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085144066 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101693042 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096199757 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087226102 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097909967 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101263588 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084067183 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097680731 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08329169 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09814474 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099345811 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085254028 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097314629 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082044607 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099932363 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.100505098 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080379323 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099770068 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100800267 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082887498 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099346669 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081809357 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096083676 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102088428 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.082864407 seconds)
  done (took 3.549129619 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084243089 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093863764 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077569108 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100758133 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076497628 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095983831 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077590048 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094777647 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078354543 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094341965 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078380392 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093393845 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077145667 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09534003 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078548395 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.096675548 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107139706 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077351479 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095692001 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077448358 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.096899208 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076538856 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094269171 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077406808 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093751638 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077541507 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094303855 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077397337 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095072895 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076713024 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.096540097 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080376668 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094070112 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08412556 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09816449 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077621695 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096577766 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077078919 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095010927 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093536644 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077019701 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093390308 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076415384 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100571765 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077440772 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096523172 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078440146 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096077082 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077863667 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09819504 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077822175 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093720585 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079148664 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094946004 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083035281 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09367797 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094463706 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076705563 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095047566 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07722501 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093422491 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077270941 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096475939 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077493352 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110194622 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084107734 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093297837 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079286292 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095048982 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080023144 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096027514 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108334447 seconds)
  done (took 7.079333549 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082143105 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104571675 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079441688 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096943397 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076614634 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094649875 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098931858 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07857747 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095850653 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084808309 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094375517 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078962214 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096452417 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107869106 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077777138 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097422656 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085047079 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092400478 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078156464 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098342792 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079110362 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097948966 seconds)
  done (took 2.726171573 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209285005 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105142882 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139718543 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105637146 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082399221 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105722431 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10095923 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086165097 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101057697 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083872577 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098995353 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101235347 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082478486 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098718544 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099999919 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084903477 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10118093 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084492598 seconds)
  done (took 2.625714317 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092318387 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097614903 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101350218 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097701002 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09779051 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0826114 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102602167 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106179134 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083511021 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097995971 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.08955308 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099513763 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099898142 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080851613 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100173644 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080368946 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099312914 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080028763 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106141693 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102587905 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103164354 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089727221 seconds)
  done (took 2.846667893 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095530561 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099544822 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.11621776 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083447105 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094255539 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078757258 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104981764 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080659894 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10569661 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09918451 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081043111 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096684635 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087213517 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09670613 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103364187 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081024427 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099909155 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081189346 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099772965 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077536509 seconds)
  done (took 2.618458179 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101595633 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099669935 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.205858351 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091592261 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099665222 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08304803 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108182715 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099629709 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08328726 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123608123 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09956833 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082232191 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109909488 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105144977 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098412831 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091346751 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108587361 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108431791 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082135903 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098905238 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124949108 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083037186 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109508625 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098981164 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082710962 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09883461 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099037274 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087720094 seconds)
  done (took 3.622125453 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080892866 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098152186 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077809821 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096563052 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077620207 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095197153 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078241617 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094967509 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080133242 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09545873 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080843601 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097349401 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082182323 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098311076 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080036354 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097083942 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079489914 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.094619127 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077945501 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094901181 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081153168 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0972987 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081255047 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095148986 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078346451 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.096833158 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078437694 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094846599 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081175093 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095298917 seconds)
  done (took 3.396952141 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090328145 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104837878 seconds)
  done (took 0.952812575 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078666119 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113079658 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077631416 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101356345 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085699765 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099780762 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106410573 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08584145 seconds)
  done (took 1.507704163 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.094685558 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.108849909 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082269096 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110405033 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108005555 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097770271 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167862378 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099365456 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087243817 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096693092 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111258523 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080326957 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104866918 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081658892 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.1044603 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087418997 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095653952 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10449922 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.0842175 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096949101 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082788658 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107522148 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083034043 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.094735634 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100096231 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090262939 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111106599 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082571578 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101171288 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105144667 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08653611 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092759437 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080927004 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098850817 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.07924593 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107880075 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115115335 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084413101 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108315109 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082353672 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111274059 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093849293 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086035453 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104563666 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108942211 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082388428 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099558011 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076162173 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096485857 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083900904 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093026019 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081599384 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093443154 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08886042 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.101453783 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109972842 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.07964887 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100123699 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084313154 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101990429 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088899794 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100622379 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101334964 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081413122 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105558939 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085476668 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109744945 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076224682 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09270112 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096551046 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091816155 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12198173 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.087495079 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099547415 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099814685 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.0787838 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10256377 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084358725 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105171388 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105165373 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08221239 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106390225 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089951596 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100238249 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085201395 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10722689 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097344071 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08441317 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096426472 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116963911 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080453935 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097969466 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.078555531 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110626569 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084776161 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098737538 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079058729 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105392965 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092853597 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082196406 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099533043 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081107445 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109456092 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104394781 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087632295 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107412576 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088493388 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099173639 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.101986487 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.077884287 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100690449 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083426016 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.105372437 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075724441 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101986492 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082596778 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.09988911 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108965371 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080334237 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099870111 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089559064 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.104130742 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081168894 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096095819 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102139583 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.080893398 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103571082 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090877834 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098127834 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076357229 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093133807 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102162147 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081768726 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102132044 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087033057 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102252719 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076386565 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097350437 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104183587 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.090372264 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.098539014 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082689306 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105253709 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.101252287 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08126203 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105466961 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084191408 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.098045214 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088860974 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.099994738 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077642987 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103041718 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102686135 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.079842706 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103506544 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08639398 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102021506 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082184219 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098144005 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.104780561 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083623362 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.09781788 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082768295 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09726838 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092899436 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101095281 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094670467 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079219169 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.10692852 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08076923 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098352234 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080541534 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101430006 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082620167 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096598938 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098501967 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.083256073 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111801649 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086964385 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100748764 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10489294 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092747411 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.09808361 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084468151 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099438847 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10061796 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083057552 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.108474285 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087623485 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104089045 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10158909 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078165246 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105557927 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089861907 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098846059 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079749702 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097834461 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085118281 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105198642 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103349522 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.082869979 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097382535 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08344 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102849167 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103395127 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081570511 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.09833187 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086215328 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.098319653 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.08914245 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101077947 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110146852 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085964321 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094490226 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087516279 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098061975 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105497516 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077086199 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097555232 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081602813 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100449903 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.080755075 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103105431 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.075941544 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10731032 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090264183 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099829203 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099493626 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082086122 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106567565 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084157245 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103991186 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085786483 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106202485 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110962437 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082278547 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.102988053 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09294471 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099695112 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076348999 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105117625 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098277253 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081323693 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098316127 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080441775 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103101849 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091550094 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106852153 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093292838 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08451152 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.09816977 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080344666 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094862405 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086843443 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102868587 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083706615 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106315006 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100475288 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.083625517 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103517855 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081660356 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100031292 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101985099 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085638649 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100617894 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084704912 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099709076 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085025769 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101065003 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079877165 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.100758304 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082432029 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.10083442 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105630283 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081425636 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099889757 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085110333 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100705569 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082929444 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100216795 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.098713258 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085754948 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100073017 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082201656 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103203187 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077788304 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107079146 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081754681 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107447265 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.099422669 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078202509 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105011439 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085793115 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105586175 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.082896162 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101587504 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101168131 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081676232 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.102738656 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089830557 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098008577 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093893053 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108027011 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100782969 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084608501 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.099269053 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084223706 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099331144 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083315381 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101126263 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09977262 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081629202 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105102592 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085481774 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.100028077 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084093558 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101078943 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082684735 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10144181 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094984158 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082629079 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.099441926 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082942131 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110228496 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083653216 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104398081 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099291294 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08387706 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098790234 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.07932738 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.107947283 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110122878 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083398981 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107192261 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081572392 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101346223 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093080435 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094633114 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098327411 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080550501 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09817922 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090165383 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101602654 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092205189 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100643849 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081493591 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096959374 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101492056 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081989366 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095991376 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080952287 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10415815 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084708241 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098456669 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082731495 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103674071 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083304717 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111247259 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.106578766 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083014082 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100670159 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.08048637 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.099192434 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082338449 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103218979 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101477423 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080556877 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098065337 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081793287 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101974071 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082902733 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100099099 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084100902 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107571013 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081662426 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103122724 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104044396 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078241277 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103068842 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083386695 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100181793 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081490269 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105482717 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105212535 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083354215 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109965371 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082550323 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10134007 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082429064 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098623984 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100842361 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082353752 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100639304 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08192325 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10198721 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091119856 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098980005 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085138771 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101431514 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101085848 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089272818 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10231681 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085869866 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109471077 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103869603 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084215587 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108970146 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086852127 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104572082 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08376966 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102168923 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107068649 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082781763 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.106750962 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082925425 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.101858654 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083921306 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099477136 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08212683 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100557886 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099383521 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089010853 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102218549 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082281432 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.099808521 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081681402 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.101610501 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105553943 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090493202 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103481333 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0861126 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096143729 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079644375 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102633822 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080364724 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.102782889 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104263829 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08924871 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103572419 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083890233 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100599298 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093098053 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10861176 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105904166 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080529413 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105208372 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084196083 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10378133 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084428938 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101680246 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102426934 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.08789279 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.102726686 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083083443 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108158614 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08674147 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102060137 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.083556275 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.10217528 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101018369 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.0780726 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101659022 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084612732 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10683283 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085296144 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101699438 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111200819 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082772257 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100565631 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086656564 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100158447 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088023102 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096466791 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083665514 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102190157 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101315679 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078469594 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100519851 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080720943 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.103176427 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082485989 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096503063 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111435157 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092150406 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.103651048 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082151859 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099599837 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078146964 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096844708 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082636391 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102591488 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102775961 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.0931529 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.100766159 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082218719 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096463236 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084188865 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104363198 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.086185536 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098774301 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097361783 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081605543 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104355968 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088613066 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099987547 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082939459 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104654774 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.085339239 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098990519 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105619653 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079528739 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.10407745 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096207283 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102692907 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082625852 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.10738432 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109812651 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084590982 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097252253 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084279399 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.10490779 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101402742 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084619736 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102198341 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098433702 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105098012 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.099898337 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081739979 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10417126 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082363604 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110065784 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0849683 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102482442 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106411345 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084995044 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111100028 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085253006 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110935727 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10421845 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085494262 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099756516 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083680249 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100524852 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081630464 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102683287 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.083801346 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107757975 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110467796 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082842748 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112585694 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110236786 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087785285 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.0976017 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083128618 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101267401 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078782343 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102276923 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081819784 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100132323 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080731097 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10053087 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.083846757 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10789148 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102990523 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.083810638 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102225441 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080895552 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.103452573 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086102176 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103103668 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079930785 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102354803 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102855206 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087456621 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105854634 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084002681 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.102976868 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085269603 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10238718 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079230458 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.108887171 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099538874 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085799887 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.100433774 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084387142 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10196001 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087456657 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108206207 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103016064 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085741616 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114140968 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086519055 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.098765817 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.08031779 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107403034 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.080840701 seconds)
  done (took 57.172272864 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145618402 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080841939 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097152521 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078157986 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111782764 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098004438 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078076235 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099007056 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080043618 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100983603 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078274924 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097838896 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108145388 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122786541 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091526545 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103149765 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078690847 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09840862 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096933006 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080253185 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106778249 seconds)
  done (took 2.843842732 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104839794 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115586423 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112464017 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117501005 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089186768 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114978835 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113644107 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114486919 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098431868 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109213393 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117795577 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113845436 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090058367 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109773395 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109753021 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09261615 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118014588 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107438282 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11410567 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094120387 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11231205 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112499088 seconds)
  done (took 3.192282666 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08321369 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100741717 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084605338 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09654563 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083196826 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.095768361 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087029006 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.098769004 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086882346 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.100558068 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080991009 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.100784541 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.102414234 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.077606368 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101071576 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080907125 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150711907 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105544115 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081801396 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102830044 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077959916 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.104517315 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.096854003 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079387328 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100447865 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087576494 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102429219 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080906499 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101352168 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082494162 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10267155 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079942429 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103268718 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.101478319 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081938408 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101439422 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084029914 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101876062 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078252451 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.099097559 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083094858 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.097299505 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083866015 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.102891812 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08196406 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100477866 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083951071 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101329742 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097229153 seconds)
  done (took 5.391642723 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103142678 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159231662 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084607411 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141475169 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119534296 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110718105 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087226664 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141926534 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100701941 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081793675 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120819532 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119246944 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102730311 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088743965 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109742007 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101761303 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085140297 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101094395 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107008112 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083377068 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107738961 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.088711565 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119212353 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.115619012 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106535013 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08213818 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101356048 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107093575 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097857784 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.107550173 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107904111 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091055462 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.118211157 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107796332 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082463009 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105300836 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12075177 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102603383 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085576869 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099676376 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086680739 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107453127 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.108973663 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101821046 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103752474 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10764669 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083921483 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099091636 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.115986601 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086001065 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.110722853 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118090069 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107096342 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083801422 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107030333 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.118930747 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.083851933 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100133753 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086145425 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116477076 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100155724 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087600333 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.116811917 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104527734 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110360099 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.096944136 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10733798 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106516175 seconds)
  done (took 8.01965412 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092801643 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109507399 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118665302 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118888446 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089671085 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.109129367 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108843501 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089517791 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109365688 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115051572 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109630493 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.131702342 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084916776 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112279717 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110303166 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0906182 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109660416 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108698437 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089773789 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109564817 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110498003 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118411999 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090294214 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119444883 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140479067 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10423181 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091005958 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10893059 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118918006 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109509763 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12083751 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091920694 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110251136 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.118534094 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123193988 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.08985499 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101821231 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1086757 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091329954 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111130447 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104214278 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099472077 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110006013 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104496305 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09037381 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109229492 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118696165 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.122129985 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11410446 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09664123 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.10929134 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118408368 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109347146 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091035151 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118705492 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145949894 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119255988 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119026099 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110076589 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100183161 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119738482 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127607393 seconds)
  done (took 7.575990017 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106013058 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114656831 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.115955995 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099646076 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081518616 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107142745 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082825504 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.100709531 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111496927 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094782969 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11540738 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10668354 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09104715 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115619662 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108099253 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110947087 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088389614 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108706091 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112192537 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10718325 seconds)
  done (took 2.901980486 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093839536 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122079373 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085060478 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111298893 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107124471 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090588393 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10611456 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10663705 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08541227 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106010791 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094669625 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115507282 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103649472 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091271753 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115429646 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11054817 seconds)
  done (took 2.468823982 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095803651 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115816111 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.118918382 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084600815 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103057328 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080304048 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104386892 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099981858 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080156307 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120438997 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084976712 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108112648 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102773609 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082473286 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100199865 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087749601 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100430631 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081766376 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105530738 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118374633 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096483026 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10243016 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104348879 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087078628 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103383192 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090334931 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.104391275 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101967475 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082363449 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103976882 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085703242 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112215581 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100827397 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083535779 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101725656 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082551541 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103487059 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084715101 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107415738 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103542883 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083117642 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103744399 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085280864 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105218554 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079914841 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104630935 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100022482 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091146054 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.101750455 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086063693 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103158226 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086432746 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105169589 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114070541 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087942729 seconds)
  done (took 6.182119733 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099948421 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107624622 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07997693 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102530365 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088257707 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10634718 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106798272 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087321222 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10498452 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082568173 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105673898 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088277556 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105872427 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106856476 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086283025 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107370765 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079453412 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105305667 seconds)
  done (took 2.583842568 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089271778 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103960462 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092636502 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104675687 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083940352 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107501421 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079862147 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102923521 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101841637 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085500846 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102955859 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087735646 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101832504 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086212981 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104243136 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084237635 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106440518 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102522965 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085239349 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099212566 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086730617 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102557877 seconds)
  done (took 2.932802245 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118091176 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123658967 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093106097 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228077797 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103281169 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.130624981 seconds)
  done (took 1.628375376 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108926794 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118618473 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10444246 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10682861 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113624309 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086148869 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106609697 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105888349 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116499045 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100274819 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106884376 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116657513 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116618925 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095916624 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113185081 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113690402 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107425163 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087075453 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10516307 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125898997 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086805765 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117014893 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106632709 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086368432 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107213277 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115846308 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117928798 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119718057 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086630776 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11715051 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1126569 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087646069 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117152992 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119740344 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107466688 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09800508 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106824489 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128017027 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114128303 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097875804 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107341094 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113617376 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097342892 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112489238 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116644467 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106653882 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092942859 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106882035 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106969326 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133657517 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094662823 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114365375 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112643101 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117860881 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096484284 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.152127802 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101050394 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116287498 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113970006 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120436233 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116466345 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094705504 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11667188 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121958278 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11383549 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115965247 seconds)
  done (took 8.056619103 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101561904 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125042674 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107224276 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121459357 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0957244 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105976427 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106533517 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087999812 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106711713 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106031165 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150023368 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087204348 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117152241 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116376336 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087601779 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107040124 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106587218 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116248584 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086718165 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134176575 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10691025 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11695794 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115913834 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096782262 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121302154 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113356332 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106168197 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088041785 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106614612 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106600808 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093952654 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106720666 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116187475 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086927745 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116587858 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106768069 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086693025 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112278121 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106625365 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11315984 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097236824 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127500933 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106459662 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106461819 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100572977 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107966468 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106923652 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08630217 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108085807 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106438483 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101855279 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121459282 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121122461 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116395586 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107285735 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088576808 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107013929 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106647854 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087879806 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112705543 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116283195 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087301459 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133778446 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107144014 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107551286 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115455731 seconds)
  done (took 7.928623958 seconds)
done (took 153.433205491 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.21670776 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.225505174 seconds)
  done (took 1.277984603 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097878013 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134101881 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095454496 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.166762398 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.104977604 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118619499 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137652479 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098005655 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.10557903 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085624983 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105535663 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086764541 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.169545989 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084655405 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105353522 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106823317 seconds)
  done (took 2.643788025 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.1985343 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.252536533 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102518176 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104713454 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089017127 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110305105 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.103656388 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090338176 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108510361 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084774668 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107119641 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.08575918 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.10398315 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085895554 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.10843682 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087528077 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104830121 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086964124 seconds)
  done (took 2.856002487 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112648871 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14189028 seconds)
  done (took 1.101309592 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118440646 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178868123 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.313317976 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154978491 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106109431 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125487895 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154746678 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128396607 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19477892 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.120797408 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.120239739 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097120441 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138415798 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.113192384 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093569735 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.115651225 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140051079 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092658925 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113467887 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114368682 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116189439 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105038087 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114895552 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092576498 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180039282 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.118065808 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085987909 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.104866538 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114230319 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093504453 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.111414752 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124559005 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098397347 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175097845 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101614006 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.173963771 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09750312 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.110416567 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114050504 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090748953 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.116758718 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116261609 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103471113 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.116635828 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084794639 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117770845 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104333078 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085407994 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11321401 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097769207 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.11400134 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.111325387 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154310922 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.116608183 seconds)
  done (took 7.451274194 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.798632 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.153161394 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090812332 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.88050561 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1341072 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10230941 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.774959951 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112027849 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259125709 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.755890023 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131468477 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118415471 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.203780188 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259582895 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.96836001 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291998554 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.687404164 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102682595 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.148709756 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152478969 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116399182 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134359352 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10774482 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.42800206 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115054448 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11063898 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096386572 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11921945 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158931666 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.123200989 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112270228 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176250376 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.246517291 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202893008 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113466112 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089549089 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109625303 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.166781325 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263157119 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191345477 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179362902 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107549494 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109365098 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100213069 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130794159 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106387384 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162662072 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172581743 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167972502 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.1145933 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117324416 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098457221 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119194799 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.162235146 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120582785 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313988948 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319152242 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089773569 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120328019 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124854801 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.2603387 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100963109 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223194965 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137332929 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210616208 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089567602 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.818106169 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167262322 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110488808 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095258393 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119954942 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114467696 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098112859 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166092834 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406858291 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12301516 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113425877 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088159025 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227434371 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123185575 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090017371 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159294072 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116277626 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119336849 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101450182 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121372591 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166816492 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251155983 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100697645 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117963875 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114495934 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103115899 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115705035 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213525008 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21685251 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.15933815 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234614224 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099096116 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.183697374 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167140655 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11838891 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.1720649 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117961367 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102187774 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120317589 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214123856 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144291303 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123293648 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092799755 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118060242 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14779135 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124782272 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096544719 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190610621 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458320658 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.165053566 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.10829923 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125110466 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097795211 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179976484 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094927738 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261039195 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119980713 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.166748379 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118684009 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087662371 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119572788 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161370712 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119786852 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119752159 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101067664 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11735964 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234615678 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.213778924 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119796438 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21974815 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.181245584 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116988064 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169519771 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121263336 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166046941 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118481544 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118896745 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095473724 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.810277823 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122198432 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098900695 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113993121 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186959847 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109530492 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102742921 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123198242 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085862107 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.823732519 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12421425 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.11988101 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102845042 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11646989 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118143632 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095424425 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114469686 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159842439 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227577921 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118759028 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118215473 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102095537 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157674945 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116330082 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124544116 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123688477 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102701326 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120370607 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113379806 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10197487 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188218701 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.160911306 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.217184593 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574428185 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111100424 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.122664746 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226626631 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090477992 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288974742 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118281647 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.199412069 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183826224 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099528189 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317864771 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184643445 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187278513 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104973072 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192677201 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087589825 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117782768 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168694789 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110472176 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095267293 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.181667482 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103840471 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121883017 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.97571376 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089149917 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250108744 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087936247 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169454727 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11608228 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118436274 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288898952 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089436493 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127107086 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163241506 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113996861 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12349761 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.85188548 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124604632 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121045131 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096077809 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220582645 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163362853 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119427228 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117919978 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097497924 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180438582 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210009614 seconds)
  done (took 43.95786673 seconds)
done (took 60.12741386 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278734336 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210135808 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.255389124 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.165685916 seconds)
  done (took 1.857221193 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.169818707 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150292547 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120183121 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106020602 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150726963 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084555659 seconds)
  done (took 1.652845849 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.320101164 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.259282745 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23527128 seconds)
  done (took 1.688808854 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.315734351 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.247223941 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.471488709 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.322079748 seconds)
  done (took 2.32697298 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208250461 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131405224 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.109881336 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104385358 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196154753 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.244411177 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140508483 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.198624364 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099468963 seconds)
  done (took 2.350554578 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.194604812 seconds)
done (took 10.944245226 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.166292163 seconds)
    (2/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.309622719 seconds)
    (3/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.11213048 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.21662422 seconds)
    (5/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.159781708 seconds)
    (6/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.238134258 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.091501052 seconds)
    (8/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.200494071 seconds)
    (9/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.125172887 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.12074413 seconds)
    (11/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.181920493 seconds)
    (12/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.202691746 seconds)
    (13/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.196677491 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115325953 seconds)
    (15/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.077834955 seconds)
    (16/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.20379696 seconds)
    (17/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.142592842 seconds)
    (18/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.172875728 seconds)
    (19/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.131644431 seconds)
    (20/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.106594597 seconds)
    (21/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.1219079 seconds)
    (22/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.114984599 seconds)
    (23/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094844339 seconds)
    (24/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.215303745 seconds)
    (25/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.184123791 seconds)
    (26/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.120520706 seconds)
    (27/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.094717753 seconds)
    (28/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.183250696 seconds)
    (29/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115957564 seconds)
    (30/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.209728247 seconds)
    (31/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.091368138 seconds)
    (32/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.133516999 seconds)
    (33/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.171070035 seconds)
    (34/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.1149872 seconds)
    (35/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.199457943 seconds)
    (36/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.211291531 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 0.213941564 seconds)
    (38/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099916965 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.115292094 seconds)
    (40/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.116919131 seconds)
    (41/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098977907 seconds)
    (42/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.087549804 seconds)
    (43/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.101590343 seconds)
    (44/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.161570953 seconds)
    (45/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.217398768 seconds)
    (46/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129896334 seconds)
    (47/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.14441174 seconds)
    (48/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115462443 seconds)
    (49/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.113442907 seconds)
    (50/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.18449955 seconds)
    (51/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.088120462 seconds)
    (52/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.232246561 seconds)
    (53/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.14935241 seconds)
    (54/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165432064 seconds)
    (55/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.184936018 seconds)
    (56/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.190639527 seconds)
    (57/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093966737 seconds)
    (58/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.107741178 seconds)
    (59/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132261097 seconds)
    (60/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.093451247 seconds)
    (61/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.188742963 seconds)
    (62/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.109388179 seconds)
    (63/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.076037967 seconds)
    (64/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.093774987 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.119697584 seconds)
    (66/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081596554 seconds)
    (67/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.132711557 seconds)
    (68/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.108865956 seconds)
    (69/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.114811141 seconds)
    (70/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111817072 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.134482673 seconds)
    (72/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.11289157 seconds)
    (73/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.182426905 seconds)
    (74/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.182203295 seconds)
    (75/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.113765867 seconds)
    (76/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093766558 seconds)
    (77/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.108623751 seconds)
    (78/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.232182839 seconds)
    (79/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.115396748 seconds)
    (80/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136540943 seconds)
    (81/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.13739378 seconds)
    (82/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090507974 seconds)
    (83/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.066482056 seconds)
    (84/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.088912497 seconds)
    (85/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.119632249 seconds)
    (86/286) benchmarking ("sort", Int64, false)...
    done (took 0.10957261 seconds)
    (87/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067233492 seconds)
    (88/286) benchmarking ("sort", Float64, true)...
    done (took 0.22043114 seconds)
    (89/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.192649505 seconds)
    (90/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.122297896 seconds)
    (91/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.174476428 seconds)
    (92/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.088439819 seconds)
    (93/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.181273681 seconds)
    (94/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093806119 seconds)
    (95/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.118417422 seconds)
    (96/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.149635775 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.111598955 seconds)
    (98/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.072174167 seconds)
    (99/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.089609118 seconds)
    (100/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.129644061 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.134268342 seconds)
    (102/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.083963835 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.107318281 seconds)
    (104/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.170503318 seconds)
    (105/286) benchmarking ("sort", Float32, true)...
    done (took 0.220615976 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.115143706 seconds)
    (107/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.098468425 seconds)
    (108/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066477232 seconds)
    (109/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120559548 seconds)
    (110/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.119118096 seconds)
    (111/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.087585136 seconds)
    (112/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093376604 seconds)
    (113/286) benchmarking ("sort", Float64, false)...
    done (took 0.169950183 seconds)
    (114/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115367736 seconds)
    (115/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.09491709 seconds)
    (116/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.119200849 seconds)
    (117/286) benchmarking ("sort", Int8, true)...
    done (took 0.211216164 seconds)
    (118/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095381072 seconds)
    (119/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.090293363 seconds)
    (120/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.098922437 seconds)
    (121/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.109217593 seconds)
    (122/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09527536 seconds)
    (123/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.087942666 seconds)
    (124/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09413804 seconds)
    (125/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.10748944 seconds)
    (126/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092975804 seconds)
    (127/286) benchmarking ("sort", Bool, false)...
    done (took 0.17844417 seconds)
    (128/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.116955497 seconds)
    (129/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.215797792 seconds)
    (130/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.133685731 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092681412 seconds)
    (132/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.151752472 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.093970535 seconds)
    (134/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.108351175 seconds)
    (135/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066982775 seconds)
    (136/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.114783751 seconds)
    (137/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066816276 seconds)
    (138/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.179985501 seconds)
    (139/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066720888 seconds)
    (140/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069132653 seconds)
    (141/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.116814547 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107203318 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093481368 seconds)
    (144/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.065887968 seconds)
    (145/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.08970395 seconds)
    (146/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104102108 seconds)
    (147/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.121962565 seconds)
    (148/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06744976 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.1073934 seconds)
    (150/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.090202276 seconds)
    (151/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.088691981 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.085827504 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.117012553 seconds)
    (154/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067107022 seconds)
    (155/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.108113019 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.096507134 seconds)
    (157/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.118011347 seconds)
    (158/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.214051308 seconds)
    (159/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066662032 seconds)
    (160/286) benchmarking ("sort", BigInt, true)...
    done (took 0.215113461 seconds)
    (161/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.087637687 seconds)
    (162/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.113684309 seconds)
    (163/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111856629 seconds)
    (164/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.109830379 seconds)
    (165/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.110915918 seconds)
    (166/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077574011 seconds)
    (167/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.17102053 seconds)
    (168/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097856572 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.107371523 seconds)
    (170/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.087607576 seconds)
    (171/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.088879981 seconds)
    (172/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067013559 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085990284 seconds)
    (174/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.089738771 seconds)
    (175/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.087995461 seconds)
    (176/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.106927643 seconds)
    (177/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.126015835 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.114729761 seconds)
    (179/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067384388 seconds)
    (180/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.193012289 seconds)
    (181/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066689931 seconds)
    (182/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.169568549 seconds)
    (183/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111807454 seconds)
    (184/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.09565165 seconds)
    (185/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.375147901 seconds)
    (186/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094526829 seconds)
    (187/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.123223213 seconds)
    (188/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.124031844 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108794371 seconds)
    (190/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.120470232 seconds)
    (191/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100028125 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.107922716 seconds)
    (193/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075023812 seconds)
    (194/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.066476302 seconds)
    (195/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.088367549 seconds)
    (196/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087945395 seconds)
    (197/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.088968884 seconds)
    (198/286) benchmarking ("sort", Bool, true)...
    done (took 0.210641891 seconds)
    (199/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085441096 seconds)
    (200/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.136243887 seconds)
    (201/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089000311 seconds)
    (202/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.065762079 seconds)
    (203/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.089365041 seconds)
    (204/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066020077 seconds)
    (205/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.183065034 seconds)
    (206/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.096993037 seconds)
    (207/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.108953945 seconds)
    (208/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.114567043 seconds)
    (209/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.162518464 seconds)
    (210/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.089745268 seconds)
    (211/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094251404 seconds)
    (212/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.117064538 seconds)
    (213/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.076939859 seconds)
    (214/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067092601 seconds)
    (215/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.115108482 seconds)
    (216/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.163654322 seconds)
    (217/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.170275756 seconds)
    (218/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077466125 seconds)
    (219/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.065913146 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110112431 seconds)
    (221/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091824393 seconds)
    (222/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.088079382 seconds)
    (223/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.077586334 seconds)
    (224/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.074951835 seconds)
    (225/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.10692818 seconds)
    (226/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099242908 seconds)
    (227/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.117957465 seconds)
    (228/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.181864656 seconds)
    (229/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086418931 seconds)
    (230/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.160210131 seconds)
    (231/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.084904972 seconds)
    (232/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.090048263 seconds)
    (233/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066510293 seconds)
    (234/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.123420285 seconds)
    (235/286) benchmarking ("sort", Float32, false)...
    done (took 0.171845515 seconds)
    (236/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.111739001 seconds)
    (237/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.113701468 seconds)
    (238/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.08919933 seconds)
    (239/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.109384218 seconds)
    (240/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.08560799 seconds)
    (241/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.0893791 seconds)
    (242/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088503939 seconds)
    (243/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.179283902 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08601503 seconds)
    (245/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.089054433 seconds)
    (246/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066700273 seconds)
    (247/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.07622477 seconds)
    (248/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.116596877 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092103824 seconds)
    (250/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.091591649 seconds)
    (251/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.088654153 seconds)
    (252/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.109936957 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095054419 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.107462979 seconds)
    (255/286) benchmarking ("sort", Int8, false)...
    done (took 0.186495092 seconds)
    (256/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.066751995 seconds)
    (257/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.088810215 seconds)
    (258/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.089609413 seconds)
    (259/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.111761287 seconds)
    (260/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.111485886 seconds)
    (261/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.093924188 seconds)
    (262/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.086839391 seconds)
    (263/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.088649148 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086113156 seconds)
    (265/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.10668667 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094533595 seconds)
    (267/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.116731127 seconds)
    (268/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08675086 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.106841595 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084310237 seconds)
    (271/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.08916411 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094564347 seconds)
    (273/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.089076897 seconds)
    (274/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.092347361 seconds)
    (275/286) benchmarking ("sort", BigInt, false)...
    done (took 0.216457691 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.107997924 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091569796 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.136305562 seconds)
    (279/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.116521013 seconds)
    (280/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.111758971 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.114194876 seconds)
    (282/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067337458 seconds)
    (283/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.066856582 seconds)
    (284/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.154960445 seconds)
    (285/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.121468362 seconds)
    (286/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.092830947 seconds)
  done (took 35.566324237 seconds)
done (took 36.444063007 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099111853 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146645224 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095031961 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.133714559 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122469091 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092034346 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.116456169 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097130246 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.121325929 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.122514738 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098471357 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.091757664 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098041893 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119110842 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096682428 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137074089 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122308651 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093836882 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.116984649 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086368368 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.11773614 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085846259 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111324484 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070551353 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120238005 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093817042 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.114468606 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118941451 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086704581 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108606182 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089521377 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116232785 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085175679 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122332311 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092512078 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117617378 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097146047 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.118199346 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.08755338 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.107204659 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115562571 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085644192 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.114572119 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093859564 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.113934358 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091559526 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.1170348 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098940412 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.13694942 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115071751 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.093842433 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.118755724 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095511497 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.115264012 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090352927 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.116973265 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091496356 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.137878643 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.117429094 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091680506 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.116453003 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095292268 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114334325 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094339083 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.1169901 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120399423 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098359329 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11369223 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096507929 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114227569 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085887022 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117564406 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.08933864 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.108320463 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095878254 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.119425005 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085600969 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115116008 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.093425933 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.11316002 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108420456 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08861 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11053208 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092290564 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111777013 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069459509 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089302271 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.114519747 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.08645928 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.117635087 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.114282309 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.092855399 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11108922 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098362274 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.108662895 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09198169 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.108921146 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.08729919 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.110177226 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090122424 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.108171467 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089071361 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.117785763 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087574909 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.114731177 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.098877147 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.108355295 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.115206412 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085940335 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.10840145 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101145488 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.118675861 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086866981 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114302348 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086680867 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.116606568 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085741723 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110233984 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087210366 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.108726424 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093140525 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.109781869 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08899618 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.116256257 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123845696 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086052426 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.112715409 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089379638 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109397156 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.091684414 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.109426737 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086279764 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111136302 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077039284 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111320783 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086458024 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.116786799 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089426705 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.11732177 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088285795 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.117998654 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091552124 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.114448867 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092735484 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108606468 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074097819 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115765501 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088720196 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.110860123 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087000304 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11133978 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087169453 seconds)
done (took 16.723777455 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087057491 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.181741788 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149827601 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.140476844 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106585294 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.109777236 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120578025 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117736879 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.111667656 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140360762 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109773765 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130122213 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.145123545 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086629058 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.109448162 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091644252 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114060102 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.125789426 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.120471588 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132605322 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.161784546 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085971762 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.144794185 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.132951491 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119017017 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113530875 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110519008 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091070937 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.113831363 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102769741 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.130843432 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.113569341 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087859609 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131333142 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10411628 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119236121 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08652504 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117689459 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109804843 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.087137035 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139375857 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132903387 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.091955999 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116373957 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091718627 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113106535 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08853114 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118347436 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097110604 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113443297 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124018546 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156167964 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090505892 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.119101775 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085466252 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120050745 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119913307 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089803914 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110809106 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089365167 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110006071 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091437805 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124403841 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141216537 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091317206 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.11952083 seconds)
  done (took 8.507086638 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104341052 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138132447 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105062967 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.128541837 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109425163 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08741498 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111137809 seconds)
  done (took 1.718530236 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087520734 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132630596 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111400962 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134005335 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.129523048 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.107807345 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122321106 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087972427 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.129526656 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088861874 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13154792 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149637272 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089696021 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119059449 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13695508 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087510554 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.135253833 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087834304 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11376434 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.1111691 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115517546 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.132583322 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089855206 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112198123 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102131512 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112045609 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160295097 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093723097 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11299229 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.090451161 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110379379 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.164826491 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10179845 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12296139 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088440256 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126288617 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.126227976 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086205272 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.128882418 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093880471 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.125373932 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089919686 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.112902584 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.102720809 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116501426 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.121739692 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.089397977 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.112941901 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091138118 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131352935 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089071393 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.125309393 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088315264 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115905534 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090354057 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117125631 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122005834 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089103234 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131685433 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089901811 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129457288 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104468498 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.126933012 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.128764028 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090875323 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.125166476 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102752563 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115039441 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089633661 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.114943675 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.128464868 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086065062 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114097332 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.098861262 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113828429 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112906517 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.135414933 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089572984 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.122831474 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.112631945 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089547171 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.112758744 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11248066 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118781005 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088490536 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116730807 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091643545 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.110017789 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088468389 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.115961176 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087379167 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.113607467 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091579224 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113319775 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.114847251 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105013646 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112519378 seconds)
  done (took 11.682760134 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089800764 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113305158 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091604125 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.112059616 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089849547 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.113138082 seconds)
  done (took 1.558003644 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113023896 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115432565 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10421574 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118595606 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15345315 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103352667 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.127690314 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121841139 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107801689 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.124631281 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127456455 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104397942 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.133126063 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119161684 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103070182 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118289139 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103883794 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123424191 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125121756 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095836234 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.134280483 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119683016 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096740837 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.129832036 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116742543 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094864393 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124301939 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101413099 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125424032 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123202707 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096099584 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116216656 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095835086 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121407203 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.127883171 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095973493 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119540669 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.116976608 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100063877 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116497084 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104476103 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120538904 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125704958 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094152639 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.121545104 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119586582 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094305759 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124175822 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103422783 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.116961111 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.11720894 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094121772 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.116493954 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093914118 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.119518319 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121095406 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093395317 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.127671648 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095740145 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120443836 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116592697 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093612636 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121936513 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.115791602 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104537571 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.117189865 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094636037 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120242723 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120716563 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095760766 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118117581 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092288139 seconds)
  done (took 9.10341032 seconds)
done (took 33.503406265 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.669777705 seconds)
  done (took 1.615697078 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.813703471 seconds)
  done (took 1.761413905 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.619942737 seconds)
  done (took 16.595903783 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.475699793 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.588041297 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.991755572 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.19755758 seconds)
  done (took 3.202847196 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.929365548 seconds)
  done (took 1.897859133 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.281270423 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228974727 seconds)
  done (took 1.468107979 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.751444468 seconds)
  done (took 1.718319174 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.345443999 seconds)
  done (took 2.300814256 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323925839 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182044431 seconds)
  done (took 1.468516909 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.543916862 seconds)
  done (took 1.505885192 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.806774273 seconds)
  done (took 7.773415054 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.262256532 seconds)
  done (took 1.237659754 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299208836 seconds)
  done (took 1.264702669 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.24485123 seconds)
  done (took 4.213712259 seconds)
done (took 48.981060093 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097786731 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.124111472 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101272156 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.121775483 seconds)
  done (took 1.407079379 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100054051 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118314219 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099698795 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119122188 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12404673 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09531804 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121285365 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099850372 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119170584 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095509423 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119002846 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117777889 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098042205 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120067978 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092701466 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122534903 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098168511 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120597549 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122020145 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096701488 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116403415 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097049036 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123172004 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093388809 seconds)
  done (took 3.60062517 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099756471 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.116835289 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.0947217 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.116251967 seconds)
  done (took 1.401684706 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099313154 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140913254 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.136373589 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100496409 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.138989478 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.133872234 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092364219 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115705819 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093371138 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.123194073 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090279605 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.148763672 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.135245992 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.098439782 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.125511045 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087846917 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115968678 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.134342732 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.09960453 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.123493398 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092927243 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123027195 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089651891 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138174862 seconds)
  done (took 3.745882755 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169065274 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.125923993 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.136369147 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09450337 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.15882788 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.138629832 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087270306 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.1390455 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086948907 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.128877745 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.115715099 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133578332 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127768226 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087881859 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.111265474 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087450142 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12697517 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.126700351 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090297329 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.124912311 seconds)
  done (took 3.370652976 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097141572 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115288986 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087460964 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.114718301 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098431862 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.118988013 seconds)
  done (took 1.607532241 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.089800681 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.11220351 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089593637 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.112172188 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093449812 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113095973 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08795497 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113397141 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.088756452 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115033769 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089290781 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112127928 seconds)
  done (took 2.192338767 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.492073148 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114065926 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.11674114 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.087897543 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.119620458 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088163476 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.126846528 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092360112 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.138745123 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088740974 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.113962654 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090870952 seconds)
  done (took 2.644169178 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231781782 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124126982 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291204657 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364497184 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152787689 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175088824 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276315312 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162407195 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.221112434 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164497632 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234278614 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19595053 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15037524 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188920917 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136410493 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143619912 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201731902 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243036213 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15161902 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232102896 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196907348 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165185454 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178210813 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150149696 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137812101 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168863805 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119204857 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102883483 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230030221 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172730028 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212564769 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161201846 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145865096 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233397481 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248185493 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192447698 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279453243 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132590152 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.172514963 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142785192 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296285495 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111307786 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22987215 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154468476 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129955853 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191056919 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165471691 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17292361 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.15109115 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137654835 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217513459 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21016168 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.216002457 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110515608 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323576066 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151351512 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.173565521 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191505278 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249734474 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221790165 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185106185 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.092918788 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21172281 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188128219 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181843643 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.199519477 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.179891732 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146177988 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221287871 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185459508 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163269955 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189794223 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.21001481 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136735638 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166423371 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178516103 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170267099 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255175959 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181410926 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119892832 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167381064 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146223218 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105125976 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.191987653 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123115809 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21078216 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141904178 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.161092603 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236529204 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160144246 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156998123 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200785485 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226594323 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119809464 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.109358809 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152822282 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157540646 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192678166 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13816533 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162781343 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160500783 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128548915 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183123636 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12227893 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181987397 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090195519 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1988206 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181714616 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.123861063 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132643045 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149393259 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150551257 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171034764 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222951046 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140795826 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105482456 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232389324 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177702758 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150067231 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183941323 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198954448 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.141925247 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146992961 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22346133 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215548699 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138384995 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201351444 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153641862 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132558146 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.129961803 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180509552 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152198796 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159746882 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133066047 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181349568 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23586345 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098259537 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137020827 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189904984 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131842829 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131068878 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162251427 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146100697 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111681954 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148932123 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152073036 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205024695 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177527387 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152229781 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16400693 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151245978 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250879247 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139484677 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.123208994 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146898291 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118604314 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.189962075 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195300053 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131511566 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227573052 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174546487 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201348722 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191886836 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107026516 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174818411 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128628635 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092110448 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218197654 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165237272 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160083097 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.193813055 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223226749 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.176805504 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.205467066 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17227628 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171269809 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163382907 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154561211 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114602589 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157896199 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19417898 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.095654956 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.14208872 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.131247465 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146009359 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140021784 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107504663 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220377516 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168864403 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18752989 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156289554 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148620269 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17881205 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.126325108 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171909741 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176485536 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144880531 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.221825996 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1914205 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182118401 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142860183 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22261564 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093172455 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122609503 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.139411632 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172620319 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105293643 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134443421 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161180603 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178464177 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206731013 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175041351 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232637388 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170941632 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189217148 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.09423728 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167055769 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216097856 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175358656 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.187295313 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115403188 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.148231132 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176877982 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155599015 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254063932 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166637365 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174203158 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235669591 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.148971869 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129818751 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126498111 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220618108 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152549324 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180052598 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148934099 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139494807 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163342153 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.105622169 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184874002 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184072487 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16057917 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18798448 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152570304 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209498259 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100168312 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160078109 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158148284 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163116129 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10689426 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174933463 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235534479 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147011692 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169699619 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19612105 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129310945 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.305435119 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246616371 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195305059 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13725031 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154768602 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158232617 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17006865 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173574164 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176743508 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157090084 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186333168 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157001846 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140768375 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139195881 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147107716 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122104024 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.130421365 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147967685 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.173983878 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138862718 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183442569 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161343218 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156970043 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171067591 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146652733 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143002659 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149969557 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212741273 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207047976 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208285931 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149534735 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180861281 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232127918 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097946198 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129687152 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132204011 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177126321 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134635653 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193949413 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.185475276 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227597598 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180121431 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217467534 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110535121 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119331722 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154763661 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172922098 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229527449 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123663044 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.156866662 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236410741 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.145392196 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103266647 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20149677 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287683909 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143205435 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201727003 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.10567773 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.275431771 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101084202 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130040801 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169318598 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233474993 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133851972 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.160535787 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164965196 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196139425 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169989061 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147641382 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189959575 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213534689 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22581327 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176942503 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.131123189 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154130513 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176888536 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222507293 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15581614 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111877414 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226889658 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19412087 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.199473447 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.139796962 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166505888 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165021088 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156439845 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211449218 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105781203 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231601667 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131825534 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191827806 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150264964 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143088061 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173101713 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.186274269 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138499843 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220939481 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182262628 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132422301 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130149155 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167058118 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17957422 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154135264 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099385172 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204485855 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.096777844 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220035267 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253944837 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107185771 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152590004 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149286212 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133292791 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151471621 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156956815 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111180245 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.161020204 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233247278 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.107688242 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223813793 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224943959 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16800593 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174061202 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141882398 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691225745 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103994993 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2200184 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15691215 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203579314 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147766248 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170760731 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157839163 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166441071 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218604632 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158931657 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.227992421 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192648362 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.176964468 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13017587 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15708407 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159885755 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.141348555 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148861779 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166457758 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157857913 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.15218781 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176816806 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168476018 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133345241 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137346899 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19800334 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157556577 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181103147 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177405379 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136402576 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171682823 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182175908 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131896566 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177178854 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233387863 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140546463 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148960575 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.104605664 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154261363 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258182758 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123138249 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201471325 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210754001 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156699357 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166038596 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145738097 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193463724 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155345149 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208937096 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118448113 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.186651665 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127730793 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135879686 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128880459 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152776775 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166150465 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.146762617 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15723623 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.137080836 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189107446 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124694025 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142021236 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287088364 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214957582 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213870755 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138919048 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132793889 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158806036 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122681014 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.199420327 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17604031 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.133845125 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108045581 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135096086 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129347019 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138569366 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151900126 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193629754 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164811901 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230828179 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.106846058 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277795249 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138092926 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153843801 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087380024 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130683105 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147930853 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144359053 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156558879 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189062904 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261505718 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145639722 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.10482751 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147236552 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124878771 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107474108 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193450679 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162942587 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175597158 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14219171 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.08032732 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154324623 seconds)
  done (took 82.586708517 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.159325459 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130628116 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.144412564 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.198837601 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173042584 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267116307 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.206792126 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251169506 seconds)
  done (took 2.60271448 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092429569 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.142841251 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.154573557 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.130439876 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091162539 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.116899871 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.351619089 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131282419 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.115287263 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.119428787 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.169788155 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093849531 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.538916875 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090284721 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117157465 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.105305393 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.090749848 seconds)
  done (took 3.716338931 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.46635499 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.663203036 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.515737603 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097488382 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.942361869 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.111381774 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.330116883 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.187546439 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.112016098 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.454433581 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.771393914 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.153297958 seconds)
  done (took 17.877956617 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114175902 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.133787521 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122633481 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.149430264 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.138190775 seconds)
  done (took 1.737576213 seconds)
done (took 129.45396817 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103414487 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.403137462 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070036434 seconds)
  done (took 1.581717289 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.1057877 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.133715413 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107593981 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.133167059 seconds)
  done (took 1.564765761 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.096477126 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124351774 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.107757386 seconds)
  done (took 1.407157647 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.317328402 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.18674954 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.167608893 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.10625358 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126278753 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102056825 seconds)
  done (took 1.41633129 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097315954 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124120506 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096035723 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.127277865 seconds)
  done (took 1.527478603 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.092891607 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070491521 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.098040429 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074047887 seconds)
  done (took 1.412493441 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11290031 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.12917189 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103654952 seconds)
  done (took 1.428736648 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.128261369 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.135827115 seconds)
  done (took 1.347936563 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104588558 seconds)
  done (took 1.18429709 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117107492 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.166804753 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.186997464 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.162694249 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.22976953 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.164244868 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.138114733 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.112471808 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.128465353 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.141725197 seconds)
  done (took 2.633216399 seconds)
done (took 17.352388497 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101242767 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.414620659 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.410644792 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115385141 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729712328 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.3792891 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.017987676 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143066951 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.162184442 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092687488 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136103298 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.685326291 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.044379756 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.368206281 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.002492228 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.364137016 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678572364 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118232149 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118395158 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09249062 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.000500671 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.090903902 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118765439 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09097393 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.700527309 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422607376 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094529459 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.364885824 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09079903 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122880011 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382392862 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118733747 seconds)
  done (took 16.846746611 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093599605 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.16965015 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096798056 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134552342 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119597458 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093595468 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120619356 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093566476 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175441628 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121574505 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109577068 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117734789 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.122489364 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094159334 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137972826 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09162522 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.122240906 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092474859 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118132036 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117885822 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110747452 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118168644 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093399992 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118131461 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092353388 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132366501 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093601639 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118273538 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117543401 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098521697 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.123398447 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093124121 seconds)
  done (took 4.732967802 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140195901 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17865187 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.124878874 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125291598 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.164792478 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.120567605 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.194671199 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117233932 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178748832 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.119662001 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136776288 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.091641318 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153676844 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093485461 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139193644 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117358262 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096452254 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119857097 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092202898 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119655231 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137379198 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092516644 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119005311 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092134792 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.119614667 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107999996 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122061851 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118359862 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092416922 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122786337 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099034499 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.120716203 seconds)
  done (took 5.056851492 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097133395 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123039779 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.107463217 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.134768669 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094898359 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122591306 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096114516 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120850401 seconds)
  done (took 1.984116005 seconds)
done (took 29.699598045 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111846894 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123683699 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106184501 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130910695 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10160137 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.128213044 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091382738 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.131380529 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.130532484 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101432176 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134714686 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091438801 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.119159916 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091550273 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132909624 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097092284 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.129556912 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100742448 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.130194925 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.129016948 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.093813522 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.130292839 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10239857 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.130390388 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10441838 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.130467974 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.134296494 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099291032 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118832255 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093712266 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.121783943 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.102511473 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.121035332 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104832328 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124138168 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096029168 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121202201 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093497134 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.129613615 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.130392599 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.098267625 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.129971348 seconds)
  done (took 5.905443434 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.105817469 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.136268012 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104211178 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080065678 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.114226079 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079568539 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.13466096 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077842483 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.106841207 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.106994779 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072868902 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.103384606 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07823062 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.098373946 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076114372 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074102569 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.105714289 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074996566 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075385607 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.103150751 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079453953 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071469971 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.105893629 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077924527 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073895583 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109302636 seconds)
  done (took 3.518509906 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.098571406 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131973444 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111724492 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181017758 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.156490992 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098535298 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.129159132 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13649028 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10710129 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117164439 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.094771047 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.145472822 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108230136 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126116904 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090225623 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133624379 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132685266 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093348322 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124328999 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112062613 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.135300133 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101299142 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139868669 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.129864748 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091114656 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.1192926 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096695816 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13162834 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097201043 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.127830234 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095637623 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.121509703 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120846514 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103789228 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.122409476 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093532866 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138199135 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101593659 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127307932 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091355134 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.122733264 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.118582294 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113086195 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165486445 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091579755 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126715362 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.098285826 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129983427 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118933918 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11056464 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128266271 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.090863955 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.122359978 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091064671 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.118501189 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105651509 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.120883451 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094282367 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127713368 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.121523101 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104778354 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122302726 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108256214 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.118789449 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.098035013 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.118977719 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091700836 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118069604 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140268855 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093901097 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160056084 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092143855 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.120659527 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100633669 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126807275 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.124433124 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093392076 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133992117 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102149486 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122267659 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101089933 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.123086628 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09390345 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.137664248 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.093823393 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.120652403 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.118619693 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099863053 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.121604292 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093990829 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132947594 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091337513 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.121996113 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109914761 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119229536 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092421727 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128071334 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123144202 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091779757 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131462467 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097124046 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.11924641 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.10155494 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118641452 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.093497842 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.129253073 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123820328 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090882349 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123796372 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098103416 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.120146721 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092877868 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12227018 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093434619 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129607874 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098549251 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123985371 seconds)
  done (took 14.5469073 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.231156336 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.209655482 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.230307112 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.257136737 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.132018978 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.112758362 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.235243426 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.122980205 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.120208014 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.156346006 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171067439 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.177094609 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.166110812 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.176575364 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.165596183 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.091322405 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.139909074 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.161227431 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.2107329 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.255158639 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.140048575 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.127582795 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.128787071 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.156510786 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.134070565 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.130428152 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.108928013 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.131389852 seconds)
  done (took 5.685761254 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107733629 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151663087 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098218413 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.140948435 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144304631 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09122443 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.123923585 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093389151 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.131416102 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132668989 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092009226 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125778406 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.09867844 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.127716618 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.11959408 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.100933373 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.12774566 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094163475 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.122287331 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096555271 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.126587142 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100650737 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122605194 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.090282866 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.129263919 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117941405 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085487712 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138962811 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091814806 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.142667583 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.117355632 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098265883 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.129575526 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092740497 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12118843 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094279363 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.122407784 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09443698 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.121850791 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091245142 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.118791182 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076791036 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118110264 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133437048 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098057305 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.078477309 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125698286 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.125943083 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.093148225 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.117429847 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095361696 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.122222177 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.095685846 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.12742763 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098379711 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.120479251 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096137464 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.112427938 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098479445 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12129224 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.083509349 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.118560384 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097518916 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11424638 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100245989 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.125691602 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092005494 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.121349168 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096882416 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126119904 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.09431027 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.123893258 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.089954645 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.121852449 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094875742 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.124830804 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095567451 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.120195318 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119108044 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093215908 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074267478 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.120642075 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073505396 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.122641226 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.090929485 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.119610419 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094955015 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126797342 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134862666 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094825998 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.128360112 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093322591 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.11896623 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095659607 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.109655333 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09536016 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.136208826 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.136872022 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.092860405 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.117356538 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106076419 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.122495584 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092265307 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.102986995 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.099955803 seconds)
  done (took 12.690473059 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.12625061 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.150184274 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09392055 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140012324 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.151932109 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.154564181 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099813245 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.12725502 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094627046 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.139432891 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092961989 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.129324969 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096657456 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134293955 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.153298055 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103513074 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121659252 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106872017 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128787008 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.165507301 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110669245 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.138963537 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107049198 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.120832694 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.097430673 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.137466469 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.156935554 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106493365 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.133631138 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.137748671 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.106251626 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.157607057 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.111424852 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.12443877 seconds)
  done (took 5.377754739 seconds)
done (took 48.810168181 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.180554309 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.391400355 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.179950346 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.0211525 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.219615856 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.187712153 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.193180671 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.183151892 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.291842233 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.181115248 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.419591288 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.718134941 seconds)
done (took 60.279033507 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.183555672 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.31410582 seconds)
    (2/2) benchmarking "String"...
    done (took 1.445138454 seconds)
  done (took 3.867768691 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.603447656 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.054923866 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.441229675 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.176973897 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.18188668 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.470408388 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.643981415 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.389319674 seconds)
  done (took 27.468653805 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.188061344 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.252481358 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.204543044 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.185535649 seconds)
  done (took 5.944446998 seconds)
done (took 47.17957994 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.173502304 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.241890121 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.222363161 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.15884028 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.276987225 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.209370318 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.488270999 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.233798571 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.194492393 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.173704391 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.18459109 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.182716559 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.186782853 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.51148781 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.186210516 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.182264296 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.237975893 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.703458414 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.543821895 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.205990625 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.185217866 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.221723933 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.196680375 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.186057418 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.197107856 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.180217079 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.197923786 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.200797133 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.207504236 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.186803186 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.284358299 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.696633772 seconds)
  done (took 189.550892364 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.18068361 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.332475797 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.38617887 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.226477044 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.812541379 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.376166839 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.317017852 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.867875813 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.194644086 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.189647955 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.488758232 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.181459803 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.546167705 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.140565497 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.20937245 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.281892567 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.385082774 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.516528165 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.227260596 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.3358654 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.185262856 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.599326104 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.544810857 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.42406864 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.184578804 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.280988106 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.206608661 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.205333287 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.382451167 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.331261189 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.215251037 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.189674571 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.714916416 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.044134787 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.192650624 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.20507062 seconds)
  done (took 150.216563225 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.224942362 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.182721147 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.183495763 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.18249294 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.211884546 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.182636287 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.672505108 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.675454849 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.678953094 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.792607095 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.183805682 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.298091947 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.366178936 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.172014652 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.262170383 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.185620602 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.173364207 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.17912128 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.204495677 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.167137704 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.163599951 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.65140127 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.180360738 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.151076105 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.319859307 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.162999926 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.179202755 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.537353584 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.15058209 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.178370252 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.469101372 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.19471018 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.152625319 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.461018897 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.166449243 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257105681 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.148050626 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.175393304 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.147907152 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.417719637 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.147872787 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.147838247 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.147410194 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.1498004 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.735855945 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.147941048 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.638409139 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.151919098 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.040710408 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.148287146 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.147789659 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.35466805 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.646662909 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.157216943 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.142500694 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.146669486 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.143167114 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.144041106 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.16999539 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.348822006 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.22712994 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.154290024 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.142450063 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.167591646 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.140072556 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.212431254 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.132821765 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.252451051 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.207546966 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.357429683 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.625012559 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.136965014 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226506677 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.250196136 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.13426101 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.134281175 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.133166703 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.133643331 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.241149177 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.134287194 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.134377246 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.509287496 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.297129367 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.147042067 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.255743914 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.227165376 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.13415688 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.472593403 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.135053392 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.133570323 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.823030562 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.22782658 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.134992926 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.13519129 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.135219277 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.513477418 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.626716475 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.314880141 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.138563393 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.353184358 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.136223274 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.528657416 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.618338895 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.727198546 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.13769264 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.243287625 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.29879841 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.150840962 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.134900203 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.262952112 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.136210741 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.193118758 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.13438979 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.136567994 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.530711586 seconds)
  done (took 356.560489351 seconds)
done (took 698.660496394 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.787293919 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.785149466 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.884460918 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.778131368 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.75042512 seconds)
  done (took 10.052288429 seconds)
done (took 11.119531605 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.310031359 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.311440733 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.195395583 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.314008105 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.167549886 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.327502637 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.292825093 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.162903125 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.232754752 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.212166364 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.233004413 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.188705052 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.165352233 seconds)
  done (took 17.182791556 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.437289315 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.46490595 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.206090187 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.440990477 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.184937995 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.45039124 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.34039861 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.344428767 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.35071217 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.174451341 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.155839253 seconds)
  done (took 15.620893517 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.447502974 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.44445948 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.210386597 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.457162001 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.18454546 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.446384406 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.339200905 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.349636646 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.347945583 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.174711644 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.154937715 seconds)
  done (took 15.628789036 seconds)
done (took 49.500281086 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.150674183 seconds)
  done (took 2.222870132 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.184042509 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.343690939 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.169715778 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.157507055 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.151614688 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.154420834 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.157199696 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.153317308 seconds)
  done (took 10.545001245 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.149171478 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.151413393 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.152182258 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.153557372 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.1505324 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.150495727 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.152398522 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.153426591 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.144382216 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.144856834 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.14843502 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.145139815 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.144600363 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.144949539 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.147557271 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.148546644 seconds)
  done (took 19.457261252 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.142864414 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.140960743 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.142016004 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.141950858 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.141800304 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.140913076 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.142945862 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.141388843 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.142738608 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.138183379 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.138798556 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.13769802 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.139289383 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.138758045 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.140014719 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.139579429 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.139026906 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.138256409 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.141758535 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.138166308 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.138212735 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.13807028 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.137646111 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.139361292 seconds)
  done (took 28.433383855 seconds)
done (took 61.730622814 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.060584095 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.631963809 seconds)
  done (took 8.754655444 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.139937932 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.139917002 seconds)
  done (took 3.345825491 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.139965569 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.140345813 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.14032165 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.140653251 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.140458192 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.14132184 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.140864469 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.140728564 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.140708706 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.140570524 seconds)
  done (took 12.468731048 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.141301979 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.141550801 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.139096112 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.142075448 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.140869523 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.138128941 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.139937898 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.140867 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.142009535 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.138196478 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.14286686 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.139442187 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.142785396 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.139636164 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.141207064 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.139743609 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.139537256 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.140010403 seconds)
  done (took 21.592023442 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.141231683 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.140237972 seconds)
  done (took 3.345584628 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.139546875 seconds)
    (2/7) benchmarking "second"...
    done (took 1.140127108 seconds)
    (3/7) benchmarking "month"...
    done (took 1.139638142 seconds)
    (4/7) benchmarking "year"...
    done (took 1.139877786 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.138774463 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.140449887 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.139251493 seconds)
  done (took 9.042111353 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.142344897 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.317391031 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.390828052 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.749691642 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.145283597 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.146117903 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.037420217 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.146544083 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.149105704 seconds)
  done (took 13.288643111 seconds)
done (took 72.899436455 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.133454775 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.154493228 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.158443499 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.14349256 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.156049056 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.435408036 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.143738152 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.255286594 seconds)
done (took 36.645248029 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.136534893 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.118462305 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.760038652 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.121038442 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.085858407 seconds)
  done (took 18.150676807 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.064766317 seconds)
    (2/2) benchmarking "read"...
    done (took 1.473656272 seconds)
  done (took 4.603848854 seconds)
done (took 29.956702154 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.145420448 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.143686938 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.140763103 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.144071131 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.14153781 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.141380743 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.141475358 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.14451655 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.144835036 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.144643244 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.142409829 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.144975093 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.145691004 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.143285743 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.142315675 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.144908002 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.145204396 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.14298369 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.141937944 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.143570458 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.144994649 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.143780141 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.143177473 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.14637683 seconds)
  done (took 28.513944418 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.147551108 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.144031454 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.145395028 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.14612779 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.144938716 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.146920386 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.145838038 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.14424966 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.145982049 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.146274721 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.144758595 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.144432816 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.146188193 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.14424813 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.146730687 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.144770481 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.14702717 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.144277472 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.146819935 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.145016093 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.146788578 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.14389496 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.144593407 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.147339858 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.144194069 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.144919943 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.146423735 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.145561538 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.146846514 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.1456936 seconds)
  done (took 35.435460901 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.151269902 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.152404585 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.147011123 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.148292465 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.147256363 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.148116413 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.148422241 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.148730707 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.148221295 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.148655574 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.147312126 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.147666721 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.147313795 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.1478745 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.146947853 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.148674646 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.148697329 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.147918627 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.148273291 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.149273146 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.148444205 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.147775835 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.148661637 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.149542418 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.148786244 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.148142589 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.149105757 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.149038985 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.149952394 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.148196494 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.148382386 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.148388028 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.148348815 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.148935643 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.148644928 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.148874589 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.153218263 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.15630326 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.149585102 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.148947937 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.148749607 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.147936691 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.149357237 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.148710607 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.150076075 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.150362942 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.149565894 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.14960887 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.150505697 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.149698317 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.150015223 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.15033664 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.150570457 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.150588808 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.150078734 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.150786524 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.149760562 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.150298533 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.151029293 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.150685294 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.152057136 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.150064913 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.15116855 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.150358905 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.152050944 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.150157984 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.15131645 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.151979929 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.149807704 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.150993976 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.151233336 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.151896153 seconds)
  done (took 83.838064826 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.151536299 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.149752659 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.148471685 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.148967218 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.148289328 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.151992825 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.149939152 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.151851229 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.14830461 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.151257814 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.151749526 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.151117983 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.149262182 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.152642927 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.152135219 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.149806464 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.152491906 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.150823735 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.152378686 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.153115987 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.152009139 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.150419178 seconds)
  done (took 26.391452972 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.15269113 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.154727331 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.150923687 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.152562815 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.150723641 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.152429872 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.152976062 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.153856617 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.152750047 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.150885434 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.151764052 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152614355 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.150803186 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.149847155 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.150371033 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.152544521 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.153103877 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.152022554 seconds)
  done (took 21.811382232 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.152229458 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.151817268 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.153847711 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.15177 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.150910966 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.154379833 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.152365412 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.155008403 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.153926425 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.152390187 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.15317513 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.154333305 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.154428091 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.151813365 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.154928153 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.152865843 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.155148309 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151881359 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.155432589 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.151675763 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.151712881 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.155391465 seconds)
  done (took 26.445989139 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.155117814 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.155888488 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.153169974 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.153128562 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.152854906 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.155227339 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.154857438 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.153654366 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.157344678 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.155265686 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.153416861 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.155639685 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.154239951 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.154787757 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.153693463 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.152944386 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.155493996 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.154800993 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.156085666 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.15513451 seconds)
  done (took 24.169283216 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.15683016 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.157375897 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.156958007 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.156511579 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.157114628 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.157838277 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.15739208 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.158079671 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.158138205 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.158102717 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.157312915 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.158271645 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.15838059 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.157445733 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.158171628 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.157307478 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.158824504 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.157972519 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.158251774 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.158916889 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.158520036 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.158906259 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.157750678 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.158042843 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.158075597 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.158926459 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.158283954 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.158263191 seconds)
  done (took 33.500501015 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.158777164 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.158330412 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.156030879 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.155832006 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.155167869 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.155772448 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.156146541 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.156042888 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.158464055 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.15622955 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.158628117 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.15920242 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.159520015 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.15904652 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.159208249 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.158680455 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.159337292 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.157188816 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.156634721 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.156672775 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.160004155 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.160536515 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.158832844 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.157822874 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.156965307 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.160034546 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.157737494 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.157912342 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.159671179 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.15736936 seconds)
  done (took 35.81684137 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.179019713 seconds)
    (2/2) benchmarking "in"...
    done (took 1.178635297 seconds)
  done (took 3.437569027 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.158367431 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.160603711 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.160325778 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.158034464 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.158661233 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.159873622 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.160032371 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.157437866 seconds)
  done (took 10.353772849 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.159848271 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.160760298 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.161875708 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.160698359 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.160871104 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.160274341 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.166344802 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.179020592 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.160851664 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.162248975 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.165044226 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.16594179 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.162865312 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.160245068 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.161239334 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.162451864 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.160886281 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.160951607 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.161951673 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.164368718 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.161542219 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.163526816 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.162985245 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.159148308 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.162591273 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.171875178 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.183144489 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.161609377 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.161278227 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.164314818 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.162266408 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.159636352 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.162326438 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.162176059 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.16354478 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.163174845 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.170408009 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.17818435 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.167543144 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.181207946 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.163713723 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.161176647 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.16306007 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.163677973 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.163429805 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.162118331 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.163602358 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.160844794 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.162551844 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.164898005 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.166933996 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.163218136 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.160991827 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.166175561 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.164496268 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.169259717 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.18038756 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.165283874 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.171598212 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.173221625 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.192220707 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.185311365 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.166318271 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.164073998 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.173490436 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.183282202 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.169795281 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.179847652 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.163084073 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.165185908 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.170300641 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.192409615 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.18690777 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.164469875 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.165549558 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.1653999 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.165042914 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.165117486 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.171273404 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.184720102 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.164677584 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.166422681 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.173605779 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.184242646 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.165196218 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.165633778 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.165155353 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.166897374 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.166905298 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.1759187 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.183021877 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.166826004 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.166043206 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.166074204 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.166566324 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.166918445 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.165084087 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.167222582 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.164785575 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.166448005 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.166222792 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.168814402 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.172515474 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.167783858 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.167992372 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.172423217 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.184972859 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.166636063 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.172220165 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.167514875 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.167134171 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.168220316 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.170882041 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.164651066 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.169464305 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.173992961 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.167155209 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.167399953 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.166727795 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.16825579 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.175741231 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.188573507 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.167890007 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.167572077 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.171995981 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.177057722 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.167912283 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.17091459 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.168146045 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.165790271 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.166610037 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.169547362 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.169320757 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.169886156 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.169296019 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.169214213 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.166339829 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.169457828 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.168001992 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.169502765 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.169988985 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.168058888 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.169242299 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.170813283 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.169861582 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.170859169 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.174924332 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.187320839 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.170667694 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.169979707 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.167345988 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.170465759 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.171857995 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.170337531 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.169986598 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.169294875 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.16989999 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.170336952 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.16996952 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.170108273 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.171525638 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.170420012 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.173335543 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.170254441 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.172550656 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.170378763 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.169253691 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.170478188 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.171719812 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.170353181 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.171292601 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.17010405 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.173740913 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.17702782 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.172379101 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.171275253 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.173624857 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.171055391 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.171516808 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.171961708 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.173939699 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.17778587 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.172298617 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.177586615 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.189733136 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.172414377 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.172033965 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.171660423 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.170750986 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.171425878 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.1747984 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.179026322 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.182812093 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.195042219 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.172719804 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.176293026 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.172181246 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.175775521 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.175392858 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.172367974 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.17293799 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.173613192 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.171472359 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.171975125 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.173847369 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.173703273 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.17397633 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.174279214 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.173459554 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.174426299 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.174844328 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.174502642 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.174376504 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.171430963 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.173191188 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.173570949 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.172531152 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.171624525 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.172092501 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.173919865 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.174901422 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.173389929 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.17894858 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.172116843 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.174107382 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.175348676 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.173636384 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.173632261 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.175654575 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.176323735 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.173478481 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.180898307 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.191527007 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.174788831 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.180144426 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.191951111 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.175006424 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.177109029 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.175892945 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.173554789 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.176655059 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.182616497 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.175325261 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.175275023 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.176018694 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.175875482 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.176108893 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.181039737 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.191071554 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.175578647 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.175160588 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.176732986 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.173994458 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.176144658 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.176331115 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.175896042 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.177708049 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.17611537 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.177944603 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.178216248 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.177062353 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.176448243 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.177736835 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.178155431 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.183012896 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.180296458 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.177047365 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.178543165 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.177705122 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.180608425 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.17788639 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.177784493 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.176249175 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.187276565 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.19924779 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.181526349 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.194571266 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.178900039 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.182978701 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.196007284 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.180823253 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.178107976 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.179062079 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.177582925 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.177445605 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.175519485 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.178676485 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.179325207 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.178668552 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.178639397 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.181750713 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.179330753 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.177942341 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.178548059 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.178326501 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.180595698 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.178977188 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.178770319 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.179961216 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.180232416 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.178008064 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.178334147 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.18562669 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.197074715 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.180234452 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.178063524 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.178183119 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.178729293 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.179166457 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.179438336 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.181590532 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.186067123 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.181392452 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.186095973 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.180814504 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.187177664 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.180337751 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.182409462 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.186449887 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.178778366 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.1795862 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.179967341 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.17996785 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.186640128 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.198076944 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.181003339 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.183826899 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.181171831 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.180149809 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.182188276 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.18039321 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.182266585 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.182123412 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.188548175 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.197899275 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.184741377 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.181087565 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.178181568 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.181323232 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.18194696 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.179916111 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.185077526 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.182019618 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.183222835 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.18175872 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.180923455 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.182173025 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.181813381 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.182357024 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.180296611 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.182968615 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.188720161 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.200813249 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.186801334 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.183309931 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.188910788 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.201239256 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.188879656 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.202263106 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.183284906 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.182460582 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.183020425 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.183110031 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.182795013 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.183740265 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.183127235 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.183942634 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.186346146 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.18371015 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.184213051 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.183744719 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.183285932 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.182551972 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.191707252 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.202699328 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.183148447 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.18735274 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.180662193 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.184089985 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.187670129 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.185388728 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.181784985 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.18595488 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.191317497 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.190520495 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.184076806 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.183850685 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.184004778 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.184626213 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.183933642 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.184744681 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.184104333 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.18473679 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.184982474 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.184458552 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.186163904 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.184529374 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.184811584 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.185246013 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.185687632 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.194003886 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.204087568 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.186000263 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.18538206 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.185868748 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.185550815 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.186104997 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.186075011 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.18578166 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.186297773 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.186356499 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.190916343 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.191248939 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.188874621 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.185775645 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.186234014 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.185954373 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.18648091 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.186537165 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.185788745 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.187436284 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.187629465 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.186574117 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.187598907 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.185488383 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.187976877 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.18747757 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.187672482 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.18903861 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.193002239 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.188081272 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.185446907 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.187958171 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.188278523 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.186219911 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.187753927 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.194265555 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.209276469 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.195465221 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.194288482 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.191789081 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.187864205 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.190978863 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.194132927 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.187247898 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.189123359 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.188477387 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.19133282 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.18884116 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.193202913 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.188526203 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.194665529 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.207237687 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.188136014 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.195599344 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.205748316 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.189318124 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.18925491 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.192517457 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.190311479 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.186762913 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.189632337 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.189457317 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.195193815 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.207500796 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.188696449 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.190435988 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.189005552 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.190615212 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.193649946 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.189916152 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.190699808 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.187750925 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.190093102 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.189746818 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.190513994 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.189398158 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.190668405 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.190105458 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.193072134 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.194420465 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.189054191 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.191965325 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.189232048 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.191127941 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.191371028 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.191283999 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.189361586 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.189142929 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.189587303 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.192040355 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.19152669 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.193327568 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.189022782 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.191840079 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.192064535 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.192245199 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.193303502 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.19959076 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.198541476 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.189290368 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.191485047 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.192709901 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.193729422 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.192375566 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.193037021 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.192884765 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.193132293 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.191102898 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.192735895 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.192596868 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.194787547 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.206191475 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.210293692 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.192526187 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.193148664 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.194282893 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.194459834 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.191454164 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.194275135 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.194016915 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.197318018 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.200492939 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.194343523 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.199544405 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.210855936 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.194837614 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.197054633 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.195097115 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.199177457 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.196231624 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.194195199 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.195439119 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.197331985 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.206418088 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.195105061 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.202087153 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.218510907 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.213276198 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.195216676 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.19505545 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.19431797 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.194041938 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.196396081 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.19519527 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.195792266 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.194614187 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.19329514 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.195446179 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.1995109 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.19414378 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.196515717 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.195062199 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.193872445 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.195095305 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.192764883 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.194653887 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.194523613 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.196215654 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.19535456 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.19591113 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.195703494 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.205892655 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.218595537 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.196351577 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.195647288 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.193020044 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.198059189 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.197454679 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.204064101 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.202491532 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.196701825 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.196338351 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.196659348 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.196767407 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.195891977 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.197324734 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.195971097 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.1971742 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.19431496 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.206442515 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.219933303 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.199809839 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.196302215 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.197092214 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.197320766 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.197106318 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.197407435 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.197132843 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.198063225 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.200079762 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.199370474 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.197621713 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.198895945 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.200386681 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.204528318 seconds)
  done (took 705.273188811 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.195658731 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.196700397 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.195551511 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.195529767 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.196829769 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.195484428 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.195998407 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.197021415 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.195584382 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.195425106 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.196558532 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.196636339 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.196494652 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.196424899 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.196221613 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.196644151 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.196098015 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.197689917 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.196977015 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.197870566 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.197013451 seconds)
  done (took 26.240366518 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.199695073 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.196582533 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.196804175 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.198866723 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.198000107 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.199674839 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.196691107 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20052659 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.199627788 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196916159 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.199023263 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199289899 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.197687845 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.198190889 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197443166 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.200094556 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.199837509 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197669425 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.200267945 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.19765611 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200500215 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.198185534 seconds)
  done (took 27.486332334 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.200669482 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.200862434 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.198315593 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.198356307 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.201764754 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.197869776 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.200676766 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.200351419 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.201340912 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.201490773 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.199855994 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.200749922 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.206797649 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.204283193 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.203063269 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.201605323 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.346085204 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.200736869 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.20205608 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.200935346 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.199758704 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.206610033 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.218474475 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.198599288 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.200414779 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.201248649 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.202601613 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.203070042 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.201481889 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.202282751 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.204462131 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.201942176 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.201883464 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.203531738 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.202157027 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.203447078 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.205849613 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.203025673 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.201005485 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.203704441 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.211251665 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.219697473 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.203198393 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.20798422 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.223106889 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.204236724 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.206143533 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.209238977 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.200446478 seconds)
  done (took 60.236519488 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.203435516 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.20421737 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.200314397 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.20324589 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.203615458 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.203771612 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.204214421 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.20351377 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.202808089 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.20233873 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.205874858 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.201399939 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.2019894 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.204274463 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.203742974 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.201065868 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.203066021 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.202808447 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.202097174 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.20205459 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.201075082 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.205279153 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.204711691 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.202977415 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.204649659 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.202501879 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.201939277 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.205491401 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.203820647 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.202439486 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.204080608 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.205620286 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.204500063 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.202454599 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.203071463 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.204811168 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.206029979 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.203292545 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.20564398 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.203574832 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.207027538 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.20650357 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.206799775 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.205099717 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.203690223 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.202463274 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.203683361 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.203349085 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.203996716 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.20632814 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.206136672 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.203213396 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.206824815 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.204242563 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.206909646 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.20620731 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.204071711 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.203692689 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.20593477 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.204689211 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.204036399 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.207275115 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.204366743 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.206739395 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.207089183 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.204489406 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.205943541 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.207103737 seconds)
  done (took 83.008046126 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.206632999 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.207124629 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.205728367 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205791562 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.206868911 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.20754484 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.206588789 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.207725173 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.207349274 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.205927666 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.20754551 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.208931985 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.207943123 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.208499538 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.207520577 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.207493898 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.207238849 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.207529922 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.20783295 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206861567 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.207917976 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.207726551 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.207967868 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.208216958 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.207959975 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.208490633 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.208925112 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.208539881 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.208488441 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.208113834 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.209079968 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.20834613 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.208109478 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.208180248 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.208378757 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.207801004 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.207949787 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.208059931 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.208619715 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.209000674 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.209123594 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.20952701 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.209035215 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.208726341 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.208734218 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.208836748 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.210555087 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.209007301 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.209744321 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.209526847 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.208310025 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.209882997 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.209799381 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.209167603 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.20941982 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.210046193 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21057094 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.208688718 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.210418794 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.209919381 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.209720183 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.211007624 seconds)
  done (took 76.045716787 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211388315 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.211280376 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.208160465 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.208989046 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.211297607 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.209274817 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.211839691 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.210703074 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.211816036 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.211572498 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211925288 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208009916 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2096854 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212096519 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.209542446 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209254447 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208414198 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.209300939 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211327688 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.210051224 seconds)
  done (took 25.333640093 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.210054939 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.212828149 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.209605668 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.210420591 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.213450123 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.209581282 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.212429683 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212886974 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208931843 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212719658 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.212331815 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.212681887 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210172393 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.210167056 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.212791369 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.210211989 seconds)
  done (took 20.510119719 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.210648094 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.213370193 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.211983556 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.213455965 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.210930958 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.211503546 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.214256516 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.211155597 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.21244992 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.213935331 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.214479317 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.213492933 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.213123268 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.213294945 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.211515612 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.213793026 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.211510509 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.21158141 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.213004003 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.213961815 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.210435571 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.211311078 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.213878335 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.215031659 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.211885033 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.212992071 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.210798748 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.21233267 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.212598152 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.214409884 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.2123012 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.21257358 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.212504258 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.211530502 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.214391389 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.211899805 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.214862258 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.214727232 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.215035804 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.215326425 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.214852694 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.212059753 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.214999087 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.216469655 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.213308534 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.214893217 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.213375155 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.214483725 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.212441066 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.213153812 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.215521406 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.215335172 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.216265003 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.21626898 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.217430013 seconds)
  done (took 67.865453525 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215998456 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.215847388 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.212701371 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.217128078 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.217092338 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.213501054 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.216578744 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.216277131 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214678732 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.218246669 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.21610955 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.218682396 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214857568 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.21736735 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.215215082 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217158072 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.214515803 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.215278419 seconds)
  done (took 23.019842708 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.216564342 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.216083945 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.217728801 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.214230201 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.214830461 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.217749199 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215414543 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.218163605 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217952279 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.216431996 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215903219 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.21898579 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21870214 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.218906523 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.215654973 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21690654 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.219462291 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219000476 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.21592342 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215629622 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.218726056 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219998893 seconds)
  done (took 27.913289172 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.217836947 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.217223734 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.216657714 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.234702202 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.234482008 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.238467279 seconds)
  done (took 8.494266435 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224913482 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219220892 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.216986881 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220179445 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219262757 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215874996 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216556959 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217852804 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219735928 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21668124 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217544371 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220206901 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218721149 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216613774 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218952579 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21882544 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217146951 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217210096 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218570811 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219482176 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217827534 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219393075 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217380129 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217741741 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218224618 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217033771 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220312971 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218645185 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218454838 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22083676 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220362035 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217822571 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220396616 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218154247 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22181328 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221836313 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218887294 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221596063 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221171109 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219080804 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.222586938 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221139765 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221733902 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219536936 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222200971 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219408615 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219158832 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218878623 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218980574 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22194984 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222593332 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219342447 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222258798 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222277416 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22341882 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222762326 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219527386 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220014839 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222624377 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220710385 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219980644 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222867042 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220375076 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221410289 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223001759 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220074281 seconds)
  done (took 81.665330155 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221892493 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.220059146 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220551489 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221849256 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220488546 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221959949 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219975328 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219553358 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219888186 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221265241 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223951212 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220732459 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221114804 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221177879 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220958978 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216808163 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217471881 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217462692 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216391238 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220378243 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217316448 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217948421 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218222939 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215866403 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215643097 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217566509 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215010332 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214817473 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215907616 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215832553 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214992683 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214851563 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21513614 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.216523497 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215882267 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215538801 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216291026 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214880821 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215826169 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217821616 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215953454 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219185082 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216563981 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216112318 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217065755 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215585719 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217412333 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217827066 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217500507 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216344927 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218137052 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216901271 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216573676 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216024307 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217583617 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217251419 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217843694 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216883663 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217184779 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219835844 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217343383 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217433592 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220604971 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217289537 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217563317 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217900367 seconds)
  done (took 81.518146839 seconds)
done (took 1645.390150408 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.246547518 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.29487467 seconds)
  done (took 13.677426944 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.380188675 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.335458779 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.218062373 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.21361106 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.218356795 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.240039538 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.242142434 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.218747155 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.216886772 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.218286222 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.217508144 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.403872674 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.213294395 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.217240245 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.21865502 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.31513998 seconds)
  done (took 41.225102431 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.241757106 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.229035244 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.330730628 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.249530842 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.249465305 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.402467387 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.28287482 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.232876805 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.387184403 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.271077629 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.704945834 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.252759377 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.22890143 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.283479607 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.249803127 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.402019663 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.462068517 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.714915641 seconds)
  done (took 28.313106179 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.639223118 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.255858676 seconds)
  done (took 9.038332623 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.246637976 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.229888736 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.229576971 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.227955955 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.23332285 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.22510876 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.227215989 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.232502632 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.592764926 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.349812127 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.233926951 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.236488262 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.246597104 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.229141679 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.226729032 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.262807572 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.367934189 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.228691582 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.225692347 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.234981882 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.229019192 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.310115772 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.269454682 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.228234551 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.346115233 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.606637061 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.237009881 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.236024608 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.351185876 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.228590595 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.22834762 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.22881726 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.230645283 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.827721451 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.699988601 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.242001383 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.272100759 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.237991086 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.228577104 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.376167944 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.231971732 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.235584848 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.232825193 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.69057062 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.369543606 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.340887271 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.401952694 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.25186768 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.232167998 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.291491306 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.231966963 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.23263161 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.258259801 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.977516351 seconds)
  done (took 105.027402756 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.287679548 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.624160112 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.390849677 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.248069724 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.884032805 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.906155583 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.243107354 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.490331475 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.251033932 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.224589565 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.516671663 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.716652544 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.25022811 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.230055912 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.443006148 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.286709994 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.226977741 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.974369003 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.24444459 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.230322766 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.710344563 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.229456746 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.245124372 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.392103664 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.263000473 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.666173165 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.576318793 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.681188449 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.250670153 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.225628243 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.674521434 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.245609365 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.266663277 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.227989539 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.480012878 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.567026947 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.560907932 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.250573558 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.241931355 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.226066132 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.242729731 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.659254406 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.572550068 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.246485482 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.24667076 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.663953057 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.246619058 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.232179836 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.225548828 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.443069163 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.13987673 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.227354728 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.56321908 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.232806337 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.59422242 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.276166861 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.306922401 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.694331872 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.246703939 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.314227999 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.275092742 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.226175841 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.230399817 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.228053679 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.22919669 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.558164703 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.737227643 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.229216617 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.558107767 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.690350191 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.249313721 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.755872098 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.269566247 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.25298264 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.333810147 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.227685289 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.783672406 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.702541495 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.259146029 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.227652185 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.540474988 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.246688367 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.500649863 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.243092645 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.227975375 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.740071943 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.237299287 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.257551043 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.227708937 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.247331479 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.900360959 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.23021411 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.488907836 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.283626411 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.229558906 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.228974468 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.263863372 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.229894978 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.229866801 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.235991909 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.743646884 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.255071302 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.333025644 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.251101665 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.231152412 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.235220581 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.2329984 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.232538151 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.461906264 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.781838308 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.254705393 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.232054577 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.229828764 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.255281208 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.399025673 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.229780795 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.521138013 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.252546098 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.230343111 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.254681726 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.938979252 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.29467286 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.23192496 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.235572023 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.09914502 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.439114754 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.248582341 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.229701887 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.230938883 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.248113775 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.39908521 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.249241478 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.254979296 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.232250809 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.923903224 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.277201108 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.237786704 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.805434135 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.232506164 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.001155053 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.249056143 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.233412616 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.523084502 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.489991414 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.658743872 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.23450866 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.250962173 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.908220216 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.260074041 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.370296401 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.249463331 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.277938927 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.429688427 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.838026142 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.232999133 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.854035107 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.235237245 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.460698359 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.23301398 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.549355909 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.704703122 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.254083658 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.232994881 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.918175145 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.956034508 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.917783698 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.239114714 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.500290721 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.17605714 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.70331567 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.233721731 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.234588109 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.68067039 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.236934702 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.239846559 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.232625347 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.233107029 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.385621312 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.404778245 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.388828555 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.240802877 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.667006 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.272741412 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.240352764 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.239809109 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.234336572 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.583041182 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.237159589 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.241169317 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.269833873 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.236214521 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.236058359 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.689293796 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.317755047 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.2438473 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.384030228 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.857226582 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.25577357 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.23512232 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.952103131 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.634933383 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.73052379 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.256900889 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.526140253 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.262732172 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.272066177 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.837729106 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329987994 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.692401081 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.255932124 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.241999611 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.815409471 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.257629939 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.592896162 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.236768547 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.237289738 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.751990571 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.258571682 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.236321201 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.426808942 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.25811423 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.500441497 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.239196331 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.275298079 seconds)
  done (took 1088.596912203 seconds)
done (took 1287.013640306 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.23695454 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.237358612 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.224481167 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.243862593 seconds)
  done (took 26.101801403 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.246750971 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.244815325 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.245215406 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.243083931 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.24663102 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.243085146 seconds)
  done (took 8.630052034 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.301653295 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.237870655 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.244070655 seconds)
  done (took 18.944001788 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.435899045 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.499494127 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.57868884 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.371714815 seconds)
  done (took 10.046054658 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.246795464 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.244766962 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.245364091 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.247474098 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.248830851 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.249847351 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.248602573 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.24753469 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.249208605 seconds)
  done (took 12.389190743 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.247959298 seconds)
done (took 78.517715636 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.255421891 seconds)
    (2/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.249746796 seconds)
    (3/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.330453815 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.855943347 seconds)
    (5/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.575911853 seconds)
    (6/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.573331688 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.507608856 seconds)
    (8/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.603295832 seconds)
    (9/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.980725898 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.280829793 seconds)
    (11/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.575317896 seconds)
    (12/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.221628131 seconds)
    (13/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.56596431 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.283358208 seconds)
    (15/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.22014626 seconds)
    (16/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.259946659 seconds)
    (17/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.602427881 seconds)
    (18/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.221618408 seconds)
    (19/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.255502275 seconds)
    (20/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.956218268 seconds)
    (21/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.601148547 seconds)
    (22/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.267733256 seconds)
    (23/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.325032306 seconds)
    (24/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.220512529 seconds)
    (25/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.179169471 seconds)
    (26/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.264084051 seconds)
    (27/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.352596909 seconds)
    (28/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.457381934 seconds)
    (29/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.272931322 seconds)
    (30/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.221083673 seconds)
    (31/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.688099456 seconds)
    (32/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.626929876 seconds)
    (33/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.227752274 seconds)
    (34/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.50320562 seconds)
    (35/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.007154024 seconds)
    (36/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.223245192 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 6.247631164 seconds)
    (38/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.384246729 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.377680337 seconds)
    (40/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.369645848 seconds)
    (41/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.350923103 seconds)
    (42/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.221894995 seconds)
    (43/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.959923621 seconds)
    (44/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.05126416 seconds)
    (45/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.236620207 seconds)
    (46/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.561329786 seconds)
    (47/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.022993292 seconds)
    (48/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.341892672 seconds)
    (49/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.033618169 seconds)
    (50/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.221081927 seconds)
    (51/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.235195744 seconds)
    (52/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.975516181 seconds)
    (53/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.609759836 seconds)
    (54/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.222712692 seconds)
    (55/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.454467634 seconds)
    (56/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.751228551 seconds)
    (57/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.353983545 seconds)
    (58/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.719296898 seconds)
    (59/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.503721205 seconds)
    (60/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.274515851 seconds)
    (61/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.225618245 seconds)
    (62/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.302507447 seconds)
    (63/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.965601469 seconds)
    (64/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.275370557 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.641372673 seconds)
    (66/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.850863203 seconds)
    (67/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.616513632 seconds)
    (68/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.306701833 seconds)
    (69/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.243007597 seconds)
    (70/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.345779204 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.143290497 seconds)
    (72/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.24860599 seconds)
    (73/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.845510963 seconds)
    (74/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.346841539 seconds)
    (75/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.829154592 seconds)
    (76/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.372860378 seconds)
    (77/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.243976462 seconds)
    (78/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.792139404 seconds)
    (79/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.086054094 seconds)
    (80/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.289772441 seconds)
    (81/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.59858206 seconds)
    (82/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.324192684 seconds)
    (83/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.422300562 seconds)
    (84/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.225173168 seconds)
    (85/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.234028943 seconds)
    (86/286) benchmarking ("sort", Int64, false)...
    done (took 5.428223642 seconds)
    (87/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.810975304 seconds)
    (88/286) benchmarking ("sort", Float64, true)...
    done (took 6.248674821 seconds)
    (89/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.729775963 seconds)
    (90/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.246024363 seconds)
    (91/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.760512346 seconds)
    (92/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.242037415 seconds)
    (93/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.254581949 seconds)
    (94/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.2884447 seconds)
    (95/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.24609231 seconds)
    (96/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.61951692 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.590897143 seconds)
    (98/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.244047462 seconds)
    (99/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.253205064 seconds)
    (100/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.984612967 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.59607662 seconds)
    (102/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.284715035 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.13795024 seconds)
    (104/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.241668205 seconds)
    (105/286) benchmarking ("sort", Float32, true)...
    done (took 6.246358401 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.859756518 seconds)
    (107/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.006956031 seconds)
    (108/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.226748886 seconds)
    (109/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.254799574 seconds)
    (110/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.259706587 seconds)
    (111/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.437074995 seconds)
    (112/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.262194649 seconds)
    (113/286) benchmarking ("sort", Float64, false)...
    done (took 5.528340892 seconds)
    (114/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.97760443 seconds)
    (115/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.468312466 seconds)
    (116/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.331465596 seconds)
    (117/286) benchmarking ("sort", Int8, true)...
    done (took 6.246116557 seconds)
    (118/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.27456981 seconds)
    (119/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.22778475 seconds)
    (120/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.263245219 seconds)
    (121/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.051275055 seconds)
    (122/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.273466509 seconds)
    (123/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.227178441 seconds)
    (124/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.293954874 seconds)
    (125/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.245073191 seconds)
    (126/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.296453354 seconds)
    (127/286) benchmarking ("sort", Bool, false)...
    done (took 1.76051513 seconds)
    (128/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.28675893 seconds)
    (129/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.227071413 seconds)
    (130/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.526518025 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.970578093 seconds)
    (132/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.330234297 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.527379126 seconds)
    (134/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.270615329 seconds)
    (135/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.544152052 seconds)
    (136/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.290894753 seconds)
    (137/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.230551696 seconds)
    (138/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.254043343 seconds)
    (139/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.23374071 seconds)
    (140/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.257848276 seconds)
    (141/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.387460771 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.995749476 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.278700666 seconds)
    (144/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.173238456 seconds)
    (145/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.238181006 seconds)
    (146/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.040809865 seconds)
    (147/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.947678312 seconds)
    (148/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.797709042 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.655863946 seconds)
    (150/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.368629625 seconds)
    (151/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.228548431 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.875372965 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.27582302 seconds)
    (154/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.629222396 seconds)
    (155/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.268704823 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.142040169 seconds)
    (157/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.353994064 seconds)
    (158/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.249347017 seconds)
    (159/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.203153709 seconds)
    (160/286) benchmarking ("sort", BigInt, true)...
    done (took 6.269273408 seconds)
    (161/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.346366088 seconds)
    (162/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.50399275 seconds)
    (163/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.280223742 seconds)
    (164/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.249322049 seconds)
    (165/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.36682153 seconds)
    (166/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.241496381 seconds)
    (167/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.40964728 seconds)
    (168/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.264451883 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.775454559 seconds)
    (170/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.333714419 seconds)
    (171/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.228345126 seconds)
    (172/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.231850873 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.809892607 seconds)
    (174/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.786977268 seconds)
    (175/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.339608386 seconds)
    (176/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.449277056 seconds)
    (177/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.482960522 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.281568703 seconds)
    (179/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.229607616 seconds)
    (180/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.287164133 seconds)
    (181/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.231312027 seconds)
    (182/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.438917911 seconds)
    (183/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.319727291 seconds)
    (184/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.292618622 seconds)
    (185/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.269627542 seconds)
    (186/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.274803898 seconds)
    (187/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.373214795 seconds)
    (188/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.498412075 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.090933719 seconds)
    (190/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.281012492 seconds)
    (191/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.397619075 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.88183548 seconds)
    (193/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.644640976 seconds)
    (194/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.846786607 seconds)
    (195/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.850799923 seconds)
    (196/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.256282109 seconds)
    (197/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.269101427 seconds)
    (198/286) benchmarking ("sort", Bool, true)...
    done (took 5.3482555 seconds)
    (199/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.323309888 seconds)
    (200/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.032537065 seconds)
    (201/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.424819482 seconds)
    (202/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.427251707 seconds)
    (203/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.827563316 seconds)
    (204/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.462998466 seconds)
    (205/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.237456726 seconds)
    (206/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.269242959 seconds)
    (207/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.302963984 seconds)
    (208/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.371084959 seconds)
    (209/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.347762717 seconds)
    (210/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.106741203 seconds)
    (211/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.474603173 seconds)
    (212/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.90720117 seconds)
    (213/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.601981796 seconds)
    (214/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.253943553 seconds)
    (215/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.960157626 seconds)
    (216/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.236294422 seconds)
    (217/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.241913386 seconds)
    (218/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.249914747 seconds)
    (219/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.974572978 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.655534028 seconds)
    (221/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.289196156 seconds)
    (222/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.636288293 seconds)
    (223/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.237905618 seconds)
    (224/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.661145755 seconds)
    (225/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.314057442 seconds)
    (226/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.336808481 seconds)
    (227/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.349727442 seconds)
    (228/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.070750087 seconds)
    (229/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.064567726 seconds)
    (230/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.258371198 seconds)
    (231/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.336150709 seconds)
    (232/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.232623737 seconds)
    (233/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.246622992 seconds)
    (234/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.589895777 seconds)
    (235/286) benchmarking ("sort", Float32, false)...
    done (took 5.24753101 seconds)
    (236/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.10445424 seconds)
    (237/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.297999738 seconds)
    (238/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.31854752 seconds)
    (239/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.253297374 seconds)
    (240/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.617931288 seconds)
    (241/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.442010788 seconds)
    (242/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.319233339 seconds)
    (243/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.355543019 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.45472546 seconds)
    (245/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.446965985 seconds)
    (246/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.794754916 seconds)
    (247/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.483541849 seconds)
    (248/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.341581477 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.280045566 seconds)
    (250/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.289440209 seconds)
    (251/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.383423097 seconds)
    (252/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.252408839 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.640202998 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.145751861 seconds)
    (255/286) benchmarking ("sort", Int8, false)...
    done (took 4.306092952 seconds)
    (256/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.459243488 seconds)
    (257/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.275908233 seconds)
    (258/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.296233884 seconds)
    (259/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.325801546 seconds)
    (260/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.540743515 seconds)
    (261/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.10207961 seconds)
    (262/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.26982495 seconds)
    (263/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.080446929 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.668280175 seconds)
    (265/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.389251897 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.337321742 seconds)
    (267/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.264693923 seconds)
    (268/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.258361104 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.343692641 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.371190267 seconds)
    (271/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.236176744 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.084030381 seconds)
    (273/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.235783882 seconds)
    (274/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.361538114 seconds)
    (275/286) benchmarking ("sort", BigInt, false)...
    done (took 6.262168732 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.080293611 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.296918305 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.693697721 seconds)
    (279/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.276889082 seconds)
    (280/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.251685114 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.282258366 seconds)
    (282/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.265852436 seconds)
    (283/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.955320605 seconds)
    (284/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.365662908 seconds)
    (285/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.562991703 seconds)
    (286/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.277567125 seconds)
  done (took 910.834105784 seconds)
done (took 911.994780986 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.282598803 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.278952049 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.260273306 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.281823154 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.370909652 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.285529693 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.271708387 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.262840857 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.307774535 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.310334038 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.260502086 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.28472454 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.262811867 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.260608613 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.261146102 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.276683826 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.247442039 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.267663427 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.278825626 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.271170871 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.277856429 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.260696732 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.311483063 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.285138365 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.265638972 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.265197821 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.265387988 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.280556478 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.372934402 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.265101852 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.26560012 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.272764896 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.247532269 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.266638231 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.259289628 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.282188034 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.27423738 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.27207079 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.266173107 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.294291273 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.619412524 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.27844091 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.263768326 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.264331449 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.264155808 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.267019042 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.264039042 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.27063003 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.276791644 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.27841833 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.62582116 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.298483591 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.266847618 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.264648955 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.27553351 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.263903716 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.267425879 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.281204851 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.283505127 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.282364758 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.242645495 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.272820144 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.267496666 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.280763441 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.270978819 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.645551839 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.276379596 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.268653227 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.630675901 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.290866802 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.6492935 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.287663259 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.267439238 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.27863982 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.296910306 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.253380393 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.265828344 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.265185802 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.272072124 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.262858802 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.275817435 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.279946491 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.270174176 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.265557491 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.279594149 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.288783881 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.275573963 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.266950808 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.275300024 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.285507784 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.273145352 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.276998808 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.269557303 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.261929186 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.276474771 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.270190075 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.26959812 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.268957631 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.271438339 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.277763384 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.626281588 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.301094347 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.264371777 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.264852648 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.266836452 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.279967998 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.627294246 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.283891652 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.288747489 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.315264275 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.268370996 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.245357618 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.275268178 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.285235685 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.276513601 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.269801589 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.262539802 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.249476884 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.625542114 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.297954784 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.269580314 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.266013362 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.284600922 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.269711833 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.26490001 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.261788203 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.274371831 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.283106342 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.388324203 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.279360956 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.299673197 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.267065556 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.271073722 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.292228611 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.285329657 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.299801863 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.271443759 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.286513589 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.284664914 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.26581475 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.279129344 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.279668079 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.270056039 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.275116042 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.262701896 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.293012938 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.283255613 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.28236483 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.290471267 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.389607385 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.266420612 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.25105344 seconds)
done (took 214.157039352 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.32763676 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.26160772 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.350534254 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.266888712 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.367005302 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.365426484 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.264596754 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.265203312 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.265344801 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.640696141 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.263749377 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.265859249 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.267670644 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.264223073 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.351692806 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.267765826 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.264992995 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.603984123 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.266883281 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.343389088 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.262308596 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.265758027 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.268811268 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.648286175 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.266448363 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.26862882 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.338392436 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.268231032 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.614029254 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.260255935 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.263114169 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.615579569 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.357501674 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.284559027 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.278123347 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.275652511 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.36721478 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.285964945 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.350324372 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.349787622 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.352595665 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.307608725 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.261110283 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.268178823 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.270402292 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.269107383 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.266711776 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.296623378 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.26374923 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.266645828 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.65014043 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.282055463 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.268228838 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.26768685 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.268287803 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.297809389 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.26779467 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.271081024 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.365336131 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.27130116 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.33105545 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.649920666 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.644064335 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.269562441 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.26663932 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.267981892 seconds)
  done (took 144.067319389 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.335800086 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.345797551 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.380431432 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.287260014 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.319549893 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.384325717 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.28834821 seconds)
  done (took 10.525636323 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.275982761 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.270999158 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.319977548 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.320374477 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.271277945 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.418958603 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.271438104 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.281553898 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.269957349 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.323558292 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.273405513 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.271931516 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.277983084 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.270087646 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.31946288 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.281802255 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.386934761 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.271902581 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.272152251 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.422022984 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.271143127 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.280203 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.323163672 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.283546012 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.273455487 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.278612714 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.927815101 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.27263002 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.27038146 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.273569331 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.271267288 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.309359366 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.274160587 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.272349786 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.271835977 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.39010282 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.272212986 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.27108294 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.273291147 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.271427927 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.274376489 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.273175329 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.27449321 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.27104163 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.272861989 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.295886052 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.274298319 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.274115407 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.274075017 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.2746665 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.325481435 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.274374675 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.270805355 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.273522342 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.330602157 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.282080964 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.2750752 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.272265313 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.27463122 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.272238144 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.425245088 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.322459321 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.275041375 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.322474956 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.27495224 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.274792614 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.276322074 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.274550784 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.328941753 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.275317121 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.321840395 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.273149023 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.428680265 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.296614664 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.276930915 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.277072119 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.278132779 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.27542836 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.270689515 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.281120776 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.274187413 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.276150951 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.280954224 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.273458154 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.274203198 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.378352825 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.408184273 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.274327843 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.288123489 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.282107334 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.273586227 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.330240124 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.276818043 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.274788623 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.327427376 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.391173595 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.329662077 seconds)
  done (took 147.444239746 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.281334441 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.283952948 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.277722661 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.293292135 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.276954436 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.276354244 seconds)
  done (took 8.878991069 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.278467516 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.277981659 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.278689476 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.277933176 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.277666384 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.279357688 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.278083941 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.279590152 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.2812954 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.277585647 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.280313216 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.278926383 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.280669561 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.278972488 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.279875515 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.279428671 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.279271151 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.277467745 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.279035743 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.279029359 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.373668917 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.279495156 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.279213032 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.278986184 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.284548033 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.28036135 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.287662173 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.279394643 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.279498529 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.285425732 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.297872831 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.281700348 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.281002704 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.286215209 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.282075768 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.280295483 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.284224166 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.281103219 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.278547005 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.281533002 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.281675354 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.281080802 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.280966617 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.282661393 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.281895314 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.284214295 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.286875961 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.290380025 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.281189684 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.282024539 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.282810299 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.281110116 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.282791991 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.282486094 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.282890375 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.30116812 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.285947365 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.282154721 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.2814172 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.28193634 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.283627408 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.282734983 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.283794608 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.284969741 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.288544049 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.283196471 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.283308127 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.28561776 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.282556412 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.281993889 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.283617186 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.280346619 seconds)
  done (took 94.597275902 seconds)
done (took 406.693151761 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.583094466 seconds)
  done (took 7.777549131 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.278898601 seconds)
  done (took 7.477798155 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.965603627 seconds)
  done (took 21.165762021 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.304412883 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.33585654 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.294741992 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.279410848 seconds)
  done (took 26.41333926 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.507518147 seconds)
  done (took 7.704688265 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.277926965 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.277995854 seconds)
  done (took 13.756193953 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.578909224 seconds)
  done (took 7.776862722 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.351160469 seconds)
  done (took 7.550443794 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.30502859 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.301300442 seconds)
  done (took 14.058874741 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.261509051 seconds)
  done (took 7.461575628 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.244508537 seconds)
  done (took 8.447690971 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.280039998 seconds)
  done (took 7.482870863 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.304977673 seconds)
  done (took 7.505356229 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.00210312 seconds)
  done (took 9.202833969 seconds)
done (took 154.977434615 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.28035999 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.281196411 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.281352357 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.280560592 seconds)
  done (took 26.323556109 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.321861167 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.322028078 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.32400111 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.333529715 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.325118404 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.321980237 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.316107435 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.314646286 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.333205827 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.324984666 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.324023101 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.325230292 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.321679581 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.316712656 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.325395204 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.32478032 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.33342261 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.324080868 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.315327706 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.326998405 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.290931097 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.33444009 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.327015015 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.290720013 seconds)
  done (took 32.919890848 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.809892825 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.361152908 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.442991956 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.340934778 seconds)
  done (took 7.157385102 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.34244448 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.343196546 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.354763016 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.395169315 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.419797379 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.353711891 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.316953913 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.312241064 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.298275338 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.3440266 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.420690673 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.359374703 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.427025839 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.291363859 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.475054802 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.29062483 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.291180861 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.34393913 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.395539627 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.409112642 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.291300544 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.344763003 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.346529547 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.360661808 seconds)
  done (took 33.731047712 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.291500319 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.309625595 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.290492966 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.289200364 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.299675643 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.291365451 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.291333906 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.292736929 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.291667152 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.296610262 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.290675179 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.304136336 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.291384941 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.290594377 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.297119178 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.29309616 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.298037527 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.290224695 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.292904301 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.298667989 seconds)
  done (took 27.095286443 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.284593607 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.141416035 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.636118785 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.54042444 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.285516476 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.291818949 seconds)
  done (took 27.384918821 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.358372218 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.507930735 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.298767961 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.63362588 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.723196484 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.309343465 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.292788187 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.523701147 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.83129341 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.823541973 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.354500125 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.360045684 seconds)
  done (took 19.223092691 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.297076625 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.292693921 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.303247708 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.308259661 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.345142603 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.311195915 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.299563407 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.285425147 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.35144156 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.365009758 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.312308173 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.346202349 seconds)
  done (took 37.023534289 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375627333 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332886436 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.190676752 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.339314727 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.03201046 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.501172469 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.355063933 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.744338754 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.300820225 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564405816 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290296446 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384720125 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.543414613 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298830464 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.295812852 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.240039277 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.539339513 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.75326897 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296921084 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.241243125 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322157195 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.302798217 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.242359387 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.325212849 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.501406746 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.431496337 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.5505882 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.068192852 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576504826 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.30806349 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300974427 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291721737 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565594666 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964941373 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409272074 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301939309 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307879251 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.926144133 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.287497219 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.160452699 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.078130419 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.299933393 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301011083 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291286864 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.226237875 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297583424 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.736326792 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.307164646 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.003278621 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.292608557 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.302889208 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386712825 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.294175689 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.863606359 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347499869 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.301081494 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.290456471 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382774079 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880628544 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.627004802 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.30851154 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.232409511 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.29375245 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.239685883 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921034219 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.41842675 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.297329697 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.297207044 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.227638283 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.215455656 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.315165089 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440177177 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.315978612 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.943148505 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970704964 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.317535124 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.246499127 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82571837 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31259312 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.233814416 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.519898913 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.068959435 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228932411 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.241233252 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.229125568 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97282303 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308564413 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.639817034 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.321342589 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.740896734 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.311218578 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315237129 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317950392 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.516574579 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.176122115 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294863155 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.12377854 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443840288 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316328269 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.726568778 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.23544394 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.298402506 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551218466 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.506267354 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.303396187 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.246957629 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.520270106 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313952364 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.315704824 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.297841468 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.31236836 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.853086549 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.328958 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.631429471 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319057017 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.074156107 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00819212 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301095314 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.402351424 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.297661942 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542178671 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.033288485 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.459432105 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.770946825 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30173665 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.296513595 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.255454158 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.894448701 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.455723235 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.293199427 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299890157 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.313279611 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.297689169 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245109284 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.293952275 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303426588 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.081200072 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.520974281 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.297699858 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577229496 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231867306 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444672691 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.307040434 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.520017525 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.476642482 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.317889533 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556142372 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311217047 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.305745081 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.314419698 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317263482 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399381849 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320135098 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.307635113 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.559365088 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.302765452 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.303205968 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.273440974 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.079594313 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298579526 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.303282302 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302117612 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884439482 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296056496 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.302960529 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.188329791 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.313960599 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366952807 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.30510066 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.30974649 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.053084186 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323870526 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.326841778 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.297068996 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.528165719 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.309213019 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.18411673 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382936727 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.495808943 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.867704096 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335254272 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.23412186 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.01160219 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.993008451 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300427471 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.489792672 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.300183462 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310393523 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.311527627 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.299053592 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.88571432 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326148126 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.185924009 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.313059329 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.311371041 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.306912965 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301335125 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.030763892 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.677945121 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314851952 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.318428916 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445294971 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.315935456 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.235389768 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.819117282 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.307166424 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.300878425 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.07814357 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337244571 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.187478368 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.786540246 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.561988603 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30400518 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.334934542 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.286225777 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.338687036 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.301394266 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.153871961 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328358909 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.329979883 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331090149 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.313954614 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.277038287 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.670026519 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869351315 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002611664 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853311908 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.242115207 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.314357786 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.207207532 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.735401325 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241210744 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.960797979 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.48708302 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.750093608 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255144897 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.504501367 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.489345828 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.071571847 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.320724356 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.530355712 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.217919875 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.183714257 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340181399 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.515592077 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338172046 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.309212891 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.239584961 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.821398944 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546701167 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.135192961 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39129113 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.741021429 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.17745432 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.111406545 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.332708419 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.641985874 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501616597 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.857040453 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.691524679 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.304388587 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336046826 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790510013 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.309085786 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.829987336 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917919629 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337416348 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.51042906 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247243174 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.316709652 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.317102489 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.300716725 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.557568919 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.315507982 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.566802988 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.316547433 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239902972 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.309753333 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826059576 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.178526837 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.311787037 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305498485 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025741293 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.314825378 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600816049 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.319437782 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.036758601 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332397668 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.241420041 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241777588 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.001221999 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.317835332 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281722799 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784661565 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.308314099 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33459166 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324632604 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158961064 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.563331368 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.321727446 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.872045871 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.553909129 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317423117 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333898343 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.40840856 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.201030122 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.315313903 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.206378146 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.544189196 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345121827 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.539068209 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.23777897 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.214916372 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.342596063 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.525594262 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.205501808 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.321387251 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561344795 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.039878503 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.32288244 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011231333 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354217511 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.310214799 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.327395794 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.319583563 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.328873486 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39833865 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.319427672 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.319869833 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.321329717 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479758361 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325328832 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318928572 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.324059505 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402194064 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.674115642 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.031883283 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.091364023 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881123334 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051082459 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.897503264 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339951739 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.310665947 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310616297 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245263171 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462449263 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.836355751 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583883664 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4413655 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.325555043 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334608999 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.217141372 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.339588189 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.525738712 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.586515315 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.282891745 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320302345 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.103218982 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.193171749 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.321979532 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.522934483 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790942993 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859047432 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430488648 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.315988836 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.752732505 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.58973781 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.403112326 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312682364 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.901181127 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.316623671 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.638603494 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.343096522 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322491442 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46708174 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.322968301 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980835634 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.345713213 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.472814043 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.087475283 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.300942175 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.572652745 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.753067721 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.325065961 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.88374056 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.01297426 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582304351 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382475926 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.324605433 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.415978123 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464209866 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.322792153 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.201667257 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313845512 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158485376 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.024193798 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.322718384 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882999827 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601038456 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.312686675 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.323786503 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3438657 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.324444115 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.536056072 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998205371 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.541213236 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.324661905 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.323692839 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.306679203 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883657516 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351395885 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250021334 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.318614687 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558706343 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.575715012 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.337691277 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.768674807 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.025832245 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848271851 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.287383506 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335923995 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320714649 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.999563606 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892089367 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.067384601 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808113999 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.978354821 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.319514158 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.5961152 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.322034993 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.321415655 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597815291 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.319352117 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.326740579 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.331321568 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.88269985 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.082671937 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.322328198 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.333945037 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.255775315 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.541015676 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.342736831 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272945627 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315527498 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.491603411 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.321490797 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447014463 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.326530915 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.322681608 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329922073 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.054426223 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.586713216 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.320350392 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.301131808 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.251783229 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.322529443 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411440215 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561312895 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320617873 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.990001564 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.667290835 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.571084587 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.325338814 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.301363709 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.319743533 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3156289 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.035176191 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.32639749 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.320389599 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875251876 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.332285505 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.330593272 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.321120575 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.532432942 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.528122599 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.315383268 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.332649296 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316679186 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335044507 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.221134906 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.083721962 seconds)
  done (took 1623.907484408 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.337304576 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.336011129 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.336913746 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.326970784 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.323693866 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.371594421 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.346573645 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.352924877 seconds)
  done (took 51.965793288 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.318743281 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.477664621 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.347845879 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.324102653 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.330500673 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.316762217 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.764576941 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.349413903 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.328982432 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.326283333 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.323508086 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.334758742 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.953376731 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.330732399 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.331130223 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.304267201 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.328273016 seconds)
  done (took 65.024954316 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.320608807 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.816166153 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.338059313 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.328205683 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.309180686 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.348189288 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.999119987 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.332033015 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.318757255 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.616816392 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.989812382 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.363852372 seconds)
  done (took 84.316599678 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.335405729 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.336122654 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.335866628 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.33474811 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.334565687 seconds)
  done (took 7.912650003 seconds)
done (took 2045.186914033 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.324789038 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.990745141 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.931701898 seconds)
  done (took 5.15814652 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.466268626 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.515156195 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.635231864 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.642088027 seconds)
  done (took 7.494797703 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.597142191 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.700478877 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.514386883 seconds)
  done (took 6.047766659 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.591813032 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.342808539 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.328054413 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.31801142 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.322180868 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.321492292 seconds)
  done (took 20.199122909 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.324881749 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.326742509 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.323824465 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.326119338 seconds)
  done (took 6.537220426 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.300775237 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.021943061 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.306907688 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.319533699 seconds)
  done (took 18.184286345 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.069779079 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.081472888 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.068198537 seconds)
  done (took 7.454901371 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.351087976 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.345593864 seconds)
  done (took 3.932506277 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.611643765 seconds)
  done (took 2.847869517 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.337998919 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.378001967 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.33032625 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.253546735 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.610724532 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.520665104 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.889947931 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.494810023 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.231488378 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.452734426 seconds)
  done (took 29.737607341 seconds)
done (took 124.416373462 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.05886709 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.328934248 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.524761072 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.030320511 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.679446407 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.52230168 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.519356294 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.992236965 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.579322164 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.534297211 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.029523575 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.679980636 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.677927874 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.324804544 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.679908377 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.322271984 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.556365542 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.099174994 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.713177466 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.945876642 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.522779377 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.663046829 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.859021722 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.679273182 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.552533546 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.475790779 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.25982045 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.327505085 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.878673416 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.316346415 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.483837524 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.114573121 seconds)
  done (took 188.170127228 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.321358597 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.322816353 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.345176467 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.337429962 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.322956195 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.328884139 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.325585251 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.321690423 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.330367345 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.333981733 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.325226861 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.322378513 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.324602248 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.321058176 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.338096141 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.323193336 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.338997962 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.345160326 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.326954301 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.341838235 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.322332966 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.339246867 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.335252369 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.323007442 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.344362647 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.323174545 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.323007697 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.323473896 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.322711233 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.341039048 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.331075053 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.335598197 seconds)
  done (took 203.801042904 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.326514791 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.331909266 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.323783864 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.326975218 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.352333912 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.327210795 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.324945382 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.323927638 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.325362188 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.328800933 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.340663854 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.338909839 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.334357293 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.325020408 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.341415846 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.33882739 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.324538889 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.347502738 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.338844737 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.327878464 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.325797697 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.338270771 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.326055959 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.325585076 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.332232225 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.343810763 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.341223818 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.325997701 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.326806407 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.35242815 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.331016063 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.333630271 seconds)
  done (took 203.894721036 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.527236193 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.333438021 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.334417438 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.281564988 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.334492799 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.332970289 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.33160333 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.523931002 seconds)
  done (took 14.241824225 seconds)
done (took 611.345495378 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.548309304 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.257951694 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.533150291 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.358686262 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.073290932 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.378829693 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.354824419 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.516946454 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.257725116 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.524276137 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.551839379 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.371968661 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.684383643 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.356932441 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.606344296 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.455297588 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.25001091 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.369780323 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.663633173 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.859395968 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.617509526 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.786600271 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.541165755 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.249336387 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.699249123 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.788205043 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.03320989 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.239167535 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.376396647 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.671598147 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.92989114 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.271254924 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.419297995 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.411583144 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.47361994 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.451650628 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.242383981 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.4089493 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.552636408 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.547646935 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.874522959 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.078279913 seconds)
  done (took 90.881313142 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.319759566 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.319420858 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.319265855 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.31937578 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.320921731 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.320230318 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.319476176 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.318704295 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.319280272 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.319142243 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.319077421 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.320677924 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.318566971 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.322239302 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.319895365 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.320022258 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.320606617 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.322696172 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.319076982 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.319286498 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.319734783 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.319562994 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.320279396 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.321317632 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.320621635 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.320990034 seconds)
  done (took 35.567608144 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.340594307 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.586777571 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.742378972 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.347886205 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.338745867 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.343036994 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.413829568 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.345289848 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.34174692 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.342352739 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.505238687 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.34591627 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.373462176 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.765058474 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.34530802 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.341472825 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.339987324 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.339465177 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.595346334 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.352636995 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.433236621 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.345100098 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.414668641 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.353440765 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.35952824 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.339900442 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.344016816 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.858251468 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.360670534 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.506467265 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.109355808 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.417104353 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.815632697 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.770882614 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.11520644 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.347578509 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.341839897 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.509919935 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.347694442 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.341512756 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.414447238 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.345387472 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.749271307 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.958862788 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.365911513 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.341908863 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.878896731 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.532901401 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.579676662 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.353378895 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.771997109 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.350862988 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.344827494 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.343637753 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.578424283 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.352428757 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.342091778 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.864189839 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.369822139 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.417165333 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.347223131 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.341964325 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.609592994 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.34610227 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.590834228 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.344587031 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.351302518 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.362276126 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.752028745 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.348547056 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.974605913 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.364223506 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.343620789 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.50688857 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.5931666 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.915646982 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.365996462 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.615065656 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.830455393 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.437001268 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.350340169 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.850016203 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.440223982 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.351472089 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.347767565 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.346706904 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.34472291 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.396133197 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.416184406 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.91201184 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.98890562 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.888871268 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.445187386 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.35950181 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.346067885 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.868020113 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.369068846 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.346151459 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.746801211 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.982896823 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.365273893 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.352402833 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.977261757 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.370972898 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.420078862 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.353203676 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.75854837 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.349670195 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.3977414 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.346133681 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.35146496 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.368580508 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.422113768 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.355268267 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.346828542 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.951933533 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.54177029 seconds)
  done (took 176.852429624 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.357714376 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.338717414 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.339635526 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.355152859 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.338719 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.348034066 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.339350616 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.340330815 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.346182578 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.339946315 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.337828282 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.339462954 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.341024731 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.345031551 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.35138147 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.346604423 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.954674251 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.342094468 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.339789735 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.340638206 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.129170773 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.34713598 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.345334243 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.339854558 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.340521435 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.341374188 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.34964381 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.342826204 seconds)
  done (took 152.273452232 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.348061748 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.892950167 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.367839438 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.474436012 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.368312482 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.345640913 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.473919577 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.403504193 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.371203865 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.347046657 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.347441214 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.63717311 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.350442974 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.850808794 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.536166041 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.49614551 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.851945114 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.372377524 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.347430889 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.349448567 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.476940262 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.353059524 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.640501673 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.902695961 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.371362681 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.893840788 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.333164472 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.349137783 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.347428586 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.899365911 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.368481652 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.643985531 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.428398958 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.409095617 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.920093351 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.87137742 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.868807805 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.494753414 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.353169723 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.347915597 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.348116205 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.334674836 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.896418168 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.368813523 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.349839462 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.891973624 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.372728563 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.351643123 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.355285778 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.350351654 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.406614616 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.428098956 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.665443826 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.902930072 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.440478328 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.361851619 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.477830514 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.714140936 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.360918864 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.847458432 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.333157474 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.908205401 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.377869424 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.334425434 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.351435799 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.355758027 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.495461485 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.478933687 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.850865403 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.367690155 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.848366491 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.512662863 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.350511968 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.351383035 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.353198221 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.905364246 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.870779477 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.512771043 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.483000497 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.540827317 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.335608512 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.350876756 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.336477657 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.425267665 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.351966571 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.909668632 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.86966645 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.369544653 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.354920712 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.353857172 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.354944507 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.522500561 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.922233054 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.45206738 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.841886622 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.665378742 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.654605725 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.358231948 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.410789594 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.373305906 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.652036788 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.357868978 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.408345846 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.784516711 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.657559111 seconds)
  done (took 160.949591723 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.587425339 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.497302567 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.439266924 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.485476976 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.921870447 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.914708208 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.550827942 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.48995501 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.467371848 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.612528403 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.474023964 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.445361478 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.516247162 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.427468787 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.069015511 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.436109393 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.46594615 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.500588809 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.463563801 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.331950723 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.994010247 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.634609444 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.518356891 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.10367344 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.444303221 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.132953991 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.912182161 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.868826993 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.517700284 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.607156556 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.883288088 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.450145389 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.293528555 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.015367496 seconds)
  done (took 64.737056489 seconds)
done (took 682.503516084 seconds)
SAVING RESULT...
DONE!
