cset: moving following pidspec: 6468
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.252651283 seconds)
loading group "string"... done (took 0.556784261 seconds)
loading group "linalg"... done (took 7.76591681 seconds)
loading group "parallel"... done (took 0.174106396 seconds)
loading group "find"... done (took 1.189587025 seconds)
loading group "tuple"... done (took 1.862611914 seconds)
loading group "dates"... done (took 1.274255538 seconds)
loading group "micro"... done (took 0.236209294 seconds)
loading group "io"... done (took 0.77115229 seconds)
loading group "scalar"... done (took 42.725241933 seconds)
loading group "sparse"... done (took 13.509749175 seconds)
loading group "broadcast"... done (took 1.175666667 seconds)
loading group "union"... done (took 14.234055539 seconds)
loading group "simd"... done (took 5.001291765 seconds)
loading group "random"... done (took 10.113462685 seconds)
loading group "problem"... done (took 2.159777629 seconds)
loading group "array"... done (took 22.706478302 seconds)
loading group "misc"... done (took 2.126592623 seconds)
loading group "sort"... done (took 3.48554927 seconds)
loading group "collection"... done (took 19.818372124 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.579002931 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142121999 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150927065 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147566578 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.192358025 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.159471164 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161173388 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098954979 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.013427507 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174520708 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154044864 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.525622072 seconds)
done (took 5.300681357 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.222058264 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095040384 seconds)
    (2/2) benchmarking "String"...
    done (took 0.106127459 seconds)
  done (took 0.947097979 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.079640959 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146252433 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096600781 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079054405 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096351692 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077882454 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09610949 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077895638 seconds)
  done (took 1.420818199 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.085610675 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.099987613 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082885458 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097886162 seconds)
  done (took 1.117368261 seconds)
done (took 4.542879483 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.737589843 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.277574745 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202656245 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.465017124 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.201845997 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.21989078 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.689151482 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.354756312 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254591978 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101691928 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.14620647 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38870531 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140972195 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.687550778 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090063735 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127128317 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.18040616 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.470867484 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084567394 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112211562 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.119829263 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143291186 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.13400442 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092405169 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.188368649 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082064774 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.199316591 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109762118 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080939873 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.291237619 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.203173137 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690278344 seconds)
  done (took 11.056460215 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110259582 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134466513 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099461824 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140300966 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136280698 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101731585 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08551774 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098029362 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123645835 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179541987 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115869236 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.139415815 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097695493 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082871009 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11777922 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248764838 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122710163 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105067034 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101784097 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106030621 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124085745 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115688188 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110195975 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093299037 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171027828 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.225945986 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113808375 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128708631 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099896062 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114298042 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144763601 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144075629 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094921474 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082101134 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175904325 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127926008 seconds)
  done (took 5.278649119 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.083620623 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191737306 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123205151 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171541244 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082440016 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144035742 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.096492848 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116686571 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257500444 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.119733241 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177051194 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14209896 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099443469 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097086231 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.15620433 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082327722 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.100638966 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.631329629 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.159179142 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.137277048 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098427628 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106351432 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101766475 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365695265 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088488343 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097266305 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087219888 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083543365 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163573142 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083704188 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.160074169 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101681149 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103360117 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135014482 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19559356 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124196683 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.11680239 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09695831 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078354886 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.193693234 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078536335 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106211731 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080835394 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121664397 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135747394 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.1196558 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100117108 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.099248454 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.205441124 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097983192 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099214799 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.931241479 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181748254 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.104467202 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097143157 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323588096 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097866136 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09832182 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077893557 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.283685613 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.187977131 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098195482 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078914233 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098285137 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081105151 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400517626 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081948853 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.722776062 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084007 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108236845 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083411028 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098456376 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106335818 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089027716 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117931065 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.082478179 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100203071 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079851555 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097983538 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082287845 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095468975 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108678993 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087433292 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09899446 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148711279 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096089616 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099325159 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130274302 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102086291 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079192319 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132816448 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.096271047 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082719651 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.101314885 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.1346449 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082588823 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111071971 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100434746 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128464584 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098700595 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.144984612 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095741773 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125547231 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101563328 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113552968 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111710331 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098872566 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08560573 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097399573 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077702985 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167000785 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080892801 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099285273 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081344232 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112408665 seconds)
  done (took 22.601685824 seconds)
done (took 40.768998404 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.326994142 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106673041 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106942189 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105956351 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10339676 seconds)
  done (took 1.572337892 seconds)
done (took 2.368611579 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.292409314 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173119185 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095700778 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.169670798 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094048586 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.176817473 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.16190683 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114239461 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.203959845 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096903662 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.168651034 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095871592 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077744836 seconds)
  done (took 2.743858934 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095408422 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117979453 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085736419 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113877053 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076806503 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114332546 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093243819 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120025164 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112427247 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086422273 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096209066 seconds)
  done (took 1.906790288 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096421362 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116495455 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083962102 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112507903 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077170907 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11380458 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092963348 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119344442 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111621752 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086372424 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095355697 seconds)
  done (took 1.89927776 seconds)
done (took 7.334077864 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09141601 seconds)
  done (took 0.879616456 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.939702902 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.027068855 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.114809986 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.152343293 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.301776138 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.195489501 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.486428925 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.1275966 seconds)
  done (took 11.344408966 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.115158815 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.103516313 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.117250872 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08357451 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.106105171 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084273967 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104242369 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102107816 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084112664 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103962345 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086196734 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.106432718 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104600133 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085127767 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103990525 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084939208 seconds)
  done (took 2.423286947 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120170744 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119936792 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.110480095 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111906056 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.0871879 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.109226972 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109316744 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.09046723 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.104111083 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105191776 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091639295 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.109410549 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105967241 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080765916 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109257143 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110316448 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087031526 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109731697 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109358355 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090083693 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110624632 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097474024 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087715379 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109122258 seconds)
  done (took 3.377655064 seconds)
done (took 18.817108645 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160309794 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110831968 seconds)
  done (took 1.062345188 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095662781 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116337347 seconds)
  done (took 1.008597357 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097519169 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098918788 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.124757693 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112126796 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081941573 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099380386 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122615528 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081601275 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099342329 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080597164 seconds)
  done (took 1.797141534 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083213365 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.113332116 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103065347 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097596126 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10891444 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097077676 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090495779 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.10145231 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112677173 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078542409 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104875985 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117139269 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086752061 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119212544 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107961271 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084332878 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.106113269 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101686641 seconds)
  done (took 2.61623173 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081585722 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099860236 seconds)
  done (took 0.981147362 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081822905 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096040301 seconds)
    (3/7) benchmarking "month"...
    done (took 0.0830819 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100792179 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096014555 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.079196457 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096207918 seconds)
  done (took 1.431892746 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.485669074 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137687026 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.26620832 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103224299 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104657632 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302911595 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.101166721 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084400184 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.106596196 seconds)
  done (took 2.556704618 seconds)
done (took 12.249382399 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093734891 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117954133 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113678224 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.468151042 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107210892 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.09973459 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148352972 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.253898962 seconds)
done (took 2.208638869 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.144098334 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325520574 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.118632323 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068994204 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.100570092 seconds)
  done (took 1.418482486 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082515654 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101585043 seconds)
  done (took 0.9863229 seconds)
done (took 3.355692146 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082433069 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.134377851 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080180646 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.100429558 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078849835 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.102838661 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077449516 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.099453207 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081864943 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.100005127 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097720782 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.082278522 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.098257463 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.082354913 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098063763 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079270741 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096105705 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081646299 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096228343 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078750367 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095910825 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08152791 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096852581 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079018606 seconds)
  done (took 3.014772903 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10036656 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100545866 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104152298 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087104102 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103083675 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086012682 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.107599338 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098475971 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086197381 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101210876 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101640154 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085666863 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101523526 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084358975 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101766051 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103111112 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087405896 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100248304 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082773422 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102820283 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104350641 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081950783 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102539683 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102882122 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.0853382 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103599005 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083950424 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100601207 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105467999 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085530766 seconds)
  done (took 3.689031372 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087413326 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095614195 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079295191 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104095063 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079171639 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09912378 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078307938 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098621158 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.0798745 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097575395 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080303388 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.098214595 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078788824 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098621907 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079628338 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101715794 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109832317 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07936332 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096747317 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079928833 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100165581 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080096374 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09722003 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079085537 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097264217 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078880877 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098255201 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078679695 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097419099 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078705056 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.10169245 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082242085 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097793093 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085888059 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.103138356 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078329616 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102016828 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078047458 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.100253687 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095150395 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.08036662 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095666448 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080281332 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103907627 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080570551 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.101391817 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079889071 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098974946 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079430853 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100659723 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078382897 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09795178 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080302388 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098676633 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082405356 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.098219948 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096660302 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079375289 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097887584 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079113453 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096074927 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079010805 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098986336 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080365033 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113339411 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086789536 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09699526 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080838958 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098422824 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080911556 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09943584 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110061598 seconds)
  done (took 7.33282479 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085968721 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108044935 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080836094 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099511292 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076824228 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098917505 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10118156 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080707448 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099840435 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085920918 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098110027 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080261897 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10085475 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108818973 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08126712 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099229234 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085615285 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096284236 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080146093 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102389838 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080097898 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103102676 seconds)
  done (took 2.842177337 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.212880882 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10784917 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145307604 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109047345 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084497514 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109584864 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104370756 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089103647 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104429858 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084394718 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10337807 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105219565 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084153224 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103685655 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102562023 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087298327 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105351483 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085985539 seconds)
  done (took 2.741850481 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095380136 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10080736 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103386908 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10197577 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100162139 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085957829 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106620694 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109710204 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085003515 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101200758 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091256339 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104489174 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103048854 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083908559 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102821485 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08235199 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103577338 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082003475 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111456741 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107215176 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104481681 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09300415 seconds)
  done (took 2.974221352 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097681957 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103491768 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120497268 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086336348 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096706542 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081179551 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108172565 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081452977 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109046592 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102381158 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082582674 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099187147 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08837824 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101239609 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105443129 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083137568 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102352281 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081939043 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10298097 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077987335 seconds)
  done (took 2.728136016 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102612279 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.210702677 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101319191 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094833532 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102405944 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082850573 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112622102 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10228697 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083709807 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12825272 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103526047 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084552128 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112831617 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109259104 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101321646 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093492987 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111535323 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110723636 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083989173 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103164985 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127416116 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083970017 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11095081 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102010685 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08437628 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103110974 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102786665 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090833686 seconds)
  done (took 3.761566472 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082619378 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099921942 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081221048 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097848887 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080592743 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09914271 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080837096 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097581346 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083386665 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098222874 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082914059 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101363244 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085024531 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101017001 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082434964 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101592076 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081944729 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098862146 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07998082 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098523933 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082139933 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10245495 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082331279 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.100203279 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079894419 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101731769 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079498414 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09968634 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081919462 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099308863 seconds)
  done (took 3.54886681 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092153834 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108991037 seconds)
  done (took 1.019175879 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080858907 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11724075 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079865397 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106000984 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087475173 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103841431 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109793565 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088348365 seconds)
  done (took 1.590593992 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09805345 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112529155 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083706318 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116084966 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112493167 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098707274 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172925281 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104360033 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089042633 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.101673483 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.115212732 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081897963 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108502504 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0830076 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108286756 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088943669 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101084312 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10701315 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088662749 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100903408 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085486899 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112133883 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084797457 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101149054 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103509804 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093088567 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115290629 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084179398 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107612806 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110241953 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089581805 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096884964 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083926621 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103976436 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081914366 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11288811 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119464337 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086421314 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112622776 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085450769 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114547396 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097778569 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088665179 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108950295 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111540426 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086446515 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103186472 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079040277 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099770881 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085778584 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097930374 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083192045 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097887928 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090191413 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106345303 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113458922 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081995175 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104391931 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086653104 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106058245 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089436891 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105230463 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103863095 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083833907 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109520303 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087760667 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112785079 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077927593 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097379291 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099654915 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095299797 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126801746 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090684014 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.105560347 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103705306 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08161301 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106024738 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084950726 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109351947 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107639325 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085072429 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108472307 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091168875 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103267868 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085031974 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111866057 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100895326 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085709323 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100199594 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12035158 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082511052 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100515233 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081029212 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113793554 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08650798 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103034981 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080393896 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110291028 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095923452 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086269618 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10396499 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084577609 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.115100164 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108100698 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090438417 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111836299 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090410209 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103691975 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.106179193 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081049485 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10435184 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086241831 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110212577 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077503536 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106005236 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083277009 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104000701 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111088888 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082659087 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102648297 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0916352 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109040365 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081684778 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.100203052 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104926264 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084210811 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106421725 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091661664 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102395345 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078121331 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098406182 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.105669861 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085164183 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.105777515 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089074149 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10590073 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077974522 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101456799 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106753921 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09323996 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103957268 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084268327 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109824518 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103113711 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084146915 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.10961401 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086382561 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102742094 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089584698 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104620624 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078222064 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107706423 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105319186 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083617194 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106951119 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088876092 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106060833 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085151056 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103770618 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.10871058 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085467949 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.103126886 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083899196 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102463865 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094335622 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106843963 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098250121 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082210439 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110035919 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081343656 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103766008 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08328613 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105906559 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083922602 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102371607 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.10255335 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086496921 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115815067 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087744014 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106891578 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108703075 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095386839 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103928171 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086249906 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.10452234 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103934895 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086039409 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112555604 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089021776 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110290575 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104664824 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082448277 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109094297 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093149309 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.102694387 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081937726 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102769073 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087459416 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111104518 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106633898 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086320043 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102022368 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083869752 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108031436 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104251933 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.08492262 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.102143502 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089509452 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10304784 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091466223 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105735209 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114111297 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088018629 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.099268138 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087244369 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102141594 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108962533 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080283484 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.100939533 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083905182 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104573093 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083004495 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.106283823 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078546848 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11180085 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092196456 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.105196274 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.101712725 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085074922 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110480258 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085770187 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108571661 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087528051 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110525811 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11397462 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083336558 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.10667829 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094788197 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105310714 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077207208 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110376568 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101485745 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08423554 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103029081 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083067755 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107436551 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093749999 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111739616 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097820354 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08683516 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102539881 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083203091 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09925848 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088646691 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107066954 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084270881 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11144023 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104626256 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085691358 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107965325 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084042771 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104979324 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.10350674 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088970631 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105573087 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087264916 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.103805997 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087869833 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.106112377 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081870545 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.106982965 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08416969 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104687763 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109208901 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084930853 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104109188 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086730647 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106262328 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085733834 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105533729 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102406843 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088686344 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104707194 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.0845109 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106490877 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080003749 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112000512 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08396046 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112954493 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103595383 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082511078 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.109026432 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086822483 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109654529 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084585962 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106969013 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.105345221 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084692129 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.107268744 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091201673 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102086641 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094490034 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113045014 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104636969 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087915809 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.105113041 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086211314 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103878501 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084169728 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10645745 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103330026 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085787091 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109015822 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087458399 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104775273 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086306448 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106065626 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084490591 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106339363 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.098041032 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085033325 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103550527 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085774312 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115625909 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.085098376 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.108255221 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.10180402 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087231574 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.103157344 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.081487072 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.113323649 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114130253 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086288001 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11222681 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083809994 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105917964 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095741637 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.099928105 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101913709 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08380831 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101401386 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094410788 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.105595246 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09374183 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10504843 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083406954 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.102005198 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104144681 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084740532 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098792087 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084006895 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108406799 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088091091 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103991921 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085320702 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108738607 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085311282 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115969542 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104405096 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093217748 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105712231 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081027487 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.104827216 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084363263 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108864369 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105128609 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083768872 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101125671 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.08549562 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.104794645 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085890763 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.104623836 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087361448 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112224878 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084441114 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.109053932 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108694864 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080156389 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107504064 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084319905 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105557874 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.083139123 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.109947085 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108175854 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087386211 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.114968051 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084877706 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105995275 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084935049 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.103682769 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104002293 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08596821 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105784794 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085119233 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106542524 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092655794 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.104402926 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.08690067 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106191022 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.104848022 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092856435 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106210005 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087833486 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113764911 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.107316261 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087404708 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113320629 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088747411 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108988446 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085644302 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107367673 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.1110955 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084705375 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111465962 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085329522 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107225296 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085868554 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.103685305 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083870682 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10571334 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10380015 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092181681 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.106867586 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084759401 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.104709855 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082553455 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10704509 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108623475 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094273383 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107451102 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087980628 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100675998 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081801611 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107631631 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.082118589 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.107192836 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10693166 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092509143 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107402009 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085694641 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104075884 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093847992 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111970734 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108141019 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083577899 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108723282 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085611708 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.108315725 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085877174 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106322872 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105129892 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090205407 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106244027 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085727713 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112637443 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088799579 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107850404 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085700961 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.106945301 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104677565 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082056889 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105770546 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087597136 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110265175 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087977809 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106727596 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116384537 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085912113 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.104907634 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090082168 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105190976 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089077606 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.101194873 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085395062 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107958409 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106621184 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081822729 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.104639784 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083182384 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.108125176 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084219704 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101405379 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115365995 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096268075 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109075821 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084314018 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104212468 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081065742 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.101877704 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084680626 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107655958 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106028197 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096929913 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.104347311 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085443689 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101438542 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085021408 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109542427 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.087839255 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.104276133 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100736444 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085606764 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.108223662 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091734169 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105013324 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08496687 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109974628 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08735856 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.105633182 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110942526 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083324435 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.10902791 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099586021 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.107628757 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085509988 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113685669 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114814316 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086946385 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.101906026 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08694032 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.110721952 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.106192555 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088388871 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.106949257 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102237348 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110004253 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.104629398 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086632081 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108811966 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08656895 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11516922 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08821414 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.107467889 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109504651 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089632634 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116187172 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08946567 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115120459 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.109210654 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090683735 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.105087426 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087217213 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104929468 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085168289 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.108220582 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086836464 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111915191 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11398957 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085713103 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118326769 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114976961 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.091862247 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.102786974 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086980881 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.106748817 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081448493 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108594982 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08488046 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105022944 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084085205 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.106354499 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.086764291 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112733952 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107554621 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087495045 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.108018369 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082631522 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.108592573 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088646276 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108752264 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.082868373 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107588438 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.107532696 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091683239 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111578355 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08773148 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.108918217 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088040975 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109415024 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081317232 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.11498461 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104692411 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090024326 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105510581 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087178325 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10806334 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090353485 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113270307 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108069471 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089778455 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119216621 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089490936 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104973727 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084367867 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.112810693 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.08378484 seconds)
  done (took 59.367787336 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148238566 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083119949 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102645484 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081649726 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117271641 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102578175 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082312671 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10303963 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084426142 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106145522 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081759842 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103187946 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112677334 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129140397 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095587418 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108312479 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08057987 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105268036 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102076335 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08371888 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113301069 seconds)
  done (took 2.998777993 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106265742 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120813167 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11931752 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123511939 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092248907 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119669985 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11767129 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118836396 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102626915 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115153963 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122505552 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118677365 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.095244187 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.114266576 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113926609 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095812793 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122370654 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114044448 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118900669 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09824097 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118573122 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11866835 seconds)
  done (took 3.355119722 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08633176 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106126849 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088453858 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.101966786 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086523578 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.102897591 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.089791498 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.105790735 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089621854 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.106898474 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085002137 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.107339755 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108442309 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082347822 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.105846922 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08496027 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154748797 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112518965 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085563959 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108942577 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.081172186 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110265683 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.102425674 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082480121 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.106455986 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091133043 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107774783 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084150741 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.108064027 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084706116 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107962607 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083464466 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.10941077 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.106165333 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086855072 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.106056601 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087366059 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.106689323 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.081862763 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.105982691 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.086981034 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.104049759 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087610834 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.110044829 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08478514 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.106100889 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086887394 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107453747 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.102049257 seconds)
  done (took 5.688581089 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105507012 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165383834 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090227791 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.1480631 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12522634 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11759297 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090359389 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148772288 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.107225552 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084656678 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126291517 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.124681432 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107513654 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092556597 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.115693068 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108596435 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089099096 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107248617 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.110985837 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086864845 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.112587847 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093172094 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.124562993 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12113615 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111821105 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085395844 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107413787 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.112168751 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100410248 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114246988 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112703959 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093500547 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123903264 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110290914 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085855121 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111523828 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.125765884 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086760608 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.112089419 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105537949 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090171296 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113450705 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113876776 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104736963 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109844335 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112323832 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087737007 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.106356749 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.12057117 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089835258 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11691741 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.123891927 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090543636 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108950567 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113453227 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124518031 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088480461 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.106552156 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.090669408 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.12239154 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105674053 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091555896 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.123394415 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110842829 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09431495 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.124167335 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.114194687 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112755115 seconds)
  done (took 8.441206791 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095078409 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11588636 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124177899 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125439008 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093890142 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.1160164 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115441487 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.093873235 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115862651 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120742192 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115134426 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.138940651 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089811061 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119510906 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11533543 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094531962 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116722118 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11457683 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09443044 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115863381 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11630808 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124781529 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093832791 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124120537 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146806497 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.11063904 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093177191 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115240568 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125305551 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114509283 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127274897 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.095168759 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115846411 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.125563331 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127375048 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093747674 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107579002 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114727148 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.095216313 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116099422 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10979534 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104809203 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116218683 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110132546 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093326369 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115725652 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.124638064 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.128517068 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118298015 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099565544 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116568494 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124910408 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114907802 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094101447 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12581407 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.151270913 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12498607 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125616942 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114693935 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103456745 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12686525 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133142812 seconds)
  done (took 7.975225788 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110498682 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.118921334 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.12271278 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.103983022 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086506799 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114173483 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085939012 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10711966 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.117952374 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099051579 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121416115 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112702385 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094315975 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122529839 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114174926 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116412915 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090941539 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113400656 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118700495 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112098936 seconds)
  done (took 3.070150266 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097914281 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129015774 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087451211 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116568001 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.112669964 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094488205 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.112294052 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111490974 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089603059 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112412891 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099194441 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121466698 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110368033 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094584907 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.1213245 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116491003 seconds)
  done (took 2.610369765 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099161855 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122308596 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.125651122 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087549695 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.108997001 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083384308 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.110812451 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.104912249 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084987683 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.128278097 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087422053 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.113661829 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.108995267 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087214622 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105690991 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091122407 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.105772328 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084690975 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110752011 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.124286583 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09842092 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.109029904 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.109592173 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.09220118 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109420141 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093310735 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110622285 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107015861 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086841483 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110778277 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088333751 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.118192439 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.105839518 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087954836 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.107321358 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.0863384 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10981023 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088495156 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113346182 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.108673814 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087299707 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109083934 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088415263 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.111606534 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083719085 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.111260534 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103964549 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.096496234 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107596898 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087668413 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.110322061 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090039637 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111762524 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120058452 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.09220003 seconds)
  done (took 6.517503433 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103187832 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11464641 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083285387 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108541578 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090968123 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.11282834 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.11314878 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091361941 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111352278 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086233365 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112628286 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092540163 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112200374 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113863862 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090948688 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113637354 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0832927 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111487822 seconds)
  done (took 2.741212911 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090702858 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107888862 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095873983 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110651542 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08759286 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113000044 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083539385 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.110389331 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107620281 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09023072 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110431256 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090625759 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10829681 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.090946979 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110935988 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088137765 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.113198406 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107689685 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089827914 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105306454 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091469908 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108837618 seconds)
  done (took 3.105464022 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.121882753 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.129850252 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.095970824 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.238123324 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.107874682 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.137591336 seconds)
  done (took 1.728124281 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109556229 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120805368 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110111461 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110795306 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120418431 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08948214 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114759535 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112547216 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122216731 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105841302 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113703091 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12280226 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12294572 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100642564 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120152028 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119325771 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112006572 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091511308 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111797745 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133463419 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090796676 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122556576 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11173004 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090025795 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113692175 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122307709 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123417875 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125968934 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092449969 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12371865 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119281859 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090795779 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124449334 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126968815 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112515128 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101850603 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113775102 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134385349 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119756704 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100850886 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113957497 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11926203 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100913119 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118207121 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122882978 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111804139 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09612975 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113366752 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112224908 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139438752 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097441009 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122040256 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119902193 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123456036 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100931802 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.161119925 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10565973 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121685116 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121302344 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12743449 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121809141 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0984993 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121788612 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126601337 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11940145 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121671565 seconds)
  done (took 8.488604299 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102075471 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127750476 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113682912 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126758674 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10091474 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113266602 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112837892 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092176103 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113304249 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11115132 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159195506 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092100173 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121891454 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121148375 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087209586 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108549428 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108354249 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119193063 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08634249 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136930663 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110914023 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12046678 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120292694 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101199829 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128256564 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120621404 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11254374 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091235767 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113852302 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111463671 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097609444 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114213008 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122074494 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089814631 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123644262 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114184065 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091960949 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118970691 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114015572 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119487076 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101170612 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133753556 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114028969 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113003526 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104513227 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111819833 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107259884 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087566665 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109528271 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106963837 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101479059 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122370591 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125523545 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123535578 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11314032 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091723979 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114172222 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113457221 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092033924 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119720399 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123072861 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090708939 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13972695 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114580034 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114062622 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121851323 seconds)
  done (took 8.308413451 seconds)
done (took 160.439614709 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.22404777 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.232602405 seconds)
  done (took 1.358802741 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097524929 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.14039979 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099718504 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.174428206 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105933978 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121076262 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138099891 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096775285 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107039033 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088595821 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.112348196 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091360441 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.177064693 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.083937071 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108299984 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106779402 seconds)
  done (took 2.758691477 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199616279 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.264626081 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106653994 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.111533467 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.092469576 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.116359451 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.109447292 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096085663 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.11570362 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.09082844 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.114475063 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090052854 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.111239239 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.090012472 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.115872481 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091212957 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.111848411 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091958331 seconds)
  done (took 3.029379355 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112141604 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148725273 seconds)
  done (took 1.176123354 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119581032 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180020096 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318004554 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158061382 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107788599 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130659162 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.162091008 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.137126567 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.202130473 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12631824 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.127774662 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.101822229 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146151652 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.121236186 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098532713 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.124578688 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.147729793 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.096776522 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.121344091 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.121007391 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.12122592 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.111667594 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.119677601 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.098482122 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.187465319 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.124687464 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.08850306 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.112719288 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121244548 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098317994 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.117173776 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130790416 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.102018166 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.184017954 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106272676 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.183573149 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102021752 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.117532792 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.118480518 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096564114 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124803947 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.122888514 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.110101106 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.12483998 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08769323 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.12461236 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.110900421 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.089620156 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.12050926 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.10114132 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.1216217 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.1194665 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.160426671 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.12417251 seconds)
  done (took 7.844426604 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.802487361 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.1618933 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094248905 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.90212495 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140964597 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108469916 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.792165133 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116408209 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258863748 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762863083 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138770739 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124264838 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.20899348 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.263861563 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.94788475 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286651286 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.694358427 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106920494 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.156164346 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.156565156 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123847187 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141049796 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113247085 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.435338312 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.122744599 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116699532 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.100687958 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125465775 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164043883 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.130034994 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118003824 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178486834 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.245176202 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202187622 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113794649 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090654533 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11084656 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.167200327 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261725204 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188156305 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.177491563 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107800136 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109390133 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100792649 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132085434 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106944144 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161927123 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172213658 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.165960538 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114876139 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117887704 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099328661 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119983567 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163121798 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120270148 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.318841752 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.306186011 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089750914 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122139141 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.129043692 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265458816 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105175891 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228549712 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145233345 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215732486 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092089561 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782147974 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.166682852 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110832438 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094265672 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123379786 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120511971 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10201536 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171024028 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391859491 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123886649 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114196802 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091198046 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.240747266 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.128436426 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092474419 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162633303 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120372534 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125321146 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106410355 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127571883 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.172192566 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.258287329 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.103085106 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119112206 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118349618 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106478665 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.121908307 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.21499413 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220468627 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162441296 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230173203 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099184676 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182890667 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169249022 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118935827 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.175690954 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123209845 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106821528 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127742862 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221918881 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.15081522 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.128172615 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09859059 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124563826 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.15247985 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.133469322 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.101983605 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.197788156 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.463140129 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.17052771 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.11468164 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.131604487 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096283389 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180207644 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094762967 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257100974 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121172141 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.16926237 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117533809 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088838626 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122527647 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164559826 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122275426 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120873042 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101124683 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122127657 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235360969 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21391308 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1209677 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219988052 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.181317967 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119005576 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170561593 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124255338 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167514678 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122845187 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122328404 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098502559 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776896261 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122984574 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099797689 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11730254 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189489507 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110103134 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104135165 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123591497 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107988111 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.751795075 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126418022 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120546394 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100152351 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117294946 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119644386 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096037979 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115673393 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159040036 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224951912 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120595792 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118525415 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102805288 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158318766 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115794239 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124587025 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122945574 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102206605 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121218307 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114264354 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103867478 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188510777 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.16143926 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.21590644 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566349982 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111704453 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124802234 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22267723 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090607795 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.285850719 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1187998 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.199712968 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183709855 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098599577 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.305020052 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.183445041 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186542832 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.1057423 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193832618 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088463348 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117506642 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.162805011 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110684291 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095733857 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.181305083 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102897283 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122130782 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.955232945 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090023733 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.243569943 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087457023 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170509113 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117775959 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119880544 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29383088 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089863193 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128186625 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166094288 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117187906 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126497288 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.721633498 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124081606 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120335749 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097204791 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220022434 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162146281 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119902308 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118772359 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097859531 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181471897 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206403124 seconds)
  done (took 44.171638872 seconds)
done (took 61.247536425 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27715299 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216117855 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.264078702 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169491071 seconds)
  done (took 1.943329737 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170550561 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151523853 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121897304 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108669516 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150379611 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084788767 seconds)
  done (took 1.726209794 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.358528415 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274763717 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.247250108 seconds)
  done (took 1.824466984 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.320466163 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.249620888 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.476723829 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323511041 seconds)
  done (took 2.412234909 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.20898747 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133673086 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111325498 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105942106 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.200888457 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246944285 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142718166 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203921308 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.100489352 seconds)
  done (took 2.442401522 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.199233178 seconds)
done (took 11.490888134 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.138645224 seconds)
    (2/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.265054054 seconds)
    (3/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.124790032 seconds)
    (4/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.243754973 seconds)
    (5/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.224125152 seconds)
    (6/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.263185656 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.15401772 seconds)
    (8/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.10646911 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.139053683 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.09299104 seconds)
    (11/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.139016799 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.127764645 seconds)
    (13/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.231210253 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.098317983 seconds)
    (15/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.203122623 seconds)
    (16/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.127476754 seconds)
    (17/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.103552423 seconds)
    (18/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.204828072 seconds)
    (19/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.239145164 seconds)
    (20/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.178249469 seconds)
    (21/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.239868799 seconds)
    (22/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.118589618 seconds)
    (23/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.178026057 seconds)
    (24/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.167750655 seconds)
    (25/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.123734436 seconds)
    (26/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.20837486 seconds)
    (27/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.181622102 seconds)
    (28/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.159263146 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.2240267 seconds)
    (30/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.168173134 seconds)
    (31/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.127987484 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.120263513 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.115487192 seconds)
    (34/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.121567173 seconds)
    (35/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.185757237 seconds)
    (36/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068904725 seconds)
    (37/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.201539091 seconds)
    (38/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.184502666 seconds)
    (39/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.089121303 seconds)
    (40/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.197497203 seconds)
    (41/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.221262155 seconds)
    (42/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.097520471 seconds)
    (43/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.121103672 seconds)
    (44/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.20715677 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.098660076 seconds)
    (46/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.156497808 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.099040411 seconds)
    (48/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.126121751 seconds)
    (49/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.086462874 seconds)
    (50/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115844754 seconds)
    (51/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.161938617 seconds)
    (52/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.116937892 seconds)
    (53/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.159053159 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.119669996 seconds)
    (55/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.193915549 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.120344172 seconds)
    (57/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.128016891 seconds)
    (58/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.190857659 seconds)
    (59/286) benchmarking ("sort", Float64, true)...
    done (took 0.230246301 seconds)
    (60/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.190039988 seconds)
    (61/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.159475652 seconds)
    (62/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.181131818 seconds)
    (63/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.211574714 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.143543619 seconds)
    (65/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.098816465 seconds)
    (66/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.128321441 seconds)
    (67/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.154701806 seconds)
    (68/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.142370015 seconds)
    (69/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.14433264 seconds)
    (70/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.173241796 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.090854118 seconds)
    (72/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.194158404 seconds)
    (73/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.238740566 seconds)
    (74/286) benchmarking ("sort", Int64, false)...
    done (took 0.085360336 seconds)
    (75/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.185136605 seconds)
    (76/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.090326964 seconds)
    (77/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.096244084 seconds)
    (78/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.070209651 seconds)
    (79/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.15691582 seconds)
    (80/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.175705903 seconds)
    (81/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.102953198 seconds)
    (82/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.125491827 seconds)
    (83/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.167595274 seconds)
    (84/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.071922302 seconds)
    (85/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.144314309 seconds)
    (86/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.132508318 seconds)
    (87/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.122665965 seconds)
    (88/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.071639633 seconds)
    (89/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.070068441 seconds)
    (90/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.14226482 seconds)
    (91/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.094581374 seconds)
    (92/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.100917966 seconds)
    (93/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.136538069 seconds)
    (94/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.189765963 seconds)
    (95/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.094793812 seconds)
    (96/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.179032828 seconds)
    (97/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.099639434 seconds)
    (98/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.123758639 seconds)
    (99/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.102697845 seconds)
    (100/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.126219031 seconds)
    (101/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.120572437 seconds)
    (102/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069348304 seconds)
    (103/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.183915415 seconds)
    (104/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.221262563 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096548403 seconds)
    (106/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.125149086 seconds)
    (107/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.071482336 seconds)
    (108/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.117501919 seconds)
    (109/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.100579016 seconds)
    (110/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.114624672 seconds)
    (111/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.071301854 seconds)
    (112/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.07007113 seconds)
    (113/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.097578678 seconds)
    (114/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099317311 seconds)
    (115/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.18187755 seconds)
    (116/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.071092637 seconds)
    (117/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.196776765 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 0.199911279 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.126502897 seconds)
    (120/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.083109888 seconds)
    (121/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.097136524 seconds)
    (122/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.071331727 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123969519 seconds)
    (124/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.146115332 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.122158059 seconds)
    (126/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.128636076 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.12482454 seconds)
    (128/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.179294605 seconds)
    (129/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.099165011 seconds)
    (130/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.087664608 seconds)
    (131/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.09675786 seconds)
    (132/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.073341292 seconds)
    (133/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.142110794 seconds)
    (134/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096264465 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.124831973 seconds)
    (136/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.184452639 seconds)
    (137/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.071842451 seconds)
    (138/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.123950026 seconds)
    (139/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113733815 seconds)
    (140/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.101026522 seconds)
    (141/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.072906458 seconds)
    (142/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.147840165 seconds)
    (143/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.129016313 seconds)
    (144/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.130408934 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.11518655 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.099674576 seconds)
    (147/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.128035483 seconds)
    (148/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.197281 seconds)
    (149/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.074381903 seconds)
    (150/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.072066198 seconds)
    (151/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.124842942 seconds)
    (152/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.118193058 seconds)
    (153/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.133185343 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.123499718 seconds)
    (155/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.092434818 seconds)
    (156/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.096447186 seconds)
    (157/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.092159451 seconds)
    (158/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.072449086 seconds)
    (159/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.118828433 seconds)
    (160/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.071620038 seconds)
    (161/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.118138421 seconds)
    (162/286) benchmarking ("sort", BigInt, false)...
    done (took 0.229647793 seconds)
    (163/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.071742403 seconds)
    (164/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.098543216 seconds)
    (165/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.094422091 seconds)
    (166/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.191645118 seconds)
    (167/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.160534414 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091699339 seconds)
    (169/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.125599266 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.092615626 seconds)
    (171/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.12295479 seconds)
    (172/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.092586218 seconds)
    (173/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.132920293 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.097154072 seconds)
    (175/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.118540077 seconds)
    (176/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.114471723 seconds)
    (177/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.095629164 seconds)
    (178/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.116768321 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.101553024 seconds)
    (180/286) benchmarking ("sort", Float32, false)...
    done (took 0.398554314 seconds)
    (181/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090915187 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.139918325 seconds)
    (183/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.149784986 seconds)
    (184/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.098005581 seconds)
    (185/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.11459172 seconds)
    (186/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.103238127 seconds)
    (187/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.120897707 seconds)
    (188/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098950089 seconds)
    (189/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.123091162 seconds)
    (190/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.07142043 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 0.220975943 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.115635089 seconds)
    (193/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.074383317 seconds)
    (194/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.071721662 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.117506638 seconds)
    (196/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.073115373 seconds)
    (197/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.098048398 seconds)
    (198/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09909706 seconds)
    (199/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.115220064 seconds)
    (200/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.082653921 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09988149 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125508856 seconds)
    (203/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.071688529 seconds)
    (204/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.158320488 seconds)
    (205/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.094128265 seconds)
    (206/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.097525066 seconds)
    (207/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.095284675 seconds)
    (208/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.096437593 seconds)
    (209/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.098833406 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.12224523 seconds)
    (211/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.072560074 seconds)
    (212/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.072367577 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.116012204 seconds)
    (214/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.091907744 seconds)
    (215/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.148393966 seconds)
    (216/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.072043194 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.116902012 seconds)
    (218/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.086683938 seconds)
    (219/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.157129812 seconds)
    (220/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.081865879 seconds)
    (221/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.116809265 seconds)
    (222/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.099314796 seconds)
    (223/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.098612333 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.091549852 seconds)
    (225/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.193716596 seconds)
    (226/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.097984074 seconds)
    (227/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.098082626 seconds)
    (228/286) benchmarking ("sort", Int8, true)...
    done (took 0.220861739 seconds)
    (229/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.114351106 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.112839423 seconds)
    (231/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.077644389 seconds)
    (232/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.095867263 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.09225083 seconds)
    (234/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116837646 seconds)
    (235/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.074029653 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096693006 seconds)
    (237/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.099290325 seconds)
    (238/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091512573 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.125725665 seconds)
    (240/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.072479779 seconds)
    (241/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.123616704 seconds)
    (242/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.093633449 seconds)
    (243/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.097401175 seconds)
    (244/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.097082191 seconds)
    (245/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.122314464 seconds)
    (246/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.107175711 seconds)
    (247/286) benchmarking ("sort", Float32, true)...
    done (took 0.229422503 seconds)
    (248/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.155247475 seconds)
    (249/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.072353609 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.117699637 seconds)
    (251/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.082913547 seconds)
    (252/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.090223386 seconds)
    (253/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.099035316 seconds)
    (254/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.072991959 seconds)
    (255/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.139645922 seconds)
    (256/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.115483071 seconds)
    (257/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.115037101 seconds)
    (258/286) benchmarking ("sort", BigInt, true)...
    done (took 0.221702575 seconds)
    (259/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102948763 seconds)
    (260/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.140187703 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119601053 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089040282 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.113877182 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.09113835 seconds)
    (265/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.096747831 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.090788941 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123908416 seconds)
    (268/286) benchmarking ("sort", Int8, false)...
    done (took 0.194865801 seconds)
    (269/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.074179018 seconds)
    (270/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.07158241 seconds)
    (271/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.143154027 seconds)
    (272/286) benchmarking ("sort", Float64, false)...
    done (took 0.177276497 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092795162 seconds)
    (274/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.111463208 seconds)
    (275/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136670856 seconds)
    (276/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.163439084 seconds)
    (277/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.131109711 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.119428494 seconds)
    (279/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.069887186 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089296578 seconds)
    (281/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.095001537 seconds)
    (282/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.091445174 seconds)
    (283/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.1147349 seconds)
    (284/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.094358406 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.121669064 seconds)
    (286/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.0905823 seconds)
  done (took 37.526257953 seconds)
done (took 38.473109198 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.10544105 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150466671 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.098123065 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.143106334 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.130248392 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095716626 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.124292709 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.102176178 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.129677797 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.130647765 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102985449 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.098867439 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.104338773 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.127312467 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.101972617 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.149453698 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.129570668 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.098793516 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.126183036 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.090065193 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.12638589 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090839443 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.119728677 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075360177 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.128177231 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.099873255 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.124017749 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.124636245 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.093160076 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.115297823 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095566326 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.123039746 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091915629 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.130442268 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.098070511 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.124074726 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101105868 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.125607054 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.089688201 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112476932 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118527993 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.089535975 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117431313 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095094822 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117264954 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09348941 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118033444 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099458358 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139844901 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117153856 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.097841712 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122466788 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.098543913 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.123196069 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094873686 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.12591662 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.095562072 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145549619 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.124964602 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097609588 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.123285506 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.098677453 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.122847531 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.100119975 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.125891404 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.126491683 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.104916798 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.122357984 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.103299496 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.121556288 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.091737346 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.126002754 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.094570978 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.11770129 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.101145024 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.128677661 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.089953124 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.123590412 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.098380204 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.12197033 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.112155101 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09164096 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113060428 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093557379 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113292301 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.074458862 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.09505659 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.124948373 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.091185385 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.126204903 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.123308391 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.099733901 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11834137 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104527744 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.116048288 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.098194698 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.117713053 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.092213612 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.118796542 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.095672783 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.116597178 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09466593 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121840006 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088856337 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118602254 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.100429211 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.11100363 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11430544 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087869178 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110456884 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.103216183 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121882241 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088995817 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117056974 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089232011 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119400972 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08693478 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110371604 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085911764 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111078343 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091513266 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110468574 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089603914 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118909266 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122704499 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087464986 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113388591 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089671736 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109201945 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.09307981 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.109359346 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086759949 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112283767 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078488088 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111448155 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088700577 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117339621 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090342525 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118664973 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089640464 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.12024838 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09182021 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11644649 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092144947 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110130322 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073743446 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11694686 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093437693 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.117706735 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.091506068 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.117601998 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.090447285 seconds)
done (took 17.479361023 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.093237338 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187715932 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150862569 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.140531366 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106417334 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112458344 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119924005 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118033125 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113928342 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141019903 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.114976451 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132414717 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146256509 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087772237 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111967438 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091946633 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113089414 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102000474 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144685832 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132298431 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.16636824 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087920958 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147919699 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136219137 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119712315 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106414648 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113279055 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092203736 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115144645 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113100702 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131942134 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.113146466 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.09001273 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135847282 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.106313901 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120756139 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087899227 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121469634 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.085886463 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112501229 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139836798 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131492298 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093115563 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116517197 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091006111 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113971522 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088597607 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122165042 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097693316 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116526253 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12635165 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15350693 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090267545 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120273295 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.084972292 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122425811 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119966318 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089832221 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110886472 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090532991 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.115007739 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092433293 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129461045 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143990423 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.094214733 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122769428 seconds)
  done (took 8.665113806 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.110443297 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140718283 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104218378 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129918578 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110459265 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088414417 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112127229 seconds)
  done (took 1.798648246 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094177067 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134870192 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109879033 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135507465 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132711791 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.111173474 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128271502 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.09316377 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13499996 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088069461 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134673538 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152329421 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091137824 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12281984 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13763588 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090384313 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138410367 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.09065553 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.1160161 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112712832 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115830182 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134026457 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091022072 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112838998 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103210052 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113861776 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161756597 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093269218 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113925815 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093170108 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111205654 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.164381802 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103059575 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124627172 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087373801 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128013344 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.126645854 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08782784 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129183272 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095117033 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127859541 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.087813851 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115458197 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08617109 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.134682003 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123292483 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.09009035 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115048888 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093537057 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134191456 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090225538 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126239227 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088256044 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117350741 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.08836433 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119533404 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.120990891 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090331421 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132758405 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092099977 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130166647 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105617007 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128207867 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130818736 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09222447 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128799922 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104436478 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119878013 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090763458 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116791758 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131030734 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089134194 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116612178 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.102047667 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120774783 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.118522777 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.143894372 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095299236 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.132524661 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.119079576 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093460292 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.119775812 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.120620986 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126048783 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090978379 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120132277 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092589142 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114250222 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.086808037 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117757034 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088395038 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117615896 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092496215 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114569088 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115062759 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.108765404 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.118773486 seconds)
  done (took 11.975168896 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094123198 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116535386 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094127746 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116699222 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.093195662 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.117232191 seconds)
  done (took 1.645462857 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116534641 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119879177 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102890678 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121356051 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15444665 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103103507 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129028497 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12253421 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109272872 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126662447 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128086661 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104917131 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.13483952 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120096588 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103679419 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119237862 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103610554 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125546952 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126259793 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097377026 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136087101 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120230691 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095785895 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133329727 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11776563 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099145145 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125048216 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104441512 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127023774 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122624407 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095035992 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117619065 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094435731 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122534289 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129365754 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09780723 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121414934 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118793157 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100457526 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11755356 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109725751 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124958981 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125079282 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09640232 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12687987 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120975808 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095687261 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126431099 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102009786 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119194257 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.117609271 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095249968 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.116932219 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093881924 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120133467 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121814246 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094294143 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128550659 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.094093401 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120989212 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117244379 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09271534 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123742454 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.114880015 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104746353 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.117971534 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095077602 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121290476 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119606978 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095204382 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118527832 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092271167 seconds)
  done (took 9.245640218 seconds)
done (took 34.326124595 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.690560996 seconds)
  done (took 1.704854462 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.817851523 seconds)
  done (took 1.833925514 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.622189615 seconds)
  done (took 17.665005196 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.49506403 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.581579952 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.992719697 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.177566868 seconds)
  done (took 3.264229692 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.955720873 seconds)
  done (took 1.988514028 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.286434585 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231316335 seconds)
  done (took 1.534099595 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.780216291 seconds)
  done (took 1.809665456 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.382239749 seconds)
  done (took 2.396257943 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327961461 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182813978 seconds)
  done (took 1.539611944 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.550491217 seconds)
  done (took 1.577113264 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.814485274 seconds)
  done (took 7.849688866 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269987908 seconds)
  done (took 1.309869506 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.304043646 seconds)
  done (took 1.331799481 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.497442442 seconds)
  done (took 4.528230829 seconds)
done (took 51.358427277 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102318673 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125530709 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101608109 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123625087 seconds)
  done (took 1.475428797 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102828633 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120192103 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101553827 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119901301 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123836742 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096494774 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121913715 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101118473 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120622304 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097147003 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120513848 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119588564 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.101108519 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.12611478 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095363679 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125394987 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099407179 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121131182 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123002321 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096231275 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118798787 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096495258 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124595324 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093507465 seconds)
  done (took 3.701398218 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10074663 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117109792 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096022687 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117531784 seconds)
  done (took 1.471900619 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101963676 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141883707 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.136725812 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100131492 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.14189612 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136028275 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.094424667 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117879045 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096164218 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126012796 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091922163 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.148444212 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136442287 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100388187 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127602073 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089593528 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116969753 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135600027 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.101677767 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125505276 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092553536 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125483936 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089141623 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140061815 seconds)
  done (took 3.850873759 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172543577 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127507478 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137070947 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095075305 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159893436 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.138720819 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087759044 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139800672 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088204121 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130796515 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116713124 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134784664 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128863677 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087024872 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113977815 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086658861 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128591466 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127111879 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090329097 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127388214 seconds)
  done (took 3.460932805 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.104186928 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119169207 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088151129 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.114877255 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.101112577 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119708902 seconds)
  done (took 1.68777996 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092759318 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113113766 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091592485 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114467135 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09656888 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115636961 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091113131 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.117715783 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092944529 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.12239333 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.095657812 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.121256792 seconds)
  done (took 2.305783303 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.500012062 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.12214357 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.117407429 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089407065 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.119738533 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090585377 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.12967982 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094893235 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139626289 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087672165 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116112273 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091436646 seconds)
  done (took 2.736795051 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235120966 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125193179 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282835582 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363495283 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156532649 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175954089 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278831385 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163054074 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.222884011 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165071352 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200659688 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223260655 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15057609 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189621826 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137212811 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.14290825 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205159781 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244362945 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151761597 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205777116 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224855661 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165560145 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178677914 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150399465 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137008384 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170251699 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.093146863 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130462189 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230231021 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174636057 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211806801 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160059999 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145754163 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208518816 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24984352 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219234181 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280625799 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135709771 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.147097123 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168295333 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26415656 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138179972 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2266197 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128946014 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132206066 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216833646 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169608213 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175414101 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151283503 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137638388 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194549069 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237298066 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191968357 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137273153 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301265857 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148915414 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.198867863 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192557683 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249948454 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199988224 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210837858 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095612136 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188410466 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220341895 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184668492 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.173176481 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.206942326 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149007181 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201005274 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188649926 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163744519 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218998782 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184845597 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1405042 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167719277 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1704704 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168863132 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258100166 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212149624 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095097961 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167004517 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148116478 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132631233 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192184065 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098430771 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237930332 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144105593 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.161041213 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214220205 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160166937 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159288832 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201032738 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228727823 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147216821 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083531186 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152994566 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154518741 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190429477 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142841647 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158006275 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161672378 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129485138 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182630317 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124920161 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182965429 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117460779 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172711122 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181626508 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.12545149 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158328133 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150875572 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.123871033 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199168475 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197205619 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14110452 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133574631 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208016758 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17613785 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150276289 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177143721 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226407356 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116816706 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148643905 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225039839 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216629648 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142024543 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225253098 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156194714 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107550157 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132328711 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178986103 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153612057 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161435299 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133304588 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185152088 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230990234 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098790071 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137809634 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19027367 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133914985 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132230441 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161982365 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146845797 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.11261313 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.154994447 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152331225 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205945554 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177225411 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152242543 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164748489 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150985464 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253143968 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138436291 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.126293159 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149496598 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119224976 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192797182 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195669675 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130337112 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228592451 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170294036 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202193678 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169837127 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133928203 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176392758 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129656857 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092547389 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219295469 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166819886 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160570452 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194972625 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225137793 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181742369 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.18041796 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197266675 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174582807 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164700811 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158473723 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110449328 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159819627 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169218173 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123419912 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143191763 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.132130504 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146220583 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11856361 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13278401 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220091139 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171171899 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190093527 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161199368 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147910469 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179318187 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127994778 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172366728 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175937736 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147200743 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197268177 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220401336 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185380202 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142804577 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19954422 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120833659 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122655837 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.113796965 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194726586 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107653465 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135265822 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161398972 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179372064 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178341942 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201619128 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208033539 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170260652 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21506019 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095775926 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167973042 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182864051 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174364293 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.190615227 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14444385 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149115185 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17978537 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158506249 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252389358 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168990779 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179099985 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234721228 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.126983036 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134061607 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1500214 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190811589 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152207932 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201713138 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119484489 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140740405 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160009063 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132298652 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158665549 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182403639 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161801563 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214874194 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.147612335 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183907983 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125857932 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162377675 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157438084 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164355764 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080998416 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174395796 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229806341 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147482525 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168505787 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187307429 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131223284 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307683052 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241132123 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195403559 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137101437 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1559809 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158521129 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164380466 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172356964 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180276524 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159346188 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189205422 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157440923 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136935971 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115153311 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150320684 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152350265 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132362322 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147387206 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176775989 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139091909 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186233175 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163067451 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159615431 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173401069 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15266382 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147244684 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153290851 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216463965 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184624486 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240564777 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.14936378 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.18035397 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231282469 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098019101 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131083124 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.130589036 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179641886 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108201263 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221105265 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188273146 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232307801 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182540094 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194616682 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139781433 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.117530305 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129953081 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198767865 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205971044 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15267168 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.157741295 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227101356 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.119487849 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131528541 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17674901 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293304186 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146231103 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221924587 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080092155 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.282104748 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128147214 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105695828 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163034619 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235261034 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134774976 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.186586957 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170735649 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169574573 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163257231 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147951845 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191055795 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242345995 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202645456 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177901536 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.13334498 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155220616 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174942767 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21737455 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156233734 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112923009 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229440668 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195466402 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195724066 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140698829 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167871071 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16729052 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156361565 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214612097 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10821001 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236254642 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134489415 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19586868 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152271852 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142922286 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174871915 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.188718855 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14129019 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212260482 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182678175 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133174223 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107337122 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167590171 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206162813 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156791071 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.09953232 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178047404 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.12452234 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192099329 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258948618 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134597764 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155136804 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146055627 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106774917 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153877807 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156071683 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140062974 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164053763 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208848326 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135409188 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188578684 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228931003 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169538765 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172153025 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144226025 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.690732799 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130764494 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192917495 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158946425 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231010316 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14753052 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172428619 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158448152 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168000489 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196904547 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162085231 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231281526 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192979401 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.207987992 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106545976 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159672151 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191319905 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117401982 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151930851 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166557502 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1596061 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.152929003 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.17498033 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197116471 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106162676 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139908636 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197348336 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159910219 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208058939 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177885935 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110281048 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171065242 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215032296 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132257957 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178501761 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234455668 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11333885 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150758493 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133602334 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155361284 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261190144 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096042445 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231229692 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185824692 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157754484 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167721276 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144738817 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218579202 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156209701 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18493578 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147058506 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159577092 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155695803 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135347756 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102901313 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154415849 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166031033 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148822425 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158707266 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.162660249 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19615845 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096376212 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145838389 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313919884 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193484199 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241033243 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.108204541 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135536516 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161202125 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150089945 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175466569 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177232757 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135500733 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133948639 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108328518 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157955508 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112530613 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155428135 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194810684 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164653084 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235206416 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135019821 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277973081 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116247517 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15514832 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.113693284 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.10677127 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1518613 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145650954 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15778366 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191345997 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265151355 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147448062 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131880228 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120674159 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12542728 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134382266 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16378159 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165256549 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180237859 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14445543 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080193061 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154894004 seconds)
  done (took 82.973140166 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163693704 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132859784 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146420582 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202539569 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1763216 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268226873 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.20958466 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252648468 seconds)
  done (took 2.680976106 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096449441 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146490502 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158331276 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131171524 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090815817 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.117740107 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.345856547 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.137727681 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116642142 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120692449 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172660158 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09387039 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.552871667 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.097271055 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119782232 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107407112 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091887529 seconds)
  done (took 3.820300305 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.477705157 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.696275321 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.511791412 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097109314 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.100160506 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112570911 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.587044878 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195880582 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.116618272 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.471771283 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.770829506 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158963083 seconds)
  done (took 18.427959152 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.12099222 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137208667 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.12428355 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153778548 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.13995059 seconds)
  done (took 1.81367123 seconds)
done (took 131.42934896 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.109651847 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.406163381 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072789714 seconds)
  done (took 1.6447436 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.113816644 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137976693 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107979716 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134996471 seconds)
  done (took 1.637348626 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.101883598 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124769297 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108770302 seconds)
  done (took 1.471560246 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.321388314 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.187760608 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.169400159 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106131433 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127899228 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103128868 seconds)
  done (took 1.47461425 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097749227 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126390259 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097757972 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128392172 seconds)
  done (took 1.592302551 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094469058 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070200432 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099179774 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074797647 seconds)
  done (took 1.475841436 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.118616794 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130856181 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103399155 seconds)
  done (took 1.495508681 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.132054366 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.137706965 seconds)
  done (took 1.410884755 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111321766 seconds)
  done (took 1.248848674 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.122986271 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.167112107 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.191350328 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.163206158 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.234381013 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.169149325 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.13806041 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.112525363 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131480425 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.14308439 seconds)
  done (took 2.718965757 seconds)
done (took 18.090260157 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108842299 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.510690932 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412391833 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116497787 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721386628 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.378829992 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.019434152 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144871287 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163743513 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092855665 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137909275 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672860574 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.011685188 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.466043581 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970466345 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371553347 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.67600516 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120374325 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119123668 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093676726 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.002612242 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091728068 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119972566 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091638685 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703272383 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423140013 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095150627 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.369695738 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091726716 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124934856 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381282075 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.120851299 seconds)
  done (took 17.054488215 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.099617451 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171573385 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09807149 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136167471 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12106435 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093929672 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123348992 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092805148 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177277572 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12402865 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110262523 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123207336 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123009017 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094233108 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140053116 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092543516 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124574043 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092413948 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119763476 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119215306 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111487694 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124606793 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094279002 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119386292 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092491487 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134436532 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.092753086 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120292126 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11918113 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09845678 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125994425 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093214357 seconds)
  done (took 4.846115839 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146752666 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181643613 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127087445 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126379599 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168754787 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122708129 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197736209 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119929156 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180673257 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122494967 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137620908 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092863425 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155460906 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.100772197 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142008222 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.125725521 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096437277 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120231164 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091720167 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122109073 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136553969 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095180526 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11986977 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092390659 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121041943 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107109221 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12250161 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.117419934 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093158526 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12503991 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098426969 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12181553 seconds)
  done (took 5.181001926 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.103548946 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123835258 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.1085936 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137582105 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09591482 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124709629 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096379744 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123661431 seconds)
  done (took 2.060471124 seconds)
done (took 30.278377462 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115198153 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124861232 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105943786 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135080001 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10155839 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132899581 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090322038 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132577958 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133813549 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103534734 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135395248 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.094912875 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.120539715 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09188528 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133393988 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.099974061 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133648132 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102530887 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.140303844 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131968631 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094782139 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133689808 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.109210501 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.139021047 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104756513 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133037297 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137747794 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101046518 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123195524 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093910126 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123327312 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110686668 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125842769 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104106988 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125842841 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.095892274 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122140681 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092958154 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131026752 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131278902 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.102541062 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133274973 seconds)
  done (took 6.064613602 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107670938 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.144013583 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104792645 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.087752918 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.123190786 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079770015 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136376887 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079085797 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.108637665 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107454437 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.078975222 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105088972 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077606016 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.099209504 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078527835 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074748484 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.10643153 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076182492 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075418676 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10402553 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079962866 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072306284 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.106987356 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077819513 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073415211 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.108731322 seconds)
  done (took 3.631266642 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.103073106 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132878152 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112051517 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181879789 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.157890582 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098171827 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133030082 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136734255 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109111831 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118315016 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096641921 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147315947 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109809207 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127267725 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089964785 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136515165 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133529299 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094638756 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126898359 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111931118 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136645206 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.100796346 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141847434 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.129545078 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091870759 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120845401 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096542485 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.132630406 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.104487951 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132273849 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096638041 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124035932 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121352664 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105142097 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125942054 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095554958 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140602699 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102354304 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131773432 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091386608 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.12471153 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.119431956 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113576549 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171001488 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097876522 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130904823 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.097959107 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131295843 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119287105 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11113536 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129999294 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.090688926 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.123706435 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09015945 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.119370686 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105306924 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125401517 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093514208 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129792773 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.121474814 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105995944 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123010213 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108039773 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122592786 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099645291 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120933642 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092091429 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122052839 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141806392 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097753093 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161057689 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09977449 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.129505339 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100277944 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13048019 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126087526 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093008593 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136661892 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106107996 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.131754792 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.104967418 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127840085 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094332215 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140742119 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094151752 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.122782427 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.118776792 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102488526 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123861882 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094159417 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134461128 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091954083 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125395042 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109410838 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.124493271 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.091792348 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.13058457 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12477376 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092347534 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132955764 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.09770866 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121952451 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101137771 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.120718242 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.093363582 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.131608776 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.124042013 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092075332 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12435443 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100175621 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12057005 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.095494594 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125780354 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.092775071 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13363236 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.10030621 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128989493 seconds)
  done (took 14.828686817 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.231747622 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212481468 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203010984 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.297206357 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135175615 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113009194 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.238008007 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124458864 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124186284 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158762289 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172482882 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.179659821 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168828121 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180693425 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169285862 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.095166442 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141253033 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.161588169 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214987517 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.255073159 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142449025 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099778533 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.158808286 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158343882 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.135426848 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132744652 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109856791 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134560092 seconds)
  done (took 5.817760779 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.11556361 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.160493432 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097686221 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143557126 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147301865 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093841608 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.126435869 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093451867 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13460052 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133398476 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092561589 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129654143 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099314253 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131261069 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.12018932 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102223799 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.129679709 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.093919412 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124058556 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097101755 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.127987606 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100153754 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.130297366 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.090615773 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13159216 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119037468 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08631704 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144564827 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092070419 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.14581192 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.119986458 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099964514 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132001476 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.101037977 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.129554836 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.102914798 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.132289626 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.099678406 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.131042939 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.093934768 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123033914 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077656508 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120465503 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105957857 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.131784519 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.078431084 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127741371 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126023683 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095436821 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.11786667 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096218201 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123326065 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097502268 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128670738 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098358292 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12196681 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096412609 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.113785951 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102859429 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12362495 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.08506543 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121601262 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099517903 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116587234 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104878449 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.125971714 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09471195 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126156866 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.099355952 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127066471 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.097422365 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.124980573 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090457495 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.124888434 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094569351 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127214301 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096591571 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121015304 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.091527802 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.124526704 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074558276 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.129526115 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.0756905 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124472995 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.093978996 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12259945 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097367208 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130063809 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135807509 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094929026 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.129417247 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096028851 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122936573 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098683113 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.111635969 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.102750303 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138881057 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140522099 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.096027227 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119501828 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108872286 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124672403 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092262604 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.104110654 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103077002 seconds)
  done (took 13.019493963 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130857805 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.156240158 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09499093 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.14146889 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156119604 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158262629 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102221069 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128461934 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.102481357 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143778672 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.100248144 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.130917814 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096884645 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136036151 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15906564 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.111514717 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12702935 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.111667693 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.139518614 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171659497 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.114758418 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144371831 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110686604 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.130959671 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.09748822 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.139642491 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162262873 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.110199579 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.139922585 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139324804 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.111204427 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.16200364 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.113792472 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128375436 seconds)
  done (took 5.587774714 seconds)
done (took 50.094902051 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.265642706 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.46910377 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.247508965 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.194445465 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.262024382 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.271018085 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.254073311 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.243188739 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.274472763 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.244253524 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.507672607 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.87993823 seconds)
done (took 59.283684923 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.284230257 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.381658963 seconds)
    (2/2) benchmarking "String"...
    done (took 1.58902416 seconds)
  done (took 4.139078842 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.03149944 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.146769713 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.503882109 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.242041085 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.24354814 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.547207752 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.850915299 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.488256573 seconds)
  done (took 28.188715725 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.25398673 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.325906593 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.269764475 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.248579914 seconds)
  done (took 6.267451125 seconds)
done (took 49.080996401 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.271950301 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.265596028 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.245435131 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.217477656 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.373851637 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.268699927 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.589374236 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.282697725 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.257896345 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.224665183 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.258279972 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.254031347 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.241133647 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.597381087 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.241178672 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.241773792 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.278975069 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.774751798 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.610508046 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.250497474 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.272913596 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.309790763 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.258011246 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.261714939 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.256605278 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.23386004 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.236091796 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.26410859 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.344532335 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.24000795 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.343689503 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.761824576 seconds)
  done (took 191.690500391 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.239581282 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.054192191 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.169848573 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.287688234 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.572524652 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.443394192 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.391651073 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.65321165 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.259696238 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.245739725 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.379989328 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.243596473 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.453998508 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.279346925 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.269333656 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.241310094 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.434118856 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.480716174 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.294195878 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.383816086 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.26314888 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.282967089 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.209948665 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.369969625 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.244630061 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.244151445 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.26294971 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.254662208 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.43496097 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.365384764 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.257349906 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.246405013 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.78707536 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.102098181 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.252272838 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.247881063 seconds)
  done (took 149.763335203 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.281660832 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.238799996 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.240218003 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.241744927 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.270076375 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.244553222 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.741563742 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.743787588 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.725136356 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.526277542 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.393876016 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.44289971 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.239063391 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.333472878 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.238935109 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.253071106 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.240711956 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.256726583 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.279242155 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.242536009 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.241460372 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.744919502 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.260404263 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.457283375 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.40715102 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.255152603 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.271372348 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.63024982 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.238158274 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.271628386 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.560515978 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.29126817 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.238965356 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.560677105 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.182371656 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.354473625 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.243867896 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.272613073 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.241482124 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.512897872 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.240438577 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.240178322 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.241169988 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.245636181 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.847807836 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.245609055 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.741793346 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.243078699 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.13483067 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.244605214 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.242872773 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.555522111 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.787237652 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.261496167 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.246665302 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.245954224 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.244189029 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.24237485 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.275237699 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.528670805 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.331400312 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.260700443 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.246859378 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.272604706 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.241756638 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.436128944 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.244432135 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.502367129 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.317305473 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.343689105 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.746929199 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.249589552 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.340570991 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.359264919 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.24174972 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.248158106 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.241894708 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.244285796 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.34864038 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.238462878 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.239837006 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.626862513 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.402779141 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.255611 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.3966583 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.337304987 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.239178339 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.54519811 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.241551007 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.236766553 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.951275229 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.241512123 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331053305 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.236825703 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.236352273 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.236786575 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.619773473 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.737557223 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.417346449 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.238595212 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.635725323 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.234304063 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.629651977 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.723026439 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.841001334 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.233186359 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337498083 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.393167699 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.246314336 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.228515782 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.38342017 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.231919114 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.286433381 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.22528673 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.619949862 seconds)
  done (took 367.831457432 seconds)
done (took 711.727547169 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.880809194 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.884371081 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.987559488 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.869927341 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.842680912 seconds)
  done (took 10.61763846 seconds)
done (took 11.769462455 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.433799593 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.434766072 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278783903 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.433100516 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248928152 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.449194627 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.393844914 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.241767728 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.333632047 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.298682611 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.328963317 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.271062094 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.247310461 seconds)
  done (took 18.545603313 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.538544063 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.541445645 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.28502793 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.524858748 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.256204184 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.525470462 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.410563451 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.425162165 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.431592229 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.250450345 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.2288608 seconds)
  done (took 16.566662437 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.532376813 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.534426083 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.281179132 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.528885198 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255693426 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.5279892 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.418212732 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.430279422 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.423462036 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244559919 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225872829 seconds)
  done (took 16.547121933 seconds)
done (took 52.809993567 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.220075754 seconds)
  done (took 2.363024939 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.251982897 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.413880703 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.237977953 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.225765837 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.221687191 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.223899392 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.22476443 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.221013195 seconds)
  done (took 11.161430868 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.217120211 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.217136374 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.219318868 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.21629302 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.221277224 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.215620354 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.21931281 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.216265424 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.216824238 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.218646996 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.219108577 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.218597891 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.21821027 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.217156949 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.217473065 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.21504663 seconds)
  done (took 20.624442349 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.21703105 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.215045043 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.214353109 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.21487982 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.21433457 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.212036639 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.21092729 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.213239982 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.210985602 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.211710355 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.209388115 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.212530571 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.209998592 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.206679502 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.207363132 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.206787238 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.207332032 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.208099285 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.212319321 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.207160117 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.209333911 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.207840542 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.207271826 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.207502038 seconds)
  done (took 30.194302041 seconds)
done (took 65.483357527 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.136980674 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.717502703 seconds)
  done (took 8.982980573 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.209008244 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.207314487 seconds)
  done (took 3.547714704 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.208860109 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.209027343 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.208713036 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.208942848 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.210233365 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.210289656 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.209144872 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.209120331 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.208697888 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.210597406 seconds)
  done (took 13.22239314 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.211636182 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.209275861 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.209432311 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.211016255 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.209886724 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.206939084 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.211127359 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.21004021 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.210516333 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.206384884 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.210236207 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.20716569 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.210333043 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.207348443 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.209194785 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.208150315 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.208257054 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.206819183 seconds)
  done (took 22.894069088 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.211301281 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.211251729 seconds)
  done (took 3.556005129 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.208591588 seconds)
    (2/7) benchmarking "second"...
    done (took 1.207524894 seconds)
    (3/7) benchmarking "month"...
    done (took 1.208975751 seconds)
    (4/7) benchmarking "year"...
    done (took 1.208586815 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.208508574 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.208395172 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.207609297 seconds)
  done (took 9.590751913 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.212205729 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.378699848 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.454670091 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.813486904 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.212754122 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.214523984 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.090072503 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.214522454 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.217396317 seconds)
  done (took 13.940894744 seconds)
done (took 76.865367616 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.203173259 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.221965502 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.289312307 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.211123505 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.221337713 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.549399762 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.22770795 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.332273922 seconds)
done (took 37.388844044 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.206413588 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.192477846 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.880969407 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.19877889 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.181102162 seconds)
  done (took 18.586753283 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.163930513 seconds)
    (2/2) benchmarking "read"...
    done (took 1.572112828 seconds)
  done (took 4.86977006 seconds)
done (took 30.796502298 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213799378 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.214180467 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.212225738 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.211414338 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.210779424 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.21268469 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.20992938 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.211333769 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.210672938 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.213364089 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.214849463 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.214171309 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.214673531 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.213514543 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214959248 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212103487 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211916335 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213596182 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.211757474 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211560975 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211444456 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214823153 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.211656082 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.210966596 seconds)
  done (took 30.236391755 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.216073207 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.211046727 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.213772132 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.214485134 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.212536853 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.213108983 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.217509499 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.212890728 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.215960398 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.214344778 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211934257 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.212993834 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.215275786 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.210621879 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214778954 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.213443057 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.214587993 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210337858 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215658703 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.214127302 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.213991522 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213131574 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.214699886 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215280142 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.213221003 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212895878 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.213426246 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.213252832 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215733469 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.211584506 seconds)
  done (took 37.548261859 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.220712728 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.221684313 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.215528536 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.214617224 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.213949154 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.215316602 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.214251704 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.215691457 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.214454778 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.217418524 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.215874448 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.216914424 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.215835922 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.215518359 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.215289092 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.217046134 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.217497079 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.217867314 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.217314582 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.216211701 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.216540074 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.217319197 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.217648806 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.216376339 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.215916169 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.217599341 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.21649626 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.218285269 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.218447865 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.217741781 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.2165732 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.217017805 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.218489963 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.217067351 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.216919351 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.218040359 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.221455336 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.224375287 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.21620622 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.21805886 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.217252027 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.217160757 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.21732066 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.217104924 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.218134337 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.21725249 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.217390708 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.218734374 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.21812424 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.217941092 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.218813682 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.217579712 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.21745167 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.219229007 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.219369592 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.217583782 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.218398806 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.217267171 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.216799112 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.219963862 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.218990795 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.219060912 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.218189962 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.219466613 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.218403452 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.220183323 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.219192135 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.218457882 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.219254309 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.219116336 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.218694556 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.219126289 seconds)
  done (took 88.811296913 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.219957021 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.217383632 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.216430568 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215862149 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216615241 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.219622103 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.216276103 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22023879 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217967856 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.219857134 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221288349 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.218425028 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216935575 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220744951 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220545854 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.21954451 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.219546348 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217305161 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.219842875 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.221957666 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221368025 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.217378714 seconds)
  done (took 27.955834023 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222467084 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222625319 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.217528697 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220779357 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218925382 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.220821935 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.219765182 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222164451 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221255447 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217003429 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219754837 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221185608 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.217805552 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219265827 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220481247 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.220415453 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220425525 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.21986309 seconds)
  done (took 23.105693024 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.219834024 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.219626545 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.221555121 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.219821153 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.219431975 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.224462501 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219506487 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223020078 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.221058112 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.222667713 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.22401508 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223315669 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.223312629 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220059703 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224273379 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220580315 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.222419424 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221978944 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221404581 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220792945 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.221241757 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223658623 seconds)
  done (took 28.020052474 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223411788 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.223349478 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.221205839 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.221804081 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.220548401 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.222468174 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.225269695 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.220936931 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.224480488 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.225373979 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221154711 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.2238463 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.22226747 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.222011318 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.220664935 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222937642 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.224631398 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.221024353 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223941138 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.220901265 seconds)
  done (took 25.596822476 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.226340175 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225734496 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.22498978 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226601823 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.226424266 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.225103649 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223932876 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.225053235 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.226421229 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.226346482 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.225982822 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.226441646 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22673252 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.227391338 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22678231 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227168565 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.225112607 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.226768543 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.227010234 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225971235 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.228813128 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.227204475 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22719645 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.227085921 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.228050692 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.227398087 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22682424 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.228821524 seconds)
  done (took 35.488868505 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225527164 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225346061 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.223128858 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.223327428 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.222964432 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.224756687 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.225053215 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.22590756 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.227640995 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224783966 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.22858982 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.226342081 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.226366207 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.227952462 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.228163888 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.22848317 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227758541 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.22608118 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224230501 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224321376 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.227810436 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227235016 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.226712608 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.22436687 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225718603 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.229445492 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225733595 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.224546624 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229267171 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.226863059 seconds)
  done (took 37.931337402 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.246489187 seconds)
    (2/2) benchmarking "in"...
    done (took 1.247480665 seconds)
  done (took 3.640319957 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.226187815 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228470318 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.22849308 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.226324417 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.227145726 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.228787882 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226698886 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225496827 seconds)
  done (took 10.967564666 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.227552948 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.227724896 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.229270888 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.228907152 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.23007197 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.227120131 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.235313092 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.247610588 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.228720698 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.231003939 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.235533258 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.235228566 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.230309082 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.229678619 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.228238014 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231670988 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.231463031 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.230284037 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.230489178 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.230562175 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229574352 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232606181 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.232802302 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.228437782 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.231780714 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.238440246 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.251985224 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.230746293 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.231887514 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.234340109 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.230119784 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.228035514 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.230993881 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.231579949 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.230342209 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.231819487 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.238605574 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247752582 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.236903551 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25098456 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231991855 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.22903809 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.230463751 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.232399327 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.231443995 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.233174067 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.232208008 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.227879251 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.230813569 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.233185773 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.236091931 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230889402 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.228561231 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233715822 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.231553437 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238461326 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.250600048 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.231964178 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.239093499 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.241528597 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.261312151 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.255747138 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.233394657 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.234236857 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240230793 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.253236355 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239408942 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.24791944 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.231885419 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.234177689 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.238252437 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262358797 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.254180004 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.234547237 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.232547868 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.234145861 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234176337 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23371096 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238266868 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.253929683 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.233556454 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234577809 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.240212678 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250844854 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.232364059 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.234919241 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.236054033 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.234456448 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.234702395 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242566072 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.25120067 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.234899233 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.232928323 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.233091856 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.233177443 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.235617159 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.234069881 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233689485 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.232452142 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.235330716 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234035771 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238218586 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.242587031 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235041467 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.235003307 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.240047552 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.254727523 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.233936545 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.241034555 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.235561315 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235660713 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.23514446 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.241540221 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.233725262 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237629456 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.240567756 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.235659554 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.237939049 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.236972411 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.23562573 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242775355 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.256003318 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.235820875 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.235484959 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.237848157 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.24487305 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23702573 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.238972967 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.237504762 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.234199329 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.232541431 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.238029547 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.23677923 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.237639025 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235963382 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237935337 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.233032064 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.237205872 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.236974175 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.238678523 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.238418535 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.234598219 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.238469902 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.239068125 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.237702798 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.239648646 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.242671323 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.2565537 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.23919473 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.238102201 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.233826025 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238738152 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.237735556 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.236989807 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.238861031 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239422905 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.239672803 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.23889859 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.239440616 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.239595197 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238419775 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.238152023 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240251575 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.240140577 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.242095606 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.236867679 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.238227573 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.239328612 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.236950778 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.23815886 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.240402282 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.2375066 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.240720948 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.244004118 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.240010947 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.23803755 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.240584763 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23936088 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240367665 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238650297 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.241683234 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.246123075 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.239767469 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.244495799 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.259021294 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241035117 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.24013439 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.238613072 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.238820588 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239843963 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.242971619 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.246010216 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250078739 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262895307 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.240241281 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.241659363 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.241359165 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.244426972 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.242752467 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.241474043 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.241353288 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240355375 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240045206 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239986798 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.240960744 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.240609122 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.240228857 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.241371693 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.242075572 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.242677171 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240546951 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.242321245 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241850218 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.240010397 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240587867 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.243135405 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.241624503 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.239428682 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.241467018 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.241734312 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.240632479 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.242930556 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.247454923 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.242653457 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242464551 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243329406 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.242261062 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.241688951 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.243257754 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245964609 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.241846668 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249197459 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.262804219 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.24259179 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247832154 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.262536989 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.243114124 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.245904408 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.243951952 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.24048754 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.246511458 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.249260701 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.242164384 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.244187851 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.244171847 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242709781 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244483855 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.247637771 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.258497808 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.242915401 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.244154691 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.244073644 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.241046706 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.245048968 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.24419024 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.245044335 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245360307 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245013155 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.244714298 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.243930896 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.244072189 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.245091329 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.245570366 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244921913 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.251210675 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.249126507 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.244447832 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.246821114 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.245093759 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.248226228 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.244166647 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.245102553 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.244495855 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254368404 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.2696564 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252128114 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.263940197 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.247345806 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250644199 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.265448217 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.247302395 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245174464 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245016913 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.243382328 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.243918749 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.242818964 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247253384 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.24500923 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247010906 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.24553775 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.249758055 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.24651744 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.245179216 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.246913814 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.246935653 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.244617902 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.245345612 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.247876517 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.246361494 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248173624 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.246272869 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.247859962 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253086875 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267431953 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.248211054 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.246776173 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.245263837 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.248223543 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.247170154 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.247620437 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.250889224 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.253930452 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.250604826 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.253642696 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.247399356 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25630195 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.246970324 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.252076157 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.25263851 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.246020028 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.245591358 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.247703633 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.248542942 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254327846 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.267750031 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.249173888 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.252294568 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249836876 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.249676733 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.24992125 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.250088686 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24822513 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.246624905 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255667086 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.267139674 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.252300263 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248623951 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.247429654 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.250124553 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.25147958 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.249755583 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252186897 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.249212307 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.250100889 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.248353058 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.249530701 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.249811884 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.249317104 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.250174646 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.248208826 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.252553397 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256477181 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.271552506 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252324246 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.251847558 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.256785754 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26721663 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256645914 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.269481554 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.250679223 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.251185033 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.250854387 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.250377662 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.249753349 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.250818694 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.250647742 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.252256239 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.25430431 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.251960154 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.253030509 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.24905424 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.252547852 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.251436779 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260076765 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271524571 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.251147847 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256143392 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.24970775 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.252183021 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.254836327 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.252220887 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.250862041 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.252320741 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258877427 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257874135 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.250877786 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.251808686 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255378737 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254205435 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.253576279 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.252750076 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.253375336 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.252492546 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.252168404 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.252931886 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254983294 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.253333493 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.252643656 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252136092 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.25449702 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.26219935 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.271878439 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.252602035 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252226253 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.255823871 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.25222858 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.252322721 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.254397001 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254031654 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255113499 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.254127244 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256910479 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.258717545 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.254596857 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.254365931 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.253066625 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.255156636 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.25371361 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256354419 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.255023998 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256295171 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.254587897 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.255851486 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.25614235 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.253737881 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.254298979 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.25468803 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254784819 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256034712 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.260424734 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255413915 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.252417482 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.254510294 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254645071 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.253388993 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.254401805 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.260111748 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275585362 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.265130841 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.260990289 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.257779104 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.256814479 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255165562 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.26289847 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.252470537 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.254232205 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.256044758 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.255303077 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.256400626 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.258805225 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25556767 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.261199578 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.273741989 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.255328824 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265123246 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.27610245 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255615912 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.258642996 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.259911395 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.256772759 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.253032438 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.258335601 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.257027648 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263807196 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.276110662 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258430047 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257527872 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.256073055 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.259574408 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260098661 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256966687 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.256378045 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.254021484 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.257864647 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257624133 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258999781 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.253792532 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.255756324 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.257340289 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.259819011 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.263430698 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.254601855 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258790739 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.256137872 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.259178617 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257620947 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25785778 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.255822451 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.256705694 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.258305242 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257875768 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.257565542 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.26101011 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.256629969 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.25900488 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.25950803 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258658689 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25854927 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.266366776 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.264348984 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.256035274 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.259348078 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.259227644 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.260691093 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257542108 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.258598397 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256121629 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.258745104 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.258900083 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260369374 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.260876071 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.260998292 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.2715131 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.279102505 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261037843 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.258728441 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262872718 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.259614991 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.257845103 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.258689143 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.261141561 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.263543326 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.264475966 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.260423336 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267123093 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279314316 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.262220861 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.264155845 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.262101605 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.26460706 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.262726595 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.259220078 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.260626506 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.264386009 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.272902046 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261560804 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.2680889 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286676503 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.280402327 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.261819686 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.260896845 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260475383 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.262787909 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.264459792 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.2599816 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.263260506 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26175441 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.261725676 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.2633186 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267356197 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.26105441 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.263708408 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.261985466 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.263358034 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.262293411 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.261121336 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.262146862 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.264285371 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.262425933 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.262622694 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.261442552 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.262034694 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273110349 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.287476626 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.261283093 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.263154884 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.261283276 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.265003286 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.263720137 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271765717 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.269116333 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.261606205 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.264513933 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.264957105 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263019954 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.26145067 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.263444724 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.262218051 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263310544 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.259071622 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.273148695 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286972795 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.268450925 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.264207532 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264896265 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.263775288 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26326528 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264274008 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263962967 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.265193498 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.265703441 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266632395 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.264987666 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.26325143 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.266924284 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.270028494 seconds)
  done (took 745.715745788 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262006842 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262135053 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.260767421 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.260994451 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262141582 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261413593 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262714682 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.262211997 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.261790731 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.262329053 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.262523609 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264469969 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.265407913 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.262885687 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263403572 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.263307103 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263433512 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.264607936 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.264666056 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264618252 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.261323372 seconds)
  done (took 27.700234813 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.266307176 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.263555888 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.263108297 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.265434644 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264273944 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.265379484 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.263795033 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266845849 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.26670608 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263447638 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.266868534 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267144177 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.264603965 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.265258535 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263154654 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.267956768 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.267246861 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26346107 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.265568591 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.264373654 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.266910595 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.264574376 seconds)
  done (took 29.021290135 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.265812653 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.268752891 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.265299828 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.264419346 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.267134552 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.265706045 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.268113506 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.267945584 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.26637996 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.268571482 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.267099713 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.267563203 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.27015368 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.270411198 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.269103596 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.267952432 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.413226923 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.269405706 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.267564594 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.268640198 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.267296812 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.272792372 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.283066262 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.266191933 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.268747241 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.2688132 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.268759032 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.268986986 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.268998583 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.270399429 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.272611235 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.271134366 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.2697697 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.269749672 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.267993308 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.269330666 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.272391676 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.270706052 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.267963799 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.268377479 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.277451593 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.286317167 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.268250163 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.275503386 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.289048212 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.269919722 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.272782646 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.276743251 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.26770103 seconds)
  done (took 63.572605287 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.271266266 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.271499269 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.268439026 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.270312752 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.272775953 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.268640206 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.271080785 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.270063469 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.267970567 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.267848893 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.271880945 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.268312705 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.269732674 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.271302013 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.2714705 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.269083702 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.268751145 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.268506074 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.268131648 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.269435023 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.268809715 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.272497521 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.27114414 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.267880631 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.272445088 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.269817244 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.268354251 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.272329478 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.268602779 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.270366995 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.272376218 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.271794443 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.272006272 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.269229034 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.271863223 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.273199713 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.272230306 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.270781754 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.272755074 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.269451492 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.272781706 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.271141179 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.27207376 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.273648844 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.269198936 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.272170232 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.269226817 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.269773028 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.271351352 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.273483437 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.272170654 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.270777324 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274725997 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.270496972 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.273790073 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.271727537 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.271838943 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.270183459 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.273513467 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.271290868 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.27165176 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.274348287 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.271370166 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.275170157 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.273701525 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.27143465 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.271136522 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275399478 seconds)
  done (took 87.623670368 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27338059 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.274090826 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273192178 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273207247 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273855193 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.274360583 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274806629 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.272337802 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.274160237 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275034705 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.27363173 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.275013081 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.275020797 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.274837639 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.273111694 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27537166 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.2755001 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277356899 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.273734133 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274977735 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.274430112 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277746859 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.274179488 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.275893762 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.277153373 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.275002029 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.27356381 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.272810236 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276005726 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.276416299 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.276241205 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.275892045 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.275588434 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275321684 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.276109493 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.277869856 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277019431 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275006587 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.276771683 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.27737872 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.27732726 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.27757169 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.277793325 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.277245406 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278639845 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.278556643 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.276874274 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.276887486 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.277707355 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.27823786 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.278332955 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277707546 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277890849 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276101257 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.279047201 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.277128554 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276117911 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276453659 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277644573 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279940659 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277844465 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.278378836 seconds)
  done (took 80.306899851 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279202705 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.279013102 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.275957927 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.277320971 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.27896143 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.276385535 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.276795023 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.278617908 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.277127172 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.279536176 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277936143 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276157313 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275419618 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281391477 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277911621 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275026406 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276745105 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.276041252 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280083802 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.276882179 seconds)
  done (took 26.748616615 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.275553257 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.27962617 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.27586364 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.27672731 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.278713848 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.276115394 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.279755207 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278966717 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276957191 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279190664 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.28139745 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280566663 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275613786 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.277292768 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.2780927 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.277507228 seconds)
  done (took 21.642954812 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.277180534 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.280997376 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.279714857 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.278997862 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.27811717 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.276419528 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.282437 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.278166659 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.277937161 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.280414225 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.280308871 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.281131277 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.279782712 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.279895839 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.279527172 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.282408134 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.277036743 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.279057457 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.281135313 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.280115858 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.280265168 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.278408416 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.282058698 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.280394831 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.279425119 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.278415629 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.279734902 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.277960771 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.279120284 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.281650881 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.279132522 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.279081838 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.278471977 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.278746459 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.282400496 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.279440418 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.281086217 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.280541005 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.28291436 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.282797493 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.281985928 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.279768063 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.283518237 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.282880144 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.281295421 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.281205239 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.279324066 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.280022428 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.279740912 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.281675407 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.280834324 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.282153864 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.284139272 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.281920447 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.282133988 seconds)
  done (took 71.61380249 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282916094 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.283709505 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.282141454 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.283438776 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283987961 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.280057078 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.284185201 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.282382028 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280006164 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.284914764 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282878788 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.286499704 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282421142 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284503724 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.283336107 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284359318 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.280553861 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28226006 seconds)
  done (took 24.293042181 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.28377264 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283443624 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.286954737 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.281901406 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.282673286 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285471517 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282520001 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.284769856 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283388549 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.284433581 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281566884 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.286700915 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285736568 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.284847756 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.283208365 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283550295 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.285973301 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286258246 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.282918847 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281997118 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.286102105 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285914716 seconds)
  done (took 29.453618749 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.285645535 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.284607134 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.285988168 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.299855179 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.29936021 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.305291384 seconds)
  done (took 8.960082688 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291368467 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28616172 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284404445 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283034988 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28408063 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280516689 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281689253 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28167157 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284231253 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280868228 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28008228 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281990663 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28047177 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280247105 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281258945 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280345694 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277581641 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282568187 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283988986 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286381042 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282930649 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2856317 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282692356 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281284038 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281733622 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284126434 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283750172 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283575373 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281294375 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285821994 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285097983 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282769715 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283644738 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283988476 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28717902 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284531654 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284370284 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285892953 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283268285 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282020406 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286107994 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286461111 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285571495 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285578625 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287080148 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281749639 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283467866 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282153862 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283675894 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285827282 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285180938 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280125455 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283818732 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284312696 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283552125 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284760016 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28693436 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27976251 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280744749 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278109965 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278850359 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282128124 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278570128 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277707986 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284704355 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283055615 seconds)
  done (took 85.91230193 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28304031 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282927217 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281370431 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283664442 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281725827 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283693845 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282386399 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282785608 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280483125 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281925906 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286790419 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280239776 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283716664 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279516383 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277183105 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278018033 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276059022 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276924988 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2762779 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279666801 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275874433 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277792895 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280618522 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276071119 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27919338 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278991181 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275744113 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278419426 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279111028 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27833689 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277514599 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2790813 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278810927 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278507991 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277225837 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27950725 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27927642 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278157445 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278983166 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279714386 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276954119 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282649302 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279156012 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277889665 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280133757 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278212966 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277205522 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279082823 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278359854 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277206716 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279398537 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278938601 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279855252 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279526953 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277704404 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27908371 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280282559 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279422779 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277338121 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285398946 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279110073 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279219219 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281373571 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280411442 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280812047 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277658257 seconds)
  done (took 85.64833148 seconds)
done (took 1738.648007926 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.363198181 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.272044642 seconds)
  done (took 13.832557001 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.448152303 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.399788614 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.282240607 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.320340987 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.284169906 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.284980662 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.303937859 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.283159256 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.284723033 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.281300096 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.283833861 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.474056611 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.3349729 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.286601139 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.284486865 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.377499594 seconds)
  done (took 42.416717165 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.310868917 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.291378487 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.398888271 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.306127102 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.311131084 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.470400883 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.346862418 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.288802527 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.451861947 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.325003377 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.776161748 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.310283822 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.288278353 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.346684591 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.306953777 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.470499548 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.530502964 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.775174989 seconds)
  done (took 29.507482994 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.715396165 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.30659469 seconds)
  done (took 9.226599073 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.308389276 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.293988374 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.290182926 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.286400467 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.279544551 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.281228728 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.287048618 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.294227005 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.783960886 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.410782804 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.291652972 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.297949833 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.309399906 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.282984004 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.279205556 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.315668293 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.439161223 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.282445236 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.279154901 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.285429687 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.278662732 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.381044562 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.316857876 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.28147723 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.397150739 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.728075441 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.286446001 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.283485431 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.406061932 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.279038354 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.276531844 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.278005801 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.278771311 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.877637377 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.804666151 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.284895046 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.31684994 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.289019724 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.275438439 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.432211816 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.27973462 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.284466851 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.270247771 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.804908195 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.407228561 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.392661094 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.417611722 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.295234448 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.280436937 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.338528718 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.285424183 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.281974841 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.306574776 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.031008946 seconds)
  done (took 108.216594998 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.298534129 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.660484455 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.441464491 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.295296811 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.100385187 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.048656762 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.294642281 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.54350178 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.320172962 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.271990974 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.556493897 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.773339427 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.294948048 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.341896549 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.754930324 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.281293635 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.276703229 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.997635035 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.288278376 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.278662712 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.752561141 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.281559286 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.272864886 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.468291468 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.312213305 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.716644292 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.590445134 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.823204629 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.296830479 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.27379489 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.728893523 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.297075916 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.286556228 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.27560426 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.529973206 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.618273349 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.61571872 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.301727878 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.288439205 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.277969938 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.286660361 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.710287699 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.615285007 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.29072909 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.300176672 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.714351713 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.29165746 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.285405493 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.281979519 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.482623319 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.920390852 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.28225215 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.600525096 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.281270729 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.569292953 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.34901067 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.334106641 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.745110151 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293893777 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.430980521 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.313141268 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.277562233 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.283855968 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.280027089 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.284281341 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.61312516 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.542201225 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.282721134 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.610044083 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.748793682 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.297988349 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.793080008 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.173794324 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.284533885 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.322649885 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.275891571 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.856200842 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.757424732 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.339721492 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.27635514 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.594655201 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.292424822 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.548427389 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.293591731 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.278230034 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.781788553 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.289979498 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.3093334 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.276203312 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.283499783 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.039293139 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.283878255 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.554042808 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.353697816 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.278882254 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.277444816 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.312977122 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.279006676 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.295364301 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.278082823 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.788305285 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.303635623 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.247755523 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.300515296 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.280891503 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.300603175 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.278419192 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.277612166 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.502460735 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.70890988 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.303083099 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.278027911 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.279591935 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.309413889 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.459567603 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.285801344 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.57365378 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.302527227 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.278894585 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.298449738 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.061212269 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.338369047 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.279076304 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.303566304 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.176693371 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.492088614 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.298173923 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.295331917 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.280125893 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.298538862 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.452773101 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.298597242 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.358001161 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.282068807 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.970517576 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.300569232 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.319517073 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.582197008 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.287919027 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.10337115 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.294912312 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.28367332 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.570269987 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.547026502 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.48478497 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.293626245 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.280837696 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.950468952 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.30438259 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.427265847 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.298204555 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.267393016 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.478974092 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.399087139 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.282634761 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.892344731 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.281426906 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.500049565 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.286690987 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.590285987 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.760344703 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.303640778 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.282959141 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.979969876 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.982181026 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.034861919 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.283608212 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.556537753 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.258381626 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.757548194 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.282956538 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.293042579 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.865232218 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.288212649 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.286667208 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.283321946 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.283160898 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.348050123 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.455932517 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.520078332 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.287548352 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.725429011 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.313541697 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291934633 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.291246146 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.287260673 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.633497253 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.337830965 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.285989094 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.331756429 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.284049789 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.292786731 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.747199929 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.220678329 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.290794745 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.436644191 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.899177724 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.30545924 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.283185423 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.861402152 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.508609972 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.817913625 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.348476456 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.582298725 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.311865539 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.322399023 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.034630962 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.313917208 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.745715734 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.311106358 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.300516409 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.868648781 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.305565495 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.414453488 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.282909107 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.285931026 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.809446664 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.306710176 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.287080108 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.485166209 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.306731194 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.556068575 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.284704893 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.327295735 seconds)
  done (took 1098.393276761 seconds)
done (took 1302.790110071 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.285669235 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.286285226 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.273948505 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.292981517 seconds)
  done (took 26.346122396 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.296176083 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.292676138 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.293842354 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.292681226 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.29472154 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.290144862 seconds)
  done (took 8.968560353 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.327155066 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.286640094 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.296550279 seconds)
  done (took 19.117267207 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.488339632 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.563875738 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.634956685 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.447005467 seconds)
  done (took 10.343410786 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.295462294 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.295200907 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.294745655 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.295519924 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.296405806 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.299266258 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.295900725 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.294848777 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.298158169 seconds)
  done (took 12.872435562 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.295514462 seconds)
done (took 80.148754315 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.493327231 seconds)
    (2/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.28970207 seconds)
    (3/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.322305615 seconds)
    (4/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.268320541 seconds)
    (5/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.293079437 seconds)
    (6/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.812443376 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.864635717 seconds)
    (8/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.402627629 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.692075671 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.55826893 seconds)
    (11/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.320536259 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.326993521 seconds)
    (13/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.643529483 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.338182754 seconds)
    (15/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.267758591 seconds)
    (16/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.31121519 seconds)
    (17/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.441766565 seconds)
    (18/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.268843722 seconds)
    (19/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.288986951 seconds)
    (20/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.336942822 seconds)
    (21/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.659315385 seconds)
    (22/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.418638065 seconds)
    (23/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.267962211 seconds)
    (24/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.276967816 seconds)
    (25/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.43567391 seconds)
    (26/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.626108385 seconds)
    (27/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.61798343 seconds)
    (28/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.483648916 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 6.295721123 seconds)
    (30/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.268860621 seconds)
    (31/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.40061132 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.392531162 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.638456915 seconds)
    (34/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.31052547 seconds)
    (35/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.542491041 seconds)
    (36/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.686219019 seconds)
    (37/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.595083511 seconds)
    (38/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.270609103 seconds)
    (39/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.296088044 seconds)
    (40/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.305119638 seconds)
    (41/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.294219905 seconds)
    (42/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.030280485 seconds)
    (43/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.381778198 seconds)
    (44/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.268591706 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.417085765 seconds)
    (46/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.533469188 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.557428856 seconds)
    (48/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.400151527 seconds)
    (49/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.814882338 seconds)
    (50/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.277460036 seconds)
    (51/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.650028333 seconds)
    (52/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.983951599 seconds)
    (53/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.298293307 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.369923953 seconds)
    (55/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.270593763 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.947611545 seconds)
    (57/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.383060734 seconds)
    (58/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.391996485 seconds)
    (59/286) benchmarking ("sort", Float64, true)...
    done (took 6.290677668 seconds)
    (60/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.682342799 seconds)
    (61/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.316553123 seconds)
    (62/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.281498054 seconds)
    (63/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.115429935 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.221883128 seconds)
    (65/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.311999472 seconds)
    (66/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.463057328 seconds)
    (67/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.498383486 seconds)
    (68/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.139379794 seconds)
    (69/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.600407882 seconds)
    (70/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.321721681 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.696431619 seconds)
    (72/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.307116573 seconds)
    (73/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.84594818 seconds)
    (74/286) benchmarking ("sort", Int64, false)...
    done (took 5.461463466 seconds)
    (75/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.116679742 seconds)
    (76/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.150224994 seconds)
    (77/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.755794177 seconds)
    (78/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.304985685 seconds)
    (79/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.053072776 seconds)
    (80/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.07495695 seconds)
    (81/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.309504752 seconds)
    (82/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.342635623 seconds)
    (83/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.405288937 seconds)
    (84/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.272912742 seconds)
    (85/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.890088349 seconds)
    (86/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.08730553 seconds)
    (87/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.657004019 seconds)
    (88/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.650937733 seconds)
    (89/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.49169216 seconds)
    (90/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.315966597 seconds)
    (91/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.273703311 seconds)
    (92/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.39301084 seconds)
    (93/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.156372444 seconds)
    (94/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.281811299 seconds)
    (95/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.383037809 seconds)
    (96/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.283812383 seconds)
    (97/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.381718786 seconds)
    (98/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.318148974 seconds)
    (99/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.317442809 seconds)
    (100/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.297558055 seconds)
    (101/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.383315762 seconds)
    (102/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.848946709 seconds)
    (103/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.893913662 seconds)
    (104/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.720274789 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.52646888 seconds)
    (106/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.301805345 seconds)
    (107/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.272701184 seconds)
    (108/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.426269317 seconds)
    (109/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.319141932 seconds)
    (110/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.417753501 seconds)
    (111/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.893491061 seconds)
    (112/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.507841666 seconds)
    (113/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.887680041 seconds)
    (114/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.327247535 seconds)
    (115/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.285962064 seconds)
    (116/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.26170553 seconds)
    (117/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.281265338 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 1.824478801 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.340917056 seconds)
    (120/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.275205699 seconds)
    (121/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.280565809 seconds)
    (122/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.49402626 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.580331203 seconds)
    (124/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.295398307 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.037674786 seconds)
    (126/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.482292831 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.575233885 seconds)
    (128/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.253612962 seconds)
    (129/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.038315165 seconds)
    (130/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.350243049 seconds)
    (131/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.508566339 seconds)
    (132/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.275916144 seconds)
    (133/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.379050615 seconds)
    (134/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.32087939 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.426453162 seconds)
    (136/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.304256347 seconds)
    (137/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.279128802 seconds)
    (138/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.403149632 seconds)
    (139/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.311276871 seconds)
    (140/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.275472235 seconds)
    (141/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.282953131 seconds)
    (142/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.328292182 seconds)
    (143/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.695174454 seconds)
    (144/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.322303041 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.047631931 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.331098707 seconds)
    (147/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.381520785 seconds)
    (148/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.813425771 seconds)
    (149/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.283714621 seconds)
    (150/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.2807558 seconds)
    (151/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.344474464 seconds)
    (152/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.756154109 seconds)
    (153/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.00925758 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.334747939 seconds)
    (155/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.299220375 seconds)
    (156/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.277698107 seconds)
    (157/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.110636808 seconds)
    (158/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.283850112 seconds)
    (159/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.379548893 seconds)
    (160/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.278050612 seconds)
    (161/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.36486409 seconds)
    (162/286) benchmarking ("sort", BigInt, false)...
    done (took 6.297595786 seconds)
    (163/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.880866494 seconds)
    (164/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.288309094 seconds)
    (165/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.391531062 seconds)
    (166/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.388324385 seconds)
    (167/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.679083495 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.974159415 seconds)
    (169/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.389983089 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.646601893 seconds)
    (171/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.347731552 seconds)
    (172/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.299204444 seconds)
    (173/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.491666318 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.331533116 seconds)
    (175/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.298024625 seconds)
    (176/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.322212921 seconds)
    (177/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.399283643 seconds)
    (178/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.296489348 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.340193926 seconds)
    (180/286) benchmarking ("sort", Float32, false)...
    done (took 5.310803635 seconds)
    (181/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.383652743 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.203634907 seconds)
    (183/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.648839212 seconds)
    (184/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.332264733 seconds)
    (185/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.077784441 seconds)
    (186/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.321089648 seconds)
    (187/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.651650716 seconds)
    (188/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.331107788 seconds)
    (189/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.324436125 seconds)
    (190/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.309201959 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 5.415023096 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.378329944 seconds)
    (193/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.279936482 seconds)
    (194/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.28064765 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.884664738 seconds)
    (196/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.315194552 seconds)
    (197/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.873900374 seconds)
    (198/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.33461809 seconds)
    (199/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.31540165 seconds)
    (200/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.042419756 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.931215562 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.515776135 seconds)
    (203/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.280485005 seconds)
    (204/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.578152701 seconds)
    (205/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.3727268 seconds)
    (206/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.2813901 seconds)
    (207/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.343842705 seconds)
    (208/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.062777457 seconds)
    (209/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.347399092 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.322588588 seconds)
    (211/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.293026052 seconds)
    (212/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.886105022 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.349906257 seconds)
    (214/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.422358597 seconds)
    (215/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.322764567 seconds)
    (216/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.925304242 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.158782719 seconds)
    (218/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.307502385 seconds)
    (219/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.553302855 seconds)
    (220/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.075073468 seconds)
    (221/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.307119921 seconds)
    (222/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.376679001 seconds)
    (223/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.491135097 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.226552402 seconds)
    (225/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.325903491 seconds)
    (226/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.121069059 seconds)
    (227/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.289347694 seconds)
    (228/286) benchmarking ("sort", Int8, true)...
    done (took 6.309709126 seconds)
    (229/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.766694818 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.516668004 seconds)
    (231/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.667238974 seconds)
    (232/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.400979272 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.959099578 seconds)
    (234/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.307864349 seconds)
    (235/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.193741427 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.336130764 seconds)
    (237/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.8937283 seconds)
    (238/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.69958377 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.691471549 seconds)
    (240/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.48254192 seconds)
    (241/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.330320504 seconds)
    (242/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.351043993 seconds)
    (243/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.5888403 seconds)
    (244/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.445768158 seconds)
    (245/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.430986838 seconds)
    (246/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.008163426 seconds)
    (247/286) benchmarking ("sort", Float32, true)...
    done (took 6.32593649 seconds)
    (248/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.723689441 seconds)
    (249/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.436994715 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.734872356 seconds)
    (251/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.584858801 seconds)
    (252/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.088980607 seconds)
    (253/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.077065745 seconds)
    (254/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.368475669 seconds)
    (255/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.723697454 seconds)
    (256/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.149227299 seconds)
    (257/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.320439625 seconds)
    (258/286) benchmarking ("sort", BigInt, true)...
    done (took 6.353725318 seconds)
    (259/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.64845248 seconds)
    (260/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.618748203 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.392788207 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.218929328 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.170563591 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.392154008 seconds)
    (265/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.102833388 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.428966431 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.121412405 seconds)
    (268/286) benchmarking ("sort", Int8, false)...
    done (took 4.311232798 seconds)
    (269/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.286520749 seconds)
    (270/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.155347687 seconds)
    (271/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.338991601 seconds)
    (272/286) benchmarking ("sort", Float64, false)...
    done (took 5.614926732 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.352845265 seconds)
    (274/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.304151178 seconds)
    (275/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.313063712 seconds)
    (276/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.409282633 seconds)
    (277/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.642403386 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.335111356 seconds)
    (279/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.290951593 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.717278445 seconds)
    (281/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.307644178 seconds)
    (282/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.769428869 seconds)
    (283/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.05286777 seconds)
    (284/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.377756567 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.940925861 seconds)
    (286/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.418126335 seconds)
  done (took 927.271139755 seconds)
done (took 928.477647365 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.337850982 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.332065999 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.314456538 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.336064176 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.42663225 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.339243824 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.324358856 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.317164974 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.362139955 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.364351045 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.314315497 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.340684452 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.316714959 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.316027672 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.3145361 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.329999223 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.330375219 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.317184788 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.331919653 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.323678021 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.332954023 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.315558702 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.364371094 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.341911766 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.319772658 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.319648824 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.319502214 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.336656397 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.427721146 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.320114256 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.319717298 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.327722242 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.33232538 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.313643713 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.310933058 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.335824847 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.327486249 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.326487012 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.31967439 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.348229979 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.727103027 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.33325474 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.318595193 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.318025488 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.316637033 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.322354579 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.31843178 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.324405115 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.330669173 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.332192597 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.714274754 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.349677216 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.321093008 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.319972355 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.329691695 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.317871813 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.32121007 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.334279476 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.338359194 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.335842558 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.322710492 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.324023587 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.320491018 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.334422631 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.326637928 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.755262385 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.33172752 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.325616908 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.733414096 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.341538399 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.756969124 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.344583454 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.321418009 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.334361213 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.351780747 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.336498373 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.31263314 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.319423348 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.326391249 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.317733043 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.329515875 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.334047272 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.326438813 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.321223833 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3342225 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.349964005 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.330394806 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.321510566 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.329682335 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.338835619 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.327457902 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.332655714 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.323063747 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.314781918 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.331359928 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.324242746 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.32337516 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.322935468 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.326956208 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.331140063 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.731968892 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.354986693 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.316797735 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.317336517 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.318703613 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.333914994 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.73346686 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.338616076 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.343549945 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.368207833 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.322008789 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.324827383 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.32589634 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.33881006 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.330827184 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.325811468 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.318174796 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.330437857 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.723928614 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.353116013 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.322850813 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.321113949 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.340051118 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.32350342 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.318090882 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.344609814 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.323626717 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.339478031 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.442905301 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.334222003 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.354249379 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.320617716 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.327685728 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.346123026 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343489837 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.356335118 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.328434456 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.340685266 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.340175177 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.31854811 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.333961185 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.334238088 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.324721847 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.329986791 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.318078493 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.350038178 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.337399183 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.337213337 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.346550807 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.445595644 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.320934581 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.329787405 seconds)
done (took 223.062741118 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.383848258 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.315875116 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.404601293 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.321724061 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.421547033 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.42106278 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.319651697 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.318796322 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.318675288 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.6959371 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.318541745 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.31912596 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.319648033 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.319662001 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.402848571 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.320427477 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.318857484 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.711138892 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.322390348 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.392144378 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.320557478 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.319920628 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.321947616 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.701579359 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.316383383 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.31934379 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.391577794 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.321492937 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.666132185 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.316409342 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.318000847 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.667032335 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.412123627 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.34105413 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.333675856 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.328334 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.423847777 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.340892436 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.4029403 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.403923497 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.407923016 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.360684985 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.325612572 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.3245159 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.324092152 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.324465829 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.320684803 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.351541237 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.317581727 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.321739401 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.710268736 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.332920741 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.322414596 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.323033185 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.321761012 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.35297501 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.323009712 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.324323288 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.412508993 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.324837378 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.385402747 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.706123847 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.697443295 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.326059635 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.322587921 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.321736123 seconds)
  done (took 147.754026174 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.391459439 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.396313093 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.437076673 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.342204718 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.377409005 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.44110293 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.340838725 seconds)
  done (took 10.963449563 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.33266462 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.32651081 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.374403914 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.373684683 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.327753078 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.471703319 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.325191337 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.33682019 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.323112838 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.377826496 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.327103255 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.327098311 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.333182827 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.326083759 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.374059431 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.336276115 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.441493438 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.327893442 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.326505635 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.478553613 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.323259057 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.334509433 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.37719577 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.338726791 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.329072969 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.332613629 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.897253312 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.326601809 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.324801421 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.325942759 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.324516382 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.363699745 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.328985448 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.323371541 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.325684742 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.443011299 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.327436973 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.325641027 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.328415923 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.324959402 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.329386987 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.328724761 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.328958595 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.327360337 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.330177051 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.351280645 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.327832758 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.328199388 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.328399509 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.33086641 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.378519157 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.328817559 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.327218981 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.326453405 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.383440422 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.334838355 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.328947673 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.327142968 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.329661281 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.326259964 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.479519834 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.377107155 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.329719027 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.377730356 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.330466023 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.329251184 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.328030037 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.330159939 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.382767722 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.328338026 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.377480489 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.328169043 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.483028166 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.352337848 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.331484717 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.333226564 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.331981311 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.332400955 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.3267033 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.336899966 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.327639288 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.331918365 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.337834294 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.328691345 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.32814689 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.432363457 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.439160836 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.328349329 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.342184253 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.33776437 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.329743833 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.38430011 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.331301906 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.327437703 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.382555894 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.444997666 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.385379425 seconds)
  done (took 152.682572079 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.337355489 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.338477218 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.331999564 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.346794955 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.331115007 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.330268364 seconds)
  done (took 9.258188955 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.333684412 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.332563399 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.329662269 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.332101886 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.331111643 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.333513876 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.332383058 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.333549106 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.335711475 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.332737407 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.331967978 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.333478773 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.335817308 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.331631199 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.332563671 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.335220699 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.333207762 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.331362374 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.333955365 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.331875418 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.428290611 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.334320722 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.334565637 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.334863606 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.337889671 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.332944419 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.339518242 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.332393385 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.333835335 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.340394233 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.354004405 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.334773744 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.333980619 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.339332827 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.338244003 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.335134357 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.33873191 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.335000923 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.333005729 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.334924079 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.33574398 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.336513927 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.334555419 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.335501502 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.338311896 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.340112403 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.338991239 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.340512273 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.335005199 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.335758852 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.337391774 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.3344524 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.337079218 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.336170034 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.338575143 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.356249221 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.33989979 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.337644713 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.33606117 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.336680499 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.336722248 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.337984726 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.3371199 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.339725665 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.342451631 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.337923076 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.33621909 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.339466889 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.335019683 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.334641929 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.337797572 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.334072962 seconds)
  done (took 98.541301049 seconds)
done (took 420.432299623 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.659581238 seconds)
  done (took 7.906700868 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.408734368 seconds)
  done (took 7.6565041 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.830634126 seconds)
  done (took 22.079672491 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.413077205 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.394622429 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.358773361 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.341669014 seconds)
  done (took 26.755986642 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.671911078 seconds)
  done (took 7.919272781 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.328360634 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.338278299 seconds)
  done (took 13.91526651 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.799012495 seconds)
  done (took 8.047147936 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.404400035 seconds)
  done (took 7.65276418 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.355166238 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.354455404 seconds)
  done (took 14.211051724 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.310485672 seconds)
  done (took 7.557645938 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.092866558 seconds)
  done (took 8.34149429 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.34347954 seconds)
  done (took 7.593724939 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.406559252 seconds)
  done (took 7.65664326 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.321811379 seconds)
  done (took 9.57365602 seconds)
done (took 158.115484082 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.332798087 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.330023413 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.335388941 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.330290522 seconds)
  done (took 26.57944175 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.373239043 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.370464256 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.372738212 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.381493929 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.375288226 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.371351661 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.364153258 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.364347829 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.382760805 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.376492599 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.375734296 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.378563252 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.37204125 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.365097835 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.37608057 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.377347223 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.384884958 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.374370406 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.367273434 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.377580998 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.339240742 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.383594414 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.379410879 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.341484203 seconds)
  done (took 34.176333867 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.861749596 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.410555468 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.493259807 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.391388112 seconds)
  done (took 7.405408915 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.392650022 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.392239717 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.405432655 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.444614881 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.471215997 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.403087934 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.36927585 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.360701134 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.348443338 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.395025697 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.468198408 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.411102443 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.476180842 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.341061664 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.527391464 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.341441301 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.343226146 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.392995781 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.446950193 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.459665434 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.346084724 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.393284241 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.397872336 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.413534192 seconds)
  done (took 34.994909114 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.341617736 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.363286731 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.343472177 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.340243634 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.349379558 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.343927839 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.341502197 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.343486932 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.340771299 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.349285526 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.340651055 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.352823351 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.342028371 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.340777498 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.351007292 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.344133167 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.35018373 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.345844013 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.341861834 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.346981077 seconds)
  done (took 28.166615735 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.335708917 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.191064009 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.688054495 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.591972729 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.33764769 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.336427956 seconds)
  done (took 27.734839956 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.410310915 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.570858867 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.342852263 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.694836982 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.790998345 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.36240464 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.345218622 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.588319032 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.907761306 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.886371012 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.408492324 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.417553932 seconds)
  done (took 19.981292898 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.350406694 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.345044347 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.342197606 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.36183415 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.397231578 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.372244701 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.350945604 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.337809044 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.405768394 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.427564168 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.372421345 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.399993653 seconds)
  done (took 37.718728596 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426191869 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385029687 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.250861343 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381454218 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.057134999 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551612724 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.34351782 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.84882688 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.343501728 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613284423 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352494843 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435747017 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.59497132 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342678509 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.34759751 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.325127492 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.584514314 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831358794 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348020245 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.391292522 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374483279 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.349590227 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.405575232 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.378831037 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.552857029 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.4837662 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.600982418 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.118886653 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634230296 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360283832 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352723026 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343822655 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617205799 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014930103 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4644105 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353693295 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357553571 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.895947853 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.32973934 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.309213952 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.326740232 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.352989887 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352666916 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342593751 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.277970787 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345704897 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844439214 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.347581398 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.053857294 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.34090886 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352264451 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434412497 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.346945083 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.91174504 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359247515 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.349257942 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.34044684 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434291065 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935212893 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.876432682 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352331741 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.286331855 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.361217651 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.379952885 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988674755 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.470844456 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.345956322 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.347442408 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276916019 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.347746118 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37108717 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491417703 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.362884856 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.993900786 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060437105 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.381638021 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.283892981 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896300301 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.354745553 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.28735353 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.572466383 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.11769229 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279363668 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.287470952 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.279310013 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042470751 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357579269 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.708788003 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368910929 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.852709416 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.353582977 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364524426 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366063305 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.567717508 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.223254391 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343501867 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.309854224 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493362481 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363490923 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.830345813 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276031049 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.346177434 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598243981 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.554618985 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.344381679 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.336341571 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584022176 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347672606 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.366550633 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.341903781 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.376845258 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.915691686 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381740605 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.770320775 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370127242 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.123517855 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07316857 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35350557 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.452963275 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.348382441 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594329714 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.105189365 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.239612152 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412094067 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346291672 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.752135514 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.374222085 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.945508058 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.243725178 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.340259294 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352806562 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.363507158 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.344400742 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29249645 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.342730985 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361295584 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.131692203 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.567746513 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34427815 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628337117 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279335463 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491754871 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.35466045 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.568666772 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.54414023 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.370075524 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604248885 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356598921 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35524569 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.363843623 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363585921 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446692149 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36643033 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.344486865 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.611552153 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.34866835 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.348861029 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.392411418 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.130927286 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348622456 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.351562478 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366336976 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93521643 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348347462 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353496772 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.235406406 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.360005025 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413086602 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35161715 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.355980093 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.133644329 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37759491 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.360950348 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.356499312 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570207583 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35751215 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.308958774 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433460674 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.557320203 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.928417389 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378041416 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.282117632 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.058223326 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.040241595 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347061239 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.536104791 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346226734 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357513905 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357902086 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.345457738 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.95297846 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367558888 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.336929775 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.354585471 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357376744 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.353021589 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34963722 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.131073731 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.814751836 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360646997 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.369432004 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491017169 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.362756497 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.281850272 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.865953818 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353039262 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.348406269 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.126991574 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382652613 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.310741125 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850043793 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607772929 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347190424 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.36867676 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.419961913 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.390150747 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.348140945 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348292499 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351021515 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.394667559 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359131293 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.359424723 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.400418148 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.723380643 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916551726 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058075967 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909782888 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.287792179 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.364493204 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.242104705 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.842814189 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284607002 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.006829218 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.534972683 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.867180726 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294660367 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565498091 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.55303165 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131532949 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.371870838 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.579563434 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268549997 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.358933106 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36190776 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564807012 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384347088 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.349916763 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.291137982 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.626350689 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619040889 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335130648 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433446307 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844831658 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345642034 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.152292209 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.399688899 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.707547407 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543320416 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.898962193 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.733782252 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.347504065 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.357104533 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845471864 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.353565704 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.873929621 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973588073 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383871844 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.568872498 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293302276 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.360755836 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.359545323 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.342999145 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.626412509 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.356154578 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.611684855 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35910615 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283138388 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.349040314 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90431955 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.227948022 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.354769486 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348935781 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085386837 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365579805 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649489185 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.368865915 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.107911849 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378340472 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.282882119 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283950435 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.043239783 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.353205365 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326222044 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853173077 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.363380953 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36568865 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364437479 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202830335 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.604864286 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.365177403 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.93169085 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.600960813 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353758061 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400823333 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.451182565 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36091799 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.341280018 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.244011203 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.586070018 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435992355 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.571880931 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.289886871 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.258248881 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.422913245 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.566743919 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.248699051 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365141556 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604384119 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.087314019 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.349146531 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043000378 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393687625 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.349402855 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.370699152 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.363999186 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375246298 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434364322 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.356719642 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.357780684 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.35696538 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517543736 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356592972 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347156856 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.358715478 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438673348 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.798780805 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.106030002 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.125474307 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93089882 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139732786 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.951335344 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383546259 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.346216431 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355784989 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281318229 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497290062 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.872209788 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620182803 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475413888 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.347492672 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377041871 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348140064 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367394787 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566223002 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62106509 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.316625503 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348519102 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.140643206 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.230217547 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.358331078 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.557965965 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851333296 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922772935 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468388351 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.350846627 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.845551149 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619434521 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.437127178 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34609383 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.937719342 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.365282181 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.686213799 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.37048776 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346787324 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495176194 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357149834 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023422901 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.38399017 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.508329764 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.122199466 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.412428437 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.612647325 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.813634313 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.364585976 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937128213 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.076656832 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618327522 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418884378 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.359066829 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.453384204 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498320804 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.350990101 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.230967996 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349610736 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192296307 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.060260183 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.359451334 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932851405 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63874173 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.346681044 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.351552284 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372946034 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.35883207 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.572471023 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046580081 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578889775 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.360615925 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.3518649 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.341951169 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936038174 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389409214 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284969879 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.353554207 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60275435 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.611653824 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372850727 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.801906356 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.064422165 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907214104 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.328568063 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373515038 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350953285 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.056644402 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946029589 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.134741157 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863801468 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.017007999 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365454043 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633682211 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.355875856 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.355265485 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634661428 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.356105428 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.359716784 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.370897074 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.935905924 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137959676 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.377300782 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.450191339 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.296225251 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.577307047 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366135372 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306563037 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350466376 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.532788749 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.359561641 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482158968 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364173003 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.356426546 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353278179 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.139196049 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637304062 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.359162151 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.34027925 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.352449745 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.363511529 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453292867 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624148617 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358619441 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.029020297 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.703853351 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.609270852 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.35803586 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.343056245 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.357928722 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352280303 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.070995242 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.363609407 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.354514624 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934925806 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.362197708 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.372903555 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356773521 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.570119503 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.56468324 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.367849539 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.375224826 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353615874 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395189391 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.260133864 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.121857434 seconds)
  done (took 1648.672466485 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.378744698 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.362433476 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.382354496 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.397101786 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.354461819 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.429295784 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.43226664 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.410658109 seconds)
  done (took 52.41784979 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.364525528 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.514640427 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.394494631 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.36496462 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.363491705 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.366583676 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.817366262 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.393277126 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.371037199 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.363788638 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.362853771 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.373097968 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.015147544 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.372326834 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.365434777 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.344040174 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.371173756 seconds)
  done (took 65.788620847 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.355305059 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.952397429 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.458456864 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.362009541 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.387585197 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.380121728 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.145377813 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.436004899 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.362644958 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.703219263 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.019021512 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.356381444 seconds)
  done (took 85.190324793 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.373240385 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.373004267 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.372816375 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.373421843 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.373616037 seconds)
  done (took 8.137415909 seconds)
done (took 2078.215052322 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.361408621 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.044582397 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.968337247 seconds)
  done (took 5.2840703 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.503941383 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.552125423 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.672985413 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.676918143 seconds)
  done (took 7.67919623 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.635374136 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.726578696 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.55117595 seconds)
  done (took 6.184983006 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.632044657 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.374601611 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.381943425 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.35673884 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.362471389 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.364023476 seconds)
  done (took 20.356881547 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.361050706 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.364217605 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.360909937 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.363829203 seconds)
  done (took 6.722897162 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.338930213 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.057349047 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.33797405 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.360818786 seconds)
  done (took 18.367642752 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.108149663 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.120348565 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.103946566 seconds)
  done (took 7.605203476 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.387343427 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.392481002 seconds)
  done (took 4.0537771 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.65664234 seconds)
  done (took 2.930529573 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.375906207 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.41376975 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.396347445 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.33427284 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.630770639 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.639764288 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.960904706 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.557293362 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.308120256 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.541219424 seconds)
  done (took 30.43282882 seconds)
done (took 126.639128047 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.141154969 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.749819596 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.565138422 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.107286227 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.588874477 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.565030649 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.567281035 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.073818258 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.616616203 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.606836279 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.15170084 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.589402284 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.511624672 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.743497513 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.510804279 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.365913798 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.591883793 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.179894608 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.797141786 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.992484853 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.576391443 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.747282764 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.976169952 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.805621401 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.599086333 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.515015297 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.324000565 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.363306798 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.96683745 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.379394893 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.520731624 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.168460609 seconds)
  done (took 190.233690949 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.359916856 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.387915915 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.36095918 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.360936613 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.361785387 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.366831584 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.362190221 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.377433208 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.378069449 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.372185307 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.361033831 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.364015597 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.361960186 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.377361006 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.36339853 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.368231246 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.361211044 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.361298231 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.362702432 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.37654953 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.362956124 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.379408005 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.362059986 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.361780843 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.377947547 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.363505972 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.37642389 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.36113652 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.361516092 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.361232051 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.362929631 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.373780095 seconds)
  done (took 205.027155001 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.361529435 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.362095492 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.379580115 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.362411117 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.362230781 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.379386222 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.362210537 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.375170778 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.364905338 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.363041304 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.372189544 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.362302662 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.379597373 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.362830664 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.365164463 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.364570269 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.364036994 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.362427003 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.377013606 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.364404715 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.363455262 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.363508613 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.38861154 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.363384936 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.370807951 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.362530718 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.379985356 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.380812136 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.369916036 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.363767927 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.370801415 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.388016416 seconds)
  done (took 205.092006673 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.559391684 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.370625561 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.371983975 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.304179512 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.370714208 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.371562093 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.365933103 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.567507338 seconds)
  done (took 14.561539231 seconds)
done (took 616.18853649 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.615307882 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.334855528 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.578350927 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.392148326 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.116388742 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.418886324 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.390695349 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.559008755 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.313641014 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.57622247 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.649199475 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.415350874 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.787381574 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.397156439 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.640300806 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.498638208 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.297183261 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.424330552 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.712399491 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.902384593 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.657805223 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.845535709 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.587265152 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.302301544 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.796486993 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.817174746 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.07216127 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.282439252 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.417177407 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.71064325 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.967929649 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.326307215 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.459771315 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.454710093 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.516742002 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.494982247 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.300670396 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.456388391 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.587862981 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.607061618 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.896279074 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.132160892 seconds)
  done (took 92.990682351 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.357024059 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.35655535 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.356421 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.357161433 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.358091368 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.357066557 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.355857491 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.356731054 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.357274115 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.356400573 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.355476318 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.357373297 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.356392816 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.359016644 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.356754815 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.357402576 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.358211462 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.359492169 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.357340704 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.357971553 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.35753614 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.356754633 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.358420939 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.358320386 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.35724515 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.358111993 seconds)
  done (took 36.574036631 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.37599857 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.623047438 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.791095735 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.390072286 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.374094282 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.380165448 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.451510864 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.384112454 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.380530655 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.378834629 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.526646605 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.38334207 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.407993937 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.809242796 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.386246206 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.376602023 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.377057954 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.375792513 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.633827436 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.393645845 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.471095623 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.386407164 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.451598259 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.394908296 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.397609701 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.375952514 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.382068951 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.898964398 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.404487356 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.528672763 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.155950127 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.459790648 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.875413059 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.820175539 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.165125032 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.388609618 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.378619999 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.532498247 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.388762467 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.377247838 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.452996971 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.386974305 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.79583148 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.020523157 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.404253912 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.378876164 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.919861243 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.5497012 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.617619981 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.396834584 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.818439595 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.390668015 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.380852024 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.379357482 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.617694127 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.419008374 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.378980328 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.953481389 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.41079599 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.454662897 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.389025221 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.379695469 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.638036152 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.382303807 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.634758398 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.389327093 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.387506846 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.399517875 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.796753143 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.391268302 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.031796116 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.405697543 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.380835485 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.530487535 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.641175168 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.959291373 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.401985302 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.642810869 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.882035896 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.480229551 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.392649466 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.892061383 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.478991643 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.393971568 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.384233039 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.383925743 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.381979143 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.430841588 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.454525063 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.972481852 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.042174331 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.972594819 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.486760704 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.404058315 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.381707903 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.955009735 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.409454181 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.382263318 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.790185211 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.031494489 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.399699242 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.388783918 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.031964262 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.402188722 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.457534317 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.396422624 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.806094891 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.391467266 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.432830332 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.382727964 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.388916104 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.405224596 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.459083535 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.395333427 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.383227037 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.005031638 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.565763695 seconds)
  done (took 181.706712463 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.387002153 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.376440857 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.376577721 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.398106415 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.375247588 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.384380704 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.376710153 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.376255605 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.38147736 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.376893011 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.376959153 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.379377193 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.377930552 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.387097657 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.388744465 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.384125701 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.990112573 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.37818714 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.377357634 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.377317487 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.173317243 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.388043981 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.379641294 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.378444615 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.376672606 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.379708453 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.383960094 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.38155773 seconds)
  done (took 153.361084733 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.385397424 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.942848389 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.41118575 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.513773823 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.412349251 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.382648067 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.510942414 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.449754276 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.403798984 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.382945267 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.382830233 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.682782458 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.39592958 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.897323919 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.580867701 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.538239589 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.90248286 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.412300899 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.383976428 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.384164941 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.5150985 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.394547635 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.684746842 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.95444624 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.413682788 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.944262644 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.378924025 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.388583699 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.385114086 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.947324689 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.411506011 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.686474899 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.469787515 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.444310394 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.964251908 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.92228798 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.923319257 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.541703766 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.39287998 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.385381277 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.385117428 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.370054141 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.946290008 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.414548249 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.388626829 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.939307848 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.416181429 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.38920237 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.393221075 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.384910722 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.445604607 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.463502084 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.707092908 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.961902156 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.489407225 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.406513358 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.515708894 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.756236627 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.39828005 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.899213194 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.379213848 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.95416447 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.417504033 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.370926017 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.387028087 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.392909548 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.534630563 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.52635951 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.907691791 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.414075825 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.897415345 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.561111317 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.389359166 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.387001565 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.388979966 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.951317664 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.926154411 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.561398317 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.528295795 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.586603087 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.381145446 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.388292823 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.37278149 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.463474397 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.3963633 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.954645335 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.926373154 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.416775747 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.390767684 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.391112828 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.391775193 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.561540381 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.979373808 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.492233106 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.89932936 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.716108379 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.69788488 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.392774696 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.448048385 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.406802693 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.692515049 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.400461769 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.44722129 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.81231976 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.702297193 seconds)
  done (took 165.457102064 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.630394268 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.567678376 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.482021359 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.520083091 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.985974691 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.938561507 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.585992313 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.534463313 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.499873989 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.655135977 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.505651866 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.481193435 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.558902761 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.474169365 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.125308621 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.485030828 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.506222332 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.549768326 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.509506636 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.389261349 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.020904548 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.680642681 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.566540667 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.200974474 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.480852379 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.144499804 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.942208558 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.970343134 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.56496768 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.6409006 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.92319194 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.495347639 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.34301837 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.083026415 seconds)
  done (took 66.342955879 seconds)
done (took 697.712514758 seconds)
SAVING RESULT...
DONE!
