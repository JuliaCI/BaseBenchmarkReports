cset: moving following pidspec: 9685
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.002434142 seconds)
loading group "string"... done (took 0.547263734 seconds)
loading group "linalg"... done (took 8.895863551 seconds)
loading group "parallel"... done (took 0.166928586 seconds)
loading group "find"... done (took 1.410797474 seconds)
loading group "tuple"... done (took 2.093408839 seconds)
loading group "dates"... done (took 1.365100633 seconds)
loading group "micro"... done (took 0.219353945 seconds)
loading group "io"... done (took 0.631927321 seconds)
loading group "scalar"... done (took 43.433318561 seconds)
loading group "sparse"... done (took 13.74194927 seconds)
loading group "broadcast"... done (took 1.13878996 seconds)
loading group "union"... done (took 15.197491461 seconds)
loading group "simd"... done (took 5.270899055 seconds)
loading group "random"... done (took 10.68110898 seconds)
loading group "problem"... done (took 2.187221992 seconds)
loading group "array"... done (took 25.504201015 seconds)
loading group "misc"... done (took 1.081524935 seconds)
loading group "sort"... done (took 3.605024214 seconds)
loading group "collection"... done (took 21.600723005 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.641004753 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120617602 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.169490488 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.198338103 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.195493926 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158084955 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.165067595 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.56845672 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.023157327 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.216773986 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.146038134 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.558927971 seconds)
done (took 5.907661345 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.265806896 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.431915443 seconds)
    (2/2) benchmarking "String"...
    done (took 0.112145756 seconds)
  done (took 1.214412835 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.094358686 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.178948625 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.097552783 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.115414124 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.114770223 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.114271343 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095336946 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112322743 seconds)
  done (took 1.500560405 seconds)
done (took 3.752141877 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.494399027 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.864904817 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.496819015 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.133211025 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.160511639 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.151170733 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.322245294 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.173400774 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.124334175 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.100217655 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.17491051 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.370175898 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.498049608 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.953897728 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.098358723 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.133064367 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.089851068 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.710597324 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.082620211 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.142916059 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.537854364 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.1174441 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.131805666 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.140776558 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.193996746 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134260348 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.18100613 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.110923599 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.674214517 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10181382 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185629892 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.101466126 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.163356451 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.25385787 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.097727704 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.094918669 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677967365 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.190372468 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.114986387 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103975892 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679043959 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080992001 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.203067723 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.115361796 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.122389936 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.189953298 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115542826 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080411451 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.105262931 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.106176673 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.160757574 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.452727404 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10800392 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.14863802 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108595475 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.68780315 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098944179 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.158872089 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.142980388 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.110302508 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.097028915 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.114721061 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157532554 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.111286544 seconds)
  done (took 19.816762706 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.117321916 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.142657483 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096549648 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14163092 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.143678038 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099578049 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085663637 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09656327 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.111535563 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.18918945 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.141606003 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.147597168 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093617198 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082132871 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.120704626 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250667854 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108261231 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123668123 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081950869 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108952148 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142441221 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096172154 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110860444 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110542133 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171355384 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206650952 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111239415 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125751062 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095846899 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100313963 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145274628 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.164735873 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.077111678 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09599065 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.185169253 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122468431 seconds)
  done (took 5.235417469 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199826651 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118328183 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.197093905 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.183092424 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.150851895 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.171062878 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121530765 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.272572634 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.192011639 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181569581 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11595568 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113239239 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079974993 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.100047343 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079242044 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.717747828 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.183696578 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154721218 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.128971003 seconds)
    (20/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.168556075 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107299522 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083625078 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10555347 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.103372779 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089187305 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.135834162 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.081768679 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.338857508 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.18140221 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10591774 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.320636534 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120488015 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.090095461 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135541979 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.214531304 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085152577 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133690184 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143082815 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087886196 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.101312801 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.221934831 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.112093875 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082620408 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096832579 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108674246 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137499616 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136297153 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100028389 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095908648 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.24454231 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08433705 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125039978 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.107871114 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199875536 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.097157135 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100689573 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.359177589 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.119713796 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087546883 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.101618673 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.3085175 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133866916 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084487177 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078574101 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106504601 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09650198 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.403643129 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.092350225 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.987031669 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.097089497 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160978522 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102091512 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108804119 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087932448 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104101042 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103812409 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099549754 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079799398 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09961534 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080134297 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.103000326 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116642519 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086818613 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097488594 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149025191 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.119768107 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102996639 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12782199 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.10358782 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.082072725 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130568546 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083250479 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.102684426 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.14911039 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088100628 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.119181978 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1044215 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144261621 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083554661 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.204781107 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082736421 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12638309 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101910468 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115147513 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.126399927 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100164156 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085833156 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097740237 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081216259 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165685675 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082775638 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080519918 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.103864371 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113703529 seconds)
  done (took 24.117319608 seconds)
done (took 49.844667735 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.455341953 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.118527372 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.117946961 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.117834368 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.115885772 seconds)
  done (took 1.671875235 seconds)
done (took 2.391936232 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.342248782 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.203628989 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103483997 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.205926786 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089378257 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.211386674 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.172296223 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.120443666 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204518662 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.102848363 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.183397087 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083478102 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108015748 seconds)
  done (took 2.882810828 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093987799 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119464992 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082679071 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111739424 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076328041 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111392046 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092924595 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.137194301 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091781959 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103811121 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077083594 seconds)
  done (took 1.818896463 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090509664 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116218498 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08185864 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108540905 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077296298 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091226334 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109588337 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11906039 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091405731 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104840009 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077342669 seconds)
  done (took 1.791288337 seconds)
done (took 7.208017366 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.067562307 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.442574081 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.102236869 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.167005918 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.352186676 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.19300149 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.546948049 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.114340576 seconds)
  done (took 11.916564812 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.112632796 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.11749495 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.081386358 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100716083 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.081626846 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099150412 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.082052377 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.099793831 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083027232 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097510842 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.079870056 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101595644 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085202691 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101183225 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084364754 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100719928 seconds)
  done (took 2.293296023 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.116241333 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.114742394 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105642465 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111267862 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085840941 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103934282 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.087600796 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.104715062 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084631937 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102990984 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091486026 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108579273 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107175007 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.084215806 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105281513 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092837382 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.102723479 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105486795 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.088811912 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.105209971 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091845217 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.103893973 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.106714241 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.09155198 seconds)
  done (took 3.23525126 seconds)
done (took 18.164792515 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.168744046 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086396425 seconds)
  done (took 0.983536651 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09984996 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.120265187 seconds)
  done (took 0.955415854 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105888937 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097189463 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138412784 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.116453242 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084025767 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099855677 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114569526 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.102039724 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08206149 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.100414112 seconds)
  done (took 1.776234304 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08451381 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101164094 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.088690853 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.120153314 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110815663 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084985646 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.105592265 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086999335 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.105760093 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081096929 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.107620914 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118228897 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088762944 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.121292681 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.087540392 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.105876385 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.110289018 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.086165585 seconds)
  done (took 2.532538543 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079422615 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082335531 seconds)
  done (took 0.899627014 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08275515 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096780272 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082863832 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102191034 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080904945 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.098002691 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079711851 seconds)
  done (took 1.361024766 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.533444724 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.244000829 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.345251639 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099985359 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.156399919 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.373999467 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.136502998 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.112956511 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.112116029 seconds)
  done (took 2.895799171 seconds)
done (took 12.138329851 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090850386 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.189325263 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.675052508 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.120363763 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.080191252 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161432367 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.264782318 seconds)
done (took 2.318571041 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.352948864 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.122674305 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089536614 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.0804153 seconds)
  done (took 1.380454928 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079029059 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102844741 seconds)
  done (took 0.924367648 seconds)
done (took 3.051187768 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078423703 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077881491 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.094005265 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080195419 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.131861836 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.096377716 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.0775337 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07989356 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.099808917 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.080322956 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.099459704 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079476054 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094665354 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07796082 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079848171 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095193675 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.07725029 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095313662 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077149054 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098062568 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076933105 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094849148 seconds)
    (23/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079891613 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080188569 seconds)
  done (took 2.881125229 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098937023 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096576986 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084097377 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.10296134 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.083909826 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10509185 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103554442 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.081036113 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104353791 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.082958037 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101820528 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084810858 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100349652 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085149321 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100918698 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.085441982 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.104417547 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098717524 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083654213 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102071813 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086483169 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098665455 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084862428 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10345316 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084204404 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101896685 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.100006952 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081110867 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103669961 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083862344 seconds)
  done (took 3.563309683 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086299864 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.075536715 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093249299 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.087434394 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09313975 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080181001 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.093333908 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077988184 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095639836 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.078056382 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.098097045 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.078290833 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078099974 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097962396 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079740919 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.103443876 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095854583 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.095029836 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076067914 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095893582 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084391962 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.096640053 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08137487 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.0959689 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.077868688 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078097878 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09743872 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078029454 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097288568 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078373199 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102203859 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085346022 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096513952 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.092170286 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.103547552 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078884419 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.105400288 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078556295 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097149198 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.078013681 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077501377 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095826285 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077958156 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.107620666 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081588648 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097578683 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07850062 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097877936 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079364019 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099847163 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078362255 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.078275187 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.099170059 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078984374 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.10166057 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077997612 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098015771 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077773018 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098333455 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078345708 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095399726 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078089243 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.084246132 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09791591 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.120232657 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.090147719 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096346891 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079896827 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.082057653 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.102869379 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.078329877 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.113768926 seconds)
  done (took 7.170166184 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081643411 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105101833 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078267796 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096332285 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075088725 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.076442084 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102581123 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095466249 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081733062 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115000717 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078664251 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097205271 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08071334 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100550242 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079683472 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079886383 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.107625334 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094997295 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079704936 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082702354 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097676518 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10365475 seconds)
  done (took 2.740136276 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.223944625 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103137318 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14444174 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115436156 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096919742 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11383296 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102817425 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08813939 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104176831 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089245099 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107517936 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086775051 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116598599 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106576595 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089535373 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107632856 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104087102 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091197598 seconds)
  done (took 2.740534257 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092579386 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.101755306 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10682264 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100160556 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082146727 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103228552 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087985288 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115115701 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.102560061 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.082358538 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.111417289 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084419721 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101995065 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082023664 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102243146 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082333227 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103176031 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082189418 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110464101 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106299585 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089712288 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110383577 seconds)
  done (took 2.893557648 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09589871 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100129334 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10948496 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102991131 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076797753 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098733861 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.08960948 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.101621596 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109587892 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.084500741 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100583377 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080495757 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.107879408 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082694277 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10665737 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082737457 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102828108 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082838478 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102843693 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077899138 seconds)
  done (took 2.647753366 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122927318 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115066812 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096702277 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125073589 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115904129 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.097173924 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125224869 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114777862 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096556644 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128180792 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098903884 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117514447 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128338103 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106763699 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117458136 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129122501 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109699739 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128082259 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11826786 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098878178 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129956479 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118013976 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110664609 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.117674675 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101859479 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116318777 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096786454 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121072327 seconds)
  done (took 3.958573059 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079731028 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08002369 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094902313 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076589414 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095369018 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.076974133 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.094698216 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.077051443 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079640717 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095165196 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079215677 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09671166 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080117252 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097474537 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079710806 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.07975282 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097270004 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.076807372 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094495743 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077492094 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.097378931 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07989417 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.097300686 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078040955 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077317667 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099255721 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078088506 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097367603 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081526959 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097968553 seconds)
  done (took 3.350377198 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088101554 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104864041 seconds)
  done (took 0.949075838 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077365087 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11527215 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079323411 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104906483 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088516484 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100978033 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092892955 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106748477 seconds)
  done (took 1.523898744 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.104159019 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.1196653 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088352971 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110923106 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.102966282 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.120564904 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170359365 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.089035916 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10957081 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084009056 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.121713103 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082483798 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.112075943 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089753573 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.112336279 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115392427 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080899134 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.111851354 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.090995188 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101988018 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085815103 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11548866 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091536494 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.108284304 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083962406 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110370937 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113263336 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.093267275 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103647416 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092360784 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.105875118 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.073772186 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.103105936 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085711763 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097538128 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.099020138 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117376539 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090166683 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111309217 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089771029 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112297414 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.078809293 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.112682852 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090398385 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116031082 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.106083623 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.090369767 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078002535 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.103242045 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087348736 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097882375 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08687044 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097380787 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093034472 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.113055308 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121117403 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086547529 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.107157236 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088080213 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104024161 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091891813 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106725936 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095208448 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.106055036 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094584749 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.112691549 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092818175 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.09821774 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077654776 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099939395 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094052351 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.128337987 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.114502915 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.089958487 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108681848 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082066042 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108539794 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090670401 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111335666 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095453724 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.107568568 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091847756 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113864063 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088448492 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.106500552 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091153626 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.106744123 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087348015 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.103438988 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1233149 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086755872 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079847641 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.102687147 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.11032797 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085875841 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.083742774 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.101157569 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108889401 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078127523 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08874079 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109644921 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10913342 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096953104 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108070782 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091311966 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.11202572 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.095900075 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108056177 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088505058 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098990248 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089712306 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105572168 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09328513 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096158243 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089749841 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.107146103 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.089616158 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.113841575 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.086705216 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.108230253 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095595088 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114322735 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.086001235 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099052013 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088569752 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.107560105 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093613999 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114694242 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.086149522 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.100087285 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078791525 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.111914715 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08833427 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.109800473 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088705801 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110165857 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078470488 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.111841915 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089391769 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.115849848 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.106776379 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091356681 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.113363599 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091786322 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.106270828 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094589903 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.106145405 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08460054 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.113154546 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089165955 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.099218615 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094191227 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107014363 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086673288 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.108283637 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093748738 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.109137637 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.089320858 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106088398 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089108846 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108906303 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084218185 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109460583 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.087455686 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11696619 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088815196 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.100167093 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081195326 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110925252 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085782014 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.107483289 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085464919 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.108319013 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.090909232 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102281233 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.088547911 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107432509 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102191535 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11747595 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089900824 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.11203396 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.115810227 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.088691181 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.109946805 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.088881053 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110290726 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.090481319 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112546624 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.09226422 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108926922 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089491674 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099354044 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092068136 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113653804 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085401369 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101563135 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085881293 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088672071 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.116256697 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.108977861 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.090683849 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103615153 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09293058 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11342535 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090285476 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.109254244 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086078291 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.109037949 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.095795596 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110226336 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092113304 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115751545 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092331027 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.100276633 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094516466 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106739351 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.095457938 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.100224029 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086829487 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.104940395 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.092330099 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.10669887 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090473387 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.098273479 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095759734 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115897192 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091636731 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104975684 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.090220063 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119203949 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08907839 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112443798 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090181495 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.112271828 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123871424 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08608837 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089841956 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.118133217 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.109784461 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079438423 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.112014624 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.087930943 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104087714 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.088231741 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.087482826 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111338525 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092946052 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112221047 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078473799 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.109310222 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.088121986 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.105231771 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081011937 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.115223747 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090627305 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.110920612 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11891504 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09199853 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.107288174 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093076507 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.108762936 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.091752001 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.111134195 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094608189 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.109992567 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08956032 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.104960005 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091237548 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10436886 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084093381 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.108500313 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.091517977 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.110531141 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092368949 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.108297772 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095392178 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.11002732 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.0910515 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.128206332 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105981085 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086516275 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10990619 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093245735 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.108489885 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090024994 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.100250221 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096714449 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.108921687 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09724583 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.109012527 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082013117 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.110629419 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090369526 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.111437453 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.092211502 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.111184195 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089807718 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.109872381 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090998977 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119958356 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087293886 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.117714229 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092591033 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112628665 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089704163 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.11107277 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089389132 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.106880517 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.09110813 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.11122675 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091898606 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.110870152 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.0928852 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.112494893 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.109200624 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089996164 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.093806568 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.111936991 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.112315948 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.081303554 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08678999 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.107838441 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.090791886 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115257943 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.091264952 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.109287522 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.088296129 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112111488 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.088395187 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.102495021 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09553113 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113002345 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.092594242 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120448952 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085546964 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.111550485 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119859058 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080965966 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.10741951 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084688971 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08787913 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11768219 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.111280281 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097674601 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.11101847 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087965272 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101789593 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.092328165 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.087862552 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100567585 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084231748 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113931114 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088892969 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108915056 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.092416839 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114861105 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092579217 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115296062 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.090599361 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.11260006 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.110907591 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.084747585 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087401797 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.106553036 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091583114 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.112880168 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087236257 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.104268947 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.091301938 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.110840543 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091965462 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.11111652 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090195637 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116808987 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091376755 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.111697311 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096819099 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.102776912 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.09214627 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.109820364 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.091076253 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.104729863 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092542609 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113114763 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093096756 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.115991465 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.092365509 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115187942 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090909362 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.105889328 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.090421658 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.111290948 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.091732158 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.106787093 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.092566788 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117660746 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083197012 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.111297371 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092227037 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.10928165 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091007128 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.111236179 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.106502602 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091784882 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.107441878 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088667184 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109454643 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087575989 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108696044 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088796118 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105742484 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094499814 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.102215052 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.0987151 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.111675577 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.093890506 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.110348489 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08869722 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11055415 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.091098147 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109338204 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097823556 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.113389793 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087643185 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.107353075 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085536597 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.110760336 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09610156 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117674088 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.09193358 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11191217 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083080387 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.103575379 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093236934 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.10829044 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090344095 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.113986041 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096756181 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.112021061 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088902407 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.110120589 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096982759 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115230849 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094037724 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109669802 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094113599 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.113501098 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090402074 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.109484819 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086640341 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112461703 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.10858373 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086109007 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082728878 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115539141 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.112419891 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091054981 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.106816144 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.092978563 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105890967 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078811624 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.107931499 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087350161 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109297725 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087948927 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106568663 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097323646 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101237966 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086243414 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110753613 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085771701 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112171112 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078239267 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.108109987 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088711765 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108317979 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077700818 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102346632 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083766607 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107236978 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08365556 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099354553 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101082815 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114456288 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106558386 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086522427 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104025979 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079209615 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078498403 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103293557 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090170929 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106007675 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114716279 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084517743 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08294544 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09932155 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087861321 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107977925 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090253613 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099932681 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.078674632 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103796358 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08775312 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114322078 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085482488 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.106928156 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088045414 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108411318 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081201017 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111971007 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.078967606 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107828162 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117942611 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.089166997 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108922466 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091179399 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114657234 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.089914057 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099286627 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.094018757 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.111840544 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094271507 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.113563862 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.094647106 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.127674707 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111331263 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088357287 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.088525012 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108881148 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083676718 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116941897 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109999051 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.092470979 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109874508 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087221653 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109465632 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095135209 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110173752 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.089920539 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.109226164 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.089133603 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107117074 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.089547145 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.106481512 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.095836429 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.11395386 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09320077 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11488269 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088571656 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12344145 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099790978 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.114835531 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084256466 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.108672526 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088647159 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103452733 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.094016841 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.106815622 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.091577507 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.110362084 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.091738343 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.113487996 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095672918 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112830456 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.095183173 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.112357553 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082765464 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.116508833 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093933316 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114627683 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.087445468 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.112706243 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.094771849 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.117392323 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098454421 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.111168168 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09347983 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.111327539 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096179394 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.103329091 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096023845 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111888268 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091873326 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.109421515 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093909809 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.114304996 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095494428 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113985338 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095971962 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.112926483 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097930013 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11633798 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085874647 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.105473811 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096860437 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.106583426 seconds)
  done (took 60.445344108 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151983591 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086201464 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078511527 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100260739 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126500914 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084423353 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102207675 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.084791972 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101335443 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.097488955 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099109015 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07987361 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121684448 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129309344 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124930732 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116746609 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079370294 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098838332 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079290964 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080405713 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12090495 seconds)
  done (took 2.949823318 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10417916 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118220875 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115377327 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100972874 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11053608 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116105566 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096289222 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117315704 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.120144111 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111889283 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.100770965 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117872784 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.110536702 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.092645893 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111648566 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113477923 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101036367 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110089442 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116551115 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095925465 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114429691 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114928957 seconds)
  done (took 3.217669197 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.091745143 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.086444975 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.112295215 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.081760322 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.106554474 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.080626959 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.111173191 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.083458615 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.111638244 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.089039649 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107946554 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093162909 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.118454715 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.086538053 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.111059662 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.08914079 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.117653579 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.093474067 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.113967093 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.086966226 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.134937729 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.086000861 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.10989565 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.090074412 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.122418333 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.09365735 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.112242506 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.093023686 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.110261711 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.092237228 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.109808256 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095217349 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.11646344 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.090398602 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.110397872 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.093366545 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.112532397 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.087161309 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.109104677 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.09663469 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.108096108 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.094074226 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.118413605 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.089857793 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.108406182 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094821541 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.111071703 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.08700596 seconds)
  done (took 5.657166862 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.122068497 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157197866 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.093009517 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.154291284 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125286989 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.123339867 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092478802 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.146317243 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.084541433 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.107980945 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124439303 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123064376 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088663772 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.1164346 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092317541 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108545613 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112355182 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.094162256 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.11815362 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.095482631 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11752491 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091596307 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122321185 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120686599 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111945532 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088335465 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107229863 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.098029168 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.119733364 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.115755652 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.098558797 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119071469 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.134708542 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.096542682 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.112351474 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091866146 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.125033149 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.107741962 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090209108 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105120592 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090263215 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11708296 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111476313 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105188425 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109397884 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110036346 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.092338373 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.110141142 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.105655862 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.113895978 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117650618 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101801005 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113022603 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107746915 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094729687 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125501452 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087750848 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.107535962 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111774804 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100034751 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.108914198 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.100685588 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.126991282 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.113110601 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096852852 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121562468 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110092028 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093495032 seconds)
  done (took 8.416548865 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095404699 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.131962303 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12543934 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104116128 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113851817 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112352932 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094058608 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.113440939 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093798925 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120515219 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112336504 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.164427001 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087250604 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120921569 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.098279491 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115928245 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113674614 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093613014 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115039318 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097159612 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.116988526 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128700104 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.099200632 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129928346 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132183875 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.09186958 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116825172 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114536837 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105515809 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115711199 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129851676 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.096568636 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115788701 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12863596 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.134134042 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.099940173 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108256705 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09995926 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.119611185 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098414897 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.113738444 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130375601 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.098724315 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.113281797 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.098977705 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119672892 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.127350626 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.131898524 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.105286862 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.126578374 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.120023711 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110509409 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119287041 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.119740646 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111178484 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.138680425 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131594237 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131879599 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09975948 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.131019126 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128146389 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.135007489 seconds)
  done (took 7.969410693 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085739957 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084138109 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.103530206 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082970173 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105408444 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083129758 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104757553 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085558415 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083522032 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.105438018 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084533043 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102660664 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083647643 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103954075 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082803523 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101747844 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082427122 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08271081 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104340779 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082610173 seconds)
  done (took 2.655886218 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093389157 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126610867 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086147835 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113172023 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.087616625 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.113333238 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106596673 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089034425 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105597919 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088976122 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.116769769 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096826951 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106607174 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112318208 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097811124 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113270243 seconds)
  done (took 2.477146252 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.105748161 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119752161 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.132808358 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.093662969 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106205988 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.095122046 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104573833 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.082160828 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100510466 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.094549391 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.111751097 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.095882318 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105892347 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084018884 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105056093 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091470744 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101252756 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.090353904 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10474596 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.110640276 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.110950014 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087057613 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107856697 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086115543 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.110640042 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113017685 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.09282685 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102713031 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083639816 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105423593 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089007014 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114617362 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08411459 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.110879552 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.084294822 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.103457346 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.086635794 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.106043284 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.091319851 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105263418 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083767707 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10772518 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085579563 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107461669 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081337339 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106191314 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.082507686 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.112784522 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.088817942 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.109153923 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.088030276 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.118842783 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.094331704 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117212711 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.114981443 seconds)
  done (took 6.335036991 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09973575 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110197865 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093016434 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105910819 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.095116573 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.120545639 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095799925 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.114813734 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094250737 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.110555825 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094226714 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.112103575 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087433708 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110186651 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087741832 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109592753 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081743093 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108410522 seconds)
  done (took 2.657010757 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091530141 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106177128 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094193445 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106104467 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086644323 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.087334744 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103509128 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.083402525 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104627201 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084863948 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105784766 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087811316 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104032307 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087382217 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10592019 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086307196 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108461248 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084066709 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.105750129 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08125071 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107260318 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084413589 seconds)
  done (took 2.924742605 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.10419458 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.140332616 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.099816643 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.149425558 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.113984357 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095864949 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.123771287 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.090341018 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.129574996 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.109051126 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.090405771 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.109777905 seconds)
  done (took 2.18800319 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111440365 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145773362 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082984861 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109075852 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119872203 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091809112 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11167982 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091350355 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123796176 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124590988 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091291827 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124336444 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122780088 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122765108 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099542709 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119588733 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110225673 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091203553 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106492673 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132187243 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091426316 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123993356 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089655823 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112662084 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110539344 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102217259 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123403758 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125901433 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110519107 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103020644 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119245044 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110815429 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10393808 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125016673 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108349065 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103372501 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112596364 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13451705 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124048786 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104127414 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110050092 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098741344 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123683089 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117845799 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123411095 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091639168 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119146413 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090627394 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113331084 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13895505 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118822841 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122312966 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09833668 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123325898 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123118333 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140883252 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104448967 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122931033 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120102549 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126356225 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122543251 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099780184 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123799045 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124595036 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09858251 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123392668 seconds)
  done (took 8.324115408 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127138822 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106983997 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090099646 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1262232 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124567614 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111472003 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091876278 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112930542 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091236561 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108871509 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159388822 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110839945 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102895652 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123397161 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111610215 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091643316 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113197284 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1227823 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088326288 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140912455 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111407175 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101856687 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123022292 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121452041 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125203928 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09941633 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112975699 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111811414 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091041456 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111721015 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118044833 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092844012 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123776437 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084195028 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124698292 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111523181 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091142295 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119921041 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111361079 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099093969 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123392154 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134871812 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11110171 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092178748 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124936417 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090230507 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11257836 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107794126 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091865667 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107296115 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125943563 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104663895 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12594127 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123584973 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111869542 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092529837 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111256653 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09192873 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112938979 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12082604 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102897771 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114329435 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140534209 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09123326 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113508833 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123768504 seconds)
  done (took 8.187467071 seconds)
done (took 159.562163301 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.104768165 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.144883616 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100647463 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170133844 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085726279 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.141802929 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120139977 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.122967125 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.086027816 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.107221641 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.089047631 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.110253866 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.15186044 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.106592855 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086707236 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110192009 seconds)
  done (took 2.674369942 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.180069094 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.293400706 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112773072 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.117530982 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095039235 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111398223 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089925913 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.114449835 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.08704424 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.120666992 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087876806 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.110917055 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.120196767 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.08913458 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.107951952 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089743636 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.120080728 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089228425 seconds)
  done (took 2.978188543 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111129563 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.152093363 seconds)
  done (took 1.109122022 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122935916 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.188529355 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.308661432 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.163810832 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.115814853 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130429439 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.164063337 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.125698053 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195165924 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.128746743 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.109572322 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.114998506 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13698128 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.099347594 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.117902347 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.094481343 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.14089681 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114781775 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095694353 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11535449 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.114263149 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.114857006 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097558947 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116145484 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184751664 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.130320456 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.092686193 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.117280048 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114188199 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095571447 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.120040105 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127457437 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.108836991 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.192846968 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10320622 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.189395081 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.101773955 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114020874 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094194966 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.114320869 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117408412 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.097953375 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.129816675 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.092968204 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.115903632 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121463952 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.094742243 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.114457251 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101406697 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.124065845 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.121294626 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.340038639 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.189780379 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10391392 seconds)
  done (took 7.933403048 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.838751761 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156410671 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113128304 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.949200803 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145708131 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126338624 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.840411288 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112162181 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.267761236 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.844100693 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134059147 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128183611 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.217909523 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.292716618 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.160746442 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.324799292 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.746835104 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10255205 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.144965319 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.156807635 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119825465 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141790646 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110864731 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.442621417 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115579376 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090798529 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118809287 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124682518 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167939891 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.090609762 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11704177 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.188646571 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.301141158 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.18932599 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116123507 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089537972 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112741746 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.17522561 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278806718 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.227953395 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.159688695 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109607522 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089126156 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127025953 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13351853 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091366438 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.194573757 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.18777644 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.184953829 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.122551427 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126626149 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10178425 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124180857 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167991455 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.112600816 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.323020407 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.356606713 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.118366331 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100358695 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.13248377 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274021455 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094059977 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234052472 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148214526 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224380666 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098323188 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800787074 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.179830053 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114255585 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101254828 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122311066 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095610981 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12481655 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173173986 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390501033 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128447578 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094946296 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113188592 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.237881519 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.117750188 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091785188 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.194199672 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101025245 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125562744 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126953929 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105731929 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.178291019 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.28585584 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111200599 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122828332 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11848465 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103609004 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116072757 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.220589024 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227489145 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.172856469 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.248287994 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10560018 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.193681837 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.180404596 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106264756 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.202347285 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100237468 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13308971 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12635268 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222309442 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.149062049 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.093051247 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116828061 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.098595532 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.152794775 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.117506536 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098312466 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.176683612 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.499658902 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.173525846 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111399603 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095249311 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122180821 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.172448021 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120540302 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.24692348 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123936185 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.175100949 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122485501 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088473217 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122527624 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.172793418 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132434801 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121721822 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104058228 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123649667 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.258007478 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23280256 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.136772727 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228072569 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.187868741 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124090868 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.182960436 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125423448 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.181292259 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127431875 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104522966 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118199773 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789704604 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10467414 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122240125 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118863142 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179840031 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112835653 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.092202143 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.115472436 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088974349 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820031529 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097974253 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.111311308 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.091566228 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123003114 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121880569 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097882961 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118902316 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.170294566 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245463237 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.133127217 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099908507 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.113125541 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.168570342 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117205004 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.09233468 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.090120729 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.114972 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12191054 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096125402 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.114362345 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.181938375 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.170730223 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.231548561 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.564057331 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.096725906 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.112667756 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.216550261 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118492199 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.319605576 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101626702 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.235656629 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.178879862 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.117381816 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.346637772 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.181552618 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20320737 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.115138246 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.180732581 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090514346 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120993852 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168846659 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114943381 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100502933 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.166361191 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.132589868 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128555607 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.166339395 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091561347 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258877949 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.092036497 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.177544443 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118268612 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104842693 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320844095 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.118884239 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11404552 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.193055014 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099377952 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116368746 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.706388305 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.114129353 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104083402 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124297392 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.236776273 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.180636937 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128691642 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103441221 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126741081 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.170281968 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.244304394 seconds)
  done (took 45.6691229 seconds)
done (took 61.202221492 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310684088 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270858938 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.311895221 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.201271113 seconds)
  done (took 2.043171663 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.183576174 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.157212447 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12791476 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.113042006 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.160408318 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091452483 seconds)
  done (took 1.707534352 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.494336797 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.393202088 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.359785806 seconds)
  done (took 2.123653418 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.266624798 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.283045847 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.338147615 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.440539784 seconds)
  done (took 2.308313278 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209420652 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131026025 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.102366498 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.141489523 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.175191097 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.183983122 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147414763 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.156914358 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.13267645 seconds)
  done (took 2.301865424 seconds)
done (took 11.36221486 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.18213998 seconds)
    (2/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.24066377 seconds)
    (3/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.296479271 seconds)
    (4/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.268487112 seconds)
    (5/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.246778149 seconds)
    (6/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.205990556 seconds)
    (7/286) benchmarking ("sort", Float64, true)...
    done (took 0.246154057 seconds)
    (8/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094391431 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.134460425 seconds)
    (10/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.094735552 seconds)
    (11/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.139256747 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.126431366 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09320829 seconds)
    (14/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.145804141 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.16248732 seconds)
    (16/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.141957889 seconds)
    (17/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.108055302 seconds)
    (18/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.208551685 seconds)
    (19/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.125594239 seconds)
    (20/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.21160947 seconds)
    (21/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093595109 seconds)
    (22/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.121490987 seconds)
    (23/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.220162171 seconds)
    (24/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.258108348 seconds)
    (25/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.107409762 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 0.206306696 seconds)
    (27/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.152246913 seconds)
    (28/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125289895 seconds)
    (29/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.105593675 seconds)
    (30/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.12829464 seconds)
    (31/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.137422258 seconds)
    (32/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.124717623 seconds)
    (33/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.19569619 seconds)
    (34/286) benchmarking ("sort", Float32, true)...
    done (took 0.211431995 seconds)
    (35/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.212045213 seconds)
    (36/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.205366326 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.145024371 seconds)
    (38/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.106437982 seconds)
    (39/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.128935635 seconds)
    (40/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.109004359 seconds)
    (41/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118439967 seconds)
    (42/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.104681449 seconds)
    (43/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.216613641 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.130282232 seconds)
    (45/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.229656855 seconds)
    (46/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.270574698 seconds)
    (47/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.141922352 seconds)
    (48/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.206905473 seconds)
    (49/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.126827897 seconds)
    (50/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116744343 seconds)
    (51/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.096222288 seconds)
    (52/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.193350795 seconds)
    (53/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.124389715 seconds)
    (54/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.096326073 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.116604434 seconds)
    (56/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.206204338 seconds)
    (57/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092756845 seconds)
    (58/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.201756899 seconds)
    (59/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.192804342 seconds)
    (60/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.096088478 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.120608534 seconds)
    (62/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.23860299 seconds)
    (63/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.222981783 seconds)
    (64/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.10990093 seconds)
    (65/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.121358958 seconds)
    (66/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.075893104 seconds)
    (67/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.162983801 seconds)
    (68/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.117262414 seconds)
    (69/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.143226423 seconds)
    (70/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.249651919 seconds)
    (71/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.211776379 seconds)
    (72/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.105109592 seconds)
    (73/286) benchmarking ("sort", Int8, false)...
    done (took 0.214485986 seconds)
    (74/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.127823123 seconds)
    (75/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.126258035 seconds)
    (76/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.157011834 seconds)
    (77/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.155493232 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.089046551 seconds)
    (79/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.200333266 seconds)
    (80/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.190620589 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.145329628 seconds)
    (82/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102037869 seconds)
    (83/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.168807588 seconds)
    (84/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078027665 seconds)
    (85/286) benchmarking ("sort", Float64, false)...
    done (took 0.176635642 seconds)
    (86/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.16668216 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.096636392 seconds)
    (88/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.260538182 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.119898288 seconds)
    (90/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.211909345 seconds)
    (91/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.086012951 seconds)
    (92/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.122673113 seconds)
    (93/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.116433433 seconds)
    (94/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.1158863 seconds)
    (95/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.191092311 seconds)
    (96/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.102554255 seconds)
    (97/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.141850503 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.097118432 seconds)
    (99/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118564257 seconds)
    (100/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.105668544 seconds)
    (101/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115162511 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.143336755 seconds)
    (103/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.079483898 seconds)
    (104/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.194435803 seconds)
    (105/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.098457289 seconds)
    (106/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.109283206 seconds)
    (107/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.097161844 seconds)
    (108/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.118836329 seconds)
    (109/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.111689618 seconds)
    (110/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.10066791 seconds)
    (111/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094251402 seconds)
    (112/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.128643179 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.095660224 seconds)
    (114/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.119165875 seconds)
    (115/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.200508862 seconds)
    (116/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.198194499 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 0.192230948 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.103292368 seconds)
    (119/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.115480977 seconds)
    (120/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.079585907 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.14421204 seconds)
    (122/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.203040671 seconds)
    (123/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.159158995 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.097494117 seconds)
    (125/286) benchmarking ("sort", Float32, false)...
    done (took 0.180698204 seconds)
    (126/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.096998615 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.127724309 seconds)
    (128/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.127436716 seconds)
    (129/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.096643762 seconds)
    (130/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.123088883 seconds)
    (131/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.132083897 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.125340484 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089635018 seconds)
    (134/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.140128504 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093748435 seconds)
    (136/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.099907224 seconds)
    (137/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.077642282 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.128902187 seconds)
    (139/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.102783421 seconds)
    (140/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.156044253 seconds)
    (141/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.163184369 seconds)
    (142/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.096524414 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.120038402 seconds)
    (144/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091681274 seconds)
    (145/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.12928889 seconds)
    (146/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095877744 seconds)
    (147/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.127465822 seconds)
    (148/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.097555765 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.121446616 seconds)
    (150/286) benchmarking ("sort", BigInt, false)...
    done (took 0.233804646 seconds)
    (151/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.10840447 seconds)
    (152/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.077735548 seconds)
    (153/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.077487841 seconds)
    (154/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.101980677 seconds)
    (155/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.094040702 seconds)
    (156/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.203628468 seconds)
    (157/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.099688053 seconds)
    (158/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091327408 seconds)
    (159/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.1169661 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.096443728 seconds)
    (161/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.112876266 seconds)
    (162/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.228477504 seconds)
    (163/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.078137931 seconds)
    (164/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116327117 seconds)
    (165/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.100655658 seconds)
    (166/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.0800326 seconds)
    (167/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.127325211 seconds)
    (168/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.101275426 seconds)
    (169/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.097387457 seconds)
    (170/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.085119827 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.120021443 seconds)
    (172/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.085657675 seconds)
    (173/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.110345689 seconds)
    (174/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.112187299 seconds)
    (175/286) benchmarking ("sort", Bool, true)...
    done (took 0.20498228 seconds)
    (176/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.156821776 seconds)
    (177/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.117818666 seconds)
    (178/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.078444773 seconds)
    (179/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.077219323 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.130720182 seconds)
    (181/286) benchmarking ("sort", BigInt, true)...
    done (took 0.218851654 seconds)
    (182/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.192850312 seconds)
    (183/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100418801 seconds)
    (184/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132674574 seconds)
    (185/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.156977897 seconds)
    (186/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.097759206 seconds)
    (187/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.129613245 seconds)
    (188/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.104040157 seconds)
    (189/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.114199559 seconds)
    (190/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.105492546 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.14869825 seconds)
    (192/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.128771571 seconds)
    (193/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.097165703 seconds)
    (194/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.108735195 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.097827476 seconds)
    (196/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.116867577 seconds)
    (197/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.116012549 seconds)
    (198/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.115158318 seconds)
    (199/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092596891 seconds)
    (200/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.108442994 seconds)
    (201/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.07831104 seconds)
    (202/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.121360529 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.097520833 seconds)
    (204/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.118208259 seconds)
    (205/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079228312 seconds)
    (206/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.109107527 seconds)
    (207/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091197376 seconds)
    (208/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.10081395 seconds)
    (209/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.094059326 seconds)
    (210/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.139855833 seconds)
    (211/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.110980186 seconds)
    (212/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.208982214 seconds)
    (213/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.102974072 seconds)
    (214/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.093871359 seconds)
    (215/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117218279 seconds)
    (216/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.094246204 seconds)
    (217/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.12429905 seconds)
    (218/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.082889021 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.120301937 seconds)
    (220/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078296928 seconds)
    (221/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089997734 seconds)
    (222/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.191766357 seconds)
    (223/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.101153576 seconds)
    (224/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.108898165 seconds)
    (225/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116906992 seconds)
    (226/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.091859825 seconds)
    (227/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114105355 seconds)
    (228/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.07931028 seconds)
    (229/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.11869992 seconds)
    (230/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.077895127 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.113045932 seconds)
    (232/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.218042643 seconds)
    (233/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.078573115 seconds)
    (234/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.078299688 seconds)
    (235/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.171858242 seconds)
    (236/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.125841649 seconds)
    (237/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.096544357 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117861921 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.106349237 seconds)
    (240/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.119189957 seconds)
    (241/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.079448712 seconds)
    (242/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.100231198 seconds)
    (243/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079523199 seconds)
    (244/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.077724406 seconds)
    (245/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.101655031 seconds)
    (246/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.077985239 seconds)
    (247/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.100503409 seconds)
    (248/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.143178231 seconds)
    (249/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.144376151 seconds)
    (250/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.097621196 seconds)
    (251/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.121363075 seconds)
    (252/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.078896135 seconds)
    (253/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.120568698 seconds)
    (254/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.09411129 seconds)
    (255/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.132457617 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.098625276 seconds)
    (257/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.113417947 seconds)
    (258/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078939071 seconds)
    (259/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.101687035 seconds)
    (260/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.091490782 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.113802088 seconds)
    (262/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.106131022 seconds)
    (263/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.101871578 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.098306984 seconds)
    (265/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116952872 seconds)
    (266/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.077856263 seconds)
    (267/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.10137994 seconds)
    (268/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.079171843 seconds)
    (269/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093891872 seconds)
    (270/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.129843385 seconds)
    (271/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.133699237 seconds)
    (272/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.087517674 seconds)
    (273/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.077933993 seconds)
    (274/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136609244 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.120811489 seconds)
    (276/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.079364059 seconds)
    (277/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.08700496 seconds)
    (278/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.102033436 seconds)
    (279/286) benchmarking ("sort", Int8, true)...
    done (took 0.207747289 seconds)
    (280/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.07904043 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117846713 seconds)
    (282/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.117509389 seconds)
    (283/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121283172 seconds)
    (284/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.077877692 seconds)
    (285/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.102082016 seconds)
    (286/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.079773793 seconds)
  done (took 38.235629016 seconds)
done (took 39.11583569 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.103225592 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.155693566 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.10275251 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.143833118 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.127530888 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.107528881 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.125385855 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103122148 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.127448883 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.106040493 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.130653853 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.108808493 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102483007 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.125568001 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.103040386 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.146065369 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.105914823 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.121828443 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.093231393 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.118508956 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.093623138 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.118915753 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.096072032 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.109387733 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102897178 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.124851354 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.121402668 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.102698247 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.118246704 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.092450854 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.115745865 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.099426476 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.132384628 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.103632446 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.119305593 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.094669899 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.126033904 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.101963179 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.120822448 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.095654882 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.122585734 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.095216054 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.121050107 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.099781916 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11868369 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093768655 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.116943579 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104494942 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.146087648 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119649561 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.099858388 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124931432 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.103368469 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.122364743 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093621504 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.116736333 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.095658721 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146197555 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.095699774 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119444959 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.09928133 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.12270135 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.094348671 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.117757963 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.095158828 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.126571074 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100849341 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.118331647 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.101777476 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.121369215 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.090155091 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118125854 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.093646994 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.115873782 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.100157287 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.125844677 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.090389842 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.119800044 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.098683832 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.121008962 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.094891436 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116559932 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.097439466 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.119052595 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092294146 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.109103306 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.092917769 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.120003128 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.0950643 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.117526193 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097234132 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.122062139 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.09695945 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125616495 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094103286 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.120874398 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.118952846 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.095784799 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.120453286 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094088538 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.113668058 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09336824 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.098845946 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.116455678 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095340093 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127074077 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.115480834 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.098122406 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.118389614 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.095059337 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.131149723 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101658445 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.118425785 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096344665 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.115730123 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.098236986 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117085292 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.092736869 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.116169787 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.095679406 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119557333 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.095938585 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116199283 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.098856952 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126953062 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.090911977 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116428721 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0931057 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.119604394 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.099065853 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.119315756 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.092649317 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11843406 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.09036572 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117142328 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.093108624 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.122032076 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093258338 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.117934341 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.096208686 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.118384817 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.097228678 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.120195785 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.097231724 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.118264545 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.088348189 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119212977 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093340427 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.120520338 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.09597097 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.119813352 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.091656497 seconds)
done (took 17.620646666 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.102183579 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.189583751 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151521624 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.155847678 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.151198571 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111690329 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.128946463 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.150248862 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.103309671 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.148550574 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.149043397 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.140780847 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.131491479 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.12754522 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.136330243 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.102086831 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.124513872 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.135934729 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.136193783 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.146527543 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152952629 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.103393859 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148907131 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.146680202 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.100060722 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.156571876 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.129313898 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.101213803 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129855828 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.132234403 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.117883168 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.130454317 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.127549761 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.114575643 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.13313348 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.099911629 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.137594478 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121019337 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.103351725 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.126672047 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137693444 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.113375475 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.121820256 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.109655159 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.12623242 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.128854671 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.101260351 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.125113407 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.102768028 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.120602558 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107139055 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.146214818 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.123683578 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104128225 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.127065266 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12525395 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104303758 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.130051256 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.102919817 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.129598688 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.125232999 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.105433417 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.131322769 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14311706 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.101934822 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.128341552 seconds)
  done (took 9.287466171 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.117071714 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.156612403 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132880185 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110168194 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.128542432 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.09064827 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11502166 seconds)
  done (took 1.789317818 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091970594 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.1465315 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.125961656 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.14902995 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.137485712 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.129277149 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134206213 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.092542269 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.14264538 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.129103331 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.120494585 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.17461302 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.117775055 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.104226828 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.152093188 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.116813763 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.128293074 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.11624306 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.100516603 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.149761801 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121621029 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.115416171 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.130979866 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.093228197 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.139042614 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.094408645 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.185263141 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129945094 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092591384 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.123856468 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.098594587 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.188385341 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139999216 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127337476 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091280585 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146819126 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.114902257 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122995702 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.142427446 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097691762 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.138955887 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.101758766 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.125567179 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.0989019 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.124616221 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.107363733 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.129662454 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.125775436 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099072896 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.145969305 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.103377668 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.13985187 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.11862342 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.097046149 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.127409031 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100160613 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131658056 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.098143644 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.146587688 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.100468219 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.144656065 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.145640284 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.114259596 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.145052092 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136016107 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.115609721 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.139814235 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.098712962 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125679374 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.100285034 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.144735506 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.121739282 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.103360252 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.134091372 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101124665 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.145335639 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.145224794 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098024916 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.130779142 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.098066252 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.121444436 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.093811508 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.133788989 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097466594 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120088494 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110552799 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.131815814 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.122842068 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.097543028 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.140690683 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.098584164 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.130019556 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.128816673 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.098114623 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133717743 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121819528 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.129832005 seconds)
  done (took 12.858883763 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095514127 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.094335513 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.126089481 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.119376228 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.096067523 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094854745 seconds)
  done (took 1.576631154 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.125112621 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.122039672 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.109633362 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.125435289 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.162862302 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.118648156 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.143505744 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.127763994 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.114501132 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.133935851 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.118101521 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.144766695 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.147862673 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101594995 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.143213126 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.10146895 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.143772614 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.097541194 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.13520288 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12350866 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.110789052 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.126212724 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098296818 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.141430271 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.101540711 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.126490613 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124376975 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.110104296 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.133699211 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.104672585 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.126405264 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.10195851 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.12686264 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.128038903 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.118323133 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.126001237 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096607127 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.128774976 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101995732 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.127723524 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.144523279 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098351582 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.135072648 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.105616926 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.129165936 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.102722633 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.128712202 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099591464 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.144611154 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.128657154 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.103435276 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.126089284 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.101728562 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.129066993 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.10242723 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129098315 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.102583895 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.143709754 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12604431 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.102152821 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.123691909 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.101675797 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.130722188 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.101924037 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.127600309 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.103327258 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.126549984 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122343972 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09953756 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.126752983 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.104320052 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.123388478 seconds)
  done (took 9.630228109 seconds)
done (took 36.078283473 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.694631298 seconds)
  done (took 1.640401902 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.86966944 seconds)
  done (took 1.816995275 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.660570446 seconds)
  done (took 18.640916367 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.526991665 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.631171073 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.99302424 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.173240179 seconds)
  done (took 3.271401273 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.96745107 seconds)
  done (took 1.933489108 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.318870917 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.268133196 seconds)
  done (took 1.540835358 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.835364689 seconds)
  done (took 1.794240941 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.626710365 seconds)
  done (took 2.588224299 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.358296428 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.207752853 seconds)
  done (took 1.533674764 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.599353297 seconds)
  done (took 1.564918121 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.472290844 seconds)
  done (took 16.441071615 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.234854271 seconds)
  done (took 1.211817295 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.306798651 seconds)
  done (took 1.271179932 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.656736619 seconds)
  done (took 4.623709003 seconds)
done (took 60.825251646 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10625392 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.132089113 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108214683 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.129216449 seconds)
  done (took 1.435507039 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.109269671 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.126691862 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105651289 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.126236002 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.110348805 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.127698259 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100566849 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.13368594 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.101492548 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.129121653 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.126298623 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.10194375 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.128550351 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101025347 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.12510717 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.103131213 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.13039905 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.101190903 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.128410957 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.102912646 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.127278655 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.102967861 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.131347138 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.128082449 seconds)
  done (took 3.777141957 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.104691328 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.097731213 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.12687925 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.096772066 seconds)
  done (took 1.395229113 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.109914734 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141815706 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.115968488 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.134591279 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141259586 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116407611 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.123853677 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.099043076 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.126107624 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.109153777 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.124769244 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.118765295 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.142282344 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118636423 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.111427836 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116271374 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.09543472 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.14240078 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.10856897 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.136026035 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.098138238 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.134029269 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.105655219 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.136821392 seconds)
  done (took 3.884500824 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.173711671 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.13757557 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.147088234 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.170383018 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.124472201 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.121974775 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.122877724 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131672602 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.126578439 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.097700609 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.122488678 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.152945159 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128022067 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.124855534 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.097823028 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.128849487 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.104311245 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127748825 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.0994633 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.136344886 seconds)
  done (took 3.550231474 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.105174886 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.122833477 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094043721 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.122231834 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.10585161 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125972421 seconds)
  done (took 1.654923297 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.095286415 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.09250297 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.119704908 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.093536577 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.123629263 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092834987 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.117098534 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.094314594 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092824882 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.120904048 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.09328336 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.118297796 seconds)
  done (took 2.229094375 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.52323633 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.129638414 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.125409367 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.099000341 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.127801778 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.097238535 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.138389836 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.096698467 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.180167329 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.129034218 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.112054575 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.1776288 seconds)
  done (took 2.912303245 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216453176 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103150315 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282421336 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.380530151 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164834585 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172338807 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2803867 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175838668 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.193375224 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143201858 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21324153 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163288098 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13476101 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183970626 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147046452 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.190628497 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182001529 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206199854 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154543171 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246407812 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170974641 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1738495 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195637998 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131656192 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143991286 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165931606 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122766407 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109495757 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178441635 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17587708 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205277847 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128553603 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144399307 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232138969 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22133391 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183997222 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.314671658 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143121226 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198485768 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.197014436 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281553729 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147137259 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201748384 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161590757 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136668694 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187092504 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163152567 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.187695003 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.111765276 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148609669 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191124205 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182434729 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.213882016 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118478202 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.326989655 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12799638 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.152008049 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186695128 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196012264 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231066073 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173920502 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.102980123 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19339031 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222427786 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186958702 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.125002729 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.175764781 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132775254 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187300721 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210366629 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186516191 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175305117 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.218915075 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140571689 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168980793 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18595059 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158559084 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159391597 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167284772 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.127573745 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155886142 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117151263 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135034221 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192440643 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10331385 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245238504 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11620048 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.296150985 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240373407 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164435992 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167783359 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170328073 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173632656 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126055769 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.125624769 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152835212 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.17776822 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136793464 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138319158 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163776181 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152759566 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.104909699 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158853189 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.130175069 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16534057 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.113336743 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173497262 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171160982 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.135853121 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171554438 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156423274 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.137019394 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176490627 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228169146 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111748537 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14063323 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210078722 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163738932 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.14318993 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190822752 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202031845 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.179577855 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115906205 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203027179 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202078502 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121714393 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231703091 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120847503 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140576248 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.158097904 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165907264 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163292833 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161241474 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108639001 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159090628 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208185011 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.134286898 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114911236 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181567632 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13364828 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134518219 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122931258 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142525154 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.149082199 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.156782416 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.118012364 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161583147 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166800757 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16013967 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165435989 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149273645 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200623323 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139310837 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.164173133 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127305669 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.12538281 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.186038603 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200547963 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13558047 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193499007 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174275538 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203553117 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16885392 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137285042 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189109378 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107554053 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.127185454 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173506155 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166239719 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169308779 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198576485 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199327896 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.173468619 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.159898096 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155985335 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174929543 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.190791449 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166294058 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.154879654 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169294767 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175272228 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101369543 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.130317079 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.104823782 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147768286 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137007373 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110927224 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214519843 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169986041 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196023726 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168150382 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117705809 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22592661 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105150866 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171440234 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17768068 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147778669 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20063336 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200566512 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174281509 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151777464 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178198374 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098301268 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131420488 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13786953 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173086363 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112082449 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14104034 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150806419 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200413556 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182338194 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156606107 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209947055 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17360716 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207161874 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.128991185 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171604813 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188322385 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163897802 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.167308019 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14030206 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.168291255 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19491997 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149926552 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201046177 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170075658 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176032717 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208096035 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.166096093 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137358775 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127843568 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174068569 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147522348 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179460541 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154765156 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141525931 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133346648 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.143360961 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131501918 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188189919 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149351862 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187470017 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.174383413 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181062808 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132623517 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121425252 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168599712 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153516008 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.123432607 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176059632 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205139971 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151707052 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165000556 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191899636 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109175938 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.322703529 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231987987 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19168028 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144852671 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122024986 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168403414 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176766268 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171933135 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190103953 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151593419 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189563243 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165210553 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.149266061 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114350172 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154867101 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158014907 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.158090993 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.112050196 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160348516 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.149446696 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190271796 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152829198 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165454087 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171709461 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12712225 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.161903883 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147737562 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218218614 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16569944 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186411144 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.163396686 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.183522001 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19542891 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102000029 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135650306 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13366933 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190641561 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111326005 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167104284 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190499717 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231102475 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16565961 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175435236 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116642428 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.130821258 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165249026 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128225998 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232965717 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149984949 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.114826614 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234813316 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128939801 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140963685 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171547364 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292220459 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151173194 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192472471 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.098724899 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.282718776 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131775596 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138216513 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148805039 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177172102 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.140406263 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.190932219 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171712932 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123512024 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179292011 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14546053 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196917306 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24320291 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177776471 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183433877 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.150142657 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164861049 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17094995 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191863616 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122032908 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.152363678 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172831471 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201064948 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.20363419 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140030056 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169491886 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168848352 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165996218 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185222629 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112093975 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225142228 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110483837 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173267811 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148059347 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101752869 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1654955 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.216218219 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113117634 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19219366 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166472332 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139588416 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103772861 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160789095 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165474473 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150643317 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.10756369 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214308043 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.106283113 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170378503 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187847984 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107983872 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163073261 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154315148 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1368019 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121080456 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153149392 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141668735 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.152072211 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22320987 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.109565822 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192416979 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179041759 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171641313 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168064757 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151829763 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668948746 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106955478 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199045278 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156205853 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195632548 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157673419 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174241311 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168683225 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155955437 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17613409 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156759305 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.200583985 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173513875 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165478772 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138612015 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152270578 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12480906 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.138541518 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159630723 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168705431 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119748647 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.14319239 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.163220963 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153731357 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.123328481 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146571995 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20169889 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155182092 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191033759 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192483712 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1462219 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1732801 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184164496 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136964674 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.167205285 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17917833 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121137573 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158572946 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.137680555 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.1131936 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186586436 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.132278208 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168705824 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166247746 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138677338 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169562503 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.142019407 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166998608 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149556417 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168442779 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104857168 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.162782831 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164939019 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109493446 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.135849047 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162983876 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166794497 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.163683004 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105504704 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.180272804 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20025231 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.102040642 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141712632 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291969559 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166431333 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201266192 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.160766282 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141787417 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121953474 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163103542 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161014989 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166568627 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.106677947 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140400631 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138113486 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.187019226 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.172371199 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137527846 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192174756 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168655313 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196458492 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.144186787 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.272474738 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115262621 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16328437 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.137944306 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.106212983 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149666824 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141940543 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152090828 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198603078 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186075245 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162341957 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.122992407 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134328662 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.101652953 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140234512 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178392836 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163090526 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165980358 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121607909 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.125906911 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150433475 seconds)
  done (took 80.565554788 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.155678181 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150229659 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.153793426 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203229328 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174353424 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.262801006 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212763611 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234242622 seconds)
  done (took 2.610614899 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.107561608 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.142094985 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.147936295 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.13150567 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.130825276 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.352644587 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.117671303 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.131524269 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.191310928 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.142953051 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.129008042 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.62489847 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.102775613 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.13213671 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119004117 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.130320008 seconds)
  done (took 3.891788119 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.360384086 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.546732598 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.067092631 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.240384469 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.249237255 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.165198119 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.752894506 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.172870116 seconds)
  done (took 12.617400529 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.131186765 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.148334099 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.149632221 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.173468451 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.159488939 seconds)
  done (took 1.835030912 seconds)
done (took 123.319596013 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.101698884 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131446157 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102251054 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132192117 seconds)
  done (took 1.5247325 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.116143428 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089819845 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.118156862 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.086511373 seconds)
  done (took 1.474799575 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.449408854 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.121733703 seconds)
  done (took 1.675077375 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.126892629 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.14383587 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.125683997 seconds)
  done (took 1.47046229 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.110807306 seconds)
  done (took 1.183502697 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.114183778 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.111642658 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.149395531 seconds)
  done (took 1.450109785 seconds)
done (took 9.843079324 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117771486 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.438297042 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.395591296 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144793624 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.727923198 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.388029654 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.05323956 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.163259472 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173252393 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097469544 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.144889371 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680761273 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.041513917 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.346565994 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.027417368 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.348371364 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.709845203 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100190974 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132458107 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099090831 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.032826689 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098263847 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127559702 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.099065611 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.708035001 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.401480375 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126324283 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.35881392 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125698432 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101338073 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.41579257 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097171333 seconds)
  done (took 17.086095893 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100376569 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185896904 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.106378544 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127813383 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101004146 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.128962616 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.10672953 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.13853639 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18579853 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097439463 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.147258433 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123619142 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103392355 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09782604 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.148891969 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124387655 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.100770921 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100199487 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132475117 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127499028 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117631359 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123602469 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.10017634 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127358577 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097574179 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139102094 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099402236 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.137733578 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098374044 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130181565 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102985838 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126110451 seconds)
  done (took 4.964568158 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146794991 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.19827402 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134879669 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133231361 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.178174367 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126929722 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.213282707 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.133809112 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190503604 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127902463 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116918565 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126300248 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.164229696 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098904078 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.148693729 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100352691 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128180844 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101071653 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132351601 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099363809 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.146051427 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097155867 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.128160626 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.099372852 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126524377 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112308769 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.127107763 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.11242843 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126071316 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102611684 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.132618079 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097403877 seconds)
  done (took 5.289542925 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.105729405 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.132573118 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.116333655 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.142803831 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100247572 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.132618009 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.104850326 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.128312515 seconds)
  done (took 2.052515247 seconds)
done (took 30.466925355 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115823512 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.102737394 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.142402055 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.139216593 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.108988425 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.159816592 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.096276562 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.109443658 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.14052242 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.107705803 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.143283515 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.097158457 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.127337353 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.096497157 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.139985193 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.103200192 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.141746254 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.107331208 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.148174239 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.116570037 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.128097387 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.110440915 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.137660028 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.11888795 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.147631662 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.147433775 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.117894785 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.132355096 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.098725205 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.12758153 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.114779675 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.152679825 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.104789393 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.146974032 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.107027111 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.131164503 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.098616139 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.128392479 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.113710711 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13773875 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.104934961 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.137457828 seconds)
  done (took 6.26579468 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.125526667 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.173630845 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.100401779 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.124679479 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.095383096 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.168316232 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.168445083 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.101689188 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.12379565 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.126232949 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.153667252 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.096988263 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.126116721 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.095831015 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.123979401 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.09618452 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.152112042 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.123017583 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.158031703 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.157416039 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.149887866 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.162861008 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.161191795 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.128444037 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.170608324 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.168438511 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.125645712 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.164720478 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.160862045 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.101775458 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.158742027 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.129118351 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.131248982 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.099082887 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.168636524 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.16973574 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.131876713 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.168471573 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.162079417 seconds)
  done (took 6.489308914 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10643573 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.143701203 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.125059429 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.199432945 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.168600998 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.11334003 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140549836 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.117053521 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.157827626 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.097472435 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.139967537 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.130660268 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.144470528 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.139139183 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104113252 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.142513905 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.128046108 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.128931055 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.106267887 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.148893698 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.116998546 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.141762318 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113165869 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.139521374 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.098226801 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137804413 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.10371912 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.142554679 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.104756129 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.136792366 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131474661 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.104644148 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.130057965 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.109922377 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.130231645 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.106935072 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.150621409 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108330844 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.141864674 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.135558984 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.138759867 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.131651529 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.121346277 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.175325544 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.099965344 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.137569886 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.111901425 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.138176811 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097107615 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.14896663 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.114260355 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.129812861 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.143345852 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.099242337 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.0975245 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13584819 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.100160091 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.131783843 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.108151937 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.133589025 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.120087804 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.137055494 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135295898 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.101690784 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.134245564 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.099372567 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.098525591 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.133746806 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.15107226 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105399169 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.159675013 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099478595 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.134067893 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.107099892 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.135255959 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108421501 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.127741446 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106059826 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136747551 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.105427704 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.138032583 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102638186 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.131941333 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.117645097 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.144671831 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.134323841 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.105360204 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.134467617 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102538953 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.12963765 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114793101 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.129372122 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.103075226 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.1377612 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.100301609 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.130088228 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.106094189 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.133102385 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098579417 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.147900178 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.105496192 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.126525835 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.116867392 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.128926521 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.103895975 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.138196911 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.113714583 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.128969755 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.10445508 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.134585456 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.099314435 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.134479532 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.104270256 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.12811099 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.111652156 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.140074849 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.104468088 seconds)
  done (took 15.662060011 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.250797451 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.229931229 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.201317 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.317341959 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.153631648 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.125427833 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.225626674 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.180834481 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.130532631 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.168314288 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.185208619 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.197355672 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.153095173 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.197691049 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.188223496 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.130516191 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.16227825 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.152846019 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.25809551 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.278726794 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.164489355 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.143874544 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.169340014 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.139802228 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.146342639 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.145375057 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.123718748 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.150015738 seconds)
  done (took 6.176868221 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.115781514 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.171710045 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.106581539 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.160426662 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.156795381 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09932128 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.135078534 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.100257158 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.145731465 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.145085975 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.102508971 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.136603617 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.106088324 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.138437165 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.099787975 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.139073369 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.10939669 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.139277595 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.102647513 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.133777361 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.118443518 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.147046999 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.104978819 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.136572364 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.146314673 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.106626129 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131867708 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.152713833 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.109976789 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.161481099 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.096977149 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.138536049 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.11427663 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.128902724 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.106710964 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.132937384 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.101143698 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.131605252 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.102775733 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.126162537 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.099500924 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.11872545 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.106644804 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.14422325 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.107336153 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.131005237 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.104561153 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.134183084 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099663919 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.125844013 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101384328 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.132656708 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.105107595 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.14690161 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.10286512 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.130448168 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.104414482 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.132051096 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.109947007 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.101323161 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.126847755 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.105183956 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.136784398 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.134769328 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10996357 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.136382407 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.105534893 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.131271671 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.105393123 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.138051268 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.102777151 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.142380942 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.096760905 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.132720573 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.110198031 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.14219216 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.104545773 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.135380298 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.106729553 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.129285223 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.089509852 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.127514852 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.086948017 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.103762998 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.129536606 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.104515248 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.133536096 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.105990012 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.145162442 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.140200852 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.107665554 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.130983443 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.106756553 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.136046567 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.096546331 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.133714706 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.117988723 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.15080478 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.097701137 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.127841169 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.121538573 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.131641344 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097337836 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.117908343 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.109576782 seconds)
  done (took 13.875434828 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128703927 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.169861246 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.10186427 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.149149763 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.164524905 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.130231211 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.144839871 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.109452811 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.129838799 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.120355525 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.137889286 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.109097858 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.137783379 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.115075476 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15983575 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.113108 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.134277968 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.115081158 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.136995782 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172103992 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.121304283 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.157855022 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.161926326 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.115171348 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.135164962 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.12432038 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163924916 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.11391046 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.143074604 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.163345921 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.114207229 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162510395 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.136027307 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.135784165 seconds)
  done (took 5.750090685 seconds)
done (took 55.301147076 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.210059646 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.407626889 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.18241852 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.176271377 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.228281039 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.227629528 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.181088086 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.370948703 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.919755445 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.174129618 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.177156484 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.177171721 seconds)
done (took 27.541276672 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.187091534 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.768485567 seconds)
    (2/2) benchmarking "String"...
    done (took 1.529584459 seconds)
  done (took 4.402652692 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.17541291 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.177365656 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.433330937 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.177960709 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.203604611 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.200686859 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.177918923 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.193387052 seconds)
  done (took 15.667591738 seconds)
done (took 25.536115761 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.262070779 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.361981344 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.439987719 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.210068339 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.178200291 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.182836687 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.181119123 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.211339419 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.178500411 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.185833387 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.192293066 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.455350025 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.218057681 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.560136054 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.191011862 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.196240598 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.196267837 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.417675682 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.197349162 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.220337496 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.165724506 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.197527466 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.206222109 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.216323985 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.196694817 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.193158244 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.191422562 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.180556312 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.38640558 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.187534014 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.222211446 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.182600395 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.195329388 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.189089544 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.292726387 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.210102008 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.353356115 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.189324567 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.173833202 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.197106895 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.353970002 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.599748591 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.187326309 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.183910401 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.185974536 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.251212691 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.174066425 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.920128611 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.193786325 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.180397639 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.211423151 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.55712211 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.183112868 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.194513066 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.189595797 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.403573179 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.214219568 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.207608194 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.208417106 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.192549764 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.182205058 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.181595886 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.199140428 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.197640825 seconds)
  done (took 142.224162778 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.182698436 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.180300806 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.181884508 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.184788528 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.191224776 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.182067187 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.182987321 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.180707785 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.181508952 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.210649473 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.191628696 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.181459079 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.189693052 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.185593474 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.181899246 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.195630757 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.185087731 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.198860646 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.19940332 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.181605885 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.186891021 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.193436564 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.198730263 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.181643165 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.217799418 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.271100133 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.209831827 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.182883534 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.190784189 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.181120602 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.226389787 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.210078352 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.810997126 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.046545502 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.190114405 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.212901334 seconds)
  done (took 79.569883226 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.183933262 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.181142291 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.181656718 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.215085825 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.179360434 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.747177811 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.759582678 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.914041869 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.384117385 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.531203742 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.441937519 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.179529037 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.273431486 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.194746606 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.180581191 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.195494363 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.206440717 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.180119842 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.17975996 seconds)
    (20/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.180257024 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.745518673 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.201829257 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.35444219 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.19652383 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.211550062 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.575869323 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.181793056 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.364511558 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200706869 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.210301801 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.509238798 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.229542159 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.179707288 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.526652378 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.339168211 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.179128186 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292964662 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.181344781 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.212549038 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.179874482 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.46156619 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.180487783 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.180488424 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.18075503 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.183486526 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.829608271 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.180093087 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.734920746 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.181258595 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.107500246 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.180330659 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.182523358 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.171934575 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.859174059 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.206185522 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.180321723 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.183766213 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.180349722 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.180228959 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.212356855 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.202571508 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.299257619 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.182025451 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.184628727 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.216795786 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.181990584 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.252458267 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.19774249 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.893762106 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.26170605 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.286829518 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.747048832 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.189032697 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.278374852 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302590341 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.182040098 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.181939731 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.182370725 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.183388344 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.291470365 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.183532127 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.59799667 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.356392705 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.199658804 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.517943065 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.28670718 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.182978919 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.561629345 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.191823842 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.182026191 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.910678967 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.278244964 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.182316783 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.18234327 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.183019902 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.594273575 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.750065948 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.428376078 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.1934986 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.390588319 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.192874725 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.599705119 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.724639113 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.866183124 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.194233211 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295169809 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.353442269 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.199376337 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.181356282 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.492228173 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.192617036 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.240426865 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.181458766 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.578362557 seconds)
  done (took 362.777231887 seconds)
done (took 585.6749998 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.895604676 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.857500403 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.986652614 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.886336925 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.848639301 seconds)
  done (took 10.580075559 seconds)
done (took 11.684535011 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.372062269 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.381293168 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.24935115 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.37312991 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.224802227 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.388563105 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.362298393 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.212432195 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.287303658 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.265104941 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.285140088 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244980966 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217522384 seconds)
  done (took 17.972658199 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.445764705 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.184722879 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262028156 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.441517753 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.222954565 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.450716951 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.481678638 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.185008976 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.363676482 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.197368005 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.196730911 seconds)
  done (took 17.539873392 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.478146968 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.185021804 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.251015782 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.41977555 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.225460832 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.448171972 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.484987245 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.185673546 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.361114643 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.196861884 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.200626125 seconds)
  done (took 17.546413132 seconds)
done (took 54.163973903 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.224324135 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.352180897 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.220601714 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.19843412 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.192677146 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.194844173 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.196815025 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.191763442 seconds)
  done (took 10.880210983 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.189448909 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.191946248 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.188066784 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.189711668 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.188910911 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.1895413 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.189160458 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.190928424 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.191160977 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.189491526 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.18928336 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.192597853 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.192160167 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.192575055 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.193059716 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.191971166 seconds)
  done (took 20.159308346 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.191710218 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.190433598 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.191396236 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.190208744 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.190259253 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.191025223 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.190199575 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.189646503 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.189738472 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.189537873 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.190457347 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.190602999 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.191381879 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.191749014 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.189472577 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.192464515 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.191908331 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.190377105 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.196463028 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.190996433 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.191316209 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.192070784 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.191926081 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.191522694 seconds)
  done (took 29.699206001 seconds)
done (took 61.843737204 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.192609393 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.208302594 seconds)
  done (took 5.512082182 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.254109032 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.254390455 seconds)
  done (took 3.62052437 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.195397972 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.194576052 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.195145632 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.195488593 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.195175899 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.194751987 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.195949817 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.195204842 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.195339747 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.195585307 seconds)
  done (took 13.064557934 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.19708084 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.193875118 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.19206758 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.194780003 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.195260615 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.192473566 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.194412287 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.194671435 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.195736216 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.191738082 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.194545347 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.192870926 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.195745325 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.191838978 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.194079289 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.19257618 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.19273712 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.193366372 seconds)
  done (took 22.601961808 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.207635175 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.214974599 seconds)
  done (took 3.533647273 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.331605815 seconds)
    (2/7) benchmarking "second"...
    done (took 1.233643071 seconds)
    (3/7) benchmarking "month"...
    done (took 1.308931544 seconds)
    (4/7) benchmarking "year"...
    done (took 1.300940346 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.233646018 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.212301768 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.233921894 seconds)
  done (took 9.965665117 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.195341275 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.38770107 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.494521121 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.791552216 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.195784394 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.198118084 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.064362266 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.197838062 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.200176086 seconds)
  done (took 13.836418201 seconds)
done (took 73.243035352 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.185954689 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.205573276 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.195941813 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.207492451 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.500246958 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.241612907 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.19360679 seconds)
done (took 15.839677277 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.180228296 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.193143876 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.184353117 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.199609268 seconds)
  done (took 9.867686193 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.18521622 seconds)
    (2/2) benchmarking "read"...
    done (took 1.546483502 seconds)
  done (took 4.841205262 seconds)
done (took 15.816811071 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.195119803 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.19459817 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.192791879 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.195098068 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.193598212 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.192844606 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.191799232 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.19488292 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.195012482 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.196341351 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.195771285 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194619967 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.191682 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.192065128 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.195422957 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.193053186 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.190955931 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.193192348 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.193042274 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.195245212 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.193020088 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.193737123 seconds)
    (23/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.194143671 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.19564371 seconds)
  done (took 29.765895652 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.196183213 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.192729868 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.19595878 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.195840024 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.19318398 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.195694313 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.195564204 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.192993575 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.195731388 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.195350681 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.193586085 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.193565955 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.201590461 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.194039058 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.195999428 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.194115478 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.196499339 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.193092932 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196812283 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.193993349 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.196223473 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194273857 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.194136879 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.197462495 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.194210838 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.195356546 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.197937393 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.19400073 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.197040729 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.194214057 seconds)
  done (took 36.969417501 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.202549129 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.204963116 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.198012348 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.19772347 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.19738379 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.198159437 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.198507564 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.197858805 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.199144495 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.198370323 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.197272393 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.198710531 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.198505515 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.197334297 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.198478304 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.197756014 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.200433612 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.199554964 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.199312209 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.197342569 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.198792667 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.198071263 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.198767524 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.198317955 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.198482579 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.198867997 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.198922943 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.198410713 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.199142412 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.198636888 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.199360806 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.198781802 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.197514652 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.197989656 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.200987198 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.197548142 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.203144761 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.205926235 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.197640595 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.199708537 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.198737722 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.200673841 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.201165546 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.199890833 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.19953194 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.198102709 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.200449583 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.198965095 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.200671682 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.200505837 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.199842161 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.201793298 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.201127514 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.200265009 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.201704752 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.200806207 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.199456657 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.200671352 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.200520465 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.200803169 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.200397768 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.200052713 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.200017835 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.200052786 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.20037563 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.201095565 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.200761078 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.201525183 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.200487009 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.200747318 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.200696119 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.200711889 seconds)
  done (took 87.49050574 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.20215056 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.199626946 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.199724112 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.199426486 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.198590514 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.20117352 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.198285276 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201663714 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198486404 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.202204502 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201780796 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.200096705 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19825247 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.201991035 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.201824993 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.19958677 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.201891298 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.200652091 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.201284561 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.203445663 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.2021047 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.199094125 seconds)
  done (took 27.530867754 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202419369 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.203384706 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.200131662 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.205352002 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.200916513 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.203509764 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.202323941 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.204494046 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203737821 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200151572 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200186968 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202999161 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.20338393 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200732268 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200907673 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.201596468 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.204559797 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.203172682 seconds)
  done (took 22.762667372 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.202097419 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.201369424 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.203721142 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.201738032 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.202189507 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.204099649 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201743889 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.204531389 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.205641246 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.203098885 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.204860413 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204356013 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.204249225 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201246266 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204125471 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.201921446 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.204645148 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202206568 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205359313 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.20252208 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.202281993 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205710757 seconds)
  done (took 27.594446253 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207318072 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.204346396 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.203443697 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.203320352 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.202676298 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.204962599 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.206401174 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.201057045 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.687671987 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.205243433 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2027318 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.205091137 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.204122732 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.202625169 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.203398038 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2027081 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.205548784 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.203599187 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.205549631 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.202518683 seconds)
  done (took 25.684764108 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.205472439 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.206082223 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.207503319 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.206091387 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.206714537 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.207462969 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206906125 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.206921212 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.209420115 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.206995002 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.207767802 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.20643553 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.206703323 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.20825519 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.206083743 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.207244432 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.209221308 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.206381312 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.206574998 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.20718581 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.206091752 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.207351703 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.206497166 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.207728232 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.207820172 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.208849086 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.207204589 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.207466437 seconds)
  done (took 34.922845245 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207840551 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.206168773 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.204003092 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.204379068 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.206303772 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.204572461 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.203703465 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.204129888 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.20716608 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.203681736 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.206808556 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.205987733 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.20798378 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.207335961 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.20617297 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.207793103 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207822311 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.204504818 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205839883 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205276988 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.207982776 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208954836 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.207577387 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.204581242 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204588415 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.207272402 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.204654862 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.204267841 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206966637 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.206066016 seconds)
  done (took 37.303815572 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.250834892 seconds)
    (2/2) benchmarking "in"...
    done (took 1.246170012 seconds)
  done (took 3.618116163 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.204112403 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205249219 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.206360048 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.206127625 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.205413906 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.206628278 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.208211629 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205016573 seconds)
  done (took 10.768887711 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.205862792 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.206327676 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.207475874 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.207442665 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.207411395 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.206881002 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.213630017 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.224723471 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.207138633 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.207243212 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.211711841 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.214094961 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.208733209 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.206298525 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.205874349 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.207573124 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.207303393 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.206085002 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.207255546 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.208539274 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.207398905 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.206801859 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.207896363 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.205465575 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.207728282 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.217999721 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.210480752 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.210578199 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.206213143 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.211077918 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.207283388 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.205081214 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.207532711 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.207782363 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.206994433 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.207684031 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.217257526 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.225524764 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.213371415 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.206662131 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.208545934 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.204781619 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.20785617 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.208160239 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.209775203 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.207767349 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.207508671 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.205124661 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.206413103 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.210155378 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.212514186 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.206733799 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.206419772 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.209511514 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.207291151 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.213847081 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.226353966 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.211623523 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.216107783 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.216795175 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.220055479 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.228846393 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.20929248 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.206781046 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.218168054 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.229158631 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.215207264 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.224463913 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.205556148 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.208632556 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.214451064 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.219380429 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.232305794 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.208379445 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.208860905 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.20912989 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.207476709 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.208986158 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.215097602 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.227400738 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.207584236 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.20926494 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.21739576 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.22862864 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.207187287 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.209724992 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.209815845 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.210815333 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.209511657 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.218608731 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.227291255 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.209893029 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.208944235 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.209530161 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.20988088 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.210300258 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.208983878 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.209222025 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.207130509 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.209798164 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.210216385 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.212891224 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.216513132 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.210962341 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.211064898 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.216667489 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.211140304 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.210393222 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.216120955 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.2109505 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.210961253 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.212512883 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.215443049 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.208326759 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.212827404 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.218013203 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.211175715 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.212244672 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.21239727 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.212827326 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.220194178 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.234053867 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.212357826 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.211562815 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.21547776 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.22158557 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.212917304 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.214509303 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.212872719 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.20889351 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.209528315 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.212662131 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.212525163 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.213062144 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.212428419 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.215174163 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.211015397 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.213384114 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.214054521 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.214824719 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.213587 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.212590691 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.213572582 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.215113831 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.212833024 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.214028337 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.219079196 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.212619088 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.213965282 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.213332 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.211555056 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.215807572 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.21243974 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.212255057 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.211032711 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.212071391 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.212053611 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.213045204 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.213674092 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.214449108 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.214005688 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.21438313 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.215682759 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.213439975 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.216981012 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.212790636 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.209584484 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.214346563 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.215805982 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.213117158 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.214677665 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.213211734 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.215764127 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.219137214 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.215635266 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.213791858 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.21756608 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.214482447 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.214953547 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.213503076 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.216375731 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.221553408 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.215191718 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.221201709 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.215468404 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.215113187 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.216709856 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.214635652 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.214595189 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.215132988 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.218608411 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.221451003 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.225898195 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237988951 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.214900649 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.218138267 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.215511475 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.219009395 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.218577933 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.215601149 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.217601999 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.215821639 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.215858325 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.2171728 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.218422323 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.215709988 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.215669709 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.21748348 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.21818144 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.216845579 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.217813037 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.217011885 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.21812557 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.213954328 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.2177029 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.217559445 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.216653062 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.214986871 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.215978553 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.216262665 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.217435065 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.216673755 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.221891684 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.215604314 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.217505277 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.217620107 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.216750023 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.215948611 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.218485097 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.219800148 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.218775882 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.223978114 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.234766441 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.219396689 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.224151318 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.23554049 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.216932765 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.218540183 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.219754485 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.215618743 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.220215426 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.225387135 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.219315126 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.218692321 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.217915984 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.218171294 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.220228187 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.224267284 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.217397976 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.218167216 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.220455404 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.219444492 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.21660444 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.219833996 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.220166604 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.219116198 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.220478806 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.220309355 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.220602908 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.219720991 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.221714058 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.220106343 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.220382336 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.222587512 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.225449271 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.225150814 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.22194775 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.221038298 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.220733171 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.224447985 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.220580991 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.221807095 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.220899252 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.231482146 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.242487915 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.226737335 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.238321101 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.221495235 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.226679441 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.238738073 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.223385534 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.220923197 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.220229895 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.221264197 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.221481353 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.220348952 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.221186391 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.222881435 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.222720345 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.222388136 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.224972938 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.222639001 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.220339295 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.223207275 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.222978392 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.222975928 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.221979175 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.222747908 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.223640526 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.224829107 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.221939568 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.221452107 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228946413 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239314252 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.223020032 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.222843624 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.223852206 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.222758707 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.22291774 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.223376114 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.226964261 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.22947503 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.225881675 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.230328629 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.225062439 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.232375999 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.2243813 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.227787012 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.230674159 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.222700928 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.2231019 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.225090191 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.223758575 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.231220026 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.241293657 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.22592466 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.227280023 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.224841284 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.225605953 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.22486021 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.224473386 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.224793226 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.224766356 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232443908 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.245033448 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.227663104 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.226313536 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.222331538 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.22381996 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.225894099 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.224253927 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.227224945 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.224612145 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.226562411 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.224800493 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.224039208 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.225961661 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.22588319 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.226929927 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.223596421 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.226575933 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231812702 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.244834116 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.22921912 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.226327747 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.232392881 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226346712 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.233131259 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.244695409 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.226053993 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.22521202 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.227320158 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.225913056 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.22529199 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.225837523 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.226963822 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.2270852 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.23070835 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.226128526 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.228757046 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.226364526 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.227109245 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.226947538 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.235072431 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247242848 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.228855859 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.232160404 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.22608435 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.228454841 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.230814205 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.227957654 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.225243464 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.229764831 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236174789 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2331507 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.228472566 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.228343909 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.228936898 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.22832844 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.229593788 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.230232702 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.229888731 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.231319063 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.229029425 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.228871805 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.230731861 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.229492705 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.228908823 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230254136 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.230081526 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.237448172 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.229253021 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.229113942 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.229137161 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.23263602 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.229427225 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.231435559 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.232821828 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.233091471 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231948653 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.229177294 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.234974794 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.235109422 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.231878027 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.228749596 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.229417753 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.229660038 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.230108766 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.23025291 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.230272937 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.229898793 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.23087046 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.229870188 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.231209037 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.229072423 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.229825139 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.229870675 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.229764023 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.23224139 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.23609551 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.230596008 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.228227147 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.232296263 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.232546584 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.230392961 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.231699786 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.236299187 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.232711229 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.239401737 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.237058917 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.235730821 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.232085126 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.23387788 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.237537695 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.230337057 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.232419466 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.231657431 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.23216295 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.230640027 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.233799375 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.231327027 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.238342651 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.230982298 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.229882945 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238658696 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.251657933 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231580764 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.234782007 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.235086154 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.231552066 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.230299199 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.234940735 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.232238595 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.239393881 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.250704751 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.234812732 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.233804287 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.231902002 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.235633899 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23677235 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.235178247 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.232955397 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.231257592 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.232799588 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.233832571 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.234489278 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.232228561 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.235336214 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.232758127 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.236696062 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.240001442 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.232602521 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.235039014 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.234996753 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.235338509 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.23449178 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.234987498 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.232358746 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.230412797 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.234585728 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.236108011 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.234644813 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.236867815 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.233650963 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.235355824 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.236176399 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.234966511 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237841171 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.242001298 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.240864495 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.232430741 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.232926182 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.235179699 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.238220111 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.235167587 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.23593889 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234626962 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.23532101 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.236324798 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235523721 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.235299475 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.238288584 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.249433273 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.257008571 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236671491 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.236916456 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.237445698 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.238188141 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.234055251 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.236928283 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.236782274 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.237834721 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.241481463 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.237044963 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.242102021 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254423357 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.236940542 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.240864528 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.238407168 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.243556657 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.239625479 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.236781274 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.237351872 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.241147328 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.2514324 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237342699 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.245275315 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263009238 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.25410224 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.238627169 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.238025644 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237499699 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.237945481 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.239586515 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.239229292 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.239474755 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.239443775 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.239182513 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.236904886 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242500634 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.239684465 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.240839505 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.239339123 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.23843386 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.239996551 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.234939746 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.239057556 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.239485083 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.240339538 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.239340852 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.240358534 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.239243722 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249933448 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.26232197 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.239425156 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.239054507 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.237369305 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.241724318 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.240740253 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24892426 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.247073448 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.240069849 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.240260821 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.240867096 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24147458 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.240568687 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.240359791 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.238540322 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239865183 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.235778083 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.249806579 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.261509927 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.248073939 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.229818334 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23189616 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.232617014 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.232088918 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.231718936 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233364675 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.232172635 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.233706894 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.233356052 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.22762499 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.227989647 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.229448776 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.234097411 seconds)
  done (took 731.04394311 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.225395335 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224510068 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.225083892 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.225825074 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.22542872 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224490503 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224959935 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.2267841 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.225263863 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.225111329 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.226099895 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225310969 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.226059246 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.22618159 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227254554 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.226559345 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.227696651 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.22512182 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.226249057 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.226814815 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.22690428 seconds)
  done (took 26.884393943 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.228665411 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.226666313 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.227086224 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.229800435 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227378019 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.228727599 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.227239425 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228091069 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.230476055 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228008998 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.228817592 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230201298 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.227034556 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.227728565 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228484496 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231063569 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.230374706 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228171984 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.231401975 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.228868025 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230431071 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.228083637 seconds)
  done (took 28.175781934 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.232590888 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.230956015 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.231713404 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.228291825 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.231110818 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.2279469 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.22827914 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.223366776 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.222665287 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.222881725 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.222856104 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.223096311 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.228238584 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.22747664 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.22480856 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.219572294 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.219034751 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.220009177 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.219915014 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.217908499 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.224129772 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.23567077 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.217998001 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.217020323 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.21813496 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.219899649 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.218132787 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.216833444 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.21927439 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.220725219 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.219246496 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.216457527 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.21727975 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.215022625 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.216989264 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.219521206 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.215609236 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.215210547 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.217210411 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.224499915 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.234831544 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.217321019 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.222529745 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.238564952 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.219305543 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.221279416 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.225884207 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.217062808 seconds)
  done (took 59.828807423 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.786044986 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.810689243 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.806591062 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.813478893 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.814671523 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.811858636 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.814774811 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.815603171 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.80298116 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.800037537 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.808131191 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.805255871 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.808165691 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.809840398 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.80950592 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.813537136 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.806858497 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.809635857 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.819219984 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.818722778 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.812334281 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.810681409 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.806786012 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.812328368 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.812783316 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.814273617 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.811150919 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.809834059 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.806118198 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.807240888 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.814686546 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.833134425 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.841737728 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.798300462 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.804100697 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.805914156 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.808188906 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.805089838 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.805845972 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.804940404 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.806416642 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.806998422 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.808401692 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.812451872 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.811657499 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.801387965 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.801954521 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.804598035 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.804113864 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.803302929 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.807861336 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.800743297 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.801128698 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.807135581 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.803357885 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.812950431 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.807629618 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.821319579 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.802392166 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.800209747 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.798680455 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.803507632 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.801998211 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.804301023 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.807109729 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.798962024 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.803692189 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.804892798 seconds)
  done (took 124.095484934 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.215267971 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.215429683 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.21584827 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216609126 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.216537518 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.215060538 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.216252344 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.216383314 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.216632977 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.216365228 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.216728329 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.216455047 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.216106423 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.217075897 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.217089896 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.216200597 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.216901088 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.216731462 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.215955357 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216752414 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.214915603 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.215659534 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.216168905 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.215865763 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.216486504 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.21649471 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.215991743 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.215622016 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.21683863 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.215654746 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.216711661 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.215883501 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.216520991 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.217026045 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.217227247 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.216199517 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.215988479 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.215533142 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.215270591 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.215798311 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.216025456 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.215729389 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.215629019 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.216046971 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.215372017 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.211279293 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.21216095 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.21348833 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.213126002 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.212359508 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.212323819 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.212606291 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215217359 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.21342616 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.211879413 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.21295648 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.212619131 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.21250086 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.21404416 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.212892988 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.212439699 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.213517287 seconds)
  done (took 76.476982525 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21329011 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.211941342 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.209599989 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.209736299 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.212030273 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.209550674 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.21291694 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.211858596 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.211898779 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.212918074 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213680385 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211111183 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212827633 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214844081 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.210854942 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211813324 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.210797993 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.211967554 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214305501 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.211149918 seconds)
  done (took 25.365611175 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.210984407 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.214089787 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.211084396 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.211593332 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.213566773 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.211318863 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.213661489 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214385662 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211784384 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214279008 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.21398204 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.216685943 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211570794 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.212589566 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.21458107 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.212667604 seconds)
  done (took 20.536821768 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.212360649 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.215576033 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.214897928 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.214753764 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.212676893 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.213530721 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.215709025 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.211724109 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.213340548 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.215584106 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.212628587 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.213142941 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.212716133 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.211689921 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.210077114 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.214653254 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.210402372 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.2128302 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.2114649 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.211617996 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.209072275 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.208722878 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.211138244 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.211892001 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.208929093 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.210579329 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.208550892 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.208072275 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.209472176 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.211288324 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.208181072 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.208643541 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.20814256 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.208125712 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.210328962 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.209597317 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.211779811 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.212206351 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.210896515 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.211154272 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.211286425 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.209620586 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.212498139 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.211176088 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.208630785 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.211154913 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.209951741 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.209114491 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.208510739 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.209737247 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.212412801 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.2121624 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.213519101 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.211896683 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.212561158 seconds)
  done (took 67.752033527 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213001156 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.212316236 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.209059021 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.21255891 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.212941329 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.210634519 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.212682529 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.21209126 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211493722 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.216319867 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.214354354 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.219306081 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215153839 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.213879166 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.211897981 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214237328 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.210333214 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.211252731 seconds)
  done (took 22.96010357 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.212281826 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.211370894 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.213955868 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.210550589 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.211481275 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.214328481 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210692005 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.213559714 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215289634 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.210933535 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212737452 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.214329111 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214551891 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.214835857 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.211940171 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21190699 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.216607201 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214956694 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.211657449 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212576183 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.215241665 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215672003 seconds)
  done (took 27.818219995 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.213856201 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.214191848 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.213928995 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.229153869 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.231956434 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.213344236 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.214623738 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.214489549 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.235678685 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.263131278 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.258338168 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.232601658 seconds)
  done (took 15.863120798 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21311381 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216234222 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.214076584 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215426645 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216149981 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21460526 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213780229 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214062078 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216714647 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214110362 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21348353 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216614661 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215360886 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212914797 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217079061 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217174669 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214896974 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214982927 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214808156 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217801605 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214045042 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217299282 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214821693 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214202124 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214201279 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214267955 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217027125 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215973612 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214434392 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218136407 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217804217 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215135764 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216051211 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21675397 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218217756 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217699741 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215341903 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218872143 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218734755 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216968362 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.217970336 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218701763 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219026879 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217237795 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218349865 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215333197 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216363055 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216310598 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217702426 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219220673 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219894057 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217000083 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21796303 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2182414 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2183253 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220103082 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216638331 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216240956 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219153924 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219028054 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216802965 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218984074 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216088933 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217384399 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215318216 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214431478 seconds)
  done (took 81.418156268 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213679717 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.214885072 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213196734 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215062547 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216068123 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211807637 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212348732 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211821987 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211572432 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211667386 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214091498 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21278624 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21233099 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213067098 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211918642 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211816608 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214141163 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213470436 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211756299 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215664081 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213374017 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213340708 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214043226 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212841129 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213591536 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21704128 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214289887 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213531343 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213717842 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214433946 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213454019 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213433764 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213959117 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.213158078 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214498842 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214276301 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214453151 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21352617 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21422625 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217827619 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214204745 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217442154 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214171047 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214049224 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215211493 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214047034 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21436036 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213569377 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21529547 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214386445 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21545337 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214719116 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215779708 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215141468 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215685871 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215971558 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21476192 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215685404 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215719253 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218408729 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215534423 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214869812 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219738819 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215575365 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216226702 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215599697 seconds)
  done (took 81.278976313 seconds)
done (took 1735.01952772 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.380175321 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.334687876 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.215892494 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.227297941 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.217177577 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.211497008 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.230199385 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.216992748 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.217009292 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.217424107 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.217088428 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.404609989 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.211425397 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.217183008 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.217986973 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.313889881 seconds)
  done (took 25.182481338 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.24130442 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.228488782 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.330668054 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.24686519 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.249426397 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.404082763 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.281281873 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.232264604 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.385376914 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.269623382 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.224920006 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.254591144 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.230545864 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.225839479 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.243702341 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.405795226 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.466574681 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.224386946 seconds)
  done (took 27.277012732 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.643292209 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.255500042 seconds)
  done (took 5.033560873 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.246606086 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.230183009 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.228216078 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.226090722 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.219226754 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.219869459 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.221004396 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.218143266 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.224161254 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.344852661 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.229783283 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.232420185 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.241803604 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.222374575 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.219567256 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.260177979 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.362778148 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.220349851 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.219495795 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.228946846 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.222204059 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.344305958 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.266617967 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.224639702 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.340059474 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.220191548 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.23098284 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.231212558 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.357162559 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.221849268 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.222324376 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.223065003 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.225047862 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.112496072 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.700553824 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.214741597 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.271943 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.232673986 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.219547679 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.413803736 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.225910852 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.231335587 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.215081242 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.702026146 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.382408021 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.341099949 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.238983344 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.246014698 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.225353819 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.29061394 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.227074307 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.225874128 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.265769974 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.043246825 seconds)
  done (took 79.320457075 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.219435116 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.216183353 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.39862111 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.241930492 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.216834328 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.222061498 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.220964766 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.4864564 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.259213507 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.218157912 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.546163472 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.776226715 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.238918329 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.270261572 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.114818684 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.287390535 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.216736774 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.232933157 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.223064128 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.21913962 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.753956904 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.234168011 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.222561551 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.383550269 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.256181624 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.72408412 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.232219326 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.217469632 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.240539847 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.218426159 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.729772318 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.250556514 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.290988651 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.221108304 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.484282335 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.592248807 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.555010656 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.230316515 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.272975471 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.21806619 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.23070302 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.709878859 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.573337345 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.22534388 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.219985967 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.727127427 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.22327076 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.227515533 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.217539295 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.465030316 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.220639612 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.220600904 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.245952586 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.225113487 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.220072588 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.29712221 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.292681241 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.726906926 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.225034601 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.220979809 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.253995459 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.221004264 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.220400447 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.222086956 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.223927134 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.571098278 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.36822339 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.225770271 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.568887067 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.729555387 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.239936441 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.785781628 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.240948242 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.251305631 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.436478781 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.232258132 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.224568189 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.742781837 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.260468584 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.220788977 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.55334012 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.230817739 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.543886493 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.244613038 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.221691634 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.768088364 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.22918928 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.232231297 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.222096353 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.2364858 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.227424556 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.226590183 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.494718979 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.280731475 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.222543461 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.221778553 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.266909739 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.222771294 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.221993248 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.225264332 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.782640233 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.25240525 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.221419096 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.223204133 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.222873329 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.246831967 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.225524647 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.226218365 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.485415024 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.228114479 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.232895184 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.223456038 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.222377424 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.243041135 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.397612594 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.224985762 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.52142514 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.228803732 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.234267623 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.229587761 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.2223126 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.278290128 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.224615616 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.233801616 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.108461882 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.532809969 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.241935533 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.240302619 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.225093413 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.232687217 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.227838721 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.229212817 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.264897376 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.227252064 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.964996749 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.245774232 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.227464886 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.223487725 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.227220651 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.224519509 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.228784263 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.22636869 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.512224856 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.498106286 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.373571085 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.22714064 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.22443968 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.975098756 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.26248801 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.405326651 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.245823181 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.225376079 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.476919923 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.414731171 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.227006653 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.225735127 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.22592094 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.483718692 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.231513269 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.541353191 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.764709949 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.247815054 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.234111589 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.978278149 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.928690758 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.231503916 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.231135587 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.552594886 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.248854828 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.226701698 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.226069399 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.22675213 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.244364138 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.231924937 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.233163521 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.228383678 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.227294087 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.272972911 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.418095445 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.244698651 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.230792563 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.72650926 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.24729972 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.227495302 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.251180444 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.227517224 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.227057422 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.289085482 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.231410055 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.271361705 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.228402748 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.237952086 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.783805004 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.23223796 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.235673811 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.418136304 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.893247865 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.248185784 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.229875074 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.243545569 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.137797479 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.752100631 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.286704332 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.528342928 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.234871629 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.266841799 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.228259692 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.288389153 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.753055147 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.237048298 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.244914789 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.874092125 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.251350052 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.766164699 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.228394791 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.228400386 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.823758311 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.249938572 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.2352985 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.22842883 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.230686478 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.521954569 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.235849693 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.240144217 seconds)
  done (took 474.004835712 seconds)
done (took 611.947504769 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.23004941 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.231353227 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.221611014 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.235182109 seconds)
  done (took 10.066848623 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.240442089 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.237742896 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.237929955 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.236701027 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.240470674 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.238229425 seconds)
  done (took 8.578158466 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.230601813 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.231967351 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.236121781 seconds)
  done (took 7.846934106 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.431193627 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.252914235 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.570440205 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.260055352 seconds)
  done (took 8.66333391 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.241506313 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.241571907 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.242374285 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.243043967 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.246463717 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.245398521 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.243085699 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.243165604 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.245675941 seconds)
  done (took 12.341236045 seconds)
done (took 48.643379716 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.428859364 seconds)
    (2/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.247893544 seconds)
    (3/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.982287933 seconds)
    (4/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.277635093 seconds)
    (5/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.379073719 seconds)
    (6/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.983249263 seconds)
    (7/286) benchmarking ("sort", Float64, true)...
    done (took 2.039575688 seconds)
    (8/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.254927238 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.27302423 seconds)
    (10/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.248766516 seconds)
    (11/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.246818809 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.250033672 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.249836613 seconds)
    (14/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.251419317 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.284840403 seconds)
    (16/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.251913087 seconds)
    (17/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.251516954 seconds)
    (18/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.304408478 seconds)
    (19/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.2694684 seconds)
    (20/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.288083925 seconds)
    (21/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.250037483 seconds)
    (22/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.415234279 seconds)
    (23/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.383380879 seconds)
    (24/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.244254157 seconds)
    (25/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.250763369 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 1.901184948 seconds)
    (27/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.265831175 seconds)
    (28/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.254497648 seconds)
    (29/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.251994517 seconds)
    (30/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.28739595 seconds)
    (31/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.225373943 seconds)
    (32/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.267720944 seconds)
    (33/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.317350903 seconds)
    (34/286) benchmarking ("sort", Float32, true)...
    done (took 1.983532194 seconds)
    (35/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.238263735 seconds)
    (36/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.348488604 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.292014983 seconds)
    (38/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.41939334 seconds)
    (39/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.948362452 seconds)
    (40/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.252590892 seconds)
    (41/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.257517528 seconds)
    (42/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.252890496 seconds)
    (43/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.38200728 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.289761404 seconds)
    (45/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.351475869 seconds)
    (46/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.352833838 seconds)
    (47/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.430481482 seconds)
    (48/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.331106493 seconds)
    (49/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.237814739 seconds)
    (50/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.290806676 seconds)
    (51/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.288503088 seconds)
    (52/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.226426003 seconds)
    (53/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.257211856 seconds)
    (54/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.23898194 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.264963479 seconds)
    (56/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.376822821 seconds)
    (57/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.273217247 seconds)
    (58/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.364547097 seconds)
    (59/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.003520041 seconds)
    (60/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.341906173 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.24484496 seconds)
    (62/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.428032983 seconds)
    (63/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.341916985 seconds)
    (64/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.254262603 seconds)
    (65/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.238627577 seconds)
    (66/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.986105232 seconds)
    (67/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.404996611 seconds)
    (68/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.254805837 seconds)
    (69/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.276493078 seconds)
    (70/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.111835127 seconds)
    (71/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.248989584 seconds)
    (72/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.910208584 seconds)
    (73/286) benchmarking ("sort", Int8, false)...
    done (took 1.397701281 seconds)
    (74/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.257367223 seconds)
    (75/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.261966287 seconds)
    (76/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.315034986 seconds)
    (77/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.291407728 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 1.457765163 seconds)
    (79/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.233258213 seconds)
    (80/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.371487326 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.346082583 seconds)
    (82/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.299004985 seconds)
    (83/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.305585597 seconds)
    (84/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.233591261 seconds)
    (85/286) benchmarking ("sort", Float64, false)...
    done (took 1.462669742 seconds)
    (86/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.435364124 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.321041915 seconds)
    (88/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.32274452 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.298253087 seconds)
    (90/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.319509519 seconds)
    (91/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.383725587 seconds)
    (92/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.284856693 seconds)
    (93/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.592941508 seconds)
    (94/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.261442578 seconds)
    (95/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.228524142 seconds)
    (96/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.310562346 seconds)
    (97/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.43759269 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.303308503 seconds)
    (99/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.255729098 seconds)
    (100/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.279309457 seconds)
    (101/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.252597072 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.270341837 seconds)
    (103/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.316886208 seconds)
    (104/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.340784513 seconds)
    (105/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.262971208 seconds)
    (106/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.478445633 seconds)
    (107/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.385698333 seconds)
    (108/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.262056348 seconds)
    (109/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.344144536 seconds)
    (110/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.893213012 seconds)
    (111/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.26125028 seconds)
    (112/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.242849693 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.295321185 seconds)
    (114/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.260038852 seconds)
    (115/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.388827022 seconds)
    (116/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.444092061 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 1.285936996 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.251665979 seconds)
    (119/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.30147475 seconds)
    (120/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.38645881 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.293516436 seconds)
    (122/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.934907782 seconds)
    (123/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.272293219 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.328803803 seconds)
    (125/286) benchmarking ("sort", Float32, false)...
    done (took 1.431219744 seconds)
    (126/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.280149554 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.274754847 seconds)
    (128/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.256699952 seconds)
    (129/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.248188008 seconds)
    (130/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.270265536 seconds)
    (131/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.295063047 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.257877559 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.328338935 seconds)
    (134/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.271741001 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.258366936 seconds)
    (136/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.365197576 seconds)
    (137/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.257388637 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.346360679 seconds)
    (139/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.258079419 seconds)
    (140/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.264423294 seconds)
    (141/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.291957327 seconds)
    (142/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.33153776 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.287762022 seconds)
    (144/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.385007439 seconds)
    (145/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.255769749 seconds)
    (146/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.255254061 seconds)
    (147/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.317325175 seconds)
    (148/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.329171582 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.345270007 seconds)
    (150/286) benchmarking ("sort", BigInt, false)...
    done (took 2.250849396 seconds)
    (151/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.294625473 seconds)
    (152/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.316938862 seconds)
    (153/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.467773648 seconds)
    (154/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.951908057 seconds)
    (155/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.252473001 seconds)
    (156/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.892979017 seconds)
    (157/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.086031447 seconds)
    (158/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.343621956 seconds)
    (159/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.25574828 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.340069933 seconds)
    (161/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.11908295 seconds)
    (162/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.589757098 seconds)
    (163/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.950663331 seconds)
    (164/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.265645569 seconds)
    (165/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.260295043 seconds)
    (166/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.990583377 seconds)
    (167/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.27583844 seconds)
    (168/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.887338213 seconds)
    (169/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.267205279 seconds)
    (170/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.291669188 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.354971487 seconds)
    (172/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.392989925 seconds)
    (173/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.237915475 seconds)
    (174/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.371969109 seconds)
    (175/286) benchmarking ("sort", Bool, true)...
    done (took 1.609230016 seconds)
    (176/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.278323393 seconds)
    (177/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.257652403 seconds)
    (178/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.244587555 seconds)
    (179/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.11056704 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.332956606 seconds)
    (181/286) benchmarking ("sort", BigInt, true)...
    done (took 2.249155076 seconds)
    (182/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.370003142 seconds)
    (183/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.346682983 seconds)
    (184/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.259773218 seconds)
    (185/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.31316689 seconds)
    (186/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.319712982 seconds)
    (187/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.344982239 seconds)
    (188/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.271480532 seconds)
    (189/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.319678858 seconds)
    (190/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.265861504 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.403723477 seconds)
    (192/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.260707006 seconds)
    (193/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.252308448 seconds)
    (194/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.301979073 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.322426871 seconds)
    (196/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.258267653 seconds)
    (197/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.455876261 seconds)
    (198/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.277177554 seconds)
    (199/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.257320036 seconds)
    (200/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.347414248 seconds)
    (201/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.355781306 seconds)
    (202/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.285776032 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.32219078 seconds)
    (204/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.310125843 seconds)
    (205/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.450371497 seconds)
    (206/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.394290094 seconds)
    (207/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.308045645 seconds)
    (208/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.899255183 seconds)
    (209/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.26624626 seconds)
    (210/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.263090026 seconds)
    (211/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.454148879 seconds)
    (212/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.904495591 seconds)
    (213/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.305268287 seconds)
    (214/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.268738764 seconds)
    (215/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.263249682 seconds)
    (216/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.258310003 seconds)
    (217/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.329991659 seconds)
    (218/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.237534185 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.420280094 seconds)
    (220/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.288346994 seconds)
    (221/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.323130435 seconds)
    (222/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.331665461 seconds)
    (223/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.303062536 seconds)
    (224/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.459292135 seconds)
    (225/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.270607865 seconds)
    (226/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.256777879 seconds)
    (227/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.345400574 seconds)
    (228/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.242299847 seconds)
    (229/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.287981847 seconds)
    (230/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.005670424 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.30991687 seconds)
    (232/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.254294383 seconds)
    (233/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.07010776 seconds)
    (234/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.336892858 seconds)
    (235/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.373019932 seconds)
    (236/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.566944131 seconds)
    (237/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.256254272 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.304935479 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.292124493 seconds)
    (240/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.250524199 seconds)
    (241/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.281816539 seconds)
    (242/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.276894952 seconds)
    (243/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.335644591 seconds)
    (244/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.352046387 seconds)
    (245/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.257532668 seconds)
    (246/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.945058129 seconds)
    (247/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.907311624 seconds)
    (248/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.256450201 seconds)
    (249/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.279294154 seconds)
    (250/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.426458996 seconds)
    (251/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.401283683 seconds)
    (252/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.334672148 seconds)
    (253/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.286878388 seconds)
    (254/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.281563083 seconds)
    (255/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.370747112 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.296916747 seconds)
    (257/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.271638113 seconds)
    (258/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.419277431 seconds)
    (259/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.405617842 seconds)
    (260/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.276535809 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.274292173 seconds)
    (262/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.432009464 seconds)
    (263/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.576911725 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.434857757 seconds)
    (265/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.271711418 seconds)
    (266/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.069529261 seconds)
    (267/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.343648896 seconds)
    (268/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.238352684 seconds)
    (269/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.267267449 seconds)
    (270/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.267662779 seconds)
    (271/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.388715954 seconds)
    (272/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.458313578 seconds)
    (273/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.002689088 seconds)
    (274/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.276489588 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.394664233 seconds)
    (276/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.435329049 seconds)
    (277/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.370233205 seconds)
    (278/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.245985308 seconds)
    (279/286) benchmarking ("sort", Int8, true)...
    done (took 1.803020582 seconds)
    (280/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.386681837 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.267432022 seconds)
    (282/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.275814008 seconds)
    (283/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.271291964 seconds)
    (284/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.376158914 seconds)
    (285/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.020246084 seconds)
    (286/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.261398165 seconds)
  done (took 446.980356124 seconds)
done (took 448.133092226 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.298409168 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.311340895 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.265616141 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.29878745 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.377603325 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.442786818 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.276945986 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.304282644 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.313811226 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.316124068 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.272178975 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.44098326 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.26736501 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.266499239 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.264439513 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.308320537 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.265416727 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.266075967 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.283417902 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.30451243 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.281677268 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.277044771 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.316122933 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.440634088 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.269847438 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.267712267 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.269730452 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.286874688 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.379807372 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.271356631 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.270212993 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.278080821 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.266440861 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.272204588 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.260841286 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.285568021 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.278864033 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.277305276 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.30223973 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.377957955 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.256476269 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.273917317 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.268238903 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.26800407 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.267947001 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.309502247 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.268235125 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.32510063 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.309381739 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.310818665 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.264154709 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.282428085 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.277697519 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.268790952 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.277447388 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.269149503 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.327665378 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.313447282 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.291815567 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.314337436 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.25757893 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.272703456 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.307300806 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.286890547 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.27668386 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.25768899 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.267153545 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.308455065 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.25820987 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.274200544 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.256790998 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.294631033 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.272798286 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.283845777 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.301831877 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.265879776 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.271148628 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.269442713 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.278328464 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.269613702 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.317516232 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.310990922 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.320183621 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.270571111 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.312494417 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.44597683 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.280269704 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.272025424 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.308274719 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.290719711 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.279520671 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.284518109 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.306805441 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.272666418 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.318702812 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.32823005 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.279124145 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.280530085 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.32183207 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.282723377 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.261189995 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.317637106 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.269132339 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.267900742 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.271406341 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.393633236 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.259322859 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.271710519 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.306279122 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.318770317 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.331386825 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.267043106 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.281282261 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.318341686 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.281412503 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.331625535 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.275382099 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.268020417 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.274273498 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.392891604 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.274256705 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.278509244 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.318191089 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.333507957 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.272741847 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.271420939 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.280294726 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.314323114 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.394658558 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.283900189 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.385468351 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.274099984 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.276677448 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.305454035 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.318235226 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.305621292 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.335335699 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.318405197 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.290133817 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.275996044 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.285831604 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.285593028 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.276166117 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.331640661 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.274990235 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.310026624 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.314922719 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.316986382 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.30725298 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.39538459 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.279122112 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.272233024 seconds)
done (took 214.327160866 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.334925514 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.268971291 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.380798973 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.272290389 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.370617235 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.377561159 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.268922508 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.269889163 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.269474972 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.655717356 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.269385133 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.270289273 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.270147924 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.268364109 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.353271981 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.272337117 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.27023584 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.624100204 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.27242172 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.345633574 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.273058948 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.272664514 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.273558368 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.661541378 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.272187324 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.269803373 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.346484114 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.272461023 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.619458542 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.266816664 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.266332213 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.624875795 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.366032087 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.289850296 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.282583791 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.278695475 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.375421349 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.29449089 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.356594852 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.356967959 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.382534957 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.312478653 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.26901839 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.274628604 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.275414209 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.27658972 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.272851706 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.300983145 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.271396043 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.272835271 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.619743235 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.284265836 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.27213105 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.273038389 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.271404416 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.303229543 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.272418252 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.275365395 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.367685726 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.274239649 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.3412174 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.65637646 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.668219192 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.274595678 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.266403295 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.272003527 seconds)
  done (took 100.485827706 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.341267855 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.351801522 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.385779187 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.276404157 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.327473117 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.390930824 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.278171062 seconds)
  done (took 10.534183724 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.280158153 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.27547642 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.324545941 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.325932371 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.275716061 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.490538338 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.276491665 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.286359535 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.273063257 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.351553452 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.277436441 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.277791752 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.282220117 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.272648679 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.323740705 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.288204705 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.393322571 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.277326489 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.277820469 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.429751377 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.275725564 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.284532548 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.35041279 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.290472433 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.277418186 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.282827433 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.238023382 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.27736084 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.275551686 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.27695021 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.274631244 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.386332579 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.277664155 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.274424887 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.274083967 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.436273626 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.277805806 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.275956691 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.278756696 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.278709031 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.278220354 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.278233536 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.277835621 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.275006863 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.278716202 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.302484774 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.27882874 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.278591713 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.277871349 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.281006338 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.351797286 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.280698722 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.277186613 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.275614187 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.356834837 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.285698558 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.279668926 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.275943093 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.279027186 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.276222587 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.432980513 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.327923145 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.280275358 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.327329419 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.280950068 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.279544463 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.279421854 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.280545765 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.372196223 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.279541269 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.328609981 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.27834894 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.504730175 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.304489984 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.281413754 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.283351937 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.28271888 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.279690482 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.277510085 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.285852599 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.277403522 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.282284031 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.287222919 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.279309869 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.277942036 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.466196819 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.437626397 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.27732266 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.293236186 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.288221649 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.279414108 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.354207045 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.281304281 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.278294615 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.333837449 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.396996459 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.35923409 seconds)
  done (took 132.752418786 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.286027342 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.289920362 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.285903086 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.303801724 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.283519094 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.281099048 seconds)
  done (took 8.916600812 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.284602158 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.283720962 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.281917589 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.281597334 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.281722028 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.282965229 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.282597622 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.284415262 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.285766239 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.282712738 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.282683236 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.284366244 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.284763556 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.28299834 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.283029529 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.283405042 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.283380559 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.280967488 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.283549367 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.283057195 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.281163278 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.283091671 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.285593092 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.285034565 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.287446353 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.285193417 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.293014708 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.284554612 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.285020748 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.291776443 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.303106025 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.285898335 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.286939857 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.290481079 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.288251083 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.286499715 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.288491863 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.285632121 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.282176652 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.284793511 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.287435679 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.285327077 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.285347531 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.287148256 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.287037335 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.290398455 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.289268792 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.295313478 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.28665483 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.288160323 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.287537441 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.287542185 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.286725429 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.288890351 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.28901235 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.306489229 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.291268055 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.286736622 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.286799244 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.287873777 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.286120961 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.285754326 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.287831255 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.289703102 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.284285488 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.286579901 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.289719341 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.291016198 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.286480481 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.286258703 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.287974536 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.284916805 seconds)
  done (took 94.826754219 seconds)
done (took 348.694021345 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.725454982 seconds)
  done (took 3.917662837 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.379431413 seconds)
  done (took 3.573707536 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.122119615 seconds)
  done (took 22.324777858 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.330512952 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.298016104 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.291444609 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.286253275 seconds)
  done (took 10.399382688 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.541566807 seconds)
  done (took 3.735120204 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.29204031 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.286349676 seconds)
  done (took 5.774678498 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.567397074 seconds)
  done (took 3.762341919 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.636651459 seconds)
  done (took 3.837754453 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.281011782 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.297798647 seconds)
  done (took 5.782021995 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.277287003 seconds)
  done (took 3.472777785 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.087179887 seconds)
  done (took 16.283464454 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.286391083 seconds)
  done (took 3.483924735 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.315794607 seconds)
  done (took 3.511616309 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.812034849 seconds)
  done (took 6.008751747 seconds)
done (took 97.061131833 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.282175429 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.2846579 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.281739014 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.282934587 seconds)
  done (took 10.327794616 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.342143649 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.342955645 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.347415839 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.342987861 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.343377894 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.343285976 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.332601723 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.316320326 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.343039476 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.344640625 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.342285687 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.3438338 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.342512195 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.317808164 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.34364684 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.344816669 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.343377459 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.343456072 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.31652372 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.343211206 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.292148979 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.343658081 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.343833807 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.291640973 seconds)
  done (took 33.248236613 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.810717287 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.362410372 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.444847269 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.342967021 seconds)
  done (took 7.157835523 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.368936132 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.368719362 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.382617988 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.420459319 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.432610496 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.382426913 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.319221384 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.314321796 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.300284612 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.369971853 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.426770881 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.361289868 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.452297439 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.292437901 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.499116021 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.2928829 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.292505741 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.370171586 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.422196767 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.434509337 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.293448689 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.370264426 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.371778606 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.362506221 seconds)
  done (took 34.100345542 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.301764247 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.305595624 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.29206364 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.310765105 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.291934838 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.292207464 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.294640341 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.298210077 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.292354852 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.2917522 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.292224514 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.30691126 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.295223936 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.291281657 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.298635918 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.292923171 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.299002294 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.297185171 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.294028997 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.300408673 seconds)
  done (took 27.137831668 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.28719396 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.286315105 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.639291185 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.543517167 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.289793549 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.29333273 seconds)
  done (took 13.538896899 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.362358172 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.525389778 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.300345062 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.644079062 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.726862833 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.30242168 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.296231216 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.539444981 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.854232788 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.83139016 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.355250864 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.367722167 seconds)
  done (took 19.305168566 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.287893159 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.29510585 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.308042768 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.31063026 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.349557311 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.301798534 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.305012937 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.288620365 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.353672689 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.353677498 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.300565413 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.349940989 seconds)
  done (took 21.005306419 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406487036 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.290227072 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.290508156 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360126402 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291429867 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.133787568 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369184591 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.985812591 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.311958308 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560863022 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292298779 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407993515 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.544064748 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296615799 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.293752528 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.273212586 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.519176135 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774982804 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291126453 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295743734 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327400916 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.299842312 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.297031531 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.506152214 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.289574545 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288743746 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.549882771 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.288874169 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58066121 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.304340149 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300115472 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.290323631 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.563100082 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938094803 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40782102 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497711057 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297386309 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.291604789 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.277239143 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.304038431 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295202061 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.292483016 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301657404 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289916767 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.29136806 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300483488 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002377303 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.315627487 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.288335843 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.290851891 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.549758419 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38958191 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.293583946 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.290905396 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313398123 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291818015 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.29462523 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384034612 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873238082 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290994416 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30685048 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.29710301 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.293486434 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304370333 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902690459 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.299236224 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.295905485 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.295635084 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291578976 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.302699353 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.313486329 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292855816 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.315841448 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292147485 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000001505 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.294127689 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294982215 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840220524 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302703985 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.297783898 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.52431321 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292885095 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294013251 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.291792732 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.293597816 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99311618 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304576289 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.279047083 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.333545367 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.994548441 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.523263709 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315577413 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326889546 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.518928165 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.279757297 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294396901 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.305846349 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296581919 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317357351 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.998302283 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313968724 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.298769215 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552437366 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.505785694 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298722588 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.279246806 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.764979459 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321257223 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.317431114 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.300904553 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.510999608 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.874984898 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.311789928 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294673338 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332357303 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.29584468 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031757824 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305235908 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.402243075 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.296558543 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.561798345 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.086687783 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297907413 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365137067 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298845755 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.29664971 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310732488 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299371603 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.297405904 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.497884679 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326751692 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.313835048 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.297736846 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297300863 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.295916134 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300581117 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.298593037 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.520902972 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302529727 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577594266 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297915406 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299301068 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29756171 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.520289198 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.304387328 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.640698373 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56207505 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30315773 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.311187916 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.31515301 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317339882 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401404676 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320452365 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.30116726 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.560358544 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.302676391 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.302383589 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298575579 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.317649275 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303541204 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.304584797 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307455152 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881178278 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288344587 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.305307778 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.2982925 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.312258075 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366586818 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.305496871 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.50958167 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.304777641 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30900121 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.325117385 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.309838378 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.529042257 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.31045852 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.299558393 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399312924 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.766191489 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.898473233 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.315516624 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.30003463 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.298206148 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.297424319 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300757654 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300167993 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.29985054 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50998566 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.316509875 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.304959686 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.88897883 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304995565 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.31500738 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.306265272 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.313638772 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.307486934 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301733417 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.298650123 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300744267 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308413086 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.319794609 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446143052 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.316265935 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.302179249 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.820266736 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.307240015 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.303466981 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.301579406 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337235946 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.30287616 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12036985 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.565939007 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319406334 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560357573 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323556173 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.322617581 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.301587279 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302938895 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310617652 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.311874766 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337069903 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.313081074 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.302001666 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326196794 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878544754 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038062568 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842475668 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311359971 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.308936727 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.309461718 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.013754892 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322179844 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302757531 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.536532847 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.013883634 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322936591 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778522054 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.332261921 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.069727126 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562172782 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.544172809 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310061933 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.305937937 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568589517 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.524897921 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338870454 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.309734317 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311260117 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.290637894 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85498903 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333220465 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386985515 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015066584 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323575789 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312105273 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.346773244 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.320639931 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.704064639 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.32418029 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304566281 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.312159903 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.312787842 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106871153 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.312554334 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30460424 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919084237 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.309900758 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.781477837 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324443913 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.51798861 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.323794421 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.31146536 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.303075981 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.327373018 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.565311758 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563731382 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314469192 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.319057799 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849431885 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.176597315 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.312454065 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306381478 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045163306 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310065088 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59750795 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.317921814 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.31502582 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314507635 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307488945 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307831565 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.304431829 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.313469541 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284112832 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80109319 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.318233406 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315030172 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314086616 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314209258 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.563515542 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.322080857 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.893556574 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538901712 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313351527 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33417917 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.311721144 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312772052 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.302133658 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.309633058 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.309744797 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316929491 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.533364936 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.318193209 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.295772536 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310882303 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.521030716 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.308554416 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.314026759 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550415968 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.314470814 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.31216762 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044761687 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348361419 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.312434372 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311335067 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.311631424 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.334423175 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380142852 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.522088657 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.328291234 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.321383043 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.708577688 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336257908 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317950834 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.325287788 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40900825 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311261139 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.322014833 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.089810522 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901395532 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048405108 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.903874886 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577517039 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.319767617 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320828163 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312570559 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475832917 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312071115 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.58560296 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311692646 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.31615336 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341693312 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316285544 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322142468 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.530797958 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588261976 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312809641 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312775869 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317823813 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.313132595 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.323203111 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.525121218 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806574912 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869238293 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315389274 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.315586917 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.030823825 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606564038 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314162516 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314018608 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313413134 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.319532317 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.338467492 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.320908695 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327529258 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463649926 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.571477202 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976705403 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.343961891 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.342099819 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.087954138 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314231859 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.574651856 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312082064 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.533604136 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912639759 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.021576455 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586914511 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386958917 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.527413416 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.318366332 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478112108 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.314357086 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.321597672 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316444951 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315910779 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.313064608 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.325688785 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907734861 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582012527 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.320433656 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.313786857 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351671364 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.327540907 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.539365284 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033309282 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.540299325 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.325179163 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322612543 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.316508351 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907785949 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577230131 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324048949 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.319966368 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5552385 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322891396 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339748889 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.83426259 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.315329945 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869674211 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.289996945 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340291569 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316692718 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.032202351 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916274799 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.331020159 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820185587 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320359041 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320331434 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597037396 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.323999852 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.318775964 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616154507 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.323017991 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.320381063 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537744785 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.909423198 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.084355487 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.33007447 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32532505 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.325826672 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320130501 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33942396 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319949983 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318938928 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.733689115 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343929209 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32059431 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332591857 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.324833053 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324807028 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.32377629 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319814335 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.325650303 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.317750163 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.310399821 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.32721466 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419406533 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87694258 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340150383 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.992848744 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.652485788 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.575247513 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32082305 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.312986204 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.324147829 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321787105 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319697388 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321922099 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.324523629 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876200413 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.323375937 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.33620283 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.326152675 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.321878219 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533806174 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.332400316 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.53619503 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327635132 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361714894 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.307693587 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32153471 seconds)
  done (took 943.46072771 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.353127576 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.351650877 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.367966163 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.347201559 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.372241854 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.435332656 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.407139514 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.339678425 seconds)
  done (took 20.205546412 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.335520371 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.336021402 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.330783399 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.337158569 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.331277367 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.796640861 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.351347754 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.3335708 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.33936508 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.322812848 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.332551668 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.321107487 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.339239421 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.330061258 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.321903586 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.334430326 seconds)
  done (took 32.033929271 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.252116623 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.455036185 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.177101106 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.356953387 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.371096204 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.324122606 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.539777129 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.343450785 seconds)
  done (took 26.052958727 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.334969603 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.335622946 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.333921645 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.335366648 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.336656457 seconds)
  done (took 7.909539742 seconds)
done (took 1196.680513664 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.328860834 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.332499946 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.328764008 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.33016992 seconds)
  done (took 6.552995466 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.311272855 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.311535793 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.312396275 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.326914163 seconds)
  done (took 9.495313279 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.016921684 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.968694441 seconds)
  done (took 5.218422195 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.814193585 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.807644026 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.810035577 seconds)
  done (took 6.666126821 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.620959087 seconds)
  done (took 2.856480088 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.221789009 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.208171445 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.001164589 seconds)
  done (took 7.665894056 seconds)
done (took 39.688390338 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.334940021 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.576763924 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.485222809 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.336311267 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.487098887 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.48517398 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.062364334 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.327169165 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.339960313 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.332085872 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.337280218 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.489548808 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.042886507 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.575698621 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.044770363 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.57641198 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.492053587 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.326908258 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.327850641 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.344107136 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.077604818 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.340631739 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.333388058 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.327131802 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.504897084 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.472468054 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.339469677 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.576218867 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.328330022 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.32880927 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.473042299 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.328380654 seconds)
  done (took 80.991302212 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.328673772 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.350129252 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.340821408 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.330026911 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.358604428 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.345218004 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.329657936 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.32868932 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.328724057 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.342002629 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.342551433 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.334448734 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.328997227 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.329571392 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.34836063 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.328336022 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.329906644 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.329336464 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.330687412 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.329730675 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.331845412 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.327658553 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.330371071 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.329398765 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.329772047 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.330670012 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.348112563 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.334074297 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.329319033 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.332203697 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.331159414 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.362876615 seconds)
  done (took 75.969336618 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.336850126 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.34157887 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.331700412 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.330617838 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.330397288 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.348969286 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.331468315 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.342027867 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.336911599 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.334671777 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.330696322 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.330210721 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.350323905 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.330379679 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.331304184 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.338424928 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.331780355 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.345863547 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.337488439 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.331321367 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.347068587 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.331935172 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.356676684 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.332545917 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.331439437 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.331426404 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.343017153 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.330836367 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.351087238 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.361196406 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.334164074 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.332917077 seconds)
  done (took 76.047475613 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.612924395 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.340594838 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.340052851 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.333896274 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.339954959 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.341032028 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.334515249 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.613494304 seconds)
  done (took 14.497070854 seconds)
done (took 248.740750444 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.332985584 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.336441664 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.54422743 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.361704838 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.332990149 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.366686557 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.362182478 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.558351532 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.311763981 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.581617326 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.355537637 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.364557877 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.332259676 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.362919985 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.612674933 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.492238864 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.254027782 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.354708218 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.683399337 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.360163568 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.620064719 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.340135069 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.611309619 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.293361821 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.362829726 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.340324148 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.33997618 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.245251932 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.382775637 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.686468937 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.351999636 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.327528554 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.443442219 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.440362273 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.551354465 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.498298692 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.336392866 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.425774778 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.566247762 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.348217134 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.340753654 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.112981728 seconds)
  done (took 81.469626274 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.343468038 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.457632686 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.342579426 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.343347095 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.342906163 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.461161264 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.440329094 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.343702944 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.344378523 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.346484992 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.345065318 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.347431448 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.349003543 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.346059188 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.345051389 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.343335786 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.34261535 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.345957578 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.345180205 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.388816036 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.465249299 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.367535531 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.336867257 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.343551002 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.45031257 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.478917428 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.344640175 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.337375167 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.387386479 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.34500682 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.34752413 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.389890472 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.345150812 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.346977248 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.459382436 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.44624821 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.365951549 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.340760273 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.458307364 seconds)
  done (took 54.867613757 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.345173545 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.592561824 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.779347705 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.357526316 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.346845676 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.350358587 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.423253428 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.353654567 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.349434078 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.351302372 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.515657432 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.356734036 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.381750015 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.814421999 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.3555458 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.348468724 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.354046641 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.34897368 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.606826004 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.363079398 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.445369796 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.354055594 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.425226675 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.364244295 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.370819768 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.349680359 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.352979885 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.935068698 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.354891296 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.518683639 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.134198529 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.427318212 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.884749359 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.793749393 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.14203211 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.355803011 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.351085737 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.522754599 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.351846409 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.349167949 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.45532845 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.353631239 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.786898022 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.009017453 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.368616228 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.349046749 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.959702489 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.525024019 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.594244181 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.362804023 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.812452787 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.358289419 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.351362226 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.351673261 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.590652915 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.356581928 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.350922207 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.963442613 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.37596533 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.426765502 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.350826746 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.350490113 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.602476317 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.35086939 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.596384155 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.352818801 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.357972248 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.370338573 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.795791756 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.358478943 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.041984858 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.368080285 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.351258274 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.524103351 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.598842395 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.997131231 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.373758102 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.612081333 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.89225496 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.42574103 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.356136472 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.929172112 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.431463182 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.355096213 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.354859489 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.355270896 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.353746167 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.45846406 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.42670592 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.981404195 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.032094003 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.978145904 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.4483729 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.361550852 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.354621235 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.96232698 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.370448704 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.352141508 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.784808513 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.029448021 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.370639954 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.36069384 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.037699225 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.372521331 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.432079684 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.359932753 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.804121814 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.36017495 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.400805113 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.353568142 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.361079818 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.37684798 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.431186794 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.357546622 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.353606293 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.020742097 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.552741328 seconds)
  done (took 179.087312236 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.347826004 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.347388345 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.347248719 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.363704216 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.346685287 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.355583419 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.348032849 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.346880944 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.353390755 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.347699767 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.347662204 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.35247708 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.34899696 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.357781736 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.360320709 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.356305177 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.348419281 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.351010083 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.349352329 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.349498188 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.350490819 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.354096855 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.34939471 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.350054796 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.350620045 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.349434313 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.359321566 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.353393302 seconds)
  done (took 63.097971964 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.356912539 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.910039866 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.357360774 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.486450343 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.378340849 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.354849397 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.48378974 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.41324591 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.364666649 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.3541552 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.354584204 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.656969265 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.364039199 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.866865378 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.55129136 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.484251457 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.867203751 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.380748493 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.354933862 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.355111785 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.488287099 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.368022942 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.657024953 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.92305223 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.363770541 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.914595669 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.353310233 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.356966928 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.357506771 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.915643776 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.355368814 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.655167646 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.432577438 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.422358406 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.926609822 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.875190383 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.890288201 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.506233508 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.357456177 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.357704505 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.35698716 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.34775953 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.922785113 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.363651872 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.36011219 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.916853355 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.382597809 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.360073594 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.365038508 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.358187884 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.419713554 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.423558851 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.67033678 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.001209789 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.439342233 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.373623167 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.489619638 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.691039353 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.368098334 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.872307871 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.371090955 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.924438297 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.385428271 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.350234472 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.360037447 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.365724078 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.505729159 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.488301888 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.871192444 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.384239949 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.866016463 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.523722663 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.362870531 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.358902651 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.362965633 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.925803912 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.877959153 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.529290329 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.498414117 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.557603404 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.356886762 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.360132295 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.352300423 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.436034251 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.358826454 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.928127383 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.897318555 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.384953581 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.363809544 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.363192114 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.3622453 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.535884574 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.951229117 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.443240754 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.870816879 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.687982278 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.672707584 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.368047274 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.420204268 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.383476647 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.729841283 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.368605812 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.418988147 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.753005302 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.675909998 seconds)
  done (took 162.230439759 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.613989527 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.379070889 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.453730786 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.517796609 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.983871125 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.961837265 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.362770401 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.479589595 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.476180914 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.631110862 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.363582709 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.451983337 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.575206896 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.439355079 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.083146824 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.443414737 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.460686361 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.512740421 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.5088169 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.362088952 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.020785778 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.655476202 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.558886333 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.385270574 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.463966958 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.166524189 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.949010519 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.92872748 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.548376652 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.375846762 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.883423708 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.379234913 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.300485893 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.035920192 seconds)
  done (took 63.975033902 seconds)
done (took 605.968718713 seconds)
SAVING RESULT...
DONE!
