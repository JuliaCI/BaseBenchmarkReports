cset: moving following pidspec: 13336
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.938141512 seconds)
loading group "string"... done (took 0.540992766 seconds)
loading group "linalg"... done (took 8.832775233 seconds)
loading group "parallel"... done (took 0.16992547 seconds)
loading group "find"... done (took 1.43862942 seconds)
loading group "tuple"... done (took 2.091524013 seconds)
loading group "dates"... done (took 1.364231801 seconds)
loading group "micro"... done (took 0.218542897 seconds)
loading group "io"... done (took 0.63556792 seconds)
loading group "scalar"... done (took 42.713818165 seconds)
loading group "sparse"... done (took 13.226625132 seconds)
loading group "broadcast"... done (took 1.095003023 seconds)
loading group "union"... done (took 15.101064366 seconds)
loading group "simd"... done (took 4.966419987 seconds)
loading group "random"... done (took 9.967251648 seconds)
loading group "problem"... done (took 2.143496713 seconds)
loading group "array"... done (took 25.415047329 seconds)
loading group "misc"... done (took 1.080689266 seconds)
loading group "sort"... done (took 3.60853861 seconds)
loading group "collection"... done (took 21.480543902 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.663030846 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145317374 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.157832268 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.205833651 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.216046491 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157138886 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.172857153 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.567618809 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.061111757 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.220616387 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151593985 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.553367857 seconds)
done (took 6.025489081 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.247124674 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.444383304 seconds)
    (2/2) benchmarking "String"...
    done (took 0.117154166 seconds)
  done (took 1.240584475 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.100112747 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.187633182 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.10135148 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.12003193 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.119333588 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.118392197 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.118779691 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.102748182 seconds)
  done (took 1.552934197 seconds)
done (took 3.829979523 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.487640587 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.857123823 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.543333972 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.141179623 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.163951907 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.15228999 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.318227191 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.171867216 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.128872296 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.123824013 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.180039132 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.394878315 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.501558676 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.02068685 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.129343866 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.143195097 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.091424729 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.760884127 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.087614203 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.142188522 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.53339143 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.117744463 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.124291431 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.146348131 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.208221864 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124369023 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.18447515 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.118768139 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.693076506 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.107390566 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.19017201 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.106074434 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.176521601 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.260256768 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.101712661 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.099117519 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.701568432 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.195868461 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.11915243 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.110458826 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.705093885 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.086725385 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.194303514 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.117780867 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.114995151 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.195409223 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.121701658 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.10238719 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092139294 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.111246368 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.170544395 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.462520788 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.118222668 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.14961038 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.116196209 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.71020149 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.103181225 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.162568261 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.148352009 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.099507846 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.103859176 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.120691651 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.165120094 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.116669203 seconds)
  done (took 20.337016671 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.125603593 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.148949669 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.103306494 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.148310546 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.149438967 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.107078584 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.090549019 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.10434236 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.134336209 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.196146551 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.144867958 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152099444 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083093736 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.10466521 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.109089909 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.258819144 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.131445941 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.130513569 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090120505 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.115002461 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.132978462 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.121419629 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.117112883 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.10153163 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.196060738 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.215138483 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.117512676 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.131231319 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.102561188 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.122622383 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.136431926 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.170525689 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.099522101 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08618185 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.191582298 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.130588985 seconds)
  done (took 5.505515932 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.21001689 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12636096 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.204102398 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.190874268 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.174131346 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.15676005 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.19123355 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124158567 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25950752 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.272492943 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.188499459 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139206712 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105283869 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103932476 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.088775315 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.103676071 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.691988833 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.141779048 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.196364287 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.112834846 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111202046 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.104013443 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.408929615 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090816739 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.103047573 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090238736 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.095562015 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.181703747 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108271399 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.297382157 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124171183 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.095582674 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139912511 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.213796903 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.121061989 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.147224089 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109409628 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.087260881 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.240328386 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.087056079 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116335702 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082529421 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.132644622 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13961017 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.1390299 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.105424479 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.099677446 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.246255247 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088418132 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125944239 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.079368131 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.206716698 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.103546313 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.107242309 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.358220415 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.124407979 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108804506 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.087445675 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.294667772 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138727088 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.089222163 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.103432725 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093653301 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.103989011 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.411021112 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116294169 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.99439148 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.089524647 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.166023114 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109412033 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.115186144 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109698677 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095342338 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.128797889 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.088750951 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.104538671 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087276351 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.103598985 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.091680362 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.124166104 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107786936 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.086820772 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171064925 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.127123004 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.108954195 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.135222105 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.10965404 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08669543 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.107961895 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135627165 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086689102 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.104955646 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133943586 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.111142442 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120937465 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106168523 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.147809627 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.087024835 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.191069904 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.088199368 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.106087357 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.11589525 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.110339379 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.137165133 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.132130251 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103729813 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089972396 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.101740689 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.085782865 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.169505661 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.086464436 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.103111274 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.087559448 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.117347405 seconds)
  done (took 24.686615967 seconds)
done (took 51.212692589 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.482229958 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10458197 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.12610402 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.125749391 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.121980445 seconds)
  done (took 1.725170435 seconds)
done (took 2.463065441 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.363019554 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.181629977 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.106992929 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.203581369 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.109761599 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.193061247 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.171474081 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.124080326 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.201790367 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.1075995 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.185522797 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108443409 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.112447405 seconds)
  done (took 2.938030978 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103117794 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.127272498 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088020487 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119350137 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082061747 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118146606 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098716083 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.150535217 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113540933 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093482263 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.099636763 seconds)
  done (took 1.926547457 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098363647 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121940661 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087949336 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115597642 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082902221 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114500959 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097728998 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.125741152 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096153927 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111642686 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082140819 seconds)
  done (took 1.87029509 seconds)
done (took 7.463215854 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.055120776 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.410463558 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.124111199 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.170736029 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.343851974 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.215585634 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.530509374 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.137065424 seconds)
  done (took 11.91177452 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.119849364 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.124842759 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.107892945 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.090311316 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.109028325 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08693891 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.10685795 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086859877 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.104890126 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088084799 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.105985161 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.088006804 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.107864773 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089327017 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.107636931 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087183086 seconds)
  done (took 2.410282589 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.124304994 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.123462201 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.112743185 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.117042978 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091068306 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.111967696 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.094436169 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.111501995 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.107691782 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.092104874 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.116658725 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.114065889 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096805813 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.107398261 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.094361119 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117009856 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.10744029 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.094797832 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.112738097 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.094672309 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.11599018 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.109061365 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.095134526 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.115596906 seconds)
  done (took 3.432387743 seconds)
done (took 18.491854183 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.179333892 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109862832 seconds)
  done (took 1.030862173 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.109250826 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.127326566 seconds)
  done (took 0.983837842 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115079552 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.105954332 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.144346551 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.121919072 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089251478 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106356037 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.138206425 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.089554028 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.106672051 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.089176523 seconds)
  done (took 1.855738521 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093555663 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109378193 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.096730006 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.126718199 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118557659 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.089943724 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.111563077 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091926594 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113591361 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.087009646 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.113903114 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.125266853 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.113472529 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.108777955 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.112385296 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.111695254 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.098205705 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.110903009 seconds)
  done (took 2.686078492 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089272589 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.107195969 seconds)
  done (took 0.94532662 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.090875682 seconds)
    (2/7) benchmarking "second"...
    done (took 0.10410189 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090182307 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10829376 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.086843071 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.105360065 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.086733944 seconds)
  done (took 1.420759215 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.534206683 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.245068336 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.350329658 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.124542983 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.266783555 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.373948547 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.143830892 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.121634261 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.122270324 seconds)
  done (took 3.07466244 seconds)
done (took 12.745470023 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.100046779 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.203285776 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.554195303 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.126692729 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.085447139 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.172500325 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.270643024 seconds)
done (took 2.267855506 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.36752322 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.133071018 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.097423002 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.086742356 seconds)
  done (took 1.434019546 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.087784805 seconds)
    (2/2) benchmarking "read"...
    done (took 0.112301796 seconds)
  done (took 0.958661905 seconds)
done (took 3.155956282 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08800114 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.085689578 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.123479047 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.104305095 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085576754 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.104003957 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.083107115 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.103803521 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086362474 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.10414262 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.086487165 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.100504422 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.086459722 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.103850328 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085839433 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100807343 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083708907 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08620903 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.102097561 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083467078 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102460806 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086027791 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.101829531 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083152842 seconds)
  done (took 3.073146767 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108111527 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.106229707 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.091694683 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.11167882 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.109685993 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.092340283 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.110116431 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.086712909 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.111528932 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.10666302 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09152464 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.108597451 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.088591444 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.109370918 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08917725 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.109943823 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.110969174 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08770354 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107785765 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091084145 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.110261323 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104616362 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.091093926 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110488597 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.090613735 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108730605 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.106616647 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.087831764 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110173759 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091264751 seconds)
  done (took 3.803220914 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.095589664 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.101490165 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.085221746 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114284545 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084691428 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.106514038 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.084906409 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.103574875 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.086328504 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.083207361 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.105484819 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.08406072 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.104223676 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.085206193 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.105440229 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091163368 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.122198577 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.10293908 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084651168 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.102792177 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.090377219 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.102603976 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.087020084 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.101772068 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.084545239 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.082837479 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.104559676 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.084144548 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.104151423 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.086934376 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.108781679 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.090893759 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.103640339 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097475 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.110402211 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.083458188 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.111849626 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.102122283 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.086213348 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.083263745 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.103917321 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.083788053 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.104151091 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.096641662 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.106963015 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085011394 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.104213836 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.085601329 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.104859848 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.087492325 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.103314967 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.083917868 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.104719741 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.085332572 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.109368419 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.083608308 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.104821749 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084407606 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.104053719 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.08405328 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.10365136 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.084214461 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.110350376 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.085820028 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.127680807 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.113986849 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085236103 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.104682245 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.088793843 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.111046464 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.086623056 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.121929028 seconds)
  done (took 7.74280652 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089953563 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114471553 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086849086 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.106028569 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082849578 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.104317418 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.092533942 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104343097 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086425358 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122374578 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085022904 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105909906 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104729704 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089422741 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103269023 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087383753 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11460362 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082853254 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.103954125 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089206529 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104851306 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09163287 seconds)
  done (took 2.922884812 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.233010381 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113919704 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.153938581 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.125998655 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.123136766 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103291451 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110632691 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094480906 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112082578 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113809204 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096093979 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111337573 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123585862 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095624714 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113531115 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115144992 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092309239 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.115422961 seconds)
  done (took 2.921411383 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101230966 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.107273372 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.113061186 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.108184596 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087928423 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.110336869 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11225158 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.104084068 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109441191 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.088044437 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.117729595 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109668333 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.090811922 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106834888 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089925372 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10755849 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.090364104 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106968423 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117169924 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095381653 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.11312103 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117957998 seconds)
  done (took 3.078177134 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104860634 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109326732 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.137375675 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091504444 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.103079922 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08678678 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.115229748 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.088554727 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.116114459 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.089955193 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108886248 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086607761 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.114925339 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106229734 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.094299206 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107439672 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.090182179 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106801686 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090321842 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103098223 seconds)
  done (took 2.8281862 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131445992 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124676743 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.123648285 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116334164 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123465961 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104438713 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135248154 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.123738483 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104519164 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137083213 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.1246341 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105010284 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136157978 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130950766 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105241222 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136190868 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134735757 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135304222 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106053727 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125175088 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136875711 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104563168 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134775766 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124699909 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107376903 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123873985 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105685085 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13184573 seconds)
  done (took 4.213653529 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088232193 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088211134 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.105998173 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.084945758 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.105978093 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.085583136 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.10500038 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.085044138 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106896221 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085560204 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107087804 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088019957 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107005161 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.087723078 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106430588 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.088588638 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10670065 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.086032968 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104077955 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086899742 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088018002 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107979158 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.088488393 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106453214 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08667934 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.107702013 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086241632 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105293348 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08853713 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105128926 seconds)
  done (took 3.664261366 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.097353008 seconds)
    (2/2) benchmarking "in"...
    done (took 0.11418854 seconds)
  done (took 0.994755501 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.087012683 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124732744 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08566356 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112023464 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094802995 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.109305267 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117664514 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094847825 seconds)
  done (took 1.611346964 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.113701241 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.128970162 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094938445 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.121125007 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.127343412 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.108289927 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.177340567 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.114541317 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.097270255 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.110385778 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.108625422 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.108679917 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.098832728 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.116083116 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.117779728 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105078577 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.106644184 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.099607463 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.117602486 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.091262872 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11504866 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.124483617 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101178716 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.117264581 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.092140588 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.121505856 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.122780484 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.100972639 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114080431 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.102206204 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.11699582 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.082712766 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.114229351 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094885176 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.107080831 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108466257 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.128220107 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114384315 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.099535163 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11523125 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099088215 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.10593103 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.119694305 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.096944663 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.121809391 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.095603689 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.115441875 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.085379478 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.110062928 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.093638251 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.104835267 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092805295 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.103879214 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099370894 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.119744479 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.128929827 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.092574701 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.114818274 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.095045636 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.113400036 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.096737174 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.115076407 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.119586421 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.093068172 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11954914 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.099386988 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.119450684 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.084417273 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.104347705 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08672368 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.119945762 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.133922888 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.101831092 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.115701898 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094824166 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.108026372 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115494837 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096634714 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.117953391 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.101463559 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.114404176 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097796822 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120636926 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112652019 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.094427002 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.116788876 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.092672553 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.112966814 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.091233281 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.131060003 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.092099388 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.108621131 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.090646506 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.121355135 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.114188549 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.093718779 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.110223678 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100313873 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.103195167 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.096065653 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115558598 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097070613 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.122519407 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11513141 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096751752 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.118818913 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.10261372 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.115608751 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.093669798 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.106898523 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095700353 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.111578579 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.097852891 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.103484329 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095747558 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.115006512 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.114845525 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.10155364 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.11140557 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.094998813 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121323113 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.101959052 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.113196123 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.086257768 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.115474909 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.11379374 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100237593 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.122270675 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102185286 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.105910365 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.084930258 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.117280987 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09431888 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.115523184 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11485142 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106124371 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.103316129 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.089243496 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.114453274 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.101148533 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.11388622 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.097277536 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.120747057 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.116754084 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.094385683 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.119892885 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.093521045 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.109839835 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.100166802 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.114592824 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.084892814 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120343508 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.114050295 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.092903904 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.115202253 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100161119 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.114519809 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.09637424 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113008738 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.095673706 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116729134 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.089578028 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.115559651 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09228472 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.12403745 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.114025502 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.086292822 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.106304053 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097650083 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.111296755 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.094953058 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.110333293 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.096252057 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.116174907 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.088762158 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.114198669 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.094039853 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.128339644 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123674977 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097111807 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.118148177 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.102053523 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.11493378 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.098113323 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.114482062 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095846429 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.116283692 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.118655922 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.098784698 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114825274 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.095486585 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.106752655 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095897949 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117470813 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087498419 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.107150365 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.088449897 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.113623432 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.102180736 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.11671519 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.115803961 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093111135 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117340405 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10043588 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.115565734 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.094775745 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.111257858 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.095366336 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.119951426 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.096834506 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118367822 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.12248222 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09721669 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.10601381 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10016788 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113900293 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.099638667 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.106424915 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.091690737 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.111744683 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.096775233 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.11455052 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.094276947 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.104949654 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100475048 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.123312548 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.115710015 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.092005706 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.115577286 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105228835 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.114840313 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098421392 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.116999223 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.119279767 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111267889 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.111573221 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.095907932 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.124381894 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.095188143 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.106357989 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.11876734 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.094128474 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.109811874 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.094515043 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.112284568 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097876716 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118036021 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.097858017 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.104720048 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.095414901 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.113442375 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.092111934 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.106885007 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.101484004 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.117085878 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.095358312 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.126634955 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117045843 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.097238915 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117587096 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.096060808 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.117759179 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.096925331 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121097124 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.116847039 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.095713807 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.111396478 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.097193672 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.11081364 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.089892928 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.114414463 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.097193761 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.116986677 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098259638 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.115814283 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101400837 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.117645236 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.116701109 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.134367588 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.093456547 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.111407213 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097698049 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118965843 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.095711427 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.115933029 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.087165231 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121650352 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.095511572 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.123147696 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.094544293 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.109192594 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.095978368 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.116222967 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.117290729 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.09776489 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.117361317 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.095257075 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.115905519 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.096128397 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.125876437 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.092310487 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.124838326 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.118881649 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098371277 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.117116937 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.097572979 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.115964243 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.091702468 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.116660148 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.097647375 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.11916635 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.116101237 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.099241762 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.11704575 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09543843 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.115449038 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.098279598 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.117248561 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098488661 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.107133932 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.091488537 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.112618313 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.096241469 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.122391083 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.117842764 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.095065301 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.114374629 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098827575 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.115032469 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.089135824 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.121108363 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099025165 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.115387173 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.105098246 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.11232459 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.093139819 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124070624 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.10185597 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.09115361 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.10619193 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089944145 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.119134257 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.094205362 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.117976017 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093391333 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.109123009 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.086428897 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.114289774 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.090722178 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.103531484 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085668207 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116411499 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.109819706 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091422908 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.112773642 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096247898 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113216539 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097050199 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.11185408 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092764135 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.114795852 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.087340298 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.113488434 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.090239389 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.116849059 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.117699283 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.094420844 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.106464949 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.096219715 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.114350654 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.094492781 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.112237981 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.093415793 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.121056681 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095236373 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.117374271 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101372979 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.108481698 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.096504854 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.118792547 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.116768185 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.093297284 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.118136076 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099354539 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119012589 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.101481823 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.117651428 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100208395 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118701562 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.0904772 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.1191404 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.096043783 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.119617418 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.11184556 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.099585371 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.123639896 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.091132311 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.117866618 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0977144 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.115044315 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.097639744 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.118795948 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.096346868 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122479729 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.113574156 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.096828404 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.118054947 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.097219974 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116485491 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098497064 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.117221977 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10089955 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.1151003 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.123975401 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.0989956 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.118442377 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.095342353 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.114263981 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096327156 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.116412695 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095599911 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.123813296 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.098090751 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.11453076 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.09220646 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.113875551 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.117211949 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103351806 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.124353509 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.09713175 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.119590757 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.088368867 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.110503548 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098541422 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.114736965 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.095976477 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.122402241 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.121849337 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.09853315 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.114620943 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.096281438 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.12347018 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101427392 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.121669367 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.093368382 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.122848041 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.115037058 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094044481 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.11044548 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093580486 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115108044 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.099597415 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.11577149 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.093249359 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.127539236 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.122235044 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09942863 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.117026162 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.100246695 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.117941232 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.087792421 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.119751555 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.097187365 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.123430031 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.11807852 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098214208 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.129217103 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.092819221 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.11742964 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101862138 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118787778 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.124309485 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.089364178 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.118923269 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099715179 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.12025594 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.089237466 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.114543841 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.094222509 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.118956437 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.093793578 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.10958229 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107983315 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.125535402 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.118478189 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096756789 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.116388462 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.089400952 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.109254572 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.093736743 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119914472 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.097690316 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.127694929 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.093117405 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.114664393 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.088701968 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11860601 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097629128 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.122014715 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.087557435 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.111291693 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092643146 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.120849492 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.124320353 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095794278 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.118625894 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098470662 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.116029405 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.091704527 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12425098 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.089478115 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.121365143 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.130169308 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.099295343 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.122528795 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.100988352 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.126622114 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.120116473 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.089899335 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.120573009 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.099355826 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.119310329 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.099628733 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.12087763 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.134057567 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099929789 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.115431263 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.096968824 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.117062781 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.094880595 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.126699574 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099640462 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.121002245 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.100335948 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.118911875 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100151195 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.127400705 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.121744915 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.098815114 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.120795107 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.096062648 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.120004856 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.095272902 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.118473136 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.099752552 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.12241443 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117904046 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.101267976 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.114446364 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109180822 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.126528479 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.100352856 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.112879167 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.092962352 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.115821817 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.089052818 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.121526153 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.090757973 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.11867777 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.094986214 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.119266146 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.09819866 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.123085766 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.117880299 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.100031075 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.118746163 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.088098081 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.123013123 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.098510692 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.12284582 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.092752089 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.120028031 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.100002794 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.125274625 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124144426 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.096802452 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.120065857 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.097416635 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122595598 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.089187023 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.123636297 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096762026 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.119429759 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.094019198 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120041121 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.099336742 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.123998531 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12000797 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101294042 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.116370741 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.103998265 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.122694111 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.090964948 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.11267045 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.101979074 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.113717184 seconds)
  done (took 64.965470608 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.163613697 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0967709 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111089248 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090111969 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137184439 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111157046 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090313786 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111643451 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091984115 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125292191 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089640739 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110222802 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.133161441 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139382323 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114846993 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.127015402 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108296564 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09129807 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108437868 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091481835 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13301295 seconds)
  done (took 3.224758411 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116040884 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.130174552 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12745867 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.130782079 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098334112 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.123700673 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.12268659 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103777588 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.129175379 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118644561 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.127161205 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103822268 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.120117558 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11829792 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097840925 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121772374 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.127345969 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116032308 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.104291211 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.122762874 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121236815 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101548515 seconds)
  done (took 3.431614602 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.103560819 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.118031303 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.104540612 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.11289123 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.098775039 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.112923044 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.103142842 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.11527731 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.104140817 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.120241129 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.096450556 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.119834799 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103444179 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.113216684 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.095565957 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.116068463 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.103135212 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.119584836 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.09962745 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.114190993 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.140905633 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.091991893 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.114130953 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.095410553 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.128646696 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.099150817 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.120550005 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.097598809 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.117999617 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.097588498 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.117408853 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.099523434 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.125786456 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.11119014 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092185431 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.113430942 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.094018472 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.108086095 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.090897279 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.1175001 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.089526436 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.114813267 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.101060759 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.111306901 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.089419581 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.116159976 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.093040978 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.108407468 seconds)
  done (took 6.023943443 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.132091294 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164584 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.099275576 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.159349095 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.129772346 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.125003946 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.094467071 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136418654 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.117675454 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.097397106 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.143198564 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.133758775 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.115778088 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.100048724 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.125309346 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.118156218 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.096948873 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.11413494 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.099326853 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.115558132 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.120772811 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.100952325 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.139141419 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130700815 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119610109 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.094286403 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.118376433 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.102166624 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.12772688 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.121446427 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.121267361 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.101806188 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131034533 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.119469394 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102987087 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.121321889 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.131257749 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.095367093 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.121926666 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.09481599 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.118581354 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.120304738 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.098413644 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.131525223 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.116264288 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102308216 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.127336918 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.093629976 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.127410899 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.11768716 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.127986824 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.112059922 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.120802603 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.116596629 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.101413412 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.13251634 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.117122324 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.099873652 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.138040852 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.130233322 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.09289577 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120349432 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.132522264 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.100664652 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.124255422 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.129342041 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.097345506 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.121942676 seconds)
  done (took 9.027192221 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107187738 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.145736303 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13790514 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11628921 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127887585 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.125772691 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100721314 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.120963336 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120382805 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106601998 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121107146 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.170132862 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.115819305 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.1094003 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.127533468 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126735805 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105489433 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127510842 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10433315 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128555017 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.124206741 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110558448 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.122810533 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130604698 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134718165 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.092338194 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121889737 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12070831 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110321562 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122384925 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.133794909 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.120783764 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100343799 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132911541 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13341778 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.099223101 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113072585 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120023501 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.100327304 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.121114922 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0931002 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132543767 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121221088 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.093599249 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121857036 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121190465 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.132650826 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.112305358 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127038589 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127858674 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.099774496 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132105288 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121567266 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.120534536 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110917103 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140755319 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133065749 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132222491 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122174756 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111571014 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132878293 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.140710338 seconds)
  done (took 8.356665873 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096797061 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095248222 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.11820319 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.09306714 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119995821 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093157374 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118793731 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.095183984 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.118000078 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095660729 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117977166 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093692337 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115678308 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096201826 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115285078 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094182806 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116316284 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094487686 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117609337 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09474089 seconds)
  done (took 2.969185876 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.105714683 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.139359853 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.096425926 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.127199846 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.121337929 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104779124 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.121217337 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099293039 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120678939 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099455196 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.132989919 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.131750469 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096726682 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.127241385 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131879444 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10377334 seconds)
  done (took 2.73337655 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118787004 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.133313477 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.14209103 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.100209591 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.113596902 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.099695388 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.116192523 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.086725917 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.112911094 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.123499443 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.099266361 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.124624447 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.091147897 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.111639063 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.093002941 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.120207669 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.087074522 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.117733073 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.09045274 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.139495866 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.121564314 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.096062427 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.118020059 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.09845481 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.122714868 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.126582006 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.099726202 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.112823847 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.092158385 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.114917218 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.097709949 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.12453327 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.112201608 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.101126949 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.114331782 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.095159908 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.118631333 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.098458693 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125442029 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.097199331 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.118837717 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.099484965 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.1194962 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.097926329 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.117923428 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.119683588 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.093721672 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.125122429 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.100101702 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.121239221 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.097871353 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.128545783 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.104542511 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.132693396 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.130103493 seconds)
  done (took 6.993002697 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112324347 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.124511406 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.102278881 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.115878671 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.100958877 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.128678208 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.099614499 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123355816 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.118978181 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091292334 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.115820973 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097444249 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118287618 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099976227 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.120117013 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096612589 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.109587554 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.093656165 seconds)
  done (took 2.847295585 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104274895 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.120166964 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105801949 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.120056017 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.09767012 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.120775589 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094356302 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.118451298 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096050106 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.120320143 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097192099 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.121439461 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095276299 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122532874 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097470098 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120177555 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.099534188 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119601876 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097106707 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1166091 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099193503 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119405067 seconds)
  done (took 3.285459331 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115717704 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.154438853 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.135868746 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.140812598 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.126766145 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.10010995 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.13726574 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.124876361 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.119991134 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.125012783 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.101611787 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.126521919 seconds)
  done (took 2.391643902 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125522255 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.160281513 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117873584 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101292335 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133662457 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102535971 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124990057 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123773062 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112733805 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134836873 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120027532 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131766662 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111434291 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133035488 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128125483 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13311794 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103047677 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126405444 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098826883 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146041996 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125990049 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138623684 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10340822 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126911462 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125902651 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113613173 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134894741 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133632441 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119566599 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109208854 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128203717 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119309533 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131065161 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110213607 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116688228 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131844602 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098502124 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140098525 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12660275 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130320745 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.095091436 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127317053 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130679471 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103685791 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131917725 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120417691 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12698063 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097855334 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119751996 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146598171 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127143856 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108564371 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127947389 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130584502 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131279304 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147586273 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133299898 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107724528 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128607982 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132141596 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130082716 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104577112 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131036256 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132216069 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127851894 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130442979 seconds)
  done (took 9.052622574 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139961266 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12091011 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120417776 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112735237 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132072161 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120294938 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097425534 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120988972 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120123768 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094254939 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166369581 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120362406 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130425008 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131398122 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09860868 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119515109 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097500525 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131967673 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116106839 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147896985 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096725903 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132651086 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131010315 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130578137 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133278516 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104895589 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120499077 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120343329 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097743401 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120816218 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129461939 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103058351 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131571363 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113352913 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107860338 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121202359 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119299687 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104758585 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121044625 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127000688 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130804586 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120112584 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121851983 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119765341 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133679731 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09886252 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120678459 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094670229 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120672085 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116390427 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110989132 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132989247 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133975869 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131456185 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120467242 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098487303 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120611523 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097937017 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121580217 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127275105 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130256175 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098905074 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147158686 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121177638 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098004739 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131898549 seconds)
  done (took 8.798659509 seconds)
done (took 171.710754951 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.11741413 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.154931792 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.107243119 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.179767988 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092214161 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.151903466 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.147929648 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.108457814 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.115076284 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093834675 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.11500338 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097068452 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.1808129 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093532814 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.115145227 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.095889327 seconds)
  done (took 2.855887645 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.196300124 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.297421706 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111235822 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121710289 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.121819766 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.095341227 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119258308 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100084671 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.116555094 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.106276247 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.118701457 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094804661 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129329932 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.117650531 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094772947 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.117852907 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106122051 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.118408821 seconds)
  done (took 3.182999407 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.12563658 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.16406207 seconds)
  done (took 1.191644692 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.136709282 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.19648233 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.556559027 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171905911 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121649579 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137865092 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.171816057 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135739143 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.202541933 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.137546135 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.136679488 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099266055 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146143212 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.126783565 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.102821223 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.122576214 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.148208981 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.101824914 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.124911041 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102591611 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147636187 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.126435552 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.110660978 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.126842666 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.194915627 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137536514 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.099685771 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.123237896 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122136191 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.101815114 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.127727614 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136162288 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.136754462 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178139294 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.127094957 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17442328 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.130316599 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.098708678 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.1235894 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098208148 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.126888989 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.124833845 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.113298352 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.122929956 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.122197541 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.107705091 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.12307676 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.100358581 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.130198426 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.130458499 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.129181145 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.105644611 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.197369985 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.108350069 seconds)
  done (took 8.441140662 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.8488406 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.16399176 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122601723 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.950289183 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.153434827 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136908712 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.844907695 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.143692523 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250191995 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.865704633 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112579424 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.135965134 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.24492244 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.265875439 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.15837375 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.350037221 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.716955225 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.13653549 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150562804 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164083817 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126749421 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126490356 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141030587 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.424033753 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.122339325 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098777843 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12703057 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.133882465 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174845463 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.097391342 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125869839 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.217226648 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.279330543 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.193291706 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123394445 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.118858704 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097573417 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.180781743 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.283507245 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.233243389 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.18616257 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116005186 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098028911 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134001359 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141062232 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095200506 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177281 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.210844616 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.187670337 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.124472267 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110761922 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131065764 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.132235901 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.174562774 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.118653894 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.328709971 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.354722173 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121689019 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129552409 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117697016 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.283372853 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12144721 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241847778 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12653901 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.228556861 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.119759838 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796490064 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.203616081 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097509075 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.130749783 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.103707325 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127753935 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.132984107 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178810365 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390267646 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135878469 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101804358 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120416148 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22579221 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.12129567 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097026219 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.201153936 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099314091 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12970451 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13693034 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111272199 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.208297953 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.263891722 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135499183 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106031681 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12721781 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133518868 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099432348 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.249639453 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.208487448 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.196069312 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.22904954 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135059475 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.1787484 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.178996038 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133351886 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.185576007 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12920576 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139798704 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133453368 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.205917187 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.156079806 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122574636 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125892488 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105655564 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.158100951 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12528706 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.105193369 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.206285297 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.454540727 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.180239041 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.118760823 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101691374 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131614787 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.175112237 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12961206 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.277529631 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106766176 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.206145117 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104774114 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.118824866 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129767794 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179035591 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135891621 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106597615 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134961195 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129438872 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.266250084 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234675048 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.136468129 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229355567 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.193897304 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131456141 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.187779926 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13011963 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.182022203 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130336719 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132150996 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100241306 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817555334 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133976533 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104669863 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126626212 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.202572052 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096775105 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.122922526 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.096702745 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118710707 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814983052 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099867392 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.118176709 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.09841957 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130343337 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104650626 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127625925 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12643829 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17610282 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248077212 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.134430485 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104829963 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.120907247 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.175633482 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.123189713 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.098165163 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.1208648 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.098689001 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.131403749 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.124894618 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.100147234 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.18656474 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.196402721 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.234484373 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.54124818 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.121441883 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.097450594 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244863977 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121470968 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.298227607 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129790774 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.242051588 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182253501 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.11899304 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.353105623 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184182034 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.204087251 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.124985652 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.18573203 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094299921 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128483878 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.17554269 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.121739797 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105289158 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.196274221 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.137234077 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.112926896 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.168119007 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122083232 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.243319766 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.094537515 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.208745333 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099870273 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133668505 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.324218563 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097889273 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14253004 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.199828133 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102622346 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.122597714 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.60459856 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.12140411 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109007309 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.131335711 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.238791145 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.180102727 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129185219 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128448124 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110761874 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.199399579 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.226894773 seconds)
  done (took 46.949177092 seconds)
done (took 63.518213319 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.32119848 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279517283 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.316868642 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23155628 seconds)
  done (took 2.161873529 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.197971975 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.164674545 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.158644241 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.09609003 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.166947641 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.119733979 seconds)
  done (took 1.836897809 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.504458048 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.390323444 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.356326222 seconds)
  done (took 2.183395824 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.278508583 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.269524246 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.376136726 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.448565808 seconds)
  done (took 2.447096861 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.222377825 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13771577 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.108476748 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.152468897 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.183684878 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.187257493 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.154992172 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.162885276 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.141748076 seconds)
  done (took 2.435216592 seconds)
done (took 12.005366756 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.306181686 seconds)
    (2/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.285487536 seconds)
    (3/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.177624087 seconds)
    (4/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.112463258 seconds)
    (5/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.289810781 seconds)
    (6/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.26889643 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.116079101 seconds)
    (8/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.174970146 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.10920541 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.125765546 seconds)
    (11/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.099820232 seconds)
    (12/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.212636173 seconds)
    (13/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.126991461 seconds)
    (14/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.135563121 seconds)
    (15/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.13056119 seconds)
    (16/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.126866022 seconds)
    (17/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.276727845 seconds)
    (18/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.137700739 seconds)
    (19/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.1428564 seconds)
    (20/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.253368622 seconds)
    (21/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.103197332 seconds)
    (22/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.180720533 seconds)
    (23/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.165672804 seconds)
    (24/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.27137619 seconds)
    (25/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.125297384 seconds)
    (26/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.261578411 seconds)
    (27/286) benchmarking ("sort", Int64, true)...
    done (took 0.215238867 seconds)
    (28/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.15908788 seconds)
    (29/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.222020612 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.136400366 seconds)
    (31/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.100097052 seconds)
    (32/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.229517626 seconds)
    (33/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.222880085 seconds)
    (34/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.24544449 seconds)
    (35/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.176109861 seconds)
    (36/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.096940407 seconds)
    (37/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.118019747 seconds)
    (38/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.126630108 seconds)
    (39/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.142173217 seconds)
    (40/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.117658272 seconds)
    (41/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.134726346 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.128712863 seconds)
    (43/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.293905618 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.128842119 seconds)
    (45/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.168187996 seconds)
    (46/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.131946886 seconds)
    (47/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.103391463 seconds)
    (48/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.201628603 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.138022811 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.099566329 seconds)
    (51/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.127878584 seconds)
    (52/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.106907205 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.155510222 seconds)
    (54/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.10869741 seconds)
    (55/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.101489127 seconds)
    (56/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.138954736 seconds)
    (57/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.154861816 seconds)
    (58/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.100508276 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.154691565 seconds)
    (60/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.154714254 seconds)
    (61/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.110466681 seconds)
    (62/286) benchmarking ("sort", BigInt, false)...
    done (took 0.26377357 seconds)
    (63/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.188639924 seconds)
    (64/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.313071498 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.131992966 seconds)
    (66/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.129654784 seconds)
    (67/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.135161774 seconds)
    (68/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.149983565 seconds)
    (69/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.125622034 seconds)
    (70/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.117681218 seconds)
    (71/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.127064142 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 0.095811633 seconds)
    (73/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.22666402 seconds)
    (74/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.158627129 seconds)
    (75/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.130473639 seconds)
    (76/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.096409615 seconds)
    (77/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.192075987 seconds)
    (78/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.109070909 seconds)
    (79/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.215410091 seconds)
    (80/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.148881852 seconds)
    (81/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.135028883 seconds)
    (82/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.112489352 seconds)
    (83/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.12632029 seconds)
    (84/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.20326042 seconds)
    (85/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.194411794 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.129567722 seconds)
    (87/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.178005237 seconds)
    (88/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.127747783 seconds)
    (89/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.204210269 seconds)
    (90/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.17960816 seconds)
    (91/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.200636171 seconds)
    (92/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.111711488 seconds)
    (93/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.152322038 seconds)
    (94/286) benchmarking ("sort", Float64, true)...
    done (took 0.220200091 seconds)
    (95/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.152797428 seconds)
    (96/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.139062302 seconds)
    (97/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.08439933 seconds)
    (98/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.176333192 seconds)
    (99/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.176093658 seconds)
    (100/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.101541341 seconds)
    (101/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.210330327 seconds)
    (102/286) benchmarking ("sort", Int8, false)...
    done (took 0.230523927 seconds)
    (103/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.21445587 seconds)
    (104/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.15417608 seconds)
    (105/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.125219556 seconds)
    (106/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.227663123 seconds)
    (107/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.122742288 seconds)
    (108/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.086093892 seconds)
    (109/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.132509766 seconds)
    (110/286) benchmarking ("sort", Float32, false)...
    done (took 0.161128201 seconds)
    (111/286) benchmarking ("sort", Bool, false)...
    done (took 0.200362712 seconds)
    (112/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.135782547 seconds)
    (113/286) benchmarking ("sort", BigInt, true)...
    done (took 0.227026912 seconds)
    (114/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.140538661 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.109679973 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.12907569 seconds)
    (117/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.142902223 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.102567198 seconds)
    (119/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.109500921 seconds)
    (120/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.096956529 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.134649463 seconds)
    (122/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.084333985 seconds)
    (123/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.128680508 seconds)
    (124/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.108452368 seconds)
    (125/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.200473231 seconds)
    (126/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.109007089 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.103455648 seconds)
    (128/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.130317453 seconds)
    (129/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.21045077 seconds)
    (130/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.083639784 seconds)
    (131/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.116056493 seconds)
    (132/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.210937936 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.109145104 seconds)
    (134/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.140586788 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.103314176 seconds)
    (136/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.225783687 seconds)
    (137/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.129759583 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.12870051 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.097763048 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.125819346 seconds)
    (141/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.116365809 seconds)
    (142/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.159223748 seconds)
    (143/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.132030066 seconds)
    (144/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.084401729 seconds)
    (145/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.218837721 seconds)
    (146/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.133508654 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.110346651 seconds)
    (148/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.126220484 seconds)
    (149/286) benchmarking ("sort", Float64, false)...
    done (took 0.159653131 seconds)
    (150/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.130680852 seconds)
    (151/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.084443329 seconds)
    (152/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.158464463 seconds)
    (153/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.109809655 seconds)
    (154/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.083866268 seconds)
    (155/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.145384906 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.102641404 seconds)
    (157/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.199179951 seconds)
    (158/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.175909317 seconds)
    (159/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.084989604 seconds)
    (160/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.142543995 seconds)
    (161/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.100181267 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.138466168 seconds)
    (163/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.085063764 seconds)
    (164/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.134999465 seconds)
    (165/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.156775955 seconds)
    (166/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.100291231 seconds)
    (167/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.12913844 seconds)
    (168/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114167475 seconds)
    (169/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.200594048 seconds)
    (170/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.110516155 seconds)
    (171/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.084387584 seconds)
    (172/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.109876612 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.100904055 seconds)
    (174/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.124964138 seconds)
    (175/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.085211315 seconds)
    (176/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.110330932 seconds)
    (177/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.084350379 seconds)
    (178/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.205457295 seconds)
    (179/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.084338344 seconds)
    (180/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.142083264 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.136048357 seconds)
    (182/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.085022537 seconds)
    (183/286) benchmarking ("sort", Float32, true)...
    done (took 0.219259387 seconds)
    (184/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.126108918 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103829581 seconds)
    (186/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.124082732 seconds)
    (187/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084673209 seconds)
    (188/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.216371292 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.130202701 seconds)
    (190/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.166195454 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 0.216261258 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.100876682 seconds)
    (193/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.110713803 seconds)
    (194/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.112925397 seconds)
    (195/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.110465733 seconds)
    (196/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.093492918 seconds)
    (197/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.136821607 seconds)
    (198/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.163990807 seconds)
    (199/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.085151967 seconds)
    (200/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.082983394 seconds)
    (201/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.110706613 seconds)
    (202/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.13849778 seconds)
    (203/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.111083988 seconds)
    (204/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.111372268 seconds)
    (205/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.087232698 seconds)
    (206/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.139920837 seconds)
    (207/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.108490025 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.125532226 seconds)
    (209/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.08450869 seconds)
    (210/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.110806193 seconds)
    (211/286) benchmarking ("sort", Int8, true)...
    done (took 0.215366158 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.099795273 seconds)
    (213/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.120590989 seconds)
    (214/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.113754254 seconds)
    (215/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.111106514 seconds)
    (216/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099695129 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.130145233 seconds)
    (218/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.129923534 seconds)
    (219/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.117767835 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.129767042 seconds)
    (221/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.100772014 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.130938134 seconds)
    (223/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.103920078 seconds)
    (224/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.125489 seconds)
    (225/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.093486952 seconds)
    (226/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.142591567 seconds)
    (227/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.093578951 seconds)
    (228/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.10953335 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.097295352 seconds)
    (230/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.123392933 seconds)
    (231/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.102588536 seconds)
    (232/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.110969937 seconds)
    (233/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.109987981 seconds)
    (234/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.123430838 seconds)
    (235/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.100713304 seconds)
    (236/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.110652153 seconds)
    (237/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.216871933 seconds)
    (238/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.111670698 seconds)
    (239/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.12892315 seconds)
    (240/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.126703012 seconds)
    (241/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.086036176 seconds)
    (242/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.127245979 seconds)
    (243/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.093001459 seconds)
    (244/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.110622894 seconds)
    (245/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.10382535 seconds)
    (246/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.17434845 seconds)
    (247/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.16504177 seconds)
    (248/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.101212533 seconds)
    (249/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.111258612 seconds)
    (250/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.109587435 seconds)
    (251/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.143698835 seconds)
    (252/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.105048401 seconds)
    (253/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.12805754 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.108231806 seconds)
    (255/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.122879405 seconds)
    (256/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.084599183 seconds)
    (257/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.144576311 seconds)
    (258/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.130375779 seconds)
    (259/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.084638776 seconds)
    (260/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.126569862 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.097883875 seconds)
    (262/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.111093371 seconds)
    (263/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.086100127 seconds)
    (264/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.092842251 seconds)
    (265/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.131098559 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.137955044 seconds)
    (267/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.085315359 seconds)
    (268/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.11039442 seconds)
    (269/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.102293545 seconds)
    (270/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.124795045 seconds)
    (271/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.084621887 seconds)
    (272/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.111325365 seconds)
    (273/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.109806259 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.126716147 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103845653 seconds)
    (276/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.123356267 seconds)
    (277/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.128425908 seconds)
    (278/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.085625599 seconds)
    (279/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.096998825 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.12686213 seconds)
    (281/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.110662615 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.104416262 seconds)
    (283/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.11074786 seconds)
    (284/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.100465759 seconds)
    (285/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.110545306 seconds)
    (286/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.086438952 seconds)
  done (took 40.814847626 seconds)
done (took 41.76121392 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.117018431 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.165050253 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.108546716 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.154048967 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.136128214 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.11325414 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.133616739 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.134293567 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.111168481 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.137866896 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.111251731 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.118821547 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.133390647 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10890929 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.1347911 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127607614 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.13818395 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.130158876 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.10001847 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.12645597 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.100962819 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.145777234 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.102075098 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.118454686 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.108019868 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.13357426 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.129533247 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.108166628 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.127296395 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.098117309 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.143241598 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.104564301 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.125378038 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.109125452 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.129979063 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.099564814 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.136805872 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.13312862 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.103422002 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.127564161 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.105261654 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.127812068 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.103652318 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.131732907 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.101359801 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.126859711 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.12643608 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.112234664 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.154663277 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101438688 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.132297687 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.106896421 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.137374606 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.130937384 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.099440217 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.126320789 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.101398086 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.155355481 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.099548114 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128543889 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.130382717 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.105815987 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.126232434 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.101402364 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.127432719 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110242598 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.134153478 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.099584082 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.133901553 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.129716738 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.097087045 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.126529668 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.100223774 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.124617947 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.107445758 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.134560286 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.096114066 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.127437035 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.105145367 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.130122746 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.100795212 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126382084 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.102801792 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.129559538 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098924089 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.118370432 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.125606201 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.104348418 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.127781259 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.101334191 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.130323643 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.10410641 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.129300111 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.107659024 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.127560877 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.127599402 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.102181144 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.127489687 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.104182377 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.125783069 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.097140551 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.125892734 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.105708147 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.124987459 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.101672647 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.136750115 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.098774938 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.129713257 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.126853448 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.101317274 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.140222646 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.107553932 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.128623356 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101634388 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.12423222 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.130530196 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.099642923 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.12456586 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.099685343 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.128066954 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.101706501 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.127404802 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098972161 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.131081455 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.109814582 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.123974045 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.126092292 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100310952 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.127647187 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.104266398 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.128307278 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.098693518 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.12692065 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.096002598 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126443777 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.098568619 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.130982555 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09954352 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.127391856 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.101025908 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.12872072 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.128107136 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.102525893 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.129894358 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.099338139 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.120702322 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101750094 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.124850526 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.102689065 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.128641481 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.100954923 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.124432623 seconds)
done (took 19.02045452 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.116076129 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.198713398 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.159740513 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.163343218 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.161106836 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.144524712 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.111199859 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.159228022 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.136452984 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.156021588 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.131663494 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.15010985 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.162793039 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.109377588 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.145455287 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.134948776 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.106617419 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.145900245 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.167217272 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.155607261 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.159625696 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.109992332 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.155868366 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.154693179 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106530308 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.164754748 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.137741094 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.134699588 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.111261878 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.142216313 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.123930014 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.138978759 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.137524968 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.119694876 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.142819267 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.132474956 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.118291195 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.132363412 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.13476524 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.108627918 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.146147648 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.145251679 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10464456 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.14197509 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.134885247 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.112831873 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.134130788 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.106069422 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.135259761 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.129622635 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.113066851 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15573337 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.133006866 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.110770242 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.136674523 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.135215175 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.110611274 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.139328935 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.136543328 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.11226573 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.135307403 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.137079786 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114262063 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.152858507 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.134211499 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.110364792 seconds)
  done (took 9.943197604 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.131791004 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.166687721 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142950083 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115322096 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.137950494 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123516343 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.097568179 seconds)
  done (took 1.940854689 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.107879095 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.15581783 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.132398797 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.160249467 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.147331767 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.162361266 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117350659 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.125892831 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.121545527 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137385746 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.153965654 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.182308982 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09997858 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.137795099 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.160603255 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.099237632 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.161838452 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.098220975 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.133435605 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.158683963 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.104791189 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.148709899 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.139905147 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100207695 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.146913833 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.100794044 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.19459617 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.138213258 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.098450379 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.132967478 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.104125554 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.225753039 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.121460951 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.136926456 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096232882 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.155299926 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.147578781 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.104905011 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.151398501 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.131131141 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.120976294 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.133727694 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.10667217 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.132844343 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.13395238 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.115311801 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.137883181 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.108280752 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.132992445 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.154411719 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.110607299 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.149120716 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.101034351 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.130996059 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.136213432 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.105780505 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.140789547 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.104384093 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.155028234 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.134927963 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.126011904 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.153960756 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.148318744 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.125427237 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144886687 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.148763111 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.120774013 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.133577699 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.106807598 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.135093021 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.153293049 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.102897632 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.137561389 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.141135209 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.108309302 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.154651214 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.126104497 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.133196094 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.138161504 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104782897 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.129336425 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.099734635 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.143546663 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102973249 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.130610574 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1435134 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111635218 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.132675782 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.103509249 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.149789696 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.131425425 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.110802548 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.139577545 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.13070282 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115405212 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.155903506 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.138532459 seconds)
  done (took 13.822626915 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108404935 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.12790299 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106754806 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129076696 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.101730034 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.129200834 seconds)
  done (took 1.736295333 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.137505618 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.132604623 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.143517489 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.107452895 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.171996914 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.150901488 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.12573447 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138256368 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.120582662 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.1439976 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.15168734 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.125517911 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.159520508 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.136248574 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.123609089 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.13689794 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.152362432 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104300326 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.143473569 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104524711 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.145282699 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.134951762 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104761734 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.15094754 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.108076618 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.137675916 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.134455936 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.116090453 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.143504873 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.110798881 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.135528358 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.135851603 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.107896037 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.139012573 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.15208502 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108884157 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.131104516 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.110547381 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.137297203 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.108678124 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.154031847 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.132212628 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.117308712 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.139062352 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.110228385 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.138276253 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.13906727 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106538057 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.152901499 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.109123831 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.13786809 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.135669254 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.108194366 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.138052606 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.108150348 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138572095 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.137837929 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.126239868 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.136794329 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.107254862 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.134553881 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.136243706 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.111064652 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.136568137 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10738882 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.137765687 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.135640069 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.104893625 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.132078018 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.107994217 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.138697449 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.1042129 seconds)
  done (took 10.360709941 seconds)
done (took 38.813234615 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.72650839 seconds)
  done (took 1.758195798 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.880855178 seconds)
  done (took 1.915353676 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.821575156 seconds)
  done (took 19.88896254 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.555490221 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.650120325 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.997072161 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.177313147 seconds)
  done (took 3.41348104 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.0063325 seconds)
  done (took 2.063567209 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.328835982 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.278413559 seconds)
  done (took 1.646149988 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.88346212 seconds)
  done (took 1.930131873 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.608005262 seconds)
  done (took 2.656396183 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.371407211 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.213021721 seconds)
  done (took 1.643150924 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.606243545 seconds)
  done (took 1.658351152 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.120061857 seconds)
  done (took 16.17579365 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.24980942 seconds)
  done (took 1.311933939 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.321038511 seconds)
  done (took 1.374596803 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.852833812 seconds)
  done (took 4.908954536 seconds)
done (took 63.39423216 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.118767763 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.14127966 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.114560045 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.139302153 seconds)
  done (took 1.563918555 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123992722 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.136029677 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.110753085 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.13588376 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.114922069 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.136351643 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.135038828 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.11482945 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.137159804 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.109705332 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.136608782 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.135504374 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.109954338 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.135049202 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.106722247 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.137907109 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.111521055 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.13746059 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.135920484 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.110305401 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.135461374 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.109423536 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.140460734 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.10809577 seconds)
  done (took 4.064132308 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.119293176 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.132723189 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108104882 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131570827 seconds)
  done (took 1.557365501 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.122746317 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.151029002 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.121439411 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.145230643 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.15052997 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.121816095 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.133987358 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.103429887 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.135231546 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.143245795 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.106146242 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.152481378 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.150260725 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.10036578 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.144720748 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.098267407 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.129349975 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.122371424 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.144469384 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.144289421 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.105356729 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.142832221 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.1127867 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.147710897 seconds)
  done (took 4.191708614 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.214651638 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.118052282 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.15818092 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.181156795 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.129925901 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.132211235 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.158496412 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.110196674 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.137726131 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.103805788 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.132260008 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.187595976 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.108591829 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.135202879 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.131424795 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.110628577 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.14054137 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.136451007 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.107279008 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.146080543 seconds)
  done (took 3.843489669 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.118160818 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.13259241 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.10084043 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.132783022 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.112183092 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.136122478 seconds)
  done (took 1.798891098 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107010877 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.099904087 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.130434608 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.098285334 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.134445919 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.099119131 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.127653349 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.099437779 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.128763595 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.099388921 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127889041 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.098271337 seconds)
  done (took 2.420334791 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.564185637 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.104381997 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.136142743 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.131442165 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.111057313 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.131021241 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.120623796 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.132311067 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.188622227 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.104432769 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.149554177 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.186741583 seconds)
  done (took 3.136188248 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23019901 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109835855 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292187142 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.396751529 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174202934 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181950848 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.29516462 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18222925 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201072262 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153863035 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219086669 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173101584 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169433509 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194740213 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155072266 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.200811466 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191283617 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217052715 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164258044 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230274827 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180333579 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182229684 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204696228 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166927111 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154891659 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174631851 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.132115579 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116011263 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187759237 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183780019 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218136399 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163981875 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124871074 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245128727 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229133104 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192749835 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.35224874 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12125929 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.235425346 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.210503106 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296552613 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127668825 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241706801 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171339471 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118345943 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195925736 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172703881 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.197172247 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.147928574 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156785193 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201716167 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193023604 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.196391184 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153238362 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.343451187 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134634588 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.161021033 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196565136 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23338929 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217101309 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183629596 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.109097792 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.230857546 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207919484 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197610207 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.16160427 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.184618698 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109958769 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22297416 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221577557 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195379629 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183947843 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.228238589 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119879127 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177932362 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194633346 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169266884 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195803051 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177068222 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.137323836 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16530267 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12275366 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14430056 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.201631219 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108709346 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258488158 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121006748 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.336284089 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223823418 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175916813 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177394699 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18147681 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184660164 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162600914 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.104523532 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163439157 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.188047986 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173988374 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148203252 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174371151 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160487876 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.113324988 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168556439 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.138715775 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14472345 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.14943756 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181939325 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18036502 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.143908061 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181361527 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165415398 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.143417989 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216370432 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210687148 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118054569 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14924231 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220243793 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17431028 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.153496872 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202474214 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.211347154 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.189688195 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154576429 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184538695 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212175339 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158654359 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213963513 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160493251 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15033155 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.167291946 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174865387 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17313611 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.14178913 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145859512 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.169581294 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218931632 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.144931398 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152580845 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189548323 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112669625 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144150563 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159714376 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122712303 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.158031283 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.168165879 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.155491257 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171404609 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174589681 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138795979 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174132109 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159074228 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23826991 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119652034 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.17718767 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163613493 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.10272415 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.226169849 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210008664 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113955454 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233956002 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.185762365 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213382798 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178255827 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14682581 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19873731 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114642927 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.136022355 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181623038 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175629536 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178918603 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.207893417 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23743375 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.184520625 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.167009381 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13522003 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183465951 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.200820532 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203192747 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.134097063 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17714485 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182311774 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.138621921 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.138256387 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.113229052 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156053456 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145890687 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118409589 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196349648 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180131886 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234270043 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177696912 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154905267 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206558779 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.111386792 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180628686 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.187291483 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15626707 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.208606894 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234399073 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181883158 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129194384 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186494185 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.136522357 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110166989 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.148413513 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182833112 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150066257 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118580935 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160144484 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207667757 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22014473 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134698827 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250571889 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183306615 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216630202 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.136960297 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.179016422 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19595171 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173106068 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.175109804 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147644997 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.177617925 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203840547 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160023294 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209136056 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177424577 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184792167 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245030819 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.141982687 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147999209 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165627179 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184669332 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156744276 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187893422 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160974972 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120934223 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170812712 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.15271357 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109549251 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229247714 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158574554 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195669486 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.184245913 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190303055 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14168264 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128096922 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176787123 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161697007 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.134629323 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187583092 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212845557 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162358523 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17938499 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203970186 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148357466 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.336711239 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215174897 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200705765 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154555449 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158769057 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177929584 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18571478 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180601277 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200139606 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160444952 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19697722 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17407548 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.127771839 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151569322 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164742599 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167076109 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.16741893 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.117919903 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.168820455 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.15997941 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199868892 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162153162 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174862015 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180609275 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.163110957 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.140550478 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157158696 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226562834 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174311482 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194385237 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.172059523 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.192000762 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234540318 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110338013 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144517415 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.111469157 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198581512 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149248026 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176236987 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.198953178 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240932072 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174341248 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185792594 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122912575 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.14044169 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175378063 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133998239 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246546643 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157928438 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.151642065 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216834009 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.166991139 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11592604 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180785094 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30410187 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15858266 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199594643 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.138462404 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.297278409 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142483321 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11746001 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185870939 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187571078 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.14774807 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.202482726 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181330375 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130300921 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186132394 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155084422 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206378386 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255169183 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186380408 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192013623 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.160542689 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174166409 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179290906 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202380085 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159370879 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.128495311 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181232669 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208546879 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.240953636 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117405983 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178251306 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179307822 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175440765 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190530394 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1509736 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204023798 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148484397 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182806938 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156729927 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10880313 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174869392 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.200754064 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150013498 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200837828 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174043958 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148439054 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110789325 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168730792 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175958421 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160449595 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.145246013 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19617522 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.113259945 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179204366 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197575622 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14687395 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171155811 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130424312 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147786544 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159994468 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161217344 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120473838 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.191680531 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20731011 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.147712605 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201978965 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188184073 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181955328 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176011774 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161130878 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.678908615 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.112577932 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207702885 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164188243 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203619522 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166839967 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181781863 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177157034 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166445156 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184652784 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16617708 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.237660244 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18279674 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.174768845 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115796071 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161837186 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162381535 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146122848 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136848663 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178011658 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1576525 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153077743 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.172122753 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131463605 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.160978555 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156009545 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210576962 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164897085 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198763031 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201171194 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155726291 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182357937 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191368697 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146941808 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178858145 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189786516 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158642883 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135485722 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.147413969 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.152012662 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196737555 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.108938523 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177371605 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177418265 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177661803 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179472877 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.151166783 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175620802 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12706236 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177503095 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142649147 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.171445157 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174119666 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115093049 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.144191229 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172145945 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176104044 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.174180468 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111215066 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.193383299 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208645426 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.140186464 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119774913 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305446976 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172119253 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239837489 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137072348 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153447667 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161201099 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172410418 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.168610919 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145041157 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.146640183 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149088655 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.115105676 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.203624569 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.179703705 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174764917 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201666836 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177673638 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206071889 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.152955915 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281952742 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123161727 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172637181 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.148005111 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.146064341 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125509131 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151860437 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161995569 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208630201 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197015452 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.171865847 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.161891486 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111993921 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.141714138 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148730308 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156425408 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172089189 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174962449 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160484532 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.13533474 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128373241 seconds)
  done (took 85.508673578 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168287074 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.157735485 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.162545573 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.214780448 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.183624537 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272795066 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.222210451 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.243651339 seconds)
  done (took 2.802185179 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119385714 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.151844515 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.158137588 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141415983 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.140446173 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.365154634 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.151062841 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.110286216 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.20004818 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.152324519 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.137739048 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.652074259 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.137906378 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.138545165 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.133348126 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.111374998 seconds)
  done (took 4.163405196 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.570216205 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.576779111 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.430223316 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.258892943 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.269822953 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.170917281 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.810278872 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.176992469 seconds)
  done (took 13.440891467 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.143236885 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.157497832 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.152711434 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.182393761 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.168942652 seconds)
  done (took 1.989687144 seconds)
done (took 131.530298583 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.113807348 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.141211496 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.108911622 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.143185938 seconds)
  done (took 1.669078466 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.127135724 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.123777614 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096235067 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.123435119 seconds)
  done (took 1.646302741 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.455822184 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.126558186 seconds)
  done (took 1.788460372 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.138569391 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.153658712 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.162047272 seconds)
  done (took 1.635829928 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.123521667 seconds)
  done (took 1.295442224 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.121176734 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.14378773 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.126984806 seconds)
  done (took 1.576312613 seconds)
done (took 10.787459607 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.130179621 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.453959245 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.399448774 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153165583 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.737573452 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.392836327 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.053473921 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171937076 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181069946 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.102792241 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.155050991 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.681754928 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.033391909 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.389063675 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.992837541 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.476876952 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.689566542 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.137716562 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.110092255 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.136347165 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.03084479 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.103517742 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.135988317 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.106259248 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.71996526 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.408615508 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.13593621 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.461254705 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.134395829 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.138360122 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.393981746 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.134605884 seconds)
  done (took 17.651525581 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111972176 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.196970841 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.111388001 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138369731 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.139350335 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.105925223 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145639485 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116590452 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.195076438 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.135661585 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.123545624 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.137230355 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.139345055 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.104894949 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.156616892 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.103771436 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.137894295 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.107143492 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143567 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.104912533 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.15577818 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.103607902 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.138051318 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.106023039 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.136402831 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.147803395 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.104627412 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.14720058 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.103800512 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.140730763 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.108787389 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.135834933 seconds)
  done (took 5.365871164 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.158777927 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.206246537 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144718519 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138463855 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185886471 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.138178044 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222589592 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172109435 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.197911656 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.103876553 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162456633 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.103717533 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.174072243 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.135464993 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.126858253 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.135438806 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.107090868 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138396061 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.110271248 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.13850425 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.15544948 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.104208309 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.137053525 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.106986605 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.135966394 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.119297343 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136540544 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.117921152 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.136576161 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.140295407 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.110367542 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.135576301 seconds)
  done (took 5.728251256 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.11746933 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.143244101 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.120936965 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.153206989 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.106837492 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.142746682 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.110537275 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.138948952 seconds)
  done (took 2.220608775 seconds)
done (took 32.151398562 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.127792469 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.140932096 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.118747034 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.149890338 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.114357311 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.170832074 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.102316123 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.148450983 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.117498089 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.145541284 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.120362438 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.136000236 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.105572724 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.134984895 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.11737635 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.141864767 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.119262389 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.147061125 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.155685189 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.119863976 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.137278361 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.117210517 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.146066648 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.125186358 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.156814979 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.156267854 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.121479047 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.142798773 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.104937604 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.137706335 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.121526761 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.161653632 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.10673263 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.153756387 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.140631242 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.109146691 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.135753996 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.107055876 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.151680335 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.116272797 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.142034581 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.115711931 seconds)
  done (took 6.721663356 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.138420789 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.182015487 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.101883273 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.135148811 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.102356815 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.17715755 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.173104981 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.101772068 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.137091816 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.161516986 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.13001563 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.134976967 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.102527152 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.135027889 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.102157173 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.134777083 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.128226371 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.161189817 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.16782605 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.134779013 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.18298145 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.169065098 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.139963405 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.161525772 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.180221365 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.173256365 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.125456076 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.175708662 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.164545584 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.101349799 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.169401971 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.168509938 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.101980491 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.133818966 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.146396176 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.174804901 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.165767368 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.177659318 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.137167131 seconds)
  done (took 6.896981243 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.120609831 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.154690511 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.131714856 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.209895211 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.179736215 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.119795404 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.151880153 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.156094747 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.13303516 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.137676292 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.116435104 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.170650172 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.121414001 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.148784554 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.142747832 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.119575696 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.158122466 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.106164564 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.145271878 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123874533 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.156868198 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.150153035 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120355544 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.148422038 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.103956337 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.146940969 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.110968265 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.151108155 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.111867548 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.147903741 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.141038354 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.109964358 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.14060686 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.115998632 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.142659247 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.112769419 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.159278903 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.147340501 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.118052217 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.173158889 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114042976 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.143515742 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.159435229 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.153317241 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.140384756 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.111973663 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.149350335 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.14754491 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.104835635 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.157116893 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121413768 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.139294226 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.121027322 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.138508088 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.104663264 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.145761858 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.106766703 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.141473773 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.114873123 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.143767181 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.159264633 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.114289093 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146232169 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.106830678 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.145600032 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.104996485 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.137796556 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.109724706 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.161569872 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.142775174 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.138345171 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.139516239 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.11041102 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.146277048 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.111742579 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.147971659 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.105262899 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.147220615 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.146061778 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.112125405 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.147342075 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.108554183 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.143308387 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.123343966 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.15369566 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.145441675 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.111415872 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.145194972 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.108019574 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.141096187 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.119823037 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.139745668 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.109202894 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.149563567 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.105633068 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.142745756 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.144451525 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.11090281 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.136819366 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.126478992 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.14400584 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.10464796 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.156985607 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.105983963 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.143453814 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.114939818 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.151678016 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.138089014 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.110653343 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.144611564 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.105052901 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.14471146 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.109394879 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.138619325 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.117916307 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.152400297 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.110826128 seconds)
  done (took 16.873271421 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.264736002 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.238286922 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.210179723 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.347121079 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.161959033 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.166725669 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.235335871 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.191246701 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.105077841 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180109706 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.193809895 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.20573575 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.195791374 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.2047117 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.199157874 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.140468717 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.137379153 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.194805709 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.23778244 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.321791804 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.172329326 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.153195574 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.18049288 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.179307769 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.122897062 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.156671777 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.164357153 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128295809 seconds)
  done (took 6.619528786 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.128797507 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.182479745 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.147175949 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.136157464 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.166476507 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.141101918 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.11085839 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.139794149 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.121259732 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.156422877 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.107064757 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.148106209 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.145476963 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.115893435 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.139668044 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.115553319 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.150119947 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.114966773 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.143374076 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.110411587 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.156617986 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.157198061 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.110561369 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147210392 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.157150859 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.112645371 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.140751316 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.161377752 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.116321896 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.170771193 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.136243904 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.11570471 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.154279506 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.105419285 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.14743103 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.108230184 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.142309205 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.107087796 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.143616348 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.103463288 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.138813626 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.095976289 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.146750988 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.121030471 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.147376984 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.140374773 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.111433388 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.143998438 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.107181613 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.136626269 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.108648453 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.141847549 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.11080369 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.157941362 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.109395639 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.141875418 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.109911392 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.143479257 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.115492242 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.142931924 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.103368246 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.145867292 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.112919304 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.144708714 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.149644632 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.112843079 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.145083126 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.10825064 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.145901375 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.113784893 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.142969489 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.11870594 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.137482305 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.109613573 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.15030485 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.153021932 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.110867789 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.144985293 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.113127955 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.140125709 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.09616691 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.138295588 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.092954013 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.143540878 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.105673958 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.145926585 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.109321792 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.145786052 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.122348093 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.150603587 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.14743547 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.107191796 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.147026952 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.110263538 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.137887015 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.110470964 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.158803665 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.159840442 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.105298048 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.13697607 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.129065328 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.142026499 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.103796214 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.127886844 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.116947161 seconds)
  done (took 15.0204938 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140643828 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.179922398 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.107256612 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.158924046 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.17618851 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.134785925 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.155644261 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.114345431 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.142028304 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.16022559 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.114267378 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.150289835 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.113655272 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.157012508 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.134158542 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.153507958 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.14088089 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.121847722 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.14577947 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.147968441 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.161180112 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.166979645 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.138161775 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.151382347 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.145835956 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.131244703 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.173115805 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.119476291 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.153625749 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.174449836 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.11953155 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.172883086 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.174332075 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.111510487 seconds)
  done (took 6.187441886 seconds)
done (took 59.513728161 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.331894421 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.538688172 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.29805524 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.300787069 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.304605589 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.349870489 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.299715695 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.504489045 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.137815796 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.292330464 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.306976582 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.304524799 seconds)
done (took 29.199494316 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.321440278 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.921279043 seconds)
    (2/2) benchmarking "String"...
    done (took 1.624227922 seconds)
  done (took 4.772799041 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.306058579 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.319033326 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.549080686 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.305795118 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.325264722 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.325869275 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.318829419 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.320029866 seconds)
  done (took 16.69100744 seconds)
done (took 27.316683171 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.406155339 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.52428666 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.566468109 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.31923086 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.312567023 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.305608272 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.305249638 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.354179935 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.317016206 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.31021961 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.300823674 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.578036485 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.320526062 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.705406127 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.30010794 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.314934263 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.328873188 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.541809735 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.305380255 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.29345991 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.309114658 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.293913525 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.310623053 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.326915205 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.328515558 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.301777166 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.348564668 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.301281336 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.572012431 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.32095157 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.352674871 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.306085267 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.348781979 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.304648909 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.421696497 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.332567201 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.496363383 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.333524355 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.297021529 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.305354196 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.507513088 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.766286575 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.310987811 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.309466407 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.318094836 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.338759478 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.296336793 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.070646265 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.319803395 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.312631641 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.321845746 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.705287019 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.31197371 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.305068296 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.328872791 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.549978454 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.320325941 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.366559003 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.343624205 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.304644385 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.309579825 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.306103161 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.338440011 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.307128229 seconds)
  done (took 150.525473673 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.311683404 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.309945611 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.306214519 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.313318137 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.307808872 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.306023613 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.307938198 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.309555853 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.309748044 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.328711091 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.301710666 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.304448381 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.307593291 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.320081939 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.308837587 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.332829812 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.309403922 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.306870291 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.322986771 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.310037328 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.340323089 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.309514978 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.325977115 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.308126149 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.318910222 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.397235484 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.348103639 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.324328016 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.30150863 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.307200297 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.315086965 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.31735069 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.999424821 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.168650089 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.315119211 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.351170262 seconds)
  done (took 84.216872589 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.313645916 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.311770436 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.311947457 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.346796259 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.313675471 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.313337898 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.96707132 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.965637404 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.056491389 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.6762797 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.919357372 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.686320002 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.310882713 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.41249634 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.324424235 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.309936619 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.326507333 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.3348649 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.312657792 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.314190615 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.965198074 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.324272917 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.415640845 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.509972554 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.325015545 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.351226884 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.719455887 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.311388708 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.351875148 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.661395356 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.366211586 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.311470298 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.785759012 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.570106875 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.43021343 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.311249601 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.350253132 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.313646971 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.611255676 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.31396157 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.314260222 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.31287847 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.318247896 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.075146449 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.31154447 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.966488677 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.313462273 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.335322743 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.309662515 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.311566925 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.648716559 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.168685739 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.327147536 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.314233333 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.317077332 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.312378803 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.31361572 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.35266228 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.782134789 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.436390235 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.312548318 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.323520835 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.348838172 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.31223482 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.368978404 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.331193209 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.460931101 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.37739239 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.525001328 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.966272675 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.313551765 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.418456602 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.439837412 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.311264773 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.316871824 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.312142151 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.315157843 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.43701279 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.313848237 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.78369044 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.498465984 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.329214318 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.921916698 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.419014699 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.314088563 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.780539261 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.314118737 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.317178769 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.316453901 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.127314442 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.413937683 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.31403646 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.313060015 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.317814286 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.786162586 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.964468324 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.641417483 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.314626259 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.761152549 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.319981939 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.316184999 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.794978655 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.938206968 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.080505534 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.31610708 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.434794201 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.499714648 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.33029955 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.314479188 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.919265571 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.316712452 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.373975457 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.312985359 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.722835772 seconds)
  done (took 382.354610671 seconds)
done (took 618.323154334 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.065244808 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.996744983 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.136887928 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.03292147 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.99314053 seconds)
  done (took 11.460834863 seconds)
done (took 12.6975982 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.536898393 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.527912417 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.38341513 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.535770692 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.351350091 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.558322817 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.510889765 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.338652319 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.438533272 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.40642959 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.433644692 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.372540574 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.35925539 seconds)
  done (took 19.990792904 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.610616289 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.318998996 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.381708617 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.585245607 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.357599545 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.599698578 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.64480071 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.318860542 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.46166337 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.329507647 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.330354301 seconds)
  done (took 19.178344719 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.617209479 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.318315839 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.386398791 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.597611628 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.361986099 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.594023219 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.685607131 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.322011042 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.463090092 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.33453124 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.333759272 seconds)
  done (took 19.25498768 seconds)
done (took 59.661633446 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.364775787 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.495181388 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.352162848 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.33463466 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.331038412 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.334031552 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.334477783 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.335433074 seconds)
  done (took 12.122655837 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.32681675 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.331544185 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.328846169 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.326155138 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.327403967 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.325452652 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.328886647 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.327452396 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.326033053 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.323831347 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.32461052 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.32802411 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.330265703 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.327829717 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.328361461 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.328466054 seconds)
  done (took 22.483887198 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.331873362 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.327010119 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.327200608 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.328175485 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.326253961 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.326063326 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.330687583 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.325590643 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.327227943 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.327207955 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.329624176 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.328239053 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.328484862 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.32559717 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.329064983 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.327946119 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.332102767 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.328978133 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.331936636 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.330151691 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.325364316 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.327183988 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.326603607 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.325666048 seconds)
  done (took 33.119162358 seconds)
done (took 68.96516615 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.330817341 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.326707812 seconds)
  done (took 5.899137337 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.390300621 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.388206185 seconds)
  done (took 4.026317892 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.331659315 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.32928656 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.330465129 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.331105437 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.327913798 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.330255187 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.329283704 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.330602515 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.330621596 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.331165213 seconds)
  done (took 14.545045044 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.330949227 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.328391142 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.324912937 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.331129621 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.33315472 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.325661227 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.327693866 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.331886426 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.332702271 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.326756942 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.333385227 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.328658305 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.329588807 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.326484603 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.328848341 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.329855835 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.330676917 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.32700629 seconds)
  done (took 25.17538158 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.347509605 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.353731319 seconds)
  done (took 3.946196669 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.470892257 seconds)
    (2/7) benchmarking "second"...
    done (took 1.36953368 seconds)
    (3/7) benchmarking "month"...
    done (took 1.444156986 seconds)
    (4/7) benchmarking "year"...
    done (took 1.435910317 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.369869318 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.349428343 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.371294561 seconds)
  done (took 11.053902348 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.33494569 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.52349735 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.636499425 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.864090282 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.846180973 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.33378254 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.139407819 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.336332405 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.338555601 seconds)
  done (took 15.599376021 seconds)
done (took 81.483626295 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.326324623 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.349654164 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.351665278 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.335431253 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.668019061 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.38086076 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.324870455 seconds)
done (took 16.979194298 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.330164163 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.313641558 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.315356659 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.323803564 seconds)
  done (took 10.530033399 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.33881542 seconds)
    (2/2) benchmarking "read"...
    done (took 1.678270357 seconds)
  done (took 5.263763197 seconds)
done (took 17.038006924 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.335562764 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.332463679 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.331728924 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.329314101 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.331684229 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.327159363 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.330489111 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.330037294 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.330344105 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.333730491 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.332887811 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.330269639 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.333820306 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.335347554 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332686106 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.332398512 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327917928 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.331886989 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.332758656 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330404014 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.33190335 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.333382194 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.331216307 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.330713205 seconds)
  done (took 33.207518161 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.336633337 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.330213998 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.332481036 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.331201925 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.330138879 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.33460436 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.334699901 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.32992112 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.332641966 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.333583145 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.330859392 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.331676786 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.331890712 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.332168325 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337091331 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.332263714 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.33588695 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335149741 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335812663 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.332665729 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.334696076 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.332092806 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.332452224 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.335108086 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.333765801 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.332178568 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.335938303 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.331765026 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.335968507 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.333307145 seconds)
  done (took 41.248437661 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.344468477 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.347909853 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.335796626 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.337694388 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.33399907 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.333509647 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.335446313 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.337162786 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.335969084 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.335753638 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.336208932 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.337172561 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.334426698 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.335621268 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.334786837 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.334817629 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.337911993 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.336845182 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.335340593 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.338101356 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.336999489 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.338806178 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.335836566 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.337425623 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.335624869 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.336400098 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.336559804 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.3353159 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.336880507 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.337851391 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.337514909 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.335686553 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.337403195 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.337887741 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.338705385 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.336273637 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.34151225 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.346922919 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.337673195 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.337901168 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.336441083 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.336907513 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.335619755 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.335727274 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.336621715 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.338084452 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.33944611 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.338942011 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.33994701 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.343504943 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.342379602 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.33892202 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.339813003 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.339414033 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.341538513 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.342924909 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.342099963 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.338978104 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.342308194 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.33978685 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.338571303 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.338579548 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.338225615 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.337546847 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.339256505 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.339935086 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.340065639 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.340662723 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.338859874 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.337396396 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.338240304 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.341018423 seconds)
  done (took 97.602347513 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.343038363 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.338257882 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.334718551 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.335558276 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.339522332 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.340521591 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.337968428 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.340555424 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334404227 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.342813947 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.339309116 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.336993819 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.337832198 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.340560441 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.339851124 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.336569579 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.339774252 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.339536412 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.340330446 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.34013756 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.339259464 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.338726531 seconds)
  done (took 30.709657145 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.341262066 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.340944506 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.336820899 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.346131517 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.338653955 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.344317123 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.342650371 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.341060746 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342220601 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.339379324 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.338756977 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.343506366 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.340023194 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.337849884 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.33795074 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.341982335 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.342107602 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.341601162 seconds)
  done (took 25.392098236 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.34344142 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.340543209 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.343680357 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.340141177 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.338802415 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.343800408 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.338537476 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.343586947 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.34276613 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.339794605 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.343808869 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341793094 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.340526014 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340095074 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.343127072 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.340049353 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.343627181 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341738525 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.342734025 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.339954961 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.341010146 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.344340533 seconds)
  done (took 30.77463053 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.346184559 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.345050489 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.340832912 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.33945439 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.342821746 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.34392848 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.344186296 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.339856762 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.343097523 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.346033335 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.342669595 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.34167792 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.344506445 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.340867938 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.339683252 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.342957849 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.347136367 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.340724393 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.344524091 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.339312913 seconds)
  done (took 28.11405591 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.347338644 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.346196619 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.344561903 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.348148112 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.347546047 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.348418548 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.345092799 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.348887862 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.349424117 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.347004001 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.345133279 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.348376678 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.349909805 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.348795946 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.348772431 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349894948 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.34801371 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.347803817 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.348288745 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.348754827 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.348263585 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.358260961 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.350608071 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.349438338 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.349170691 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.347387871 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.347013028 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.349735118 seconds)
  done (took 39.012437355 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.347602526 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.345157455 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.34246658 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.34369434 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.343176482 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.341706501 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.342438318 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.346031993 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.344975376 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.344798984 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.350143758 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.346693287 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.346115019 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.347446789 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.345531123 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.346473935 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346964026 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.34330142 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.344706566 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.347152048 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.346709156 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.346925862 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.345820665 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.343159092 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341530583 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.350125784 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.348658916 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.343607225 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.346974509 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.344475626 seconds)
  done (took 41.623188385 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.395615101 seconds)
    (2/2) benchmarking "in"...
    done (took 1.384112441 seconds)
  done (took 4.042189474 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.347648647 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.346027401 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.347889122 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.3433422 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.344496537 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.349945561 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.347189275 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.3446793 seconds)
  done (took 12.032609446 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.351685199 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.351300146 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.347895097 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.347889846 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.348056855 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.350857496 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.360624332 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.371460622 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.347996512 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.349232279 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.358543713 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.360755253 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.355181442 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.348958752 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.352726283 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.353201039 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.349707869 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.348580519 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.350062735 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.353236053 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.350808601 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.356390136 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.352855243 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.348327113 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.350064008 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.366062184 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.357801894 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.353071475 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.351050373 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.353832711 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.350186393 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.351453707 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.35131966 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.352018934 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.351947736 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.351151592 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.362551021 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.381148058 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.358034822 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.349090619 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.351960867 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.348094481 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.351652719 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.351974403 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.352970314 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.347681579 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.35015191 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.348402127 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.351661027 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.356324998 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.36188465 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.351329515 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.348654623 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.354498566 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.352518266 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.357151284 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.373492312 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.355383018 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.362074755 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.361936148 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.366336774 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.378312469 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.356065466 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.350031673 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.362689232 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.382176364 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.361001331 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.373735021 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.350738387 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.352904983 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.359624777 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.364877803 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.380921554 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.351526914 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.353463815 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.354270987 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.352657889 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.351809196 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.359190802 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.379991395 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.353342814 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.353743894 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.36805093 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.384359839 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.357233562 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.353294844 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.353949092 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.354067604 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.358253889 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.368113661 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.377364836 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.357193748 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.35376101 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.355770885 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.355051962 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.356642591 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.354212443 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.35533314 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.352454037 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.354322848 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.354068149 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.35959228 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.368256233 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.356111938 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.354390147 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.360336149 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.354801911 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.355394019 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.36017663 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.353355757 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.352913444 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.356902867 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.364818029 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.351759555 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.358175295 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.368400345 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.354707779 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.356761068 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.356757746 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.356519902 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.365254828 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.384661716 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.353791182 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.355387845 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.360386825 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.371119408 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.355701562 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.36021981 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.356852579 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.354706837 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.35295979 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.358056002 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.356165839 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.356228502 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.360881771 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.360940135 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.353946232 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.356261944 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.358394119 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.358797947 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.357266904 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.357453546 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.359007843 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.357595266 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.356395229 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.360236316 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.362722725 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.358811642 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.358509662 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.358573504 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.355992558 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.358244494 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.358240841 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.358564458 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.359333557 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.357229354 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.358771506 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.356262076 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.35916711 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.357613191 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.356174557 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.359771947 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.363894488 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.359989466 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.363201476 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.359450469 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.355710333 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.356750379 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.35893433 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.35795433 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.358804257 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.359936834 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.363575181 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.370251423 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.360502302 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.360187715 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.363610306 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.359660763 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.358352297 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.358433057 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.363526331 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.371830548 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.359230914 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.366647543 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.358439766 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.361699339 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.360592726 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.356917721 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.359978598 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.360854187 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.366254977 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.373490165 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.372589917 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.38802505 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.363098626 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.364056292 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.362521718 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.369083318 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.363893144 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.360130411 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.361315233 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.359381327 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.361522874 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.359415195 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.360867572 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.360253275 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.360748254 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.359100886 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.36356811 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.362275028 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.360898492 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.360761557 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.362142705 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.357356261 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.360729759 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.360761624 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.362812956 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.358821694 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.362383724 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.363247622 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.361240221 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.362295666 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.36757695 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.358199435 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.364291506 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.362712707 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.3610104 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.360086441 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.363459959 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.363581304 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.36366437 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.370111103 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.386514135 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.363069873 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.369229799 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.384306119 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.359530324 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.365543888 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.364471406 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.359312599 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.366119553 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.374239772 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.363136591 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.363591242 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.363420961 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.366206196 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.365565661 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.369024788 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.360788412 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.364441066 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.365157596 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.365174029 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.362328902 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.366541735 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.365764761 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.364273322 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.365932129 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.365637706 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.365852228 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.368741354 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.363030216 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.366959293 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.36587479 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.367538493 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.375921241 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.36831982 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.36346635 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.367568335 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.365936226 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.369179803 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.365986402 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.366281051 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.367309234 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.375639018 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.394191788 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.372775759 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.368837462 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.366932969 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.370445813 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.369499179 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.374213386 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.365914342 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.369877267 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.369181166 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.364772124 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.363310738 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.366911959 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.367633148 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.368914339 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.367163415 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.372477892 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.36734843 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.36412685 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.367603716 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.370430914 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.36910906 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.36699506 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.364615794 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.367982406 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.369068727 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.366210118 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.367651607 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.372482625 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.3938637 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.368768313 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.36824122 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.366769301 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.368158385 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.368149483 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.365804599 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.372758029 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.3757439 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.37280466 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.381127988 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.372829384 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.380359237 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.369624049 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.373482838 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.384053037 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.367012264 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.369528707 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.370562128 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.368175521 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.376124418 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.390412069 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.372473688 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.377544157 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.367879738 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.367640451 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.371130297 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.369196807 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.367817023 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.369097471 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.379970978 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.395727957 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.377751563 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.372700621 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.36726359 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.370576664 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.370231281 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.37136788 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.375622034 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.36678836 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.375601482 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.371496177 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.370355879 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.372360677 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.368509664 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.370375842 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.367560422 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.369249082 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.375584116 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.396107579 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.379356948 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.372860541 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.379677607 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.369098149 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.379372365 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.393271799 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.372550951 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.372446812 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.373386162 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.37468107 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.373305331 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.37372576 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.37217132 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.3728301 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.381973926 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.372847114 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.375458655 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.374638641 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.373717137 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.371752672 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.383699353 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.397024574 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.375701088 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.375831904 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.369564502 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.374303862 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.377087403 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.371659718 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.374875006 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.379546776 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.389225803 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.388241735 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.370181275 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.376006204 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.374589759 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.373562055 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.375394345 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.375784516 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.371900967 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.372132766 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.375659408 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.374143559 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.376095068 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.373913365 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.375232104 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.374985593 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.375486109 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.388866645 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.37371623 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.373535533 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.376147613 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.375863399 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.374466985 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.37326553 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.37211632 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.37287884 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.373452452 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.374784414 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.383371576 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.382684005 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.379539887 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.373827307 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.372085964 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.376510741 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.374148609 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.371354432 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.372989678 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.373689954 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.376889584 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.373134578 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.375019393 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.37008683 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.380547764 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.374150711 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.376119919 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.380297864 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.387195613 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.376571206 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.376729254 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.375580505 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.376261114 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.3775941 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.377883031 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.382717816 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.379500803 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.392093559 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.390520816 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.380009763 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.376151007 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.378541003 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.386115382 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.375878967 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.379886542 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.376956096 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.378582822 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.380937364 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.386212308 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.38084406 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.390871581 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.380483192 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.377626319 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.386477927 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.405676909 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.376851331 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.379793041 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.3873569 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.381485407 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.378766732 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.377331926 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.377717916 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.386972445 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.40146475 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.379806792 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.380672078 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.379145972 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.384436006 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.387439306 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.381232591 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.380769336 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.375188401 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.383166787 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.377172404 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.378596476 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.378869117 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.3791395 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.38192837 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.383818072 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.388414884 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.379293288 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.380046294 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.379868797 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.380932567 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.380257812 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.381707776 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.376729997 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.375884784 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.377770486 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.381922977 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.381445817 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.38166839 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.378478711 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.383157365 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.382654668 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.378055043 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.38414356 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.395613539 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.39037948 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.379498408 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.37972295 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.383264043 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.380222658 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.378941546 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.382534639 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.380198719 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.382270783 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.378121865 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.379182417 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.378548947 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.384240935 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.400197409 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.406863661 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.382264518 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.379995254 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.384827418 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.382535394 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.380145579 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.380262617 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.383893228 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.38332068 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.387780064 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.382208852 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.388236213 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.40480268 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.384282906 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.387240916 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.382991457 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.391333452 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.385892898 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.379849873 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.381221317 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.386756251 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.398333269 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.381518417 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.391905718 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.415908276 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.407923958 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.382539188 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.379470242 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.382676026 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.38392361 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.385300212 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.384032606 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.382954366 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.38063735 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.383122791 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.386155742 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.391296755 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.383532142 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.385553045 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.383939521 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.382973352 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.386695659 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.380070397 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.381604071 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.381468099 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.384554471 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.384097571 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.384858258 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.384405706 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.396344152 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.412163393 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.385975837 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.385551456 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.380354191 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.388864441 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.386326713 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.398207218 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.39448715 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.383919845 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.393147706 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.407126913 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.38440394 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.382525647 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.384948468 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.384845103 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.385994533 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.383537581 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.399006982 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.408942168 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.389644003 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.382775885 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.385284503 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.384649033 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.385349979 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.385608507 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.385847472 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.386326228 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.391916384 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.390680341 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.384601725 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.385333065 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.390072351 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.395917616 seconds)
  done (took 818.170853802 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.381886084 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.385409755 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.381893596 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.384103345 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.384886948 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.382491205 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.38463434 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.383378271 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.383748331 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.383334586 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.383083441 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.38671392 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.386200373 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.386073931 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.384914253 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.383680801 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.382919419 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.383593853 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.382969029 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.386162269 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.385628033 seconds)
  done (took 30.362797696 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.387565224 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.383714069 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.384685218 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.386583559 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.383813132 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.388081964 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.384540889 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.390205856 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.388801963 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.388351675 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.388416726 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.390027728 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.387419023 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.385594295 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.384288882 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.385990067 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.388411772 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.384132371 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.385656663 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.386914098 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.387803536 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.387014722 seconds)
  done (took 31.804743048 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.389282051 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.38958131 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.388708909 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.384618416 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.390558412 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.385835454 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.388307458 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.390405542 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.392164443 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.389234532 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.388360775 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.391595652 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.397553015 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.397128362 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.391479519 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.389763565 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.388970284 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.389957131 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.389343022 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.384231278 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.394102828 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.386608323 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.387910468 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.387605434 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.388497199 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.387284287 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.390126659 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.389843752 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.391742332 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.393884051 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.390592255 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.388489735 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.39216933 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.387473416 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.389883157 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.39520579 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.389065259 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.386826647 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.390480685 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.403914533 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.417129054 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.392629019 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.396361688 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.390250855 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.391346776 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.392629653 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.399465381 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.387182047 seconds)
  done (took 68.075341855 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 2.01320201 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.02380287 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.025211813 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.038577404 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.051987697 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.024320517 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.025794916 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.024132822 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.016542819 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.020971281 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.030064376 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.028068245 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.025042119 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.02155946 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.026479386 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.057344578 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.009136317 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.019112564 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.019488157 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.015668515 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.022327424 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.035149062 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.018528115 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.026436018 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.020425256 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.025783531 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.055618455 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.026927855 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.026576899 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.019818009 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.020539101 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.025834867 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.02876208 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.023683787 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.02964532 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.026131108 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.02546832 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.046222156 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.021150545 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.024715639 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.018972193 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.026273365 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.026911189 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.041677115 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.029555017 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.021921703 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.02742998 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.025648316 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.046526103 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.019930782 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.023855775 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.023355755 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.019711493 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.023915697 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.034547028 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.031666096 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.026265266 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.025539954 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.028689639 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.049103814 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.041987035 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.03366267 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.026468151 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.03068881 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.030736218 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.029015042 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.029434789 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.029313922 seconds)
  done (took 139.190681489 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.394287648 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.392500826 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.393513617 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.393313202 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.394072857 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.392530137 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.396001887 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.394688224 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.394818192 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.393663423 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.393151934 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.394666069 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.394984287 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.397228101 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.395423696 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.394816749 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.396435122 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.393423452 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.395833891 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.396716231 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.397428847 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.394490062 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.394906182 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.3949666 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.393509325 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.395525546 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.396416192 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.396230638 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.396467391 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.395467063 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.396114342 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.397447999 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.396929087 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.394166621 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.397045736 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.395480953 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.398437738 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.396728882 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.397646949 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.397737683 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.396722121 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.39962761 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.395562784 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.397948298 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.395182663 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.396690518 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.395872119 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.398294511 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.398329342 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.397043365 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.397986119 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.396252155 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.401080313 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.398485457 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.398264946 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.408578789 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.402094447 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.400362306 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.39697829 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.399332297 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.398463924 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.398496136 seconds)
  done (took 87.888846063 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.399524933 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.397057473 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.393913533 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.39343287 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.396677005 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.395179182 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.400830324 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.399070899 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.397682307 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.402252622 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.401981778 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.396618874 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.398473749 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.400903023 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.401431603 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.397167452 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.397096502 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.396310591 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.397423809 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.396225991 seconds)
  done (took 29.265623999 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.399402703 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.398848281 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.397868734 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.397523153 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.397149277 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.398179896 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.398724072 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.398955917 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.396799267 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.400263107 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.398210013 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.401190671 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.398587451 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.397823893 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.400761408 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.39844823 seconds)
  done (took 23.689252691 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.399262743 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.401043532 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.400223702 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.399082254 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.397265042 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.399262493 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.401706722 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.397705249 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.399224856 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.401907417 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.401728029 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.402049677 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.402138051 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.397838755 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.400956616 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.399781356 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.3992169 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.399673838 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.401045661 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.402947439 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.399278951 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.398768209 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.400712365 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.402587611 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.398834386 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.395577484 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.39831299 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.400425443 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.400508366 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.402271772 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.399071605 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.39934527 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.398059162 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.399394378 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.405261688 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.399230044 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.401783861 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.4019551 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.401521539 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.40135117 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.402648166 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.400719496 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.402742906 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.401549863 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.400421408 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.402262057 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.400761461 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.400565257 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.401420255 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.400995629 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.403593106 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.40487114 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.403830663 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.404882965 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.403301715 seconds)
  done (took 78.35177869 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.403131783 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.404263977 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.40264761 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.403397075 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.402616061 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.401707155 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.404300135 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.400905975 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.401023145 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.401519685 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.403223196 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.406692934 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.402607767 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.403500923 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.402313591 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.404369407 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.402581165 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.401036036 seconds)
  done (took 26.563332139 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.403445969 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.401968473 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.405182951 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.403298166 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.40472607 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.405035395 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.400966139 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.407663632 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.406520769 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.40238504 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.402965366 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.406603219 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.404258903 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.407858909 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.403171411 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.404205472 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.404680335 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.404812691 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.403021634 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.40273471 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.405123527 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.405711317 seconds)
  done (took 32.207123821 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.405232531 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.40675753 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.404821019 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.421765793 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.433778759 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.405250805 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.407298324 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.407580435 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.430748856 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.464769106 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.460294344 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.433525865 seconds)
  done (took 18.394807181 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403458146 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406341786 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.404632731 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.412008457 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407719831 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.4043116 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405403239 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405635374 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409091036 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405980318 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404163074 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409492143 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409591377 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40649361 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40712549 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409117128 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40598699 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406439234 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407531905 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410315531 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406463991 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409684033 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408368052 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406081577 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403937942 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404847885 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409391744 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407076108 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408351193 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409846829 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412232818 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408851544 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406668594 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407051943 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410768906 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408157909 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406393226 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410920482 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407123349 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405569234 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.409145589 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409285702 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407875926 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409480065 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409736538 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405817774 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407203458 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405007696 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407649043 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409778938 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410356067 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410401494 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40998808 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411019141 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409518644 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411294239 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405855659 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407137088 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.4085984 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410136303 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408917327 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411346611 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407438115 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407272311 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410654157 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409466287 seconds)
  done (took 94.24290485 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.4061232 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.410415943 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407790908 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406062014 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410324946 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410466216 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407880005 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409596202 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407469859 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406899483 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41275096 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.409364508 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411417208 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411255398 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407973807 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408285268 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406960986 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40940503 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406955681 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411697283 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410893574 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409606248 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409097763 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410759997 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410513605 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411986728 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409970681 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410394291 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407040422 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411664871 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40991156 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408590334 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409784392 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.407480648 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410419712 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410460704 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408892245 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410840761 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407934296 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411175304 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41020166 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412660379 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41101353 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410742611 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413526629 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.412707883 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409407145 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410053043 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411210785 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410585876 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41158109 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412687639 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410847712 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410799001 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412609565 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412539007 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410598182 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413184945 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413011418 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414049823 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411516296 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412989126 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413632953 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410151008 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.412373666 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41156255 seconds)
  done (took 94.40167387 seconds)
done (took 1957.612526464 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.580207466 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.532243602 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.413481895 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.432480176 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.409522479 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.407476113 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.421251246 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.410426505 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.417629657 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.412430491 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.414986543 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.601796237 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.407141248 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.40837857 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.416260832 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.50726738 seconds)
  done (took 28.513742869 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.445223211 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.42365102 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.5591059 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.436662297 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.445738831 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.636993565 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.484217259 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.422122509 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.628169039 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.462643982 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.412248344 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.441971647 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.418615423 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.410598516 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.436062492 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.639821159 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.70514675 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.407733498 seconds)
  done (took 31.136737197 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.977750021 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.433641103 seconds)
  done (took 5.733278727 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.445261796 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.418792047 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.420623449 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.41997405 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.414060371 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.404430988 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.418727611 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.413562077 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.412198289 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.57234195 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.415657897 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.433051193 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.443627201 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.421519855 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.420643925 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.467368437 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.589081406 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.419978764 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.418967512 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.426901549 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.419676647 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.537414173 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.466092254 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.418300458 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.571797017 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.414793985 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.420087683 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.429754723 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.622459123 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.418332597 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.420364616 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.4169669 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.422042556 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.428531305 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.962676933 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.427054823 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.44624988 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.430292826 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.417755686 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.58363512 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.421867149 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.426894047 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.41752669 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.930970974 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.59185247 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.563651569 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.436777365 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.416329722 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.421687123 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.496465299 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.422658274 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.422298322 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.472585936 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.321530355 seconds)
  done (took 90.574506444 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.453515837 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.412281206 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.602742481 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.44484084 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.407422428 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.415367035 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.407109466 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.765061614 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.412913957 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.414951084 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.729611616 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.061497333 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.438906261 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.461716997 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.255687341 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.469387619 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.412191866 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.427228537 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.418699519 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.410444158 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.016623399 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.410113514 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.428769711 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.48035419 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.457090157 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.999995038 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.409544646 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.41343607 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.439215652 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.40588843 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.014182385 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.43159555 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.47611146 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.411255469 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.729112588 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.874554445 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.843542974 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.421882811 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.453719965 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.412407271 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.416349088 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.988095052 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.840705574 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.412778429 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.416852518 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.002167839 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.409811866 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.418234415 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.41643245 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.676336281 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.417638863 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.417001364 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.435005036 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.417101682 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.415196548 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.520703373 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.503267215 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.017676436 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.415665666 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.41520207 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.441042973 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.41329956 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.421454866 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.416083527 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.416824769 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.859301695 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.624035378 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.41959039 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.862350295 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.013956083 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.43386933 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.065196287 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.434755034 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.435381912 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.602250245 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.417341544 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.436499918 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035700741 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.450926803 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.413843799 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.843970853 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.420925766 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.74115802 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.431211693 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.441554643 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.029973971 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.426926861 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.419235696 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.421740904 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.433205051 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.415822868 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.418167566 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.731524739 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.445260422 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.415188039 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.416105521 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.428077754 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.426609118 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.416233441 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.419782452 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.067954079 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.447712202 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.418753753 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.420705603 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.42005907 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.418671734 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.418884621 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.420866375 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.694423116 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.416280828 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.442798736 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.426663398 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.414604887 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.426945688 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.492435224 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.421490862 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.810909579 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.420846467 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.417891726 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.42305122 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.425549078 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.451044155 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.422454544 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.418696167 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.390638407 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.690435588 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.443248447 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.420167887 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.419302007 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.418439612 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.412685322 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.417574253 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.459374797 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.421327845 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.250212616 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.439400816 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.439022033 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.418792528 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.431368192 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.421896797 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.417926038 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.418590093 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.741082184 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.730613812 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.625705941 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.423921975 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.419476729 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.261401682 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.468855921 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.610379926 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.444537053 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.416382375 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.677239693 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.614552247 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.423262409 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.418204939 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.418063715 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.692794661 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.423271253 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.74662124 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.049803018 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.44267602 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.42465406 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.269347395 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.15670362 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.416787245 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.425897797 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.736101644 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.435394346 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.422744681 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.420853518 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.42312886 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.417661481 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.426885234 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.424749118 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.424319067 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.421003493 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.466401882 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.622688957 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.44285267 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.429715096 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.02269571 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.439835523 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.416850758 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.424966746 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.41980842 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.421643498 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.480914363 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.428788806 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.456605921 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.424408973 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.428683659 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.040673501 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.42973129 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.421383901 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.62376146 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.185353945 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.443302775 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.424641955 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.438812467 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.300402658 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.043130359 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.444362123 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.821076855 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.433397712 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.465668374 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.42470693 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.45624071 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.041626658 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.427521475 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.441353919 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.157655617 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.439280087 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.839970025 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.420447536 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.423935462 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.1133269 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.441139065 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.426587804 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.418052314 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.432915124 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.72233081 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.423810183 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.429296388 seconds)
  done (took 520.321885663 seconds)
done (took 677.598326435 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.421327076 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.426084822 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.410686687 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.423726347 seconds)
  done (took 11.014467979 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.437065772 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.430812361 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.434450859 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.436286499 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.437421149 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.433987967 seconds)
  done (took 9.948387653 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.429797858 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.430397313 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.425984531 seconds)
  done (took 8.625952293 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.687093154 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.45430075 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.829439979 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.451901848 seconds)
  done (took 9.765065408 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.434963019 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.434674565 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.435756734 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.438404966 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.439618606 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.439601216 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.440263525 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.440151196 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.439941222 seconds)
  done (took 14.281199707 seconds)
done (took 54.968196839 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.416233235 seconds)
    (2/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.148058692 seconds)
    (3/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.44272327 seconds)
    (4/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.48828179 seconds)
    (5/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.638363718 seconds)
    (6/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.469707647 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.48135079 seconds)
    (8/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.449437088 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.444304027 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.444057595 seconds)
    (11/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.443450249 seconds)
    (12/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.429400927 seconds)
    (13/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.447734536 seconds)
    (14/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.445963075 seconds)
    (15/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.438900772 seconds)
    (16/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.442662626 seconds)
    (17/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.607888614 seconds)
    (18/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.461249577 seconds)
    (19/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.605567257 seconds)
    (20/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.522408588 seconds)
    (21/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.445644807 seconds)
    (22/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.675701067 seconds)
    (23/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.447036481 seconds)
    (24/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.484668036 seconds)
    (25/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.446917828 seconds)
    (26/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.519171259 seconds)
    (27/286) benchmarking ("sort", Int64, true)...
    done (took 2.082674794 seconds)
    (28/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.457720285 seconds)
    (29/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.205032923 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.462990251 seconds)
    (31/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.442747614 seconds)
    (32/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.518621524 seconds)
    (33/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.517048684 seconds)
    (34/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.21213716 seconds)
    (35/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.573178618 seconds)
    (36/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.604473167 seconds)
    (37/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.609545272 seconds)
    (38/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.519673396 seconds)
    (39/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.590328216 seconds)
    (40/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.6854421 seconds)
    (41/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.439339107 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.457088976 seconds)
    (43/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.833251972 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.465254537 seconds)
    (45/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.50894599 seconds)
    (46/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.453080097 seconds)
    (47/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.432070695 seconds)
    (48/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.252535093 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.511110676 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.445014891 seconds)
    (51/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.495474288 seconds)
    (52/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.442856079 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.635381561 seconds)
    (54/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.833440927 seconds)
    (55/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.468472398 seconds)
    (56/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.454131951 seconds)
    (57/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.51375686 seconds)
    (58/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.422878098 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.556650329 seconds)
    (60/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.457673797 seconds)
    (61/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.448063794 seconds)
    (62/286) benchmarking ("sort", BigInt, false)...
    done (took 2.43536964 seconds)
    (63/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.591875052 seconds)
    (64/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.474802098 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.488032681 seconds)
    (66/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.540923626 seconds)
    (67/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.450425502 seconds)
    (68/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.489185872 seconds)
    (69/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.448170714 seconds)
    (70/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.43366573 seconds)
    (71/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.587269687 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 1.6318835 seconds)
    (73/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.432099883 seconds)
    (74/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.459504056 seconds)
    (75/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.455448591 seconds)
    (76/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.50325064 seconds)
    (77/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.337056224 seconds)
    (78/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.670351942 seconds)
    (79/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.116551743 seconds)
    (80/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.492952602 seconds)
    (81/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.448215781 seconds)
    (82/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.452330272 seconds)
    (83/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.451086242 seconds)
    (84/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.219708856 seconds)
    (85/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.606627267 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.55536269 seconds)
    (87/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.522657926 seconds)
    (88/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.502829541 seconds)
    (89/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.166949284 seconds)
    (90/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.59978537 seconds)
    (91/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.575044578 seconds)
    (92/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.29822877 seconds)
    (93/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.465507888 seconds)
    (94/286) benchmarking ("sort", Float64, true)...
    done (took 2.264794664 seconds)
    (95/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.449679748 seconds)
    (96/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.449141772 seconds)
    (97/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.678370477 seconds)
    (98/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.612067343 seconds)
    (99/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.464695229 seconds)
    (100/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.476090301 seconds)
    (101/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.091634759 seconds)
    (102/286) benchmarking ("sort", Int8, false)...
    done (took 1.584660199 seconds)
    (103/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.42709176 seconds)
    (104/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.619883547 seconds)
    (105/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.464706144 seconds)
    (106/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.437592476 seconds)
    (107/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.435178276 seconds)
    (108/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.172919472 seconds)
    (109/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.572125582 seconds)
    (110/286) benchmarking ("sort", Float32, false)...
    done (took 1.657740241 seconds)
    (111/286) benchmarking ("sort", Bool, false)...
    done (took 1.497594158 seconds)
    (112/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.444511923 seconds)
    (113/286) benchmarking ("sort", BigInt, true)...
    done (took 2.437691812 seconds)
    (114/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.671805049 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.460648345 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.55651645 seconds)
    (117/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.8076326 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.547301675 seconds)
    (119/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.58763193 seconds)
    (120/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.438255784 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.464533616 seconds)
    (122/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.285105696 seconds)
    (123/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.458085159 seconds)
    (124/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.43962327 seconds)
    (125/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.473204244 seconds)
    (126/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.440097314 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.497840383 seconds)
    (128/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.436596606 seconds)
    (129/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.656529747 seconds)
    (130/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.522475335 seconds)
    (131/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.491491378 seconds)
    (132/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.426315523 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.448721063 seconds)
    (134/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.529030273 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.56498469 seconds)
    (136/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.549310986 seconds)
    (137/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.453997174 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.567657946 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.547899106 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.45425978 seconds)
    (141/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.526311909 seconds)
    (142/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.445603288 seconds)
    (143/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.459905765 seconds)
    (144/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.466562756 seconds)
    (145/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.647135618 seconds)
    (146/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.459945154 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.500781509 seconds)
    (148/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.453599574 seconds)
    (149/286) benchmarking ("sort", Float64, false)...
    done (took 1.648258261 seconds)
    (150/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.53664196 seconds)
    (151/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.43196648 seconds)
    (152/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.467042631 seconds)
    (153/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.603982435 seconds)
    (154/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.523193396 seconds)
    (155/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.873376087 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.568049815 seconds)
    (157/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.521027448 seconds)
    (158/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.558729965 seconds)
    (159/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.555040207 seconds)
    (160/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.56959129 seconds)
    (161/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.457400105 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.514637362 seconds)
    (163/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.426448339 seconds)
    (164/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.457291667 seconds)
    (165/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.462153821 seconds)
    (166/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.448876732 seconds)
    (167/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.439826691 seconds)
    (168/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.471609665 seconds)
    (169/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.224051362 seconds)
    (170/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.444915706 seconds)
    (171/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.476134696 seconds)
    (172/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.581814357 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.472795956 seconds)
    (174/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.461373809 seconds)
    (175/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.555645909 seconds)
    (176/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.493302585 seconds)
    (177/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.583526495 seconds)
    (178/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.446790386 seconds)
    (179/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.568025166 seconds)
    (180/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.47916705 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.449725672 seconds)
    (182/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.651295885 seconds)
    (183/286) benchmarking ("sort", Float32, true)...
    done (took 2.179777731 seconds)
    (184/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.45588586 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.500387257 seconds)
    (186/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.553987621 seconds)
    (187/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.429513375 seconds)
    (188/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.704656332 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.640146295 seconds)
    (190/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.533215111 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 1.829953152 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.453618452 seconds)
    (193/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.475787186 seconds)
    (194/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.459602714 seconds)
    (195/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.103310078 seconds)
    (196/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.620683696 seconds)
    (197/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.47331507 seconds)
    (198/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.54337257 seconds)
    (199/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.427245896 seconds)
    (200/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.588364426 seconds)
    (201/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.187960767 seconds)
    (202/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.536051149 seconds)
    (203/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.472160551 seconds)
    (204/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.089244161 seconds)
    (205/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.353054285 seconds)
    (206/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.47007132 seconds)
    (207/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.666194117 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.453193764 seconds)
    (209/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.506031799 seconds)
    (210/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.100415789 seconds)
    (211/286) benchmarking ("sort", Int8, true)...
    done (took 1.978738135 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.454902211 seconds)
    (213/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.754356011 seconds)
    (214/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.692395237 seconds)
    (215/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.384168192 seconds)
    (216/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.477098742 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.636321382 seconds)
    (218/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.457736899 seconds)
    (219/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.682077064 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.528624295 seconds)
    (221/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.522490264 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.520138451 seconds)
    (223/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.540068943 seconds)
    (224/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.453696754 seconds)
    (225/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.630156582 seconds)
    (226/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.68190241 seconds)
    (227/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.623272919 seconds)
    (228/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.523863182 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.487399456 seconds)
    (230/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.485150712 seconds)
    (231/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.456314232 seconds)
    (232/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.528796924 seconds)
    (233/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.479654165 seconds)
    (234/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.461430557 seconds)
    (235/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.458094144 seconds)
    (236/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.530252257 seconds)
    (237/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.529404061 seconds)
    (238/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.481865842 seconds)
    (239/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.457826492 seconds)
    (240/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.455034781 seconds)
    (241/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.383594797 seconds)
    (242/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.464517573 seconds)
    (243/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.684522245 seconds)
    (244/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.099558195 seconds)
    (245/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.466471757 seconds)
    (246/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.497538849 seconds)
    (247/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.541414461 seconds)
    (248/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.462526591 seconds)
    (249/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.456606982 seconds)
    (250/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.456093924 seconds)
    (251/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.554028336 seconds)
    (252/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.462650335 seconds)
    (253/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.443488232 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.702851714 seconds)
    (255/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.465529259 seconds)
    (256/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.566498775 seconds)
    (257/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.445846644 seconds)
    (258/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.502404188 seconds)
    (259/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.653557927 seconds)
    (260/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.478505127 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.470127422 seconds)
    (262/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.591360909 seconds)
    (263/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.430083783 seconds)
    (264/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.632153989 seconds)
    (265/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.457720514 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.620812783 seconds)
    (267/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.105081677 seconds)
    (268/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.174005394 seconds)
    (269/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.463831259 seconds)
    (270/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.467921517 seconds)
    (271/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.58396801 seconds)
    (272/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.454251374 seconds)
    (273/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.45897682 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.454678686 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.501191809 seconds)
    (276/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.537346079 seconds)
    (277/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.458050032 seconds)
    (278/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.466405363 seconds)
    (279/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.542086565 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.452731719 seconds)
    (281/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.236578018 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.531923186 seconds)
    (283/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.433389689 seconds)
    (284/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.483807028 seconds)
    (285/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.233242636 seconds)
    (286/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.257646871 seconds)
  done (took 505.414948231 seconds)
done (took 506.755544308 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.492565504 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.502491798 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.455708096 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.489964395 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.569071218 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.631711394 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.467079615 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.495254436 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.504148466 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.508452892 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.462103296 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.63335111 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.459148685 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.458386621 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.456081253 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.497682307 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.446245182 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.481310272 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.474496036 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.490699153 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.473212044 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.465935065 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.507984856 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.633048884 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.460245185 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.462032308 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.462191947 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.478834503 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.571055844 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.461258396 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.461152253 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.469794724 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.446717637 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.485072607 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.451317098 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.480222157 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.471920381 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.468763826 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.492494988 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.57129302 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.457994356 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.468798544 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.460843966 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.45903063 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.459382886 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.496511104 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.459894684 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.515510397 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.500475997 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.502912538 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.449609552 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.467396488 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.471610702 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.460895894 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.468803365 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.459560415 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.515671854 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.503560786 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.478981779 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.505745124 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.456606766 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.46481705 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.497354311 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.478249284 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.471177353 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.448922746 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.456509957 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.502632022 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.455704763 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.460096609 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.448969259 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.464768657 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.462123563 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.473345312 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.494017357 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.447939597 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.454809194 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.457875963 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.465153807 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.459417226 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.508821187 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.503239986 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.514354797 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.463753022 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.503867841 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.63972836 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.47256865 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.463449987 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.493125913 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.482034365 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.469053511 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.477760591 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.496257656 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.462193866 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.508841643 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.518349369 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.475341125 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.476312436 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.512145637 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.476465461 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.460924024 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.504874598 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.460101041 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.459299684 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.463900065 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.583153836 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.458889307 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.458444491 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.497136175 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.509846324 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.521929577 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.449871052 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.471619993 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.510023513 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.471822732 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.521485145 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.463597226 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.450109043 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.449606425 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.581986227 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.464760196 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.466304652 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.51101552 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.520921891 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.466192556 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.45807444 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.461535136 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.509260358 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.58436165 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.475804487 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.5751603 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.462092693 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.466497571 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.496576834 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.507783862 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.495546595 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.522134282 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.508424567 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.480587614 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.464644512 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.476008088 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.476594487 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.465601872 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.520787741 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.461711147 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.498140369 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.508124975 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.509694603 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.497282577 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.588375388 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.470243604 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.453472645 seconds)
done (took 243.486286901 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.524837144 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.46224723 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.571224083 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.462599377 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.565550033 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.56627663 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.458683962 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.462528727 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.460898182 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.838780723 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.462206373 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.460924517 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.461131668 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.460717795 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.548803002 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.463815098 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.461000323 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.80145206 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.463986845 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.533703612 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.458376335 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.460926462 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.461458468 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.844058642 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.462486551 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.461286121 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.531998337 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.463873418 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.806678644 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.455808359 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.461289283 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.807467191 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.551210737 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.481479635 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.4729274 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.4706353 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.570012008 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.485589182 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.54629545 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.5464898 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.57154292 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.502333448 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.46023117 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.461395911 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.461652652 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.465409707 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.460888069 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.490006538 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.462912136 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.461817168 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.802383294 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.474169357 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.467944973 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.462112973 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.460365776 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.485895506 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.462281449 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.464380996 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.556210045 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.466934216 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.528756816 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.845545024 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.843973662 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.468762414 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.46632188 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.46299189 seconds)
  done (took 113.174865526 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.534324483 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.541349987 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.596880044 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.467931993 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.519123084 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.602735864 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.466900213 seconds)
  done (took 12.096204834 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.471687434 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.466375449 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.518733109 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.517518794 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.466776223 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.67876172 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.466627512 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.479751527 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.464507765 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.544115244 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.469668845 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.466167151 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.470608506 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.462788871 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.517816042 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.479453254 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.588017703 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.47029764 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.466074255 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.623526173 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.465063446 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.473168291 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.542716722 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.47962258 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.470272351 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.474779105 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.434622987 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.469972864 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.465675696 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.465113734 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.462529274 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.576799024 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.464363824 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.463608005 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.467035369 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.628233932 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.469690667 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.465327438 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.468201223 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.459029466 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.468076092 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.46909363 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.467988042 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.466361929 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.468134956 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.491004947 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.470608897 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.467205254 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.467324733 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.470717011 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.543474668 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.470146352 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.469403036 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.467288309 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.547118853 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.478989612 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.469542442 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.467316788 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.470213845 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.468513545 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.623925107 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.518533591 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.470031771 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.522631837 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.47089528 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.469670216 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.469652045 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.471105896 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.561739039 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.470233823 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.517505176 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.46992416 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.695877859 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.496831525 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.47197683 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.470896565 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.473256037 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.468775431 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.467672366 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.478046868 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.465574497 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.470714494 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.475776061 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.468795402 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.466616212 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.65521114 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.629375019 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.467884608 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.483981289 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.477065192 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.465703661 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.544624471 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.469933993 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.467395798 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.521925016 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.587959889 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.547561759 seconds)
  done (took 151.410020228 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.4766464 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.4814206 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.474929171 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.494166628 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.473368437 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.477530381 seconds)
  done (took 10.252306412 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.479234496 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.472915658 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.469852473 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.471857536 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.467887142 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.470178381 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.469515101 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.472524921 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.475586913 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.47257851 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.476009406 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.474158906 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.47495475 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.472798884 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.473819676 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.475397558 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.474870228 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.471521297 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.473513047 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.473359511 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.474769779 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.473951204 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.472666268 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.473954608 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.481543463 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.474072039 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.48334663 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.477189902 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.473189193 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.482835321 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.494920142 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.475962945 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.477478951 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.479858704 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.478491783 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.475133743 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.479547272 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.47668699 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.472854459 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.476184338 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.47772743 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.473308438 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.472822772 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.477914562 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.479253727 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.482193807 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.482141093 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.485724462 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.478883989 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.47738086 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.47827778 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.479607125 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.478031789 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.476699565 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.478055227 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.502591675 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.484978263 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.478859601 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.475810476 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.478199732 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.477225306 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.478606124 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.477966886 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.48159831 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.475381841 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.48002659 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.480183363 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.482200325 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.475637658 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.476370792 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.481522211 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.476981337 seconds)
  done (took 108.738442451 seconds)
done (took 397.032785971 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.547725566 seconds)
  done (took 3.925015278 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.673452907 seconds)
  done (took 4.056402872 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.433849497 seconds)
  done (took 26.827125443 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.557959631 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.581004524 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.474639771 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.466538769 seconds)
  done (took 11.459370029 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.926874048 seconds)
  done (took 4.306740995 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.467102222 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.464400443 seconds)
  done (took 6.31294279 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.898630323 seconds)
  done (took 4.2768541 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.946968215 seconds)
  done (took 4.339044238 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.495540898 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.482194794 seconds)
  done (took 6.363730034 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.45573144 seconds)
  done (took 3.835771651 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.969328133 seconds)
  done (took 18.347032347 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.476840556 seconds)
  done (took 3.860329809 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.509139182 seconds)
  done (took 3.89019388 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.788257242 seconds)
  done (took 7.16556481 seconds)
done (took 110.343576465 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.469260719 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.469221833 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.470279297 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.470495127 seconds)
  done (took 11.259231376 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.529747593 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.529516913 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.531795542 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.527405398 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.526231996 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.527482498 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.499558043 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.501116839 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.527635259 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.526718098 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.528269437 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.52854667 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.529797295 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.503315622 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.527976907 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.530256665 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.529749328 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.529434356 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.514790159 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.528870171 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.479737828 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.528145477 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.527700904 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.479130513 seconds)
  done (took 37.875182954 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.970552138 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.549307588 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.635551579 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.533132405 seconds)
  done (took 8.070595704 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.555725831 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.556919041 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.582119462 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.608595533 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.621821453 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.569043417 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.504095952 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.503710203 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.487016787 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.558729511 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.611136661 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.548030271 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.635270525 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.476793728 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.685204484 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.478943492 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.478285347 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.558772673 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.608286283 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.621438471 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.475430642 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.556655102 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.556118622 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.548719249 seconds)
  done (took 38.769053736 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.48639232 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.490483266 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.476580099 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.491535771 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.478034106 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.478355849 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.480245562 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.483739179 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.476146942 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.478275768 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.478769423 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.494611419 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.481461726 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.478061348 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.486338733 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.479933634 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.485959391 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.481140578 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.479969035 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.488194101 seconds)
  done (took 31.037535716 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.472676976 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.471383825 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.828264613 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.731670906 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.477291746 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.468690011 seconds)
  done (took 14.833605917 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.569738902 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.733561129 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.478530339 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.926019122 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.007982705 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.479290013 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.48002327 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.781763751 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.179565022 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.174541335 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.554854402 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.566999547 seconds)
  done (took 22.318688841 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.486036587 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.475276655 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.481170837 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.493321083 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.550428527 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.482498182 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.491430216 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.473792511 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.553573439 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.553221151 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.484474454 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.554556972 seconds)
  done (took 23.462275422 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572758891 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.474455613 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.492105176 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558624064 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470958432 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.322719664 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.559754875 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.253857758 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.498931107 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.752267839 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487230179 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579554973 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.736591007 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490344263 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476758023 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.463940166 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.734526132 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093241477 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471904547 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480233748 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512453485 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.481223322 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.481709517 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.740492338 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.476548936 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473495323 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.740966176 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.477628103 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82925513 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.488840781 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490322973 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474174979 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.752827623 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217487946 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595798019 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.738336435 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490391644 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476366813 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.465432512 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.483246319 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489986963 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.484202153 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489054172 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477842799 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.478167321 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475776117 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270042616 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.505217438 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.473124159 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.476898753 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.806288077 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579709042 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.483054578 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.48006372 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526039348 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474970199 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.481734837 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5811326 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064507465 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478247141 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493949952 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.478246394 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.492626612 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486503647 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2104409 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.483857032 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.486246296 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.483398867 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478552975 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.480861008 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499793393 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48055313 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.501826723 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482151432 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352250031 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.491465177 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482525584 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145812707 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490577811 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.480788974 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.716456089 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477843299 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480928564 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.480998096 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.479999144 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.347547174 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487232882 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.463163054 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500999684 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.26711287 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.764704229 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501859856 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513559863 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.709597516 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.468029347 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481781524 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.491333723 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484927525 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49830129 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.271911292 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500812539 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.481342869 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.74305215 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.692652739 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478727378 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.495175889 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055361606 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503628052 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.4974265 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.501129818 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.746124829 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.186871937 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.495790113 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501892725 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506929644 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.487048467 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415479318 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498205896 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.58457002 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.495102894 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.797819839 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.462583265 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480907388 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554219726 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484739701 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.48294969 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491903141 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48385082 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.48368461 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.739612275 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.523290549 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.496107877 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.484153641 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4840219 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.486385625 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490164685 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.48538913 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.709972685 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495269158 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.761321597 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484186503 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485874299 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480100631 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.706856438 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.48135494 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.817811582 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.754987522 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501596229 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.499271979 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.500040903 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506011367 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589482733 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511607057 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.502610891 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.749587309 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.489301893 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.492665122 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499646797 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.487233379 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494747148 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.493721714 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487456696 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187584641 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457154127 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.488204923 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386019003 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.498931765 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554354545 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.495882223 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.751213584 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.495867494 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50743324 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.486095017 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.488649516 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.713829595 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496474883 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.493410253 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563942008 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.036454986 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.208751675 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.500271825 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.486171447 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.484206023 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.484030417 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487545737 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487445487 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.486129996 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.751943865 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.506583303 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491807732 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.197049714 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48715439 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.492620861 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.495621342 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.502422115 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.493847913 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486585994 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.489364379 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505646747 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.5008312 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.501985635 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631922124 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.503453161 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488337 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.004758529 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.492828462 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.485512449 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.489395138 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524786269 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.498236127 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379109653 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.758145768 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502204856 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818896707 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.502011003 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.504818362 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.487538657 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512008196 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499122513 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.49716435 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495011184 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.503570739 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.492419813 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489807784 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064907387 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375193258 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146118664 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487327724 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.520658583 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.489117934 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.287512414 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507995894 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491475064 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.78129212 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.299234489 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511570026 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037449226 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.520550099 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.424607988 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.825926974 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.723808115 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50384459 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.506075373 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.825352614 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.703531444 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524461763 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.502342393 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490681999 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.475166683 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122526533 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.52574695 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571038762 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287607612 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51072538 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.49319529 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.51719028 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.490617867 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983932419 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.512488452 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493476947 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.497706852 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.507763967 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38813097 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.495792945 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490793622 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223682755 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.489990532 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.042774671 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512261513 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.760178768 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.510029291 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.505436292 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.496146344 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.507638513 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.751963597 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826124665 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488390026 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.492450013 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156505111 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.359609352 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.498875997 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491827259 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.410899886 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498866029 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849836925 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.499301632 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.491302751 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516813869 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.490209531 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493157248 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.487741746 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.504762291 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46664857 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10477648 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.507045626 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516672014 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500561264 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496129207 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.752162043 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.504583799 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.204832346 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.727859093 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504439584 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512715546 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.500367839 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492834159 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.504628106 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.494229058 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.493360952 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533825824 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.715491201 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.494509845 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.477686766 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.507780938 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.704901394 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.492556191 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.496102117 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813731247 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.492418362 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.504353973 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381278942 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527502964 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.49466082 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520092965 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.515322669 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512534601 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565519435 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.76625306 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.508928892 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.508264979 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993475392 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518431107 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.515844708 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.510901677 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59914777 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497640629 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.491085896 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.270576266 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209627419 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384189782 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.207918777 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.829373914 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.494777468 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499739187 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498285418 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659106164 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498093351 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.771106314 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49823399 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.497838782 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520595227 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49719147 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50493012 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.709795128 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.771176457 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496051436 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503206631 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498889152 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.49866494 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.509964062 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.711141681 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.118221541 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177523853 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496768959 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.499593025 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.295692889 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.793919292 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499687128 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497362533 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499421362 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.504012958 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.506624944 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.500909906 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496288864 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668199819 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.835107284 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265035725 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.53482811 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.5267184 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.270826232 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510386176 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.761861122 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494278701 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.789124773 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.216663498 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356108594 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773376715 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568557377 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.766359514 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.501561276 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663151807 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.501328351 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.501290491 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500658218 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500685775 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.496379128 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.511961453 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217847446 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.767359593 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.502772945 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.502519672 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5333271 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.510726651 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.72991738 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.387387716 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.726762506 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.516458301 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.507910497 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500715784 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.215264052 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.831978329 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498668698 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.501858155 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798325178 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.501711145 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523662173 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.019926616 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.497146838 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181383593 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.477878669 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524431776 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503176816 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347179386 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.213100885 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.498494814 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145667256 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500826297 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508789693 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.778745223 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.508392382 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.505937071 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.782003112 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.509096162 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.507391741 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.773026742 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.217814557 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.453537852 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.514003078 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50536754 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.502103925 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502825998 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521631298 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501025077 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502437251 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.02141732 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.529107312 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505162598 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.518732079 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.521369463 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506616845 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.504636306 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502548758 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.50812938 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.509288559 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.488592829 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.509182997 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.614334344 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170806601 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524367677 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.189413394 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.832551054 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.765598178 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.503786164 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.492985682 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.510072664 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506354679 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503861137 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501535312 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.506005513 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208180185 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.510343966 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.518926188 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.509442953 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.504250243 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.717216882 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.504022986 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775727476 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5106659 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522339948 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.493559518 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504433831 seconds)
  done (took 1041.623682383 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.528494326 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.560216221 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.519193239 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.576954772 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.571769815 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.515416594 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.540495535 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.560516672 seconds)
  done (took 21.787490892 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.5168708 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.514946068 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.519275505 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.516979629 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.519376803 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.087463581 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.534111891 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.518582589 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.532284808 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.514768493 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.511592744 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.494106128 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.521141971 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.516556357 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.496872736 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.521474618 seconds)
  done (took 35.256807532 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.924400914 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.855269728 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.349842357 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.57170972 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.531269296 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.518431003 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.000917781 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.534546676 seconds)
  done (took 29.703754961 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.524767122 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.527486469 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.52253456 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.524307058 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.52898623 seconds)
  done (took 9.045235309 seconds)
done (took 1326.420796696 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.515131966 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.521701335 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.513581467 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.516832316 seconds)
  done (took 7.482791415 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.498603978 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.49737871 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.492883131 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.511758719 seconds)
  done (took 10.416033143 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.422119989 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.303116187 seconds)
  done (took 6.143027488 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.04025358 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.035619995 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.032624562 seconds)
  done (took 7.525430858 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.842244379 seconds)
  done (took 3.256693248 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.467806132 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.420043518 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.212994553 seconds)
  done (took 8.519012829 seconds)
done (took 44.759378623 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.524233023 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.756207792 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.687946045 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.510552117 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.690137712 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.682918466 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.227259515 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.511594201 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.519824373 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.522897479 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.52434491 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.688365716 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.208766428 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.759912714 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.211877181 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.860320705 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.705945779 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.511734111 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.528528859 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.509117091 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.226907051 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.508964887 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.510444418 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.510588946 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.691410542 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.673825317 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.511947811 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.855022813 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.510708135 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.536208139 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.675629435 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.511782048 seconds)
  done (took 87.28380449 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.512285813 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.508185386 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.512233522 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.526153677 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.516462065 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.509459479 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.540978249 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.522867805 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.520299405 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.51128448 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.510656759 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.516136275 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.527829818 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.511995981 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.510497459 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.537039194 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.508539355 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.513615849 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.510543282 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.516239066 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.52632496 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.510740151 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.50900471 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.529298815 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.523539202 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.509417585 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.540149005 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.510002687 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.533588827 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.526685497 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.510315594 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.529486516 seconds)
  done (took 82.019151134 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.515722192 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.515385275 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.509354036 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.535808551 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.514919774 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.528446333 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.512622639 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.511736352 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.510697178 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.511326801 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.517480902 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.510600971 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.510746907 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.510183214 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.510276659 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.510699743 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.544548004 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.51966039 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.524779989 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.510628909 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.51469578 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.511718938 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.509310666 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.526868254 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.520010835 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.51306119 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.549431459 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.512890644 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.512480212 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.510655576 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.511598702 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.537909852 seconds)
  done (took 81.987069031 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.802387107 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.524900067 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.522569896 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.51461939 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.525480111 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.523671739 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.517350557 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.801304371 seconds)
  done (took 16.151881047 seconds)
done (took 268.858658242 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.519810787 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.516480512 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.744391779 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.544569205 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.536445099 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.546954405 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.543661711 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.786703408 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.533510659 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.78792146 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.539541867 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.535885161 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.515798572 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.559028009 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.841859222 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.684011458 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.542322311 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.512653796 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.917290952 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.537359582 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.81855231 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.513794045 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.83049127 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.516356489 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.517474729 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.515709918 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.511765874 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.520132654 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.542848998 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.921464378 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.528128784 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.502377861 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.622707996 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.641088851 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.759587804 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.695561313 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.517145313 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.618067718 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.766316579 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.516950847 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.529958222 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.377854714 seconds)
  done (took 89.953482671 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.526654532 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.645498563 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.524002381 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.528473749 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.526895566 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.651801997 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.623740397 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.527653807 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.528915086 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.529611596 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.528585911 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.525761992 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.52804281 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.529155507 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.527948966 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.525866017 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.526682212 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.53123803 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.533326936 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.57373828 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.654360035 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.558816904 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.523187775 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.527709921 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.635187986 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.670941663 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.528186498 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.523005646 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.573985583 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.530912622 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.531347401 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.577089223 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.528446326 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.527618627 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.642765502 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.630017254 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.533462833 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.52857695 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.646922771 seconds)
  done (took 62.243839222 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.529379366 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.805361938 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.027141005 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.531424379 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.532571848 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.533072925 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.631930392 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.53371161 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.535392799 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.536065675 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.709505648 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.527866798 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.574597781 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.064124919 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.535391437 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.530647637 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.529259384 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.532930467 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.817919155 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.538549072 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.653276647 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.533833296 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.633345859 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.545604806 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.558006158 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.534347394 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.538111246 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.1477296 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.534665663 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.708550827 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.528428082 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.628519894 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.102769239 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.043268356 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.532588518 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.531677008 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.533271225 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.71777201 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.529526764 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.533468179 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.631703886 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.531496057 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.046663777 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.237161791 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.553508363 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.532119765 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.177828035 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.711647937 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.841225964 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.540361463 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.094870691 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.540517129 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.534585454 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.535331535 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.853473509 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.539331546 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.533452214 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.221077976 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.559233908 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.632939877 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.529434361 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.534777067 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.813457009 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.533415893 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.809410203 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.536709936 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.543827822 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.557662229 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.054493012 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.541860217 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.252655099 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.554498189 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.537427145 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.710282198 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.804580701 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.204166354 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.535374221 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.819110194 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.110029996 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.626751225 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.536254817 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.133481177 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.627828769 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.53303347 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.535666971 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.536876001 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.531587219 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.579896458 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.625418349 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.185325737 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.246068225 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.229074694 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.64892841 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.539433934 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.533510431 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.202239755 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.549245049 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.535194843 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.040632406 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.24495019 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.556668362 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.546005669 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.265793426 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.558042024 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.63805569 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.540201 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.047569564 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.536890008 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.586057611 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.540603145 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.546708533 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.567953495 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.635885562 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.539657197 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.535407523 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.238252613 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.738030554 seconds)
  done (took 202.730386638 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.534647655 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.547840898 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.552006829 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.537175827 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.531094911 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.541837173 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.532850905 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.535209075 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.537993259 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.53285192 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.531096564 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.531175083 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.533251091 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.551403254 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.542249026 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.541712287 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.531842902 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.533053717 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.531574775 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.529244407 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.529429518 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.534339538 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.536223673 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.534122913 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.53492505 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.535223597 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.558129524 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.531801668 seconds)
  done (took 68.468547934 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.535630491 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.243806769 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.537577124 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.70487516 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.564968152 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.538801741 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.708825081 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.611586762 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.543003737 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.53845843 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.539860231 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.913008175 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.538033919 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.182065878 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.781352342 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.702454017 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.177371192 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.554798895 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.538424066 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.540790435 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.704442164 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.553698628 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.914637966 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.236194673 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.538571133 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.242712367 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.528882232 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.540950432 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.541388298 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.244113083 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.533136724 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.916450766 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.633246589 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.611836096 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.243171332 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.185490572 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.213455482 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.724201763 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.541028958 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.537974402 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.538596499 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.533038748 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.244503954 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.538614301 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.544055887 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.244340068 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.558180736 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.543117974 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.549538402 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.541009375 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.617956705 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.619382615 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.928036721 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.327152828 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.636431605 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.551941194 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.708747518 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.909265216 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.543336979 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.221318665 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.535387527 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.278898251 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.561422969 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.535270528 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.539467823 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.549849261 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.725503019 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.701986963 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.193455571 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.565316129 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.191250883 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.750957948 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.536298014 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.54202023 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.544500529 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.285101281 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.210679277 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.749298255 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.704945468 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.783873916 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.532224962 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.546410175 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.53921896 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.641748841 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.538342371 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.288674401 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.241550123 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.566486244 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.544244169 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.549345944 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.545245761 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.767745737 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.287014606 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.644343298 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.216826912 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.968806939 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.945604029 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.547948825 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.619854132 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.564300849 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.014353894 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.546266927 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.620355168 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.973374947 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.943199338 seconds)
  done (took 186.199076272 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.831662042 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.565396247 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.649449357 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.719623097 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.240718149 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.181993967 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.534119428 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.686655662 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.670517854 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.844320243 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.538271394 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.6337302 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.798001541 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.633989659 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.322001647 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.632254687 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.658426065 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.718646564 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.713652192 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.536605655 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.294660488 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.882906149 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.767084372 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.565105485 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.665339997 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.442787177 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.200189627 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.123501183 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.741086583 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.537491717 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.140373215 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.534382469 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.54061922 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.357786912 seconds)
  done (took 71.345297961 seconds)
done (took 682.360732776 seconds)
SAVING RESULT...
DONE!
