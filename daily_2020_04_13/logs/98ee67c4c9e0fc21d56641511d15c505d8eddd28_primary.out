cset: moving following pidspec: 19384
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.350896875 seconds)
loading group "string"... done (took 0.568874996 seconds)
loading group "linalg"... done (took 7.551742394 seconds)
loading group "parallel"... done (took 0.155565927 seconds)
loading group "find"... done (took 1.194632098 seconds)
loading group "tuple"... done (took 1.781553267 seconds)
loading group "dates"... done (took 1.248751652 seconds)
loading group "micro"... done (took 0.215969321 seconds)
loading group "io"... done (took 0.918633966 seconds)
loading group "scalar"... done (took 37.061939651 seconds)
loading group "sparse"... done (took 11.500784173 seconds)
loading group "broadcast"... done (took 0.96479551 seconds)
loading group "union"... done (took 12.350253034 seconds)
loading group "simd"... done (took 4.338697089 seconds)
loading group "random"... done (took 8.785603974 seconds)
loading group "problem"... done (took 1.808987149 seconds)
loading group "array"... done (took 19.896753716 seconds)
loading group "misc"... done (took 1.643662489 seconds)
loading group "sort"... done (took 3.121440898 seconds)
loading group "collection"... done (took 17.144234876 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.539943444 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129388766 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137390159 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.127630371 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.15355185 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.12297769 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130282275 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.093090309 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.862238729 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153784166 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118507755 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412159071 seconds)
done (took 5.374533645 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.178469836 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086789533 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087784297 seconds)
  done (took 1.249757118 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.070455644 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130105634 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.073130099 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074702334 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.074580213 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.073896398 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.074729405 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07374348 seconds)
  done (took 1.647925952 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07850768 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.074233419 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071330362 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073538969 seconds)
  done (took 1.371899542 seconds)
done (took 5.604088693 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.780881251 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.215921366 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189355979 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.399734979 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133503245 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.174661782 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.652816526 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317249265 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.190131592 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079940371 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.111947672 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.345922124 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124627986 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.645935929 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079584606 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094906444 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.143365307 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.423599601 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072862769 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088283414 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094597121 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13693012 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092251195 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078603785 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150361213 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073094114 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138993471 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087416371 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071871656 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.220026647 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.178112399 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.666436866 seconds)
  done (took 10.357343142 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103572301 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.103282831 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074228018 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130537109 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103131001 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.075051577 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080668465 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.073040018 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094577897 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.13352833 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09621956 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110881028 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071204239 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.0746686 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088135674 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213670953 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.085419429 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086707372 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075291249 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083656918 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112376945 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083765892 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085829592 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084948608 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133960795 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.188894301 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.103293416 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103106287 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071843234 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08729163 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.120279088 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.137305074 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073596036 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073005041 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.13380327 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.101708822 seconds)
  done (took 4.764572361 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.980301735 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145951033 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092976436 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136586162 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070552352 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112588188 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.0714954 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085575877 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.21088825 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.427614729 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.582277083 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.134996589 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115882625 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108067937 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072977834 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073890811 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072670027 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.479609936 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.104265999 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111598876 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085125898 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075435856 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073590341 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.070813812 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072238533 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069079388 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072993291 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.117079871 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.082340733 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.305260233 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124144489 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073211772 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.940196892 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.171653989 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071627015 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.242708219 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168202297 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096984697 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143681195 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073969322 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.071196659 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071334793 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162448816 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.070447426 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07584395 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074474953 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08957763 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109172632 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124759966 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070965355 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071453848 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171573646 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070027922 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084651934 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.129328344 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.160338115 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073822016 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292396544 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094944479 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075326638 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.070967573 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.195010862 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127991693 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.073103738 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072740884 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073901387 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073971507 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.366065625 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071415481 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.229711321 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073721289 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.082581046 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07472339 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074945509 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077603246 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078061635 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094201591 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.071272344 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078568922 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.071235757 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.071368056 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071894986 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087894823 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.367589581 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.072470313 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.175034813 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.071047771 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09576323 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100623321 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073169377 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.070807396 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104238784 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096492429 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06953471 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072440316 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.071519498 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07199368 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087920683 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075105366 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11821914 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.07276665 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.111176928 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105011539 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075034609 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106371662 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084016504 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072757968 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.408980841 seconds)
    (108/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.069982935 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.0755542 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072635631 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070766499 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072941756 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.07139795 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082915819 seconds)
  done (took 22.425442982 seconds)
done (took 39.600555684 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.244453393 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07417776 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074916937 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074936105 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075359514 seconds)
  done (took 1.70370711 seconds)
done (took 2.852136996 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124474339 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102838687 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070496733 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101327026 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069989932 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107063418 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103917448 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08198605 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103392474 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.071001675 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102450736 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071611778 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072243966 seconds)
  done (took 2.342207942 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088170217 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089142998 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075939257 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087013175 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068967324 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090112872 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086497418 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093759393 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086749804 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078383719 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06918522 seconds)
  done (took 2.055237994 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08709717 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088870207 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075197796 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086969465 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069458357 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087014453 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087543174 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09058572 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08670487 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079434363 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069658122 seconds)
  done (took 2.045113265 seconds)
done (took 7.576472228 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080674563 seconds)
  done (took 1.208416159 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.533380826 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.676247524 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084487685 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.108790014 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.193114999 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.115884012 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.246933007 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088961741 seconds)
  done (took 8.331370511 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.107254529 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.076497448 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.077389925 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.073383523 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.074482927 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.077054783 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.076325347 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.077782971 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073943193 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.075060384 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.074211591 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.074177094 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.076505663 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077418576 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.075330431 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075217002 seconds)
  done (took 2.441172955 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096427452 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096218374 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077973678 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079700763 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077582637 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.077649471 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.079123858 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078688487 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.075588527 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.077638883 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.080256076 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077908603 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076837514 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.069041408 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078949675 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.081206953 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075687784 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078753515 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079530521 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080260753 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079654314 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.069105958 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.077068493 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.079217305 seconds)
  done (took 3.122672692 seconds)
done (took 16.240402053 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110694314 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073313401 seconds)
  done (took 1.317228151 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084096619 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085194187 seconds)
  done (took 1.311065385 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084065273 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069821812 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09103749 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081065977 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070064019 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069825916 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090335667 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07051526 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.070440622 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070155992 seconds)
  done (took 1.908906342 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072072743 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080258285 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073920299 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084146149 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07782298 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068589602 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075801588 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.072040943 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080067908 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06776619 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075370177 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.087443184 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074922547 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.089460194 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075182564 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072661999 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.075186385 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071849743 seconds)
  done (took 2.51890664 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069933872 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070949312 seconds)
  done (took 1.288661892 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071485018 seconds)
    (2/7) benchmarking "second"...
    done (took 0.068065887 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070741001 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070566482 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067865551 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067318501 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.068594678 seconds)
  done (took 1.626667985 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.38854864 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.1206944 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.304569709 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077079421 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086559679 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.258280867 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.072402487 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076463742 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.077057889 seconds)
  done (took 2.641737309 seconds)
done (took 13.762205344 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085387208 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.092307513 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100194823 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.383784212 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.097828691 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.073102838 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.119243867 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184806124 seconds)
done (took 2.29168583 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.223867809 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.660420813 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.407112553 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.209033371 seconds)
  done (took 2.425412173 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.34483618 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093837157 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066457831 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073018997 seconds)
  done (took 1.740115008 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072691288 seconds)
    (2/2) benchmarking "read"...
    done (took 0.075096867 seconds)
  done (took 1.303442975 seconds)
done (took 6.847134298 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089445844 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.186242122 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.071799371 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.072014756 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.069567023 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.072036334 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.069172242 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.069467553 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.07025496 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07174366 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071944882 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.071491103 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.071601255 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071345615 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069150313 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069025582 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071339347 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.069185973 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.071423995 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069240575 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068916184 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071332523 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.069317207 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069040494 seconds)
  done (took 3.009265253 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088139109 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071295207 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075550388 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075087377 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073331506 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075783926 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075313503 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.071351102 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075734343 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073207397 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073689334 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073486079 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.073635882 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07326433 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073423166 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073555083 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075587172 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071415241 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07345195 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073523193 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075545645 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071275638 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073289587 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075296304 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073458264 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073782687 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073848015 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071433987 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075504729 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073611675 seconds)
  done (took 3.392025175 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074759717 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067914462 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068883666 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075906117 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068584222 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.069369087 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068220891 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.068794028 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06911308 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068185596 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06955881 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067955153 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.068461936 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.069144941 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06877032 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072438841 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084556508 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068508554 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06843598 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.069073686 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.072469618 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07178935 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068292571 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.068222259 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068468952 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.068267091 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.068683271 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068326595 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068972977 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.068181268 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072466936 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072356991 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067937868 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.076252309 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072643833 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068074719 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072991112 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.068873707 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068792883 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067858562 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067799721 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067960279 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.068085858 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.076186156 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068464342 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06926032 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068249309 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069350396 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068982889 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070780061 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.068116657 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068128094 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069984813 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069524177 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.073432841 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06854945 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069519634 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.068114475 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069153832 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068296688 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067982039 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.068088883 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071677146 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.069213878 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.08523565 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.076699923 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068254435 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.070302352 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06924482 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.072177857 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069680546 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.083900952 seconds)
  done (took 6.236776316 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091230143 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091580799 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070663134 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070965977 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066599464 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068701165 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074565273 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069005013 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071062511 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08806111 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068992807 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071138708 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070900946 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073452531 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070347409 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071085165 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076861766 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066744954 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068664789 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073069052 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069156254 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074246233 seconds)
  done (took 2.800419657 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152393019 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074782659 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109262023 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079526173 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075132289 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079424208 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074881049 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074888602 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074975154 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0730925 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072790263 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075196484 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075080041 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073453417 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072564354 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073315188 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075197824 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073152304 seconds)
  done (took 2.632718288 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08214471 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.07131549 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.093215176 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071277457 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.071872085 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074156205 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075492974 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078908537 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07345656 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071954572 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.079240541 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073641629 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073970968 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071442094 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074021788 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071613568 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073809835 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07135644 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078737555 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075428187 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075534913 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079013403 seconds)
  done (took 2.834766905 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085052489 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073419236 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086705979 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073208105 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066397284 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069066542 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074999355 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.071239904 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074783722 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072901451 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071228136 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068908933 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073485146 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071136307 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073433976 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071095773 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073357816 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071529763 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073500077 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066539049 seconds)
  done (took 2.637761061 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088638005 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072891586 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07292667 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078348342 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072184961 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072081559 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078925002 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072863971 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074455283 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09372175 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072595 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072851358 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07853647 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079263707 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072308375 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078908725 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079135855 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079561137 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072620417 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072326346 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093112569 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073011579 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078452071 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072342944 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072059692 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072151915 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07258884 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076018658 seconds)
  done (took 3.321679143 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072932173 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071661464 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069284759 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.069141123 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.069320905 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.069198478 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.069583253 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069340229 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071554404 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069741065 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.071883445 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.072213437 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071666005 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071292584 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071258467 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.071667593 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071775774 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069340819 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069023171 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069258291 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071450883 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071640509 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071582068 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069453505 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069033474 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071208087 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069048157 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06912198 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071260366 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069366237 seconds)
  done (took 3.295109417 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079613144 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077552353 seconds)
  done (took 1.338204295 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067433502 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085997545 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.068186708 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07692515 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0743169 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071897677 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077897381 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074478658 seconds)
  done (took 1.774462014 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085940428 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080227072 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.07121026 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080261145 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080005484 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087508032 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127627184 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070579596 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078426722 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.069897111 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084295646 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.071309572 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.078027402 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07196868 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077664804 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079002445 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068302116 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07518486 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072276182 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.069619998 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071550099 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07981235 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075481404 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066377024 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.073189685 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094288502 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081758386 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070507095 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074679956 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.079291342 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077815112 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065837354 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.071417977 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.071023135 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068670831 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079793929 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085340823 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075091239 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.080631328 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071780222 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079363318 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066526761 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07610159 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07875187 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083180868 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070985626 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071843958 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066159267 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070087672 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.074617137 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066406521 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072084762 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.066134116 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079100299 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075692437 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082098288 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069805981 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.073643772 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.075229113 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.075241129 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.078735725 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073978891 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075086666 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070578855 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082464297 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.077335083 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079563607 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066601296 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065755393 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069559495 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.081500112 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095052757 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077391091 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071535318 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071521414 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.069397295 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075701544 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071576281 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077622523 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.078907177 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070760557 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075801108 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078924199 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072460318 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.074412267 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077293723 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069298677 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072989848 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.069948886 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086522634 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.07164893 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068688152 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069443264 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08155208 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075414005 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069463056 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068946795 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078790357 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064633955 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069970096 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070339107 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071421853 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079166991 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072945511 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073464219 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07899912 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076139158 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071737482 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.073123628 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06698235 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.194949665 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.072169974 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.080343319 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066426113 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075925688 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.073227897 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071648846 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079787617 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069375681 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070758215 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079397795 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077667389 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069536751 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068256289 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074639761 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070267399 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07391624 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079665275 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069549583 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066185923 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06612778 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07489978 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070315449 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.075427105 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075049695 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074772518 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065620515 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068387322 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074271274 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079656945 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071648148 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072754803 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077397148 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072434072 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.07016792 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077660271 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.074134925 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.071686647 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.077031306 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.072932411 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065815721 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072957566 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073888865 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06924143 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.075599299 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073144585 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073927196 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070580922 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069377649 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076431172 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071431137 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.071143802 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072689263 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069823527 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.082821305 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073960303 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066379306 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068348877 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077664976 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070198686 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.070331262 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.070956616 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073798679 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071373882 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.069118124 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070233517 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073707791 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078386869 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073503482 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071355385 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.077119187 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08405376 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070155418 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074245474 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070509892 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071251869 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071132661 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080676683 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077742328 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074851183 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074021789 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.068145095 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076386063 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079732533 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.071256766 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068840549 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.071129876 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074020738 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.078010594 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074703545 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071204904 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069294128 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072738134 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073832932 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.074207611 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070050111 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070562356 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07529084 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068766121 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075316954 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070679813 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080962646 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074021682 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06557319 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072030871 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067982561 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07757631 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065224203 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068919734 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.070390799 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070332832 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068484144 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073210528 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064226802 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.205098535 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080946736 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.073093754 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.072328022 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071473478 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079649009 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.073736561 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075860421 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.076004521 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077056099 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082195814 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071111531 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.076038143 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.085050377 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070730842 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065673452 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076912766 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069527412 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069719147 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070236091 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068964593 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074862573 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077239577 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077994035 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065509482 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.074237652 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069131355 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.071106305 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066386404 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076170198 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074399497 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072617426 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078222312 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070772189 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070522001 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07483506 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070235548 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.07069828 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071019598 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07469941 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070096932 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072950934 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.07047296 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074364876 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070775644 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068574024 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.073465013 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.07025651 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.072256162 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076278878 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070264762 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072267539 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074723931 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071601796 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072809823 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.073217076 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071709385 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074708033 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073224023 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072985539 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074785197 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066326541 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079636669 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.07077991 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079513552 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07253081 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068196187 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076393092 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074625686 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075135432 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071038201 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071379416 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073436252 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070491684 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074976686 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078938545 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070354848 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082411575 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078366206 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07287054 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074819656 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.073003115 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073836357 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071572314 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.07279721 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070900812 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.073055939 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070442067 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.076444504 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.074304292 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.072367736 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073738277 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071316045 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072360191 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071817524 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06598266 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.071161046 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070938989 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070049243 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080004706 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070599025 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070902613 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069425629 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071100867 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069122718 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067033017 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076299008 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076458969 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069705275 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076457861 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.070287786 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072315327 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080667895 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064565684 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068024991 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.197855476 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.071806398 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080581464 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071566585 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.08202391 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072925819 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.072056896 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.068757668 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071007164 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069666518 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065813539 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06904241 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075700533 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.070931203 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070373303 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070762146 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073903781 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071346314 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079879302 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070325165 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072748221 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070877784 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067951779 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.07160288 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.071024537 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074959628 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070800236 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.070179901 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068217107 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069999276 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072683938 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.07393889 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070543783 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072975684 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07900009 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070322114 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074676685 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072809917 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065891057 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074280795 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070336253 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069532847 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070604748 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.075194231 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077228566 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071691996 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080369404 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070646761 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07286172 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070723172 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.069181327 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070252645 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070163727 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070637763 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.07139765 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071186023 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079453149 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068934836 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07499705 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072029694 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.073021683 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.078146818 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071658442 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074683087 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076368645 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.072587506 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073690642 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.080141144 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074548051 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075488259 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07152784 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073533519 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078091552 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.07148229 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078653113 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.07259135 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071475936 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073985117 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.070179238 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07124328 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.071036811 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070624645 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077832162 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071593592 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.071557894 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.071669935 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.069370011 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.073488178 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073649493 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080080457 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074340726 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075530104 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066862341 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.069265119 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071467839 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.070360481 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073722651 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.074437019 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077442596 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.074020527 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.072317247 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069972291 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080786294 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076759342 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074754897 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.069912495 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074760506 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070533591 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073153684 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072398305 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071520665 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070643218 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073992468 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071953065 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069999075 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07652569 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074038984 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.200306256 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.074409456 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.074176213 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.073533549 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066835159 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071869601 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074533243 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07674408 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074602882 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071132448 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082119328 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.069938991 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072396521 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073469871 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070748278 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075791957 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066454272 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073591561 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071288723 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071588942 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066038921 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071937343 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.070169895 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074513125 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.07147759 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066501239 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082790198 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080948713 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07507042 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070112711 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069790445 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066233479 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066238372 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070930883 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071738638 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073874401 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.082020195 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.071453942 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.071246496 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066143292 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070654791 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075096998 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.075145613 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068110443 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065872327 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.07137236 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074389438 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077117084 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069657081 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070116137 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075072153 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.074142277 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069466438 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073411736 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068900674 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075142368 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08386054 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071093712 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07291415 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.078167134 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079563439 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071135599 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066618334 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071054738 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074785041 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.072950035 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071718435 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071930069 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086011006 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074881735 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.071315037 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069919549 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.074710389 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.074269308 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.080758907 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071646271 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071808804 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076753529 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07446229 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078168766 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07602681 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078896194 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.075253762 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.075593356 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070379521 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072946929 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069802265 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071405499 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.07247263 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071338105 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075266155 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07743464 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.071390741 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082282552 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.081469328 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.073950658 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06820495 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.070757209 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070862975 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066231178 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070471241 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.0687781 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06953053 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068875863 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069626336 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072649659 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076151063 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.072429902 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070216699 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069849128 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064981847 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073773542 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072952659 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07157785 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06718209 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069297503 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.200269998 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077338363 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074413322 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.070604192 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.075413321 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.07437664 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073227127 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066816733 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078724825 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070447224 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07367537 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.071108634 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070925336 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071211798 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075406467 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074756485 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072053249 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07355333 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075725826 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072090455 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068908659 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068852241 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.077676395 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069118573 seconds)
  done (took 45.505855145 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10422374 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068065546 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066355735 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066613759 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076747976 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067510846 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066425618 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067530785 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068025126 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069564809 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066615319 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066506039 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07419242 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081666848 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076976247 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071289658 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067104404 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067687914 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066695643 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067630251 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07454543 seconds)
  done (took 2.761158028 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077023204 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.082071506 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078410041 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08716184 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075944334 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074140276 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079304784 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074690028 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081878164 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076751317 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082223463 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074474976 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.077226657 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077030468 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076809202 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074436414 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.081952904 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075441841 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074170922 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079229272 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074505927 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079156009 seconds)
  done (took 2.965308488 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.072640198 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070440875 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07258966 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066245369 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.070574051 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065707711 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072856903 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068577019 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073109454 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.07075237 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.070701611 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070133882 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073435029 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06614151 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.072035672 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.076165995 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110850931 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073923797 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070498744 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071599859 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066549182 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073287811 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066422346 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066610596 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070634769 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072845995 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070771398 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068732962 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070190511 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070717463 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070231185 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068388729 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072888356 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071743018 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.071202218 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070668264 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.070222336 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.07310854 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066136572 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068557649 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071927395 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.067050718 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.0715753 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072613295 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.069297382 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068797687 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073917784 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070268386 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.066738959 seconds)
  done (took 4.74685936 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081489404 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112279583 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.07287608 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092240092 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083379382 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076508134 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074478588 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093576254 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067836989 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068887117 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085286588 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082434849 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070355152 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074119102 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.077177724 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069791052 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070749848 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069063142 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073259158 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069578155 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07307221 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076852647 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083562633 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081713878 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074346598 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069497398 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069600651 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074605092 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081121533 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074217804 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07455997 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075084289 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084696746 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.075039311 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069768557 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072143182 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08539185 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070372971 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072820307 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067835183 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071711439 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073942264 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076920828 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08518255 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070062502 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07484088 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069792216 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067826586 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081561298 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072046363 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077159389 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082565701 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073497173 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070335586 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074080448 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083968854 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.07048685 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068347525 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072477464 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080840964 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067889642 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073535318 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082049747 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071965607 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07696862 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08217373 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074806122 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073514429 seconds)
  done (took 6.547570904 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079793583 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10119781 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085874629 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086236385 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079896703 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080466984 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080478158 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.080289631 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080392085 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084649276 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080554461 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119418848 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085242003 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082127081 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080852041 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080897404 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080209469 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080568627 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080617509 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080694029 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.080552819 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086754871 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080306722 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086716574 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083958287 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.076308676 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080226882 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080307776 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087641224 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080586239 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083699045 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.080300178 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080060897 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086961272 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083663903 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.080151095 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069951031 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080167811 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080422522 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.080571728 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076093788 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086867152 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080193593 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.076128728 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080142879 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080503495 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087048438 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083746517 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082432561 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084289392 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.080433689 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08666357 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080099456 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08067457 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08675448 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089010865 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08640091 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086219871 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080611813 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086512733 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086799794 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088864271 seconds)
  done (took 6.439287894 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084935977 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077748589 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.086886524 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066468191 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072235758 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076821184 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068969094 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.069387074 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077946203 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077393462 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079914024 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077047295 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079167338 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080644814 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07696268 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079693477 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077110328 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07713918 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078263553 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07692851 seconds)
  done (took 2.824886145 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080196088 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088294384 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071849041 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076678807 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.074246846 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076287047 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.074049904 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074612186 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072224789 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07402542 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.080135406 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08029402 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072281966 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076543755 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.080011251 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076691473 seconds)
  done (took 2.499726801 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086785868 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076921106 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082472493 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.071437607 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071447989 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.067018987 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070810472 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066505472 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.067190573 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083173315 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.070325101 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.081980638 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070715871 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069528712 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.0834613 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07588355 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066770571 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067631163 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06993453 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081715161 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07431533 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.069247117 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.074208346 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.07055922 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.07302934 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074855613 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069641024 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071400171 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.068131779 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070447049 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073327858 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07434449 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067514904 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068375605 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069474857 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06753923 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070893111 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070226718 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075968768 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.07050201 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06849062 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.073317058 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070277437 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071074943 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.067228183 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.071029326 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066975608 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073418345 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068663674 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073449032 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069986712 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.073063389 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071066052 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077862415 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073139824 seconds)
  done (took 5.246432181 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084438063 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073943569 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066129702 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06859911 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073965407 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071981528 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073695491 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071858005 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072117191 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069480442 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072213241 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073745622 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072517319 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074340206 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072698313 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07395784 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066069529 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071689259 seconds)
  done (took 2.605181385 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07685353 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0711464 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.078317679 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071679895 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070752695 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072885708 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066110839 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.069323607 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069125931 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07120295 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071232732 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073190329 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068879866 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073632505 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071371352 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071297173 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073402519 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069284997 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070979972 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066777597 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073404088 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069221078 seconds)
  done (took 2.866379113 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097516676 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087984425 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142362449 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.084442475 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.091856493 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.076630519 seconds)
  done (took 1.874327015 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09645035 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104535156 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071396374 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073917127 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079054832 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074583723 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074479234 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075008948 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081909857 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079638698 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074921848 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084938825 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081899491 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081231708 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080129482 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08003573 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074897102 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075018764 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071599154 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086620641 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075149113 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082092659 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075885703 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074823965 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075440553 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081392482 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082473449 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07979803 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074699364 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082192372 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079786922 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074771827 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0825007 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079542761 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074250842 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082132545 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075170612 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086223152 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079927876 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081580745 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074063852 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079773927 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081789109 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079208647 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082480922 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074894709 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079377485 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075043158 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075108976 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088606065 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080168504 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081073413 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080038148 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082079061 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08170206 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087875396 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079788082 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08090125 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080003916 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079434991 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081290646 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080343938 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081234678 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08001658 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07972588 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081373617 seconds)
  done (took 6.564224607 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108389799 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071941007 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0743495 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079532363 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081348183 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075170762 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075170046 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075602457 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075076877 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071916481 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112321089 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075166481 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081359219 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081727315 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075186385 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074789155 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075047175 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08110002 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072389405 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088741245 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075024308 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081186846 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081451025 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081227977 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079701151 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079928593 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075468502 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075097591 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07489609 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07493866 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078655271 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075080449 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081111871 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071824116 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081355257 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075155388 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075140168 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078797533 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07472593 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079827706 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082223634 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086660893 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07472321 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075600535 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079854896 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075542602 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074826262 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072003067 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075106516 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072112401 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079660653 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079589605 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079503554 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081641363 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075512998 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074949796 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075248204 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074940871 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07521343 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08005235 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081477164 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075071893 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08859962 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075000268 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075187132 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08176833 seconds)
  done (took 6.49404223 seconds)
done (took 134.371935066 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.198085442 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.174918345 seconds)
  done (took 1.656259471 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073758305 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101435094 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081000291 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133929155 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071752695 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104872658 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104572356 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082174229 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071231709 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071275688 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070973228 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074247223 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136261349 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071521509 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071131403 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073826965 seconds)
  done (took 2.694476654 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10140818 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.159743285 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105409445 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069995053 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102016662 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076930075 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070125479 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081996024 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075607157 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070732427 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076933568 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074958019 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070645388 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075129415 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075602112 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077310552 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070581927 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077143247 seconds)
  done (took 2.814119991 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100683052 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.0940791 seconds)
  done (took 1.501910071 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.16106248 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137447259 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206320092 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.340463591 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.157413881 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146273019 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.147100043 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145365599 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117409925 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.141898481 seconds)
  done (took 3.001219571 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103477197 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152472534 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.27363506 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120834646 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077706529 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095189234 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122514293 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084427308 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083926643 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083461731 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083433328 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080621776 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103602608 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077928981 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.079694107 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080473287 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106730401 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078594828 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079847253 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079890481 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104713639 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072305242 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077880603 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.079003145 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081047502 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081003607 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071713241 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071579721 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079727817 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.080063253 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.08080113 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094489126 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080860733 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105635819 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07636173 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107000534 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081255032 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077455618 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.080232483 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077942263 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081743132 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082057138 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078629773 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081557361 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071397789 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080972304 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071531962 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071426164 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081895791 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072564651 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082054255 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081057762 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106171741 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072279613 seconds)
  done (took 6.150906771 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111249031 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.11042886 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075310672 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116544266 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108359149 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074789784 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10959413 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102817272 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.112116819 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075133338 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073463728 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074800342 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083450868 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084940688 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119211717 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111675853 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077097372 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074533762 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111518668 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111935691 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073807236 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106623177 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101729363 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110662993 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.072860593 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074860302 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073401148 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074765735 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080460624 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081613996 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074187749 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082928407 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087592441 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081295246 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072571553 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073414661 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073594603 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082145273 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08261975 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082642569 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080861629 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073011604 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07366135 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074669004 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074470626 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072959443 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081431805 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08313105 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.08143803 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073409996 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074963478 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073620205 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074538581 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082769737 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080676305 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083075903 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082678242 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074266654 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073531621 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075990232 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083222867 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083574362 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082417827 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074460627 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082742921 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.076163377 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084324224 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086754346 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07333415 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074394139 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073334822 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073590163 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074199997 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080700694 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080692722 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074880528 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073355239 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073662429 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082497823 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081730052 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073587963 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080588459 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072799317 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073321334 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074484125 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074347193 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079703517 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082441837 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074738231 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07288488 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072868615 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072584029 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.072008788 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078626546 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080266718 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080252625 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079785429 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072826498 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080173927 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078841514 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.20510911 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082848021 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073959425 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075592408 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075419793 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082536049 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081219426 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083134629 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073502294 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074147 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081287306 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084211962 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074020606 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080801674 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082864058 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081496205 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072763871 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084375591 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07410651 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082714212 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073739566 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083222685 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073767387 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081809509 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073435024 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072817331 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073366168 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081731615 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074802263 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073456448 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074872989 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07378917 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081018901 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084792801 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07469262 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080727056 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080900973 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074439927 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080963145 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073212217 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082132207 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073910814 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075100342 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072499534 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083970045 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07423638 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073226372 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073556456 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082867893 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074156247 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083423755 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08065498 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072557581 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08434799 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083150929 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080397062 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083262699 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074580845 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073277344 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074014092 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073771443 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080671233 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082688663 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074949783 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073349852 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080330532 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082801744 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.07288663 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081316576 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080860628 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081601916 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.0733624 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073541362 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083894544 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083371469 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080802651 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081627979 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081389595 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073926905 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080956611 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081727654 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073805456 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086841143 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074521077 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085965591 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081795713 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080101106 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081039471 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082710802 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082256396 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082733698 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084817755 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07213068 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072652354 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.08009829 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072287083 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071803162 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079188488 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073667612 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073843185 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083827192 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072677753 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.216193385 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.073704887 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082911691 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074037516 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075588111 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086298601 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074114289 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075308705 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081726268 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076252724 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08099031 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084162135 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08075326 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073774775 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074526571 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082474789 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082356923 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074332358 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074074722 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074880716 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081332515 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080657499 seconds)
  done (took 19.506788623 seconds)
done (took 38.642797773 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.197078704 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148760453 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.161782994 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116963509 seconds)
  done (took 2.014247218 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.11413454 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101557204 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092642046 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.070036358 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099510004 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070818443 seconds)
  done (took 1.89481625 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276011171 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.192986301 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177076492 seconds)
  done (took 1.985240745 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201248958 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187077992 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.428568548 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264646025 seconds)
  done (took 2.51691896 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140600161 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088944705 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071748536 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087695794 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.129186691 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.156933467 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099600123 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124536477 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083361588 seconds)
  done (took 2.369161751 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147603283 seconds)
done (took 12.26639062 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.215758409 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096182881 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.121747917 seconds)
    (4/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.081673451 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073262128 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.167324347 seconds)
    (7/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080440013 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.103689901 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.087807703 seconds)
    (10/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.226278555 seconds)
    (11/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.079285445 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.096465332 seconds)
    (13/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.092667003 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.114493122 seconds)
    (15/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.079087686 seconds)
    (16/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.223021303 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.134602822 seconds)
    (18/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.079390347 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.173565156 seconds)
    (20/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.205247042 seconds)
    (21/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.196192634 seconds)
    (22/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.465273275 seconds)
    (23/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.077441624 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.095606334 seconds)
    (25/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.160675402 seconds)
    (26/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.233204388 seconds)
    (27/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.123090199 seconds)
    (28/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.116815598 seconds)
    (29/309) benchmarking ("sort", Float64, false)...
    done (took 0.136098024 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095600106 seconds)
    (31/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.080524557 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07866877 seconds)
    (33/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.079282507 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.102260549 seconds)
    (35/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.083050427 seconds)
    (36/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.069787049 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183956361 seconds)
    (38/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07209261 seconds)
    (39/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.079006666 seconds)
    (40/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.169328799 seconds)
    (41/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.085248443 seconds)
    (42/309) benchmarking ("sort", Bool, false)...
    done (took 0.15801483 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.071139356 seconds)
    (44/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07565029 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.167138769 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084646883 seconds)
    (47/309) benchmarking ("sort", Int64, false)...
    done (took 0.071787587 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.08771637 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.093968915 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.119505503 seconds)
    (51/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070758639 seconds)
    (52/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.079224941 seconds)
    (53/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.171919498 seconds)
    (54/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.210291679 seconds)
    (55/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086862612 seconds)
    (56/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.080641571 seconds)
    (57/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124913111 seconds)
    (58/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.081115166 seconds)
    (59/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077599254 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069564542 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137350844 seconds)
    (62/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05733162 seconds)
    (63/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.121676584 seconds)
    (64/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069586645 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172812812 seconds)
    (66/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.080831212 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.091857541 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.076601418 seconds)
    (69/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104916754 seconds)
    (70/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.157307857 seconds)
    (71/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.117328405 seconds)
    (72/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.185165089 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.180614123 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.096446771 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.17932514 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.1212015 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090901957 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.081466181 seconds)
    (79/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.202774815 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.070094209 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069973477 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069172702 seconds)
    (83/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.221239559 seconds)
    (84/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.076439751 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.079888408 seconds)
    (86/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.206666686 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.057636907 seconds)
    (88/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.11991666 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.138873743 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.072891292 seconds)
    (91/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.211088583 seconds)
    (92/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08576675 seconds)
    (93/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.167660352 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.095431425 seconds)
    (95/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076832122 seconds)
    (96/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.057824368 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.071097453 seconds)
    (98/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.059194808 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.092830543 seconds)
    (100/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.074074547 seconds)
    (101/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05775595 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07958332 seconds)
    (103/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.081824264 seconds)
    (104/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.084718851 seconds)
    (105/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.079035067 seconds)
    (106/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072681003 seconds)
    (107/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.157694559 seconds)
    (108/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092621609 seconds)
    (109/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.082055631 seconds)
    (110/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07208758 seconds)
    (111/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.071505221 seconds)
    (112/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.206477122 seconds)
    (113/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.115066661 seconds)
    (114/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.084931329 seconds)
    (115/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.072629759 seconds)
    (116/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.069376862 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077838301 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.161263461 seconds)
    (119/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073588215 seconds)
    (120/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078835459 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094800351 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110596755 seconds)
    (123/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.116569853 seconds)
    (124/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.15786214 seconds)
    (125/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.069107202 seconds)
    (126/309) benchmarking ("sort", Int8, false)...
    done (took 0.148990883 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.070992528 seconds)
    (128/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.184695626 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.106435698 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.074461048 seconds)
    (131/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.155190598 seconds)
    (132/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.081529177 seconds)
    (133/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.084407833 seconds)
    (134/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.058410729 seconds)
    (135/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.058656729 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.077640982 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.125671371 seconds)
    (138/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.115734346 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079809741 seconds)
    (140/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.081607751 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.142830248 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.077689692 seconds)
    (143/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.155265714 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077723391 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.145274808 seconds)
    (146/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.153097007 seconds)
    (147/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.153709896 seconds)
    (148/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.068840862 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077447144 seconds)
    (150/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.080461255 seconds)
    (151/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.057253506 seconds)
    (152/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075416481 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095772432 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07824912 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117733364 seconds)
    (156/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.057913572 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091854534 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.070666659 seconds)
    (159/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.201253721 seconds)
    (160/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.057485487 seconds)
    (161/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183211792 seconds)
    (162/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.163587841 seconds)
    (163/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.158697305 seconds)
    (164/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06845368 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069038617 seconds)
    (166/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.075937275 seconds)
    (167/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.057190968 seconds)
    (168/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.192481296 seconds)
    (169/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.158585671 seconds)
    (170/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.179578441 seconds)
    (171/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.0568539 seconds)
    (172/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.107254313 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.14084624 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.096041733 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147709896 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.07048222 seconds)
    (177/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.080919541 seconds)
    (178/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.072942498 seconds)
    (179/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.079105467 seconds)
    (180/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.057898125 seconds)
    (181/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.071175756 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.111660979 seconds)
    (183/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.056430815 seconds)
    (184/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.227308184 seconds)
    (185/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.073459175 seconds)
    (186/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.120926765 seconds)
    (187/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084837059 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.072390866 seconds)
    (189/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.059943488 seconds)
    (190/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.05838946 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.0951921 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097857473 seconds)
    (193/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.058588347 seconds)
    (194/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084332348 seconds)
    (195/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.171763818 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115196607 seconds)
    (197/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.071329018 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070807875 seconds)
    (199/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.081739509 seconds)
    (200/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.077655617 seconds)
    (201/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070550381 seconds)
    (202/309) benchmarking ("sort", Float32, false)...
    done (took 0.136930861 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07743123 seconds)
    (204/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.058206762 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.070720988 seconds)
    (206/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083980989 seconds)
    (207/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.070757961 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.071324582 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.10924327 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.071552711 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092718019 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.102145813 seconds)
    (213/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.057238968 seconds)
    (214/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.060194112 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.077456805 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18302088 seconds)
    (217/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.165111782 seconds)
    (218/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.079548859 seconds)
    (219/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.098227279 seconds)
    (220/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.057543117 seconds)
    (221/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.057530244 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078439509 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079858733 seconds)
    (224/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.205190482 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.144430614 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.104612765 seconds)
    (227/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.107197533 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.080258208 seconds)
    (229/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.059679879 seconds)
    (230/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.081494253 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.073985012 seconds)
    (232/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.059770188 seconds)
    (233/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077202787 seconds)
    (234/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087839317 seconds)
    (235/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.069522083 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096247114 seconds)
    (237/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.058452571 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095578502 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.060072379 seconds)
    (240/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.0574283 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.059824584 seconds)
    (242/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.086871895 seconds)
    (243/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077879098 seconds)
    (244/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.057718471 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.06032555 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152053275 seconds)
    (247/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076120753 seconds)
    (248/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07949545 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069524427 seconds)
    (250/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071075412 seconds)
    (251/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.05899703 seconds)
    (252/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.057992077 seconds)
    (253/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094740894 seconds)
    (254/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.072644146 seconds)
    (255/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.078822127 seconds)
    (256/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079619473 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.059607737 seconds)
    (258/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077191636 seconds)
    (259/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.059365064 seconds)
    (260/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.069216205 seconds)
    (261/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078851929 seconds)
    (262/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.057162528 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.079230769 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.057137064 seconds)
    (265/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070508341 seconds)
    (266/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076594288 seconds)
    (267/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078368653 seconds)
    (268/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.076820961 seconds)
    (269/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072812136 seconds)
    (270/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073473697 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097910054 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092054235 seconds)
    (273/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.071160464 seconds)
    (274/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078716589 seconds)
    (275/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.058772161 seconds)
    (276/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.058429959 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091276298 seconds)
    (278/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071302473 seconds)
    (279/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.057691648 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172298198 seconds)
    (281/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075203971 seconds)
    (282/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.057402557 seconds)
    (283/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.078353194 seconds)
    (284/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.059063506 seconds)
    (285/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.068966072 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.069320761 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070519734 seconds)
    (288/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.056915627 seconds)
    (289/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.059333513 seconds)
    (290/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.058164517 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076589344 seconds)
    (292/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071207567 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073071612 seconds)
    (294/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.05642079 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.071478202 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.070780286 seconds)
    (297/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.058347408 seconds)
    (298/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.058089183 seconds)
    (299/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.056702718 seconds)
    (300/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09482997 seconds)
    (301/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.056893388 seconds)
    (302/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.058151105 seconds)
    (303/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093955745 seconds)
    (304/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.057157018 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069977043 seconds)
    (306/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07734226 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172590277 seconds)
    (308/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.059699059 seconds)
    (309/309) benchmarking ("sort", BigInt, false)...
    done (took 0.360696038 seconds)
  done (took 32.524406972 seconds)
done (took 33.879285417 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087736175 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097670573 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080980083 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097382123 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.086145667 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.082649527 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078862743 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083780181 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.086115163 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.087114975 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083916247 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.061291871 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079919264 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.0801723 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.080090865 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09547106 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085107614 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07895898 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078992812 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070411641 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078696699 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071165162 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072699444 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061228975 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.084193223 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077535456 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.080585359 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080039792 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.071037237 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.071742774 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.075104006 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.080273497 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.07126913 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.085407034 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079843234 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079383036 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080791021 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.082355775 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072931789 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.071579293 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.080326635 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070625308 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.078708333 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.079338823 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.077568518 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.077142131 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.079037613 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082854949 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095423974 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073418195 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.080833461 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.082434585 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082129564 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.078519672 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.075822922 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.078848421 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076478063 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095804649 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07959613 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072872534 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.080380617 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079392241 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.076706137 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.078813417 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079103655 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.081478402 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.082519859 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076556692 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.081336934 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.077849886 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.071169213 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.079226597 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075057401 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.071484521 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.081810276 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.085837963 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069894528 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.077079802 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.079075897 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.079172471 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070463472 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073288782 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072662103 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.077622535 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073268125 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061160822 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075517683 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.078360327 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069729282 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07927838 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07797012 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.078648331 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.073027124 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083528043 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070445099 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076753192 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071365086 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071306219 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072486339 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.075599289 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070646368 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073274551 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.081688306 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071889509 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077756963 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083829777 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070401087 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.078456582 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.070485637 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070131875 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084233358 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.081267783 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070573371 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072815863 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069450011 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077715285 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069574239 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069303664 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069404154 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069830559 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076354416 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06962688 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071894819 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076589799 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.222627467 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.071577121 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.075998679 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074376915 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.071756024 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.077694291 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.07121737 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.072172641 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.07317037 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.069022926 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073034539 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070957907 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07858641 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073613864 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.078888042 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072964418 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.080355242 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.076755891 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.077344175 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.076803263 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.069832606 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.065832294 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074097754 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073483439 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.073101001 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.070873963 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.072492045 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070620786 seconds)
done (took 13.246537952 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071459499 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.135717819 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097049962 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098037174 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088717682 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.072171529 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080454611 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099257033 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072996711 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10210405 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092271328 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090367129 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113155412 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069856688 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071229783 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.075319063 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07283057 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084378397 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100688138 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092405464 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115613474 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.071121036 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094879625 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092218032 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090676368 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.096151475 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072372579 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074961431 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075468474 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104142429 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092381335 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07500552 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.071812241 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.09912429 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097324033 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085855732 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.071906527 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086377649 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071884475 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.071098988 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073083927 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099944417 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.083532451 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083900608 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075414383 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.081490299 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072427802 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085852109 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092044011 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082705663 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088676651 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101576816 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073793409 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087559501 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070191586 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08845909 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080405518 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.073842006 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.072217252 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078922062 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071678997 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075180035 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084269323 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083102886 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075387872 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.087583503 seconds)
  done (took 7.017908844 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08833612 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097995028 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086892915 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.090672588 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070710894 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071327079 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071834633 seconds)
  done (took 2.02286596 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072210854 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09132841 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092058535 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092517537 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084796895 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.094460541 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0803218 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.07232576 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096307404 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073002763 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091482827 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101557177 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.075006628 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.085029966 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093621052 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072084318 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09436044 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.072089374 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074787579 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093750425 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077691619 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101790178 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079423419 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072177475 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085008846 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072227141 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116875848 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075516325 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073667335 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074864436 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073170746 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110513937 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084205707 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079031777 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072309962 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086396433 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085635761 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074934326 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082832457 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.080920626 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08466309 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072472584 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072815263 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.073481851 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076065236 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081792389 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072803688 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.07600184 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074578005 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090642419 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071228213 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084472711 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074852034 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077563035 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073996475 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078642207 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082226806 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073344896 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090898105 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073701134 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087252217 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08680322 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085047793 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086671879 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074177595 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084500911 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085040293 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074352363 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074090164 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075600775 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086684128 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070433207 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073440227 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081852757 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073934797 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09385723 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09346639 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073390241 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084965676 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.073134474 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072585762 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071928131 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093832431 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077248588 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072101599 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076266432 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075607852 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.075156475 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071732543 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07631152 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070260714 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.078603928 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074870563 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.075871124 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074555908 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087191315 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.075357443 seconds)
  done (took 9.266906126 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.074249715 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073183578 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073803891 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072907637 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072510126 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072923821 seconds)
  done (took 1.907319966 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093896487 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073376885 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084174382 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075860217 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10697037 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.089909603 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090623041 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082300518 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088038317 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083289177 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.089990695 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091612329 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095004174 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077203764 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090383354 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076359307 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.090888492 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078794019 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082693509 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077249561 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090712243 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077193448 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077109146 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085000613 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079935296 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076473252 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083770821 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083582501 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082780583 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081981677 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07693751 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080517292 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075021817 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081504983 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090888488 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075244564 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075855782 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.08161236 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076574276 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.083137855 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091079803 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077193934 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078477135 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081639797 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081716346 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075237968 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081520804 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083270971 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090590971 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.0818287 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.08182139 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076288412 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080001944 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.08160903 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075335174 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081423468 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081472258 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091048139 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076856118 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075251849 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073314257 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.08036422 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08113092 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080685642 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081741453 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081296955 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075458269 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077056423 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077423498 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075954153 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081664021 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073306339 seconds)
  done (took 7.3372919 seconds)
done (took 28.98291553 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543695132 seconds)
  done (took 1.967618983 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.600853114 seconds)
  done (took 2.054086646 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.501692609 seconds)
  done (took 7.954435443 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.38317624 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.48594769 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.726520004 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139358739 seconds)
  done (took 3.228682492 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.722104275 seconds)
  done (took 2.18211711 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23948077 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22976041 seconds)
  done (took 1.938668354 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.37914805 seconds)
  done (took 1.828070123 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.130219372 seconds)
  done (took 2.580813256 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.246519126 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180795422 seconds)
  done (took 1.882362146 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.44545535 seconds)
  done (took 1.898456842 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.883949887 seconds)
  done (took 6.339380122 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.222870857 seconds)
  done (took 1.718859996 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244130482 seconds)
  done (took 1.697873614 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.746691015 seconds)
  done (took 3.204317864 seconds)
done (took 41.940190508 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088484248 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.091033526 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.09028117 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086614144 seconds)
  done (took 1.794672491 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082879829 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078619994 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081192707 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07805558 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081403137 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078330269 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.080102348 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080794775 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07808939 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078188471 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078449649 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.078071743 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080236775 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079765626 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07657358 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080393769 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081458389 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078873555 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080670208 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.078206206 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075925329 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080589333 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080221198 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077103749 seconds)
  done (took 3.361381008 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083301798 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078506242 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080868749 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077231075 seconds)
  done (took 1.780897164 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083511489 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094865845 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092893136 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083490062 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094999622 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090224247 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074786001 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07443559 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075523059 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.083419839 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073403844 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099518764 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092645992 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.084012471 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.086130391 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070765342 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073386934 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091683573 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.084372444 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084586361 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075969205 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08435942 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07403367 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093865506 seconds)
  done (took 3.47506036 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08549511 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105918929 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085184852 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095304454 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097044734 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.071636544 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084062302 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097727876 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.131349382 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.071168895 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076877764 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071285066 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.080025053 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.0713683 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085832612 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.115667422 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116930644 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.074950201 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102941661 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071225428 seconds)
  done (took 3.259113117 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077510473 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074935792 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.075645331 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070971834 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082511787 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077942092 seconds)
  done (took 1.928516541 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07339307 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.073441529 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072734427 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072576272 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077278105 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072654511 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.07147306 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.073130391 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.07341789 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072655167 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072922533 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071152085 seconds)
  done (took 2.340304566 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.186508915 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07368785 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073902152 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071971226 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075399442 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071940229 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086414083 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073725118 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096863755 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.07224179 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072544824 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074522737 seconds)
  done (took 2.495387697 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195653782 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080440503 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228838876 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153457322 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111028401 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115535409 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115071206 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113989247 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.138718072 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102052372 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162150792 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162615099 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109290761 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138730373 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093489606 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106806235 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15254372 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164871289 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108625914 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163644136 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144318609 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128520322 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145826005 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104573141 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107693365 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12064886 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076498151 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083741695 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166077445 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131564725 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142232952 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113658685 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094036463 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177669352 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163671274 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13854052 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149102875 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087752007 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107308305 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132465439 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189994148 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091367738 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.299347413 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113885717 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085012993 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133412608 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120732595 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121675802 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106006562 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093548715 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144078651 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177734297 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.133827762 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090420191 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124123057 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114366158 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113339884 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114836123 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172715998 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1564007 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128592763 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076200672 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112830145 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149216675 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132967378 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109485632 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124484222 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096944014 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133052413 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152637566 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12341575 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141121859 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117685918 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092439884 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122437067 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137529675 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127269666 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158619417 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12565487 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078443261 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123181309 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102117891 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084876627 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147869091 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079521949 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171348645 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10313675 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108771402 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125295168 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110094691 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110821378 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151486052 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283694176 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108007037 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073597676 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108492891 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120655126 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143407935 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091506162 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109969555 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118488694 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081919939 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133838428 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080467974 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124017472 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082578672 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124202437 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130179559 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081662607 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123834017 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106254912 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.104596844 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13077232 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155739239 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091913463 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085188003 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162005181 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12307925 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104778241 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141476095 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154438101 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.105658968 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10175874 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145904312 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167633512 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092931894 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160546497 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107064152 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087485269 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091868139 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123943528 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112378626 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125531163 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085540623 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119543031 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163187072 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079400097 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0985402 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134518764 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08252567 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084637287 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108024517 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105403399 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099527777 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101555016 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103959399 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13448812 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269871871 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111656779 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124939217 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101899366 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162053353 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091612898 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106347563 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106392357 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075212104 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.131902873 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152442847 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082849585 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156370273 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122949108 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117547881 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120626748 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087352153 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136632773 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082964427 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074751606 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140387349 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113155386 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110953669 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.146901806 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11677429 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124494217 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119885774 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131418759 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129532372 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12954711 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109496459 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092441901 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115108798 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127892255 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078343466 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094249874 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084329616 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107270503 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098132879 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087221201 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139982226 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123810225 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11460435 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114806671 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10045889 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144803233 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080670922 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12589798 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120648098 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098404458 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148465615 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148167715 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132147395 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101776123 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281163532 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.076097453 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079523661 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090567789 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123398712 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087671276 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086954896 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115392571 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144202451 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128446203 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1346231 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124234012 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11929028 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151772841 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075280743 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.122473072 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141524345 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121890192 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.108265837 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094145032 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102137734 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140177916 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106842244 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172369731 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115663371 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12619674 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153312477 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10623085 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083889263 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105784717 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131922375 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105364192 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14053787 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10176985 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091913129 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110382346 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.083359949 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100413729 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127102933 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11919803 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134957102 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115361096 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133696912 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082029334 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114697376 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12334514 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121152617 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069613717 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118711066 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154293596 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09820409 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117792371 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295336974 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083667479 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.137850398 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167087839 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142103889 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088312906 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108697813 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121807696 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124883678 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120206934 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136637217 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107012365 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137137633 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112609459 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089286497 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090869193 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09932316 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106119428 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09801546 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104406599 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114320472 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099562736 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130606447 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106597908 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112722508 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119685334 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103494799 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096767078 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100441849 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171667019 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119972671 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166224443 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103833679 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.140338473 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15822619 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079725193 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083620488 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.0827676 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137842561 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089377558 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130637554 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.113047816 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118214384 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1247468 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139275155 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098636426 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07371036 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110559536 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131779143 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123409837 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100458854 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103714924 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156863813 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100684612 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081649996 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259488446 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118244727 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105623838 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164102091 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.068387956 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109261977 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081377685 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084601859 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125921347 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147204038 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084646288 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103354972 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121410756 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113359061 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125472949 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100646653 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113381842 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125866213 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143844288 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127190355 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092934093 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112216479 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126591386 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152124448 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104768132 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101584609 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170049182 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14902471 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.156400789 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089330689 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116313166 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116651417 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111448294 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136970337 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087984799 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158352748 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086351908 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135662184 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104943608 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091826591 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128775264 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113550333 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092327398 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142443769 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117811659 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086794893 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081944544 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116156891 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119162661 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105362376 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07926326 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283907793 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.079402003 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133477061 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156949868 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085394913 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106895594 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098386095 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0853833 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106752265 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104257099 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090492175 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103966181 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166151183 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089388226 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144816307 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132349636 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112196228 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133017786 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105021996 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642992105 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081576235 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14753094 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116085721 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167034422 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102838768 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119428256 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112204988 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12129749 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141079062 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10457109 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181194817 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131322045 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117646048 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083475017 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105372608 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106614328 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090815108 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109766115 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115806571 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116711978 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096478791 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117478145 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124617576 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086890709 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099694371 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153150405 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11563172 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141367001 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136311933 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087927123 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118160044 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134664517 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231510368 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.11959522 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147474903 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108289677 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103171178 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085771263 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101751712 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155854292 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078293688 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154519859 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124412061 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129215867 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114576908 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110029373 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131144405 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105906458 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122532137 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094428117 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109804971 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114873177 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085728778 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081229871 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107736645 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112112084 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102050885 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100163002 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103890093 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149098206 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077219734 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101349379 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117467249 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141426318 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168522341 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092901042 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087389064 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120680433 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117189513 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11411755 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122677416 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084041655 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086294061 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084298098 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.08747257 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110063133 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115672707 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116049648 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112390635 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158516345 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087278316 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225191732 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097748653 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106545182 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075026067 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.08131177 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098506993 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098399773 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254495717 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114986088 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15648481 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099336861 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09364956 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095770027 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.080181275 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087477612 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125630048 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109771518 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118948122 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103497143 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.069153761 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107928049 seconds)
  done (took 59.407383969 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107883193 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086983783 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101295143 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148519427 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126302293 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204167994 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160654928 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194158114 seconds)
  done (took 2.702037767 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073710195 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098598032 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108405583 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087426734 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072071621 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073602824 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.228622621 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086163379 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071795897 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094562408 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082369913 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074269986 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.414594557 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.072378138 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.073812914 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.067265697 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073359172 seconds)
  done (took 3.414738455 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.391247559 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.619715683 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.346113888 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.083250793 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.93205211 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.10012493 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.316037139 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140218578 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083885003 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533002235 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.415399537 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.136534402 seconds)
  done (took 18.6671679 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086097026 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.080686677 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093349914 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.09331053 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082543495 seconds)
  done (took 2.005270726 seconds)
done (took 108.116118533 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.087477736 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.417920507 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060181191 seconds)
  done (took 2.073422233 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091714134 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08975892 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.0899505 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087337318 seconds)
  done (took 1.935688536 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079389516 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081720554 seconds)
  done (took 1.731633957 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.229682495 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170103724 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100632846 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087395202 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084099715 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084777823 seconds)
  done (took 1.830587741 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076976341 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079665949 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07738084 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081763237 seconds)
  done (took 1.88491021 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080597918 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057699365 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060072176 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.062450844 seconds)
  done (took 1.831543966 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091005938 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087831537 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08410801 seconds)
  done (took 1.834275827 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103324915 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091599186 seconds)
  done (took 1.765976598 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085203447 seconds)
  done (took 1.657264356 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09320367 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102955447 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13585514 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.117751943 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142575223 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117790919 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089705372 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090437657 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.083976354 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091390533 seconds)
  done (took 2.636955935 seconds)
done (took 21.338946056 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083273299 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371762366 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364437027 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093940911 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674373354 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361949028 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.991300713 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097294191 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144379002 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072802907 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090380828 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.654303597 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983876221 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.335022804 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.972555 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.336009527 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654935195 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074519347 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073743027 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073940581 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.978668979 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074163352 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073969697 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07503629 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654274293 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.378945463 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074156426 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.335608777 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074296175 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075852921 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.378441706 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07438805 seconds)
  done (took 16.30661358 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075432403 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123594976 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077682797 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089399486 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075723985 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075779683 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.077203945 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.075231169 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125349634 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073910514 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090676811 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074264865 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.078048169 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074726272 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093602061 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074156753 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075455113 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075505716 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.077651802 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075007841 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09267446 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07389874 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074768172 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075003642 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074708942 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085982376 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074794539 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074223 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075339194 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076598512 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077854104 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075334676 seconds)
  done (took 4.175842376 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12066096 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128287733 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079186137 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109460095 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117179747 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07620349 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14840639 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09869781 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132779002 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074338189 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090506827 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074570606 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106937155 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075419616 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093944784 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075130963 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075264187 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074517434 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074245908 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074080935 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092876269 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074163523 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074279027 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075253348 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074645814 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087859262 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074524955 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074447175 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07460797 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076095569 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077817377 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074768881 seconds)
  done (took 4.418263367 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077553486 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080093363 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.086669493 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087841806 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074797968 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.077238815 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078336479 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074438521 seconds)
  done (took 2.227067123 seconds)
done (took 28.706353736 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084086455 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.075166702 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07872742 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.093744354 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.079034568 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08309983 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072271635 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.081395981 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079451747 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.079130448 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080755058 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073154213 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.077486916 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072728369 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079627476 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073753716 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084254112 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077830712 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083881894 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084448253 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076001745 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078762966 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.080917621 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083324638 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084246634 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083576243 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082167469 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078211261 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073969235 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076140105 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082075714 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089110258 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073673639 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083807787 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.073148169 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073026486 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.077556163 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073183264 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083644144 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.0815221 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.075102743 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081870076 seconds)
  done (took 4.900824811 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093287707 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097325936 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.090522494 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067981457 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073712139 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07114867 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094943794 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065851092 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066126237 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.094136167 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063192665 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.065494249 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069194783 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.061233423 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066481776 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064316942 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06840343 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061899495 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066841763 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.066033485 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.095203488 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.060963604 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.083422562 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069144089 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.062960356 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.068710333 seconds)
  done (took 3.506583273 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079674456 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088277824 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095574312 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147142978 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115918608 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082848906 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084213854 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097227448 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099246064 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072515132 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076268837 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098546517 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093333992 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079046874 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07323794 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089547155 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.090320707 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074505595 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078275254 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097085669 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091713988 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090663326 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096979414 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.089596158 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.072620267 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075085226 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076488424 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086201022 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075446339 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082668733 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07554918 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076257279 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07490393 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083898207 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.076095624 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074702861 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098631058 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083231793 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084143699 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.073944269 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.08093597 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.075048881 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096130494 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129053952 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072360823 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078500005 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076505438 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082998012 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072559882 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099380933 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084189991 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.072947462 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076207236 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.072773258 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.07225034 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075894163 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074876034 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.075570543 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.082511622 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078594096 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097018672 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07815269 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089034405 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072676758 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081870159 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072425337 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074457243 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072804928 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097837508 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074798389 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112746505 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.074192991 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073912172 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082356933 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081274176 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079043045 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.07323489 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.090187569 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082629904 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076093736 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081447104 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076429149 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075818803 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101474483 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075294321 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074843618 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074158707 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078184994 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.076085933 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.074448214 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085549787 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.07374797 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075485493 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089579365 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073065353 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.075188055 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07885485 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077147365 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072782109 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083932486 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.077236393 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.074235616 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082513733 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073071183 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075045769 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.085194971 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.079188213 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071601321 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076709253 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077865132 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073513339 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074330253 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074893701 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074162688 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080962201 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079317784 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076621902 seconds)
  done (took 11.197662727 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165808591 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155912173 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075871369 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149572655 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.082422492 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08412259 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150792933 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097816286 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.073478724 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074229448 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073808132 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112748889 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107927098 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118893524 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083444053 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073408996 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095357706 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117316353 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.151741937 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147874253 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095605666 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081557094 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.076192456 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074616561 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075531752 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083211408 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090632881 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.0820053 seconds)
  done (took 4.48623117 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084379641 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107627187 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079884454 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095828208 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.093897008 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073491408 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075449149 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.076129339 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.090007917 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08289291 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073505448 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077785507 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079682985 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075898758 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07436275 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.080297491 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080120854 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07510208 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076644726 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078497092 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083188853 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096284777 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076338515 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.07499992 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077786788 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.07236662 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06826174 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088103678 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073929914 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.098137805 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070993268 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07796975 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086947073 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.074496159 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.07329469 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073333553 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07327568 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073146702 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074830459 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.071784037 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071864358 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063434923 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072441326 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08327916 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.086293564 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062065234 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077652183 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078314397 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078344257 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070796187 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.076456287 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076643365 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075911758 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080832533 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077466553 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078912931 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074707005 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081721184 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081488025 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072901924 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070352601 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071977839 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078561436 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069898517 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.088240251 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078344298 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072068429 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073312502 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075120405 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.086278623 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073197665 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078537742 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071278801 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075389611 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077915502 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075244301 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074638561 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071947077 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073268642 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073222382 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061015571 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.073250699 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059391012 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075955039 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.07152465 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071907092 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073316369 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077625787 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083769738 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074905477 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078899311 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074637208 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072573618 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076428226 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066382704 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075688243 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083763467 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087041293 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073290619 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071462777 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085848908 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078389637 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072690854 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063442566 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077605891 seconds)
  done (took 9.698499645 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095868805 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.075090007 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087190397 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094308863 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091323031 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079566923 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.083638864 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074630242 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089116609 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.080341669 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082509805 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073987773 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083626169 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.083559819 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075496975 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08405717 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07734631 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088243544 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08793451 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073618183 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.082310005 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08558176 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094272341 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086255414 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084457119 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086589794 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094782572 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.08301465 seconds)
  done (took 3.997634901 seconds)
done (took 39.372083876 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.678175119 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.935260243 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.673474756 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.002708693 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.750344608 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.872669543 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.762132823 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.668197127 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.927829524 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.706624204 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.003639882 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.73311612 seconds)
done (took 64.436317828 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.701749166 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.812137285 seconds)
    (2/2) benchmarking "String"...
    done (took 1.898601687 seconds)
  done (took 5.307664962 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.866091107 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.271110003 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.922497677 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.676383514 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.68386477 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.995076194 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.492838858 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.200179936 seconds)
  done (took 29.838281314 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.835926723 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.906508777 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.370117328 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.407084713 seconds)
  done (took 15.166526801 seconds)
done (took 61.568475109 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.68938832 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.717034532 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.686954944 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.658964833 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.738672362 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.692776991 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.938377508 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.713593874 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.678017523 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.67004419 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.681449964 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.110068321 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.690389677 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.820247916 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.680243907 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.67930756 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.738238875 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.106982452 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.837809379 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.693299431 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.689241741 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.745016519 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.684239382 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.680116851 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.690907484 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.67849209 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.064413823 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.679167862 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.496305104 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.680997696 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.728240012 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.062085233 seconds)
  done (took 200.697021048 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.67844942 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.734521578 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.801286715 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.695790023 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.186230423 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.86226964 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.764977379 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.210400543 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.687611701 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.70855375 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.832745557 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.680571971 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.841833534 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.6140027 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.695736297 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.681960853 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.852383492 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.859315441 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.708273008 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.849491259 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.685765502 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.668688545 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.636210897 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.819824155 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.724536135 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.691165962 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.684695824 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.71261198 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.861699001 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.837360038 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.706356519 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.713650365 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.888456566 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.54157833 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.680099848 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.700647449 seconds)
  done (took 166.097825546 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.85511237 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.681269587 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.680211312 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.680519108 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.686124613 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.680330294 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.808591459 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.80641006 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.309962963 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.319912389 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.734601353 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.68064356 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.48624495 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.681847137 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.748749365 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.697193682 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.684573681 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.697154462 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.710336241 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.681789488 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.682479652 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.807139999 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.695746794 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.681814563 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.689031446 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.682229576 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.687747075 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.048209282 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.682553908 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.698213218 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.683475696 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.687245058 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.922405434 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.682592076 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.681936524 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.53091118 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.222815792 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.764957988 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.683597436 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.687754115 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.682215774 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.681973686 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.899903869 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.683162823 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.683476558 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.682457235 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.68569518 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.82126149 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.685079395 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.809107508 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.685659524 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.155006394 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.683391288 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.682454905 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.59667982 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.264994886 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.685832923 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.685481656 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.683756125 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.683534936 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.689006865 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.519374059 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.75623214 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.685622719 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.687145548 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.689462134 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.684842126 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.911573991 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.683284771 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.258634932 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.744003267 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.916424391 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.806641259 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.685549444 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.750824275 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.7775383 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.684327231 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.682588962 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.683562305 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.684542925 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.764459365 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.684799338 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.804347123 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.692908557 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.685300577 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.735259711 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.753426458 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.684081309 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.539735432 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.686387793 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.683710951 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.938718246 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.68494339 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.684546324 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.750493941 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.684948565 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.684764299 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.805383488 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.80783788 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.391177711 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.687545055 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.567309754 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.829152336 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.686695405 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.840988617 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.687685562 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.766009656 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.691327379 seconds)
    (108/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.687068179 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.687127609 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.717460442 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.686320416 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.741014144 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.688063583 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.056859806 seconds)
  done (took 392.246677788 seconds)
done (took 762.551113362 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.284735525 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.249850761 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.347634921 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.264653529 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.241033172 seconds)
  done (took 12.990595321 seconds)
done (took 14.593951715 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.774559017 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.779517367 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.710705604 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.777573495 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.707190334 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.776557016 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.759054034 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.710398059 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.744925025 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.711701261 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.745661985 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.710783575 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.697853496 seconds)
  done (took 24.210543212 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.920098368 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.916009162 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.746582568 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.914461543 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.72230737 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.917331306 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.840288458 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.841374644 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.832526205 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.693175864 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.689004095 seconds)
  done (took 21.638052913 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.921169814 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.9205965 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.75334339 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.91608013 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.725997675 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.946508046 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.843878596 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.83453098 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.8298254 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.693525306 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.689829611 seconds)
  done (took 21.680086273 seconds)
done (took 69.131604816 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.684200959 seconds)
  done (took 3.289187716 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.712299412 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.883905894 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.690730582 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.688597742 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.683502624 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.686045324 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.688245755 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.683972275 seconds)
  done (took 15.323103395 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.683801109 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.686341492 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.684679241 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.682517785 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.683733159 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.685111727 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.684960499 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.685394931 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.683681037 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.68249585 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.682583261 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.682197965 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.686014516 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.685022951 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.683083777 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.683300463 seconds)
  done (took 28.550911572 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.684749953 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.682730799 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.683257638 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.683628329 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.682641603 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.682697917 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.683900677 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.683079682 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.683378756 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.68337448 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.683767046 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.682178729 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.683339411 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.683728562 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.682726192 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.684460034 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.683775952 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.683090224 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.68806044 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.683342304 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.686593381 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.684617557 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.685329735 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.685495437 seconds)
  done (took 42.023261214 seconds)
done (took 90.790669587 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.413487737 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.652402344 seconds)
  done (took 9.674244898 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.687398402 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.687032069 seconds)
  done (took 4.98682594 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.68779185 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.686141144 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.6858525 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.687590637 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.687744273 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.687122312 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.688114759 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.687179606 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.687167217 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.687318411 seconds)
  done (took 18.480029416 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.686975797 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.687719505 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.68461604 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.688062892 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.687662257 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.685181012 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.687413765 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.687908974 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.688519394 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.685069223 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.689519119 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.684913575 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.687993342 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.685096726 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.688272018 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.684291364 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.68488683 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.685602853 seconds)
  done (took 31.968297628 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.687774263 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.687423678 seconds)
  done (took 4.983592701 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.686125574 seconds)
    (2/7) benchmarking "second"...
    done (took 1.686155473 seconds)
    (3/7) benchmarking "month"...
    done (took 1.686348869 seconds)
    (4/7) benchmarking "year"...
    done (took 1.685392909 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.685682892 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.685710554 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.688128574 seconds)
  done (took 13.412370422 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.690047771 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.837230939 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.899093608 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.319597286 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.690340478 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.691973138 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.585904446 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.693578885 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.693657592 seconds)
  done (took 18.711624051 seconds)
done (took 103.824720968 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.548634754 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.685934397 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.928736361 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.740569239 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.74084671 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.025520434 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.691324335 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.957048297 seconds)
done (took 41.929510532 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.726652486 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.336008888 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.37837911 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.714102695 seconds)
  done (took 15.038902992 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.678450151 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.004149229 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.702546264 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.509530047 seconds)
  done (took 21.511206211 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.064465507 seconds)
    (2/2) benchmarking "read"...
    done (took 2.034760335 seconds)
  done (took 5.718118716 seconds)
done (took 50.607050526 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.690404843 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.69281656 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.693677126 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.695595806 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.691665939 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.693149566 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.690902478 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.691215638 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.691052164 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.694206814 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.693222342 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.693999115 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.693506112 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.693636161 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.690971722 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.690228798 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.692687002 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.690819076 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.69373687 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.690572769 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.692961485 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.694478409 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.691455557 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.69132417 seconds)
  done (took 42.231986432 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.694958676 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.691678824 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.695323132 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.694502314 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.69115757 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.69382131 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.693742313 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.691173189 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.694697598 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.694120929 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.691543422 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.692142048 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.69448566 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.694936565 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.694572042 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.692648687 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.694845199 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69166737 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.693982845 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.692265895 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.695316519 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.692309639 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.692735875 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.694332333 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.692513229 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.69286376 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.695143432 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.693642851 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.695391753 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.692818117 seconds)
  done (took 52.421098012 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.702260489 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.703099375 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.695450234 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.695574463 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.694790942 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.696192471 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.694974502 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.698266741 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.695196313 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.695997545 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.695749075 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.69596326 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.696509473 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.696258526 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.695774157 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.696699188 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.696219749 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.696649403 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.698390457 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.69582962 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.69592214 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.696015679 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.696084069 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.695993516 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.69626642 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.696291124 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.695713194 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.695595047 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.696534346 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.695994564 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.696120331 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.697276011 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.697230037 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.696830698 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.697731916 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.699068979 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.702368844 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.705103137 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.696337022 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.697790265 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.696074775 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.695957199 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.697045182 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.696321956 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.697169707 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.697038616 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.697444171 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.696661936 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.696999774 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.697121331 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.697875781 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.697665455 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.697044997 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.700449435 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.698143231 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.697974315 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.699583969 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.698111026 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.697671551 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.698467263 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.698269696 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.699028151 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.6993158 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.697973626 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.6981325 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.698217399 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.698297041 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.69826592 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.698646599 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.697935769 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.697106684 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.701564575 seconds)
  done (took 123.834278519 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.697655544 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.696715492 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.696505666 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.695918218 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.696449896 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.698934477 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.696716886 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.699698997 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.696582173 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.699285003 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.699000094 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.696951657 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.696291928 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.699569515 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.69915683 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.696830186 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.699800787 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.69695686 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.699018795 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.69985208 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.699584085 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.697667589 seconds)
  done (took 38.973978713 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.699428776 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.698102744 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.696799554 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.701266834 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.696716044 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.700134055 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.699791739 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.700199979 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.700816327 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.697051679 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.699350402 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.700332046 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.6985569 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.697778517 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.698253433 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.697480457 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.700134246 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.698800893 seconds)
  done (took 32.201781733 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.698562051 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.698185933 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.701163714 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.698181211 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.698069259 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.700114345 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.699122464 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.701603182 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.701946296 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.69984378 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.701253231 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.701727763 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.702723422 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.699815347 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.701849503 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.698328432 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.701167945 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.699160835 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.702315704 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.699560206 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.699828288 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.701674065 seconds)
  done (took 39.026814406 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.701388493 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.701736243 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.69907941 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.698679965 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.70034845 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.702628631 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.701869412 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.69908697 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.701815635 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.702323908 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.699985064 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.702103758 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.699868357 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.70013872 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.699368138 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.699206137 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.70260336 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.699960569 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.702284944 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.699912232 seconds)
  done (took 35.636210617 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.703791576 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.70211625 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.702455764 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.702822033 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.702694589 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.702871167 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.702574938 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.703770532 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.703889226 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.70303601 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.703002867 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.703397786 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.703104555 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.702559521 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.703290947 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.703411625 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.704211186 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.703732184 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.704436979 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.704995439 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.704266423 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.703390245 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.703980543 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.704874877 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.704936408 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.704007618 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.703398966 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.703777807 seconds)
  done (took 49.322067375 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.705109139 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.703645586 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.701391183 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.701263718 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.701491913 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.701403673 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.70064554 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.704155438 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.703943664 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.701231163 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.703831611 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.704636831 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.704775509 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.705119858 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.704448126 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.705425559 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.704161444 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.70163447 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.702179693 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.702678933 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.704940895 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.704951758 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.704734826 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.702298323 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.703660993 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.705352901 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.702259187 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.703170265 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.705553211 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.702454517 seconds)
  done (took 52.727240687 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.723278303 seconds)
    (2/2) benchmarking "in"...
    done (took 1.724511779 seconds)
  done (took 5.072919473 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.702659389 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.705699906 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.705874765 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.703716559 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.703156244 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.705093553 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.706482384 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.70282037 seconds)
  done (took 15.260601428 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.716172009 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.705766901 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.705469324 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.705835305 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.705624426 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.716335401 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.722420282 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.706933374 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.717557534 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.717734912 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.725053452 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.724941191 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.719585688 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.717728 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.717929981 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.71831609 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.707740826 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.70853499 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.706021165 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.706645113 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.706412824 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.719966271 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.719568515 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.705161822 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.718481028 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.727416389 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.721478664 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.706699542 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.717104443 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.720931908 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.71813396 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.704330766 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.70686727 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.706599416 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.707547038 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.706601393 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.725995808 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.718336345 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.723417318 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.706390322 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.70790475 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.70453154 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.718704191 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.720063889 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.720323316 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.707534758 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.708282289 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.705588999 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.71739242 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.72170829 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.712826659 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.7176816 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.705950205 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.722580657 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.720336273 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.725862606 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.708319531 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.722353851 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.727810143 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.72835172 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.73245402 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.726774249 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.720186008 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.709013191 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.729572776 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.743596338 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.725848333 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.707009932 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.706304536 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.712485507 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.726037754 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.732508908 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.729771622 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.708924492 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.709124418 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.709935711 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.720910072 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.710392711 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.726821775 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.722920778 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.709455449 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.70893706 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.730025042 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.742708963 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.720783453 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.71019612 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.710283053 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.711534147 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.721374523 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.732908566 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.710579348 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.710232441 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.720223482 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.719993194 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.722054604 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.71005865 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.720801035 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.721969214 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.708237766 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.710265084 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.70973995 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.725586775 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.7307326 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.709947701 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.711946108 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.72830993 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.711918627 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.720707421 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.727507947 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.712183347 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.710337158 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.722693957 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.727689218 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.708666528 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.725088183 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.730937729 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.711780396 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.7237651 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.711114474 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.711550366 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.732554907 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.748740887 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.715053791 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.7114896 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.726474011 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.723214887 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.711086718 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.725482068 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.710906079 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.709525306 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.709293274 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.724093398 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.712544851 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.723894496 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.711986677 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.724127582 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.712132807 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.712626143 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.712739824 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.725425427 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.724600418 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.724042901 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.725247276 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.725329582 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.712327297 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.724887203 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.729561059 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.722711634 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.725767097 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.725276798 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.710571243 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.713850519 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.725184251 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.712899978 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.723538357 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.712091525 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.724186972 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.715037143 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.71378732 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.71408438 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.714169002 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.725554258 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.728612802 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.714571301 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.728103776 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.724107912 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.711039129 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.714414758 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.714034453 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.725325976 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.714136319 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.723354744 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.728710655 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.721660361 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.715893192 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.713746809 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.7273241 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.713964621 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.713405852 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.713751423 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.728361402 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.732751231 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.714389264 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.732210921 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.714490099 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.714665312 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.715829384 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.726110271 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.726329364 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.715004771 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.730379378 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.723492697 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.740504563 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.735482891 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.727445856 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.720375477 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.72647974 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.718795409 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.729747649 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.715094931 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.716061578 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.71450406 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.72539637 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.715177076 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.728667598 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.714952748 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.726470723 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.714498912 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.716129109 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.716076724 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.715810761 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.727700141 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.727741863 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.712841186 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.715308528 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.716082457 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.725591454 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.713518971 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.726168145 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.726265602 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.715933447 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.716161958 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.733073245 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.713626566 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.727860146 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.728125705 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.727314163 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.726942026 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.71781486 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.729369918 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.727663952 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.733379826 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.727096221 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.728187295 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.73441339 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.727292084 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.727015443 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.730028241 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.717074604 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.715180845 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.731131233 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.726254864 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.717444908 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.716931639 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.721844623 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.728478113 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.718397872 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.735397715 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.714496759 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.727134797 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.718019155 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.729174351 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.715571154 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.729770817 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.729200794 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.730626532 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.730078525 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.717892546 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.718946485 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.730100278 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.717976471 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.719516135 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.720808897 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.731429373 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.725526791 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.734275449 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.729300793 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.731019475 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.730136218 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.722219323 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.729590311 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.717703118 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.72918824 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.741733261 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.727357744 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.734764042 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.730479521 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.719153914 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.735212933 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.7353026 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.733574605 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.730122335 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.73042062 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.730321739 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.73028954 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.716654573 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.730422618 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.718776117 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.731453487 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.73166607 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.723705038 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.720945677 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.730614118 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.719771201 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.718291729 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.720469114 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.733162632 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.720766985 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.732988516 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.732676424 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.730212787 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.731099221 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.737641106 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.731959415 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.732372293 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.730250748 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.731270793 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.73136696 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.732192675 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.718947826 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.735504459 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.728568066 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.734148159 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.741079352 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.735931666 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.740399027 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.719621828 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.735467015 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.728355545 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.717743214 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.730659221 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.731902414 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.720466941 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.738622279 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.720013863 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.732790736 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.725014183 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.720718579 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.721343253 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.721388969 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.72073459 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.723439766 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.720583394 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.739593835 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.734426623 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.735750347 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.733817579 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.71848532 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.720251531 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.721770484 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.731862223 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.736177109 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.720972886 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.733292604 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.73266236 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.733337099 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.72172024 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.72140698 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.723949497 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.722383616 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.721925684 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.739228585 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.734064641 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.726924376 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.722691343 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.74062706 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.722854878 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.740480517 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.722743789 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.735288117 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.721773484 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.722966233 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.735625117 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.734353944 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.735521584 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.72313281 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.73729136 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.728185668 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.72256707 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.73605839 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.734958932 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.722690508 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.73415 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.743865541 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.747298642 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.735262606 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.728298457 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.720810475 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.736022733 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.727507041 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.723803055 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.732637596 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.737144043 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.748061249 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.731944054 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.734421067 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.724145227 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.735416576 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.724241782 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.724491684 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.724281252 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.726123369 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.723991753 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.736389681 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.723558845 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.737662121 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.723924494 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.737129611 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.737544638 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.735867421 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.746525117 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.726411181 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.736069345 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.724679051 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.725355556 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.737431628 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.736922201 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.724600077 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.737185213 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.726002887 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.737446249 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.743969282 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.742695856 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.737373004 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.735777494 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.72473173 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.736572989 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.737104648 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.726664122 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.725372279 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.724570471 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.73727346 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.724723345 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.73710646 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.73562295 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.725936659 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.736850481 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.726939925 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.73976089 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.743950045 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.73745675 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.723895616 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.726147406 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.725501373 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.735826331 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.739698448 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.744214006 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.740615667 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.748461726 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.746633585 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.731855988 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.738380382 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.740560233 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.746150076 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.736085378 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.739207922 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.727815701 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.738933791 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.737950584 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.741335748 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.725577988 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.743079085 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.739641861 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.739336021 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.745404817 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.739981883 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.728023825 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.739814727 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.742365509 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.738962591 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.725294014 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.728191026 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.737283375 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.745425121 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.740501673 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.728165964 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.739825002 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.736409057 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.740352212 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.731887319 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.729562819 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.740090092 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.725598133 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.739260955 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.72824677 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.728788322 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.72508856 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.739682982 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.739539663 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.744105806 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.747294606 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.726382273 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.74245069 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.740438005 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.741377939 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.728660052 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.727706022 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.730879025 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.726829598 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.738968203 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.727885262 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.740598208 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.74176622 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.739681801 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.743485499 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.730366815 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.729573421 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.743128258 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.75100202 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.73692524 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.726505927 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.739677469 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.741698381 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.742976202 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.729659404 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.729704084 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.74114601 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.741796802 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.729994255 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.729646865 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.729425497 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.744216174 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.756558612 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.730199588 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.740508217 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.740902424 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.74474494 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.729988397 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.727569608 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.730186544 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.742796468 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.744997931 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.738693722 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.729963287 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.747661256 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.741903827 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.742827003 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.735338069 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.745049621 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.751285467 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.744770668 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.730357934 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.730579284 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.748071229 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.758102864 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.731197884 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.752876706 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.772028747 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.743203292 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.743423331 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.730591009 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.741548129 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.730635394 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.744070194 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.731225208 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.731908661 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.731292123 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.731044582 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.743321422 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.74860136 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.743606245 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.732618338 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.731854181 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.742754906 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.743719164 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.729216852 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.733354381 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.732227831 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.731401145 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.731350699 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.73218202 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.743746807 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.756637742 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.753357239 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.732459962 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.73315501 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.730735705 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.74658062 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.746454271 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.755517918 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.740222197 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.731936843 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.732653668 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.74604353 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.734079225 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.730510478 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.745101985 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.74380572 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.74475746 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.730247097 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.756123575 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.741591963 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.748886989 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.744587477 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.733846933 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.734221916 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.745914628 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.733832308 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.732563584 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.746112343 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.745358927 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.738589711 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.733269991 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.734188024 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.748957041 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.743256726 seconds)
  done (took 1031.354328375 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.731844211 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.731870944 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.731923168 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.731781626 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.732040171 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.732099213 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.731181723 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.731997358 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.732220071 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.731924643 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.732146942 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.734453106 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.731369459 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.732853118 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.732349389 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.732639167 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.732920949 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.731885071 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.733114252 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.732704881 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.732252182 seconds)
  done (took 38.030585356 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.735603262 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.73196317 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.732422397 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.734059024 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.73141809 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.73554753 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.732284895 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.73583153 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.735827981 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.732801601 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.735276841 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.735432118 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.73271608 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.73302965 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.732961194 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.73562607 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.735140934 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.73285479 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.735590056 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.733763105 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.736011437 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.733844918 seconds)
  done (took 39.80442059 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.736204377 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.736732461 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.746384617 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.734801749 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.736744912 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.733547404 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.735852349 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.736379596 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.737563076 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.748147889 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.746675041 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.749674886 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.754622865 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.74259648 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.748883683 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.737280725 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.8805558 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.736455798 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.739329811 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.735905567 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.735160846 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.752851267 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.73400093 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.73437718 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.747081653 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.736269965 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.737000333 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.738409628 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.73723829 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.749555815 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.741506593 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.736903596 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.748274742 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.750720572 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.748023016 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.750902047 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.742938401 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.737141783 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.735450195 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.738703243 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.75882687 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.758739765 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.738088079 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.755049057 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.738581939 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.738463487 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.753210539 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.746131414 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.734961443 seconds)
  done (took 87.165497384 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.73841507 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.738892354 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.737172382 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.741348647 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.739323474 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.739014117 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.738853671 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.738994763 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.735951218 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.73643182 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.739760857 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.736875431 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.737957999 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.738519061 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.738011604 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.736807444 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.735766394 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.734365332 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.736576291 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.734603062 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.736477217 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.737653863 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.738015767 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.735075397 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.738950612 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.734633919 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.73504026 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.737866145 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.735072838 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.734754037 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.738873647 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.737545407 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.737365111 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.735790489 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.735016776 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.738950678 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.737968109 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.73599113 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.737409446 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.73412421 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.738150747 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.737721546 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.738488896 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.738745047 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.734850555 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.735697267 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.734596421 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.735494285 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.736017339 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.737406575 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.736735975 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.734902634 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.738595249 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.732658305 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.734774636 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.73486222 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.732071188 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.732546908 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.735030393 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.731174602 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.729928411 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.733016574 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.729663197 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.732455343 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.734035673 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.727486285 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.728200444 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.729538901 seconds)
  done (took 119.700753234 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.730119387 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.730762249 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.728286343 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.73146967 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.728553176 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.728781013 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.729057975 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.730275511 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.727512083 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.727689984 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.727710356 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.728195948 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.727962841 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.728673719 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.72800566 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.727580358 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.727638498 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.728835039 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.727812162 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.727742572 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.728720646 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.730529695 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.728089116 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.728397643 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.729077306 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.727489128 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.727967051 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.728712471 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.727718213 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.727813146 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.729139206 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.728372481 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.72841847 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.729129877 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.728350599 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.728158853 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.729109076 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.72831218 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.729305273 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.727846915 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.728954193 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.728442771 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.729142238 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.729221862 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.728504853 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.728032659 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.72804663 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.729319204 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.729700791 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.729046302 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.72911692 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.72949351 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.728843806 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.729665672 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.729499511 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.731983856 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.729224063 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.729559698 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.730036868 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.730402549 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.728889647 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.729938937 seconds)
  done (took 108.839566582 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.729436555 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.729017229 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.728478476 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.727579086 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.728836085 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.727244878 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.729258193 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.729923783 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.73109564 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.730898026 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733214288 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.727086982 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728805754 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731253381 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.726614049 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.727714574 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.726806629 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.727059943 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.729250446 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.728805437 seconds)
  done (took 36.227752309 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.729659058 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.729728915 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.727356044 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.727050755 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.730300716 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.727190949 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.733496207 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.729791404 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726846236 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.730373043 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.730819473 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.730219403 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726684484 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.727476827 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.73085615 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.728065969 seconds)
  done (took 29.314888355 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.723147275 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.726090608 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.725510801 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.724930348 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.725559159 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.721080905 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.724138213 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.724706565 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.721775634 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.724131095 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.724522923 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.724422116 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.722700166 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.723599002 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.721932972 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.724973364 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.722289949 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.721118538 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.723900604 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.723441232 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.72206975 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.720882403 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.724030186 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.723224808 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.724801972 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.72225104 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.721454576 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.720801345 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.72194008 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.724666862 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.720946624 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.721009862 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.721735804 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.722616363 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.722608348 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.721282295 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.722746681 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.723759435 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.724085159 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.724635041 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.723590311 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.722089343 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.724899537 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.72360109 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.721043035 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.724451742 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.720909094 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.722019561 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.72072652 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.722375194 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.723900341 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.72339535 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.72342933 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.724403922 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.723661462 seconds)
  done (took 96.420178965 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.724294914 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.723651568 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.721438872 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.726682207 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.723818986 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.721180856 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.724712508 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.721729131 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.722045491 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.724332733 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.722376691 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.724278536 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.723208831 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.724060065 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.722380221 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.724097692 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.722285502 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.722337899 seconds)
  done (took 32.662117587 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.721752469 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.72275086 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.726610793 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.721006864 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.721595615 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.725194163 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.720572932 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.722925109 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.724253826 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.721140086 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.720858004 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.724596063 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.722887138 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.723002811 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.720209164 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.720853944 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.723786713 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.724697181 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.718669198 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.721270212 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.722386481 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.721244852 seconds)
  done (took 39.537863338 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.731560214 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.731046851 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.748126898 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.752824543 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.753377042 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.765893554 seconds)
  done (took 12.124214097 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717437526 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719695233 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.717825875 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720186776 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721245189 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716790509 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.719763457 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717019374 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.719741618 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716937502 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717335631 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716740885 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.716915469 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714402981 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717870159 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717622577 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715276394 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714946556 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714612535 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717655041 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714988197 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717626262 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71476655 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714594809 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716164459 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.714537557 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.718240679 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715771145 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715259454 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717405385 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717130264 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715938121 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71792206 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715810452 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71781068 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716842978 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.71521381 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71690934 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717176353 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.7165649 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.717038015 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71803706 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717050698 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714809743 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.718051461 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715126585 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714002947 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714170737 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.714294877 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.716866865 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717399021 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714653412 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716707845 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716716893 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716532058 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717961085 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717031418 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714505249 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.716590803 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714480321 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713994253 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716405488 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714346514 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713989114 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716583219 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713128951 seconds)
  done (took 114.928174881 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713972235 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.715222467 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71373891 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713812791 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713432003 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713880416 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713640588 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715519102 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713312284 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.71364537 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716382393 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713729676 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715396065 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714469769 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.713613108 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.713228377 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713614332 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713984241 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713399563 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716939088 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713730399 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.714049359 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.713751354 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.713353503 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715139642 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715759164 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713935311 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.714880127 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.714097529 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713069653 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.713427381 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.714122068 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714183763 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.713247098 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712756615 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71341874 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714105544 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712871016 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71408132 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715926776 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.713370166 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716074375 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713348853 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712917469 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712839799 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712808036 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713268088 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712802639 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.714223971 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712858215 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712934561 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712834875 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713376731 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713168913 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71477786 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712485796 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712992889 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713023588 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711907345 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.715898763 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712276304 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712565669 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717250561 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712907131 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712309687 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714598674 seconds)
  done (took 114.751997281 seconds)
done (took 2389.188555548 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.734587872 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.813821826 seconds)
  done (took 15.182344918 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.887215697 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.838724282 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.724484618 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.720627698 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.724182741 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.748497703 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.726580751 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.724017178 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.723909161 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.725133935 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.723416301 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.912661044 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.775049679 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.723397061 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.723395053 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.815782848 seconds)
  done (took 49.855166301 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.727547585 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.727714358 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.737863655 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.729058316 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.727110998 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.738617696 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.761426382 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.729594336 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.760953558 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.741938283 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.795383095 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.737631342 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.726562504 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.775981845 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.740054693 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.740149226 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.817630537 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.803131203 seconds)
  done (took 33.15177533 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.803549876 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.743101114 seconds)
  done (took 10.186843965 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.747193108 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.740751545 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.742621952 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.737721104 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.72905914 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.749729819 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.748554548 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.745890921 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.738447413 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.757912902 seconds)
  done (took 69.0742502 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.731785661 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.727154356 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.726400438 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.72506295 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.718794533 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.723692762 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.725923398 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.721984221 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.389183341 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.760419458 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.732468244 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.731786289 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.72560286 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.729844077 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.712742589 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.749510223 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.831204707 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.71314452 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.712866889 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.732929855 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.726619183 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.782725976 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.740274878 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.716509544 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.756120892 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.389571165 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.735395315 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.732517112 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.829039732 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.713992489 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.727808719 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.72758529 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.729035999 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.119138023 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.000433169 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.728029278 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.744273581 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.734013911 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.715111789 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.834328116 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.727366104 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.732968496 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.498024371 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.981063243 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.83251284 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.769440361 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.036363659 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.744922111 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.728895687 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.759061969 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.730283391 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.728778048 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.742667646 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.2192699 seconds)
  done (took 124.377398971 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.725016595 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.072929889 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.892482474 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.724925731 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.014698361 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.934057653 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.725166341 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.772826278 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.725835635 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.958502481 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.981544044 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.832439064 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.727241844 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.726649913 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.723620602 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.723779551 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.882352084 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.797483231 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.726851218 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.722343558 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.754920663 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.968788637 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.84846764 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.726459796 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.753677988 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.937817704 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.848189451 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.830308533 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.513935441 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.722471362 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.790008666 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.726102479 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.726984851 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.725044861 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.884476618 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.820832301 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.809632032 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.72548012 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.721689749 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.723584139 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.396950666 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.926270643 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.822873786 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.866381891 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.925542848 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.931550762 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.508267266 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.722751683 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.475005703 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.891468678 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.955048092 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.962962224 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.848313358 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.725816778 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.259434997 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.723259209 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.723277613 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.977900175 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.871076735 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.825427556 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.728571842 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.72435845 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.724440633 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.972030555 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.727944147 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.824309771 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.728311176 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.725074951 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.825235744 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.826219934 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.86570144 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.938445977 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.758066134 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.609772308 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.265837587 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.975896783 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.793503015 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.980416885 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.727304799 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.72554938 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.806990347 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.564438694 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.982494914 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.975597184 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.980960071 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.762382098 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.447864913 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.725147252 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.955601189 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.951046475 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.989265146 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.961898507 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.965952231 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.073706472 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.72695436 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.726502345 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.939417099 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.865334315 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.727165941 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.075174055 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.959936052 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.274715849 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.747650128 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.035011118 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.860944286 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.728063556 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.370300815 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.726147458 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.958325407 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.769877161 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.727306927 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.727303046 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.948467128 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.718844241 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.728726575 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.379218851 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.790910097 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.727891463 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.963146355 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.729601862 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999039169 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.727966809 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.96674531 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.807039129 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.761010618 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.959576964 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.961784728 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.729495039 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.973975237 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.974989847 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.844570984 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.951082387 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.433996168 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.727599931 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.019148832 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.729241994 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.726628995 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.899838005 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.728821782 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.875657291 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.730327982 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.023178261 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.751750558 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962571634 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.73026885 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.988497438 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.76361686 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.781002804 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.732422027 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.863311513 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.731336555 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.558584377 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.888250975 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.729436954 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.727315539 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.544155048 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.730397863 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.879265933 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.963053297 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.165636488 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.803578422 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.400950953 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.728183078 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.812359637 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.754184588 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.128585622 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.729826424 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.984489716 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.731209511 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.728567841 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.72816354 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.973482756 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.914401504 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.730286449 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.728511426 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.640810505 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.72816068 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.728265114 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.912444468 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.109504215 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.728365769 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.934025559 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.731622844 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.858518451 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.733672369 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.804781483 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.075553299 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.729315397 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.729130854 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.730867483 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.730877819 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.729728844 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.993914142 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.757318038 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.249308901 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.870411036 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.009206891 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.04322116 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.983631243 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.7752243 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.734038329 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.988144909 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.731949332 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.794717128 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.7318586 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.754793818 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.963410597 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.737897987 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.943003031 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.012657597 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.585853837 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.78235335 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.733218991 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.731913561 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.732010145 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.878676328 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.819872114 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.734058176 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.729982186 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.847329796 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.85448921 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.942002982 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.73278714 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.92867023 seconds)
  done (took 872.121724608 seconds)
done (took 1175.585266851 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.73221424 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.733709404 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.715166932 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.733594053 seconds)
  done (took 28.558737277 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.72821724 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.736360015 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.725743468 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.736885577 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.727181207 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.736351535 seconds)
  done (took 12.035014175 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.774165562 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.733945652 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.733318486 seconds)
  done (took 20.885977402 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.805256481 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.12371073 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.840066714 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.162254505 seconds)
  done (took 9.578256303 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.72653699 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.726966411 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.726317979 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.727991507 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.732358648 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.730312342 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.727394473 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.727384679 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.730028276 seconds)
  done (took 17.206844283 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.005708908 seconds)
done (took 93.915017312 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.724062782 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.929036153 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.674096927 seconds)
    (4/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.87242866 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.822359613 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.854488242 seconds)
    (7/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.740550367 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.762095928 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.011888495 seconds)
    (10/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.638447977 seconds)
    (11/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.88800238 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.994971357 seconds)
    (13/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.818212864 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.736397713 seconds)
    (15/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.746652377 seconds)
    (16/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.106079668 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.749398898 seconds)
    (18/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.803079748 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.733639219 seconds)
    (20/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.716970211 seconds)
    (21/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.027743329 seconds)
    (22/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.186606682 seconds)
    (23/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.829354543 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.657266294 seconds)
    (25/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.350230906 seconds)
    (26/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.720444299 seconds)
    (27/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.95572104 seconds)
    (28/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.577838371 seconds)
    (29/309) benchmarking ("sort", Float64, false)...
    done (took 5.470797349 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.539953454 seconds)
    (31/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.737676476 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 3.522363458 seconds)
    (33/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.898970005 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.121454335 seconds)
    (35/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.743017613 seconds)
    (36/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.830950578 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.735174108 seconds)
    (38/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.759887943 seconds)
    (39/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.614964348 seconds)
    (40/309) benchmarking ("map", abs, Int64, false)...
    done (took 3.295971501 seconds)
    (41/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.735648352 seconds)
    (42/309) benchmarking ("sort", Bool, false)...
    done (took 1.956851469 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.058806181 seconds)
    (44/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.745535798 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.778998671 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.861990898 seconds)
    (47/309) benchmarking ("sort", Int64, false)...
    done (took 5.424191838 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.981381922 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.364785846 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.848704812 seconds)
    (51/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.891493126 seconds)
    (52/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.746822766 seconds)
    (53/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.964875334 seconds)
    (54/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.026968582 seconds)
    (55/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.743226609 seconds)
    (56/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.926228832 seconds)
    (57/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.735996267 seconds)
    (58/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.881039341 seconds)
    (59/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.80800896 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.81726964 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.826420516 seconds)
    (62/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.641244295 seconds)
    (63/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.964571842 seconds)
    (64/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.831527922 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.736977311 seconds)
    (66/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.747140239 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.135245498 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.925182418 seconds)
    (69/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.632129902 seconds)
    (70/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.966128722 seconds)
    (71/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.802263237 seconds)
    (72/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.877513092 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.913506746 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.740281746 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.187383053 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.766997386 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.868687027 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.057443099 seconds)
    (79/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.30021963 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.146758404 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.881490553 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.958928973 seconds)
    (83/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.750374167 seconds)
    (84/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.788202847 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.973120136 seconds)
    (86/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.051098785 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.921273996 seconds)
    (88/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.980078024 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.830406567 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.739050634 seconds)
    (91/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.98842289 seconds)
    (92/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.248835432 seconds)
    (93/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.877958425 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.959486883 seconds)
    (95/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.834835686 seconds)
    (96/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.825521107 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.003601554 seconds)
    (98/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.027298994 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.034657598 seconds)
    (100/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.798913426 seconds)
    (101/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.036321998 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.815055043 seconds)
    (103/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.739562044 seconds)
    (104/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.366925662 seconds)
    (105/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.761164506 seconds)
    (106/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.792897284 seconds)
    (107/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.93368631 seconds)
    (108/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.753395113 seconds)
    (109/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.735918109 seconds)
    (110/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.812233725 seconds)
    (111/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.74289916 seconds)
    (112/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.770138903 seconds)
    (113/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.767783833 seconds)
    (114/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.908002392 seconds)
    (115/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.884977057 seconds)
    (116/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.965411136 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.925077273 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.837554041 seconds)
    (119/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.793891177 seconds)
    (120/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.754609838 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.677419981 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.855376318 seconds)
    (123/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.857484825 seconds)
    (124/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.843976811 seconds)
    (125/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.900940515 seconds)
    (126/309) benchmarking ("sort", Int8, false)...
    done (took 4.618143776 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.054694437 seconds)
    (128/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.68517781 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.859897639 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.037238223 seconds)
    (131/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.962107515 seconds)
    (132/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.762061201 seconds)
    (133/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.742106267 seconds)
    (134/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.139324935 seconds)
    (135/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.224188115 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.998472428 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.72672959 seconds)
    (138/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.296953667 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.76671665 seconds)
    (140/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.737491153 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.741060839 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.900140452 seconds)
    (143/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.820046433 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.990664646 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.741644414 seconds)
    (146/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.011501969 seconds)
    (147/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.005914721 seconds)
    (148/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.28027715 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.9855385 seconds)
    (150/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.801106066 seconds)
    (151/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.81502096 seconds)
    (152/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.816807701 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.445756236 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.769235366 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.835768878 seconds)
    (156/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.783170691 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.669810718 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.086336634 seconds)
    (159/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.305207748 seconds)
    (160/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.174446814 seconds)
    (161/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.745411077 seconds)
    (162/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.872259373 seconds)
    (163/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.981355143 seconds)
    (164/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.867226384 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.755321628 seconds)
    (166/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.169381835 seconds)
    (167/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.055516212 seconds)
    (168/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.729619629 seconds)
    (169/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 3.078695806 seconds)
    (170/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.747592148 seconds)
    (171/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.83902003 seconds)
    (172/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.81258687 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.748054868 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.394687699 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.749715365 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.434587082 seconds)
    (177/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.888950179 seconds)
    (178/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.152826178 seconds)
    (179/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.837825709 seconds)
    (180/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.725055935 seconds)
    (181/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.748721928 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.067569175 seconds)
    (183/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.099055571 seconds)
    (184/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.886677243 seconds)
    (185/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.948278103 seconds)
    (186/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.891387373 seconds)
    (187/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.510150953 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.113442123 seconds)
    (189/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.194882838 seconds)
    (190/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.944895611 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.130922303 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.425075232 seconds)
    (193/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.875842373 seconds)
    (194/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.348921352 seconds)
    (195/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.274830567 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.84917544 seconds)
    (197/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.756053051 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 3.619768348 seconds)
    (199/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.76248108 seconds)
    (200/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.24086683 seconds)
    (201/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.850593463 seconds)
    (202/309) benchmarking ("sort", Float32, false)...
    done (took 5.506967757 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.821386426 seconds)
    (204/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.817414922 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.066346398 seconds)
    (206/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.456696115 seconds)
    (207/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.182163058 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.300897511 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.868088086 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.107167315 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.920739043 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.882095274 seconds)
    (213/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.909302167 seconds)
    (214/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.74368236 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.615395236 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.760001601 seconds)
    (217/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.742389226 seconds)
    (218/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.853130517 seconds)
    (219/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.783935848 seconds)
    (220/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.850086392 seconds)
    (221/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.126091253 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.959329215 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.591449296 seconds)
    (224/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.738600774 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.302231988 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.746342076 seconds)
    (227/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.950589469 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.778216117 seconds)
    (229/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.844995741 seconds)
    (230/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.757016337 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.758170595 seconds)
    (232/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.256573975 seconds)
    (233/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.846817204 seconds)
    (234/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.615468582 seconds)
    (235/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.745346841 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.872196092 seconds)
    (237/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.738312537 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.686128702 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.13812925 seconds)
    (240/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.963104052 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.739700329 seconds)
    (242/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.664488038 seconds)
    (243/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.838499256 seconds)
    (244/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.85768771 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.167280864 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.859155646 seconds)
    (247/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.159582189 seconds)
    (248/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.772946132 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.884372418 seconds)
    (250/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.145254558 seconds)
    (251/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.188712313 seconds)
    (252/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.043792136 seconds)
    (253/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.763494662 seconds)
    (254/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.866931932 seconds)
    (255/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.77294616 seconds)
    (256/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.75442909 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.740978382 seconds)
    (258/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.858474732 seconds)
    (259/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.739550794 seconds)
    (260/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.205470431 seconds)
    (261/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.779420276 seconds)
    (262/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.953893888 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.087916086 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.179819825 seconds)
    (265/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.0970566 seconds)
    (266/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.771307004 seconds)
    (267/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.771728937 seconds)
    (268/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.76142361 seconds)
    (269/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.847674962 seconds)
    (270/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.809455127 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.775965831 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.718289681 seconds)
    (273/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.771881378 seconds)
    (274/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.883044886 seconds)
    (275/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.207044831 seconds)
    (276/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.060424613 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.705674711 seconds)
    (278/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.767685139 seconds)
    (279/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.957193833 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.030950367 seconds)
    (281/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.8520833 seconds)
    (282/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.048699047 seconds)
    (283/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.538836015 seconds)
    (284/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.238405139 seconds)
    (285/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.955435462 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.890234321 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.096746017 seconds)
    (288/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.943827733 seconds)
    (289/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.015584501 seconds)
    (290/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.880875171 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.86935423 seconds)
    (292/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.888477436 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.759351801 seconds)
    (294/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.33937461 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.767375645 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.668779472 seconds)
    (297/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.730382103 seconds)
    (298/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.081540457 seconds)
    (299/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.1062104 seconds)
    (300/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.778636686 seconds)
    (301/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.848368908 seconds)
    (302/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.056016509 seconds)
    (303/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.938607077 seconds)
    (304/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.563122831 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.095307334 seconds)
    (306/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.781172844 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.762284377 seconds)
    (308/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.189024075 seconds)
    (309/309) benchmarking ("sort", BigInt, false)...
    done (took 6.859783117 seconds)
  done (took 969.469459122 seconds)
done (took 971.184152527 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.782109422 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.773402887 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.758241715 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.779645801 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.872430871 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.786318854 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.768446887 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.760120517 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.8062407 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.80736578 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.756256951 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.783763309 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.760893972 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.758382736 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.757718779 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.772899752 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.072770453 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.791599127 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.775449881 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.766973815 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.777104197 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.756062108 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.807839286 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.784262511 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.761834806 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.76092845 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.762140108 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.777885766 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.869179792 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.760944425 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.760605898 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.769671999 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.073812671 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.791159172 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.753807508 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.778620813 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.769926315 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.77014914 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.762974532 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.791502072 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.158193663 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.800305605 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.760784866 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.76009031 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.760191249 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.763519035 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.760841251 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.765453043 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.773355212 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.773702008 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.152228613 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.815773926 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.762941599 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.760687529 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.773167355 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.761378999 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.76364702 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.776371042 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.780079964 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.777682715 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.056552665 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.796313053 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.763105762 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.777790314 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.768779308 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.189637115 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.798961118 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.766101968 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.158865744 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.807001637 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.188864653 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.812500369 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.76248305 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.775496143 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.792653388 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.073992375 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.789524675 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.760015157 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.768364026 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.757965158 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.770711026 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.775402958 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.766014275 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.761923582 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.774898408 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.788974743 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.77423875 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.762983658 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.771499096 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.780902115 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.76881426 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.772704363 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.766155256 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.757627694 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.771794902 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.765973921 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.764334209 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.764170673 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.76777594 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.773156719 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.158766019 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.820202544 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.759700589 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.762070038 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.762362065 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.776040789 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.158932454 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.805809084 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.784877835 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.81079821 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.764720246 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.058722027 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.798430603 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.779358314 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.772566045 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.765931642 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.758624082 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.058287662 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.191196492 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.82264675 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.764851871 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.760444245 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.779468378 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.766144547 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.760471951 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.07735466 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.798451673 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.77811602 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.884948196 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.77447186 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.79472187 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.760832778 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.767443671 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.794842542 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.779386711 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.795534638 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.76845616 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.779625358 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.780357238 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.76094355 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.774893052 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.775694221 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.767749088 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.771331547 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.759487657 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.79587821 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.777198462 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.777987153 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.785866582 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.885896858 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.762896636 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.059315672 seconds)
done (took 277.370906836 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.847687811 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.770559051 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.87229193 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.763708996 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.855704164 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.861992809 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.760066595 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.762221744 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.760984251 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.151207028 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.760881849 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.761675471 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.769999142 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.761127869 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.856803626 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.766695788 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.760790626 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.114624503 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.763513298 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.846738961 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.770723987 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.761241174 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.763145941 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.15125839 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.771450552 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.769790343 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.847525193 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.762840774 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.117605435 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.775994932 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.768941812 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.115861502 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.86706675 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.782183711 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.774225327 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.77016924 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.855948192 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.769379771 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.856523954 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.857348919 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.87321514 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.803598015 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.777853277 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.772911517 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.767399344 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.765559887 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.762531656 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.792163485 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.778963011 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.762728965 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.117096902 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.775452765 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.772119043 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.763306958 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.764171065 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.784782078 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.762800667 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.765321893 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.868254232 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.766788782 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.841735155 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.154559446 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.150464661 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.764952061 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.779620478 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.763081047 seconds)
  done (took 177.612315365 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.846627957 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.85710092 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.843368403 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.782637626 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.828292807 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.846185526 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.783250073 seconds)
  done (took 14.468806617 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.782113399 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.766275933 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.830111108 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.830815832 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.765683949 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.93294772 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.766374208 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.788971979 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.764513237 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.831639136 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.768209298 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.767767544 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.774276049 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.778711544 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.829430517 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.790182423 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.894783818 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.781290067 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.766737261 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.927516725 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.765456731 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.774365078 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.81356696 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.792135776 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.768029518 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.785447109 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.373408866 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.769198696 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.767298567 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.768634333 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.766002589 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.821136282 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.769474323 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.776433925 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.76615145 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.894099602 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.76854977 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.769088145 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.768342596 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.778788774 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.767647277 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.768418514 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.76902838 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.766403346 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.769028802 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.802217163 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.769402564 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.768934494 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.76875254 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.769650518 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.815709192 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.770711043 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.766910806 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.766735284 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.835707511 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.77564556 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.769912468 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.766992954 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.768871087 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.767054707 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.92956946 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.841645527 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.76932036 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.832462811 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.77067138 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.770928805 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.770130704 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.772370709 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.878892704 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.770150705 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.83237433 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.76736122 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.940870375 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.805711591 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.771617238 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.784273908 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.784639642 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.769458701 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.782734029 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.788248755 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.768422578 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.783820693 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.788850558 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.768279543 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.768634732 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.894913187 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.888488613 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.76794639 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.795125197 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.788859011 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.768537684 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.817561092 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.772164678 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.767973337 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.840354296 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.899868965 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.836327158 seconds)
  done (took 196.45272124 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.790017621 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.791944186 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.784186308 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.799576974 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.784106737 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.783046619 seconds)
  done (took 12.419860371 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.785526786 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.772505205 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.771452526 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.771345265 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.770946677 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.77187479 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.772502516 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.78492432 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.77538338 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.772642117 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.774764957 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.773022278 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.773087042 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.771068746 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.771910704 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.772526963 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.77245125 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.769940417 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.771542406 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.772148189 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.93121468 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.772615963 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.772137985 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.78546267 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.776724292 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.773523196 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.793420194 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.773853219 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.774002726 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.794215574 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.775408658 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.773209355 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.785210742 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.790702109 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.77755645 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.786685967 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.776148026 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.773605068 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.770836781 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.773403443 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.773585547 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.771901534 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.774119515 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.775442163 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.788867157 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.790716801 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.777942007 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.793049854 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.7742374 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.773485445 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.773610446 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.773052955 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.774624871 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.774088056 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.788936174 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.791679985 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.778512348 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.773745581 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.773185996 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.787382952 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.77633081 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.774979558 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.788900618 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.778410199 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.780995453 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.77725597 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.787378111 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.777793012 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.774575732 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.77483525 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.775198145 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.772745359 seconds)
  done (took 130.812829658 seconds)
done (took 533.46587645 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.936213922 seconds)
  done (took 8.627010109 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.944013604 seconds)
  done (took 8.676779731 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.258655768 seconds)
  done (took 9.948978075 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.809634678 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.822381299 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.79614026 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.786626332 seconds)
  done (took 28.931255511 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.860321731 seconds)
  done (took 8.549778539 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.792263881 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.76722514 seconds)
  done (took 15.284897009 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.88676723 seconds)
  done (took 8.576758963 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.876236535 seconds)
  done (took 8.590508152 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.794631664 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.802489606 seconds)
  done (took 15.301681876 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.760103232 seconds)
  done (took 8.448581555 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.468744203 seconds)
  done (took 11.253667326 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.791493226 seconds)
  done (took 8.585511673 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.783659212 seconds)
  done (took 8.472347915 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.837351614 seconds)
  done (took 8.525624366 seconds)
done (took 159.464663003 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.782678587 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.777429804 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.780308684 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.778458379 seconds)
  done (took 28.806599731 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.806667241 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.805725734 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.807965067 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.819470711 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.809099922 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.808345844 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.799318235 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.799796928 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.817342315 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.810503262 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.808753373 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.809314854 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.806839204 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.798385815 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.811214945 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.809512173 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.818402971 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.808952179 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.799615072 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.809777101 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.77540621 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.817470262 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.809841038 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.773672949 seconds)
  done (took 45.03186241 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.981226408 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.855257689 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.939077256 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.836851742 seconds)
  done (took 9.302728875 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.826484215 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.827494195 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.839841655 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.877697415 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.903699746 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.836406142 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.801612243 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.794696829 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.781776181 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.827409141 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.90261729 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.822372788 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.914447323 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.774924707 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.951216135 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.774317603 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.774287031 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.826613341 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.879055276 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.890784325 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.774500478 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.825966974 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.831771294 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.823136593 seconds)
  done (took 45.773238714 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.772876424 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.782523966 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.780114973 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.774524394 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.774302136 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.774859384 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.780487739 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.776069121 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.795850046 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.775321998 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.775885069 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.774306048 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.773268382 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.774958522 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.775855373 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.787380927 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.787886906 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.774800133 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.781213195 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.780656737 seconds)
  done (took 37.263497351 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.78199777 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.633479779 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.134265555 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.037723133 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.7809992 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.784635435 seconds)
  done (took 30.844818739 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.801446581 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.794569774 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.786957117 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.844356075 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.930018469 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.796072878 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.789159167 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.800850393 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.835599554 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.852846934 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.8098213 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.817533523 seconds)
  done (took 23.551801413 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.784422316 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.785545458 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.786694468 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.801393416 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.800063123 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.799060773 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.79619454 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.783109845 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.804720845 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.808931756 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.798223603 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.801017429 seconds)
  done (took 43.245731132 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862865394 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.663872022 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.447243947 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.587640879 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.309591209 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.981590429 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.431432223 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.944327006 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.77548053 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.044090001 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.415616608 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023592359 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.024759413 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.773264817 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.846938052 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.27380684 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072606565 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013221999 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.803346935 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.48688435 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896300045 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.318045658 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.58048796 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.905491165 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.982899367 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.906075543 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.034066883 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.743012811 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912525596 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.812850981 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784514868 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.774911539 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04719982 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003189992 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905771882 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783510223 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.438031804 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.496918696 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.946027215 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.553111598 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.474778405 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.913526268 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781857476 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.775141523 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.706674989 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332167666 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952353334 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.778867085 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.477547979 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.773762294 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.786781737 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866115103 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.777854911 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.588545442 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.738323946 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.05388345 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.773315467 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792407976 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.351829093 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.912276272 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.479056534 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.715401371 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.87851031 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.555335692 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276763874 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.933954231 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.777578527 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.778100055 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708876802 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.501548491 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903757418 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917934043 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.794622135 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.424086249 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085275133 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.501894066 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.864558102 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086468197 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.588325426 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.715117542 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002914181 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.725083846 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707642578 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.631710267 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.708350512 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063863754 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816630546 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.47903741 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831890493 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.943406085 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.78713903 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797942583 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783688167 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.999508889 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.666244991 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777384031 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.383547845 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.073406087 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798288508 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.948814386 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.709936327 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.780435669 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031067072 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.987424385 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.046737178 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.293210289 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939419533 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777525658 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.868363268 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.738342519 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.791629886 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.064598958 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845179593 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.906936261 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91339132 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.741026308 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094164441 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809799343 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.957112638 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.454140071 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.050158557 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.150302115 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.036153763 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862439124 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.784386396 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.782871505 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.582267433 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.408852296 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.00326342 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.788248162 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287636152 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.792170363 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.778735756 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714486089 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.441378877 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.461867265 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.89447891 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.001028332 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.744095061 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057911104 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711340214 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.922736657 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.890379734 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.002066706 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.479185198 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.865378294 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036819329 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286852925 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.03780895 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792479008 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798281362 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879356507 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800425062 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.230674033 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.036897832 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.78233562 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.785632011 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.566006835 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.862988893 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787969311 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.784511016 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.5882427 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086178129 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.814164661 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.785390005 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.719686378 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.793211846 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866072919 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.786371594 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.789271494 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.307130507 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.542166093 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.795596301 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.438964618 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007822305 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790676929 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.568566147 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975225397 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.870906924 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072642228 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852949557 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.713661812 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.48271193 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.482699561 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.781811555 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.715601886 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.782575272 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789594746 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791528648 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.989259203 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.073842826 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836772979 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.521460281 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.902556038 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791642759 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.786052059 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.782532518 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.27962877 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.924724904 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428197185 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.795038739 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91770586 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.79514273 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.715318067 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.786037786 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.787337236 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.782528363 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.735796862 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834345671 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.558014845 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122644395 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.040428426 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.442463806 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799470116 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.540040107 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.917770204 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.807244784 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.404675149 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884037484 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.794369777 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818374609 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.793694053 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.575307879 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.570372379 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.362742373 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098536987 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13333642 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258787332 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.166673228 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.125651115 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.958604158 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017982582 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.311311098 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.842313263 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.9630219 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728473074 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868390561 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.485677477 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147161025 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798937031 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.01093798 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.184888024 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.492470044 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954004488 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.995453013 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818097698 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.590902351 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.815519395 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.314555276 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938393301 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.399299766 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015392385 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950517256 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.408598115 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.910200372 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.796982671 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.282312522 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87540522 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.495099963 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.145256408 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.323312785 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.47624279 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163706647 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.790119115 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.231530185 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157971688 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.136324673 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.877330689 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.719198828 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.796425753 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.795145763 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.793451744 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.763448158 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.646788092 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.037743059 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795507312 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020994394 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.066803139 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06980334 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.777109861 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.790483662 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786921363 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105280137 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.547138774 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031400501 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.129276907 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.359984816 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79967993 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.722204198 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.719680903 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.490280688 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.792653205 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.761715747 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031083248 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.912065854 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.753481759 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.177835962 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10217955 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.040004433 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.801587374 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.081745739 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077992815 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.532921113 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818742427 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.88636485 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.408902868 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.514785265 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.010026506 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.022375469 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.595926553 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.022364267 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.481341371 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.778069522 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.800394766 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.001955888 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.009429395 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.47118673 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050575695 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.515427708 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.807690127 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112803062 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85565794 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.497644959 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.012289913 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.892250329 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.810649908 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872024377 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797637802 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.799019668 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.798533185 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835239489 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.48366261 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934090092 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.802759773 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878968054 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.922265624 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.377401671 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.79944917 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087264797 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162322965 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.142128364 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.860935836 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.790646112 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.798265866 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.723067178 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930543065 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.234141325 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.063616597 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.92026347 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.992711636 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815342801 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.406674573 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.092656553 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104050123 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.0644044 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.685858311 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791181324 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.882232068 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.014039115 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799852981 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.000223539 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0452163 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137347244 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267846085 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.93109087 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.064900113 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064588039 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.161026458 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.790947482 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385780487 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.8093051 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.304407593 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.837513843 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.480019148 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089258012 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80206929 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017877927 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.814393558 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.986478147 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.245714592 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.532572436 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.161542153 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.795889427 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.857177986 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088789375 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.21646851 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114193848 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872817829 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8027047 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.488249161 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930145512 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.676948052 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.037953094 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.793845773 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002377411 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.504731737 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.802010007 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086755532 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111570904 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.791924453 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.720820526 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836617325 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.80208077 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.016017758 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075932397 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.051044496 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802852567 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.79576678 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.607619456 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085926384 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.86515496 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.726690831 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.797690411 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893826804 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.042471754 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.814295091 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.31128555 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.496067683 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115439918 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.720606595 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815734019 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.1954546 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.255415821 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148842608 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.324837664 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037899237 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.359923097 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.648518608 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169450722 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.799599897 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.217085597 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173581635 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.797304754 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.309392618 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90554456 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.091605346 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12660169 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.802049355 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.567740348 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.845476476 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017119525 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.402673498 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.736352625 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.800866913 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.865958979 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.795336187 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.925807803 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.805428316 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.756962229 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.681957974 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.633320181 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288890425 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.800507286 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.794953503 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.59198942 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.361138823 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914641122 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950504215 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.800649558 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.517063126 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.089713831 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.04927629 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.306485524 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.87814359 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.798830876 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.796600381 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.723268851 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.993984091 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.006040613 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115592469 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.151034746 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.908279525 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.799284308 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.011774278 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007101826 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.491245134 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9653032 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.176453261 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909881582 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.732094303 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.509795571 seconds)
  done (took 1641.207613479 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.820770428 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.856529668 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.838799536 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.849782507 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.866101733 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.926707969 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.860381981 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.876011524 seconds)
  done (took 56.613090793 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.810081977 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.99114883 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.818766388 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.810883539 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.869040239 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.811323601 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.999720557 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.822309691 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.910849316 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.818839995 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.810620364 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.815636649 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.145893868 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.835464182 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.811579369 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.800052579 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.837050531 seconds)
  done (took 73.48398103 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.81141482 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.994737151 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.820801799 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.819595006 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.692509139 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.811130405 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.778160906 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.824996046 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.813958282 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.980221535 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.136403483 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.863735693 seconds)
  done (took 89.067712721 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.82576579 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.817116989 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.816470971 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.817386585 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.820062882 seconds)
  done (took 10.822818172 seconds)
done (took 2136.724516875 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.211348373 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.994614528 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.04132801 seconds)
  done (took 5.756127399 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.959189706 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.007006994 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.125909958 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.130703072 seconds)
  done (took 9.946590673 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.104442326 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.198779549 seconds)
  done (took 6.022750372 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.121494787 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.815508712 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.215690118 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.801276725 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.799337964 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.803166585 seconds)
  done (took 22.128846192 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.802645812 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.805374426 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.804021909 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.805148039 seconds)
  done (took 8.938336612 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.792569243 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.540890802 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.795791493 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.812624313 seconds)
  done (took 20.661861854 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.549256107 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.926707562 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.546356405 seconds)
  done (took 8.746007497 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.454747108 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.528926497 seconds)
  done (took 9.70437021 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.963887647 seconds)
  done (took 3.685087582 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.832795757 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.075599848 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.338066211 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.459891956 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.464259329 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.127887214 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.169254333 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.055915476 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.304704497 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.311049872 seconds)
  done (took 24.861477413 seconds)
done (took 135.535701654 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.394515206 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.848770874 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.024956531 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.189800419 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.053107641 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.022926992 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.02784251 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.180586535 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.872901122 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.876794388 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.198711374 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.053477795 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.987291215 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.83978593 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.989411616 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.842938826 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.046511566 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.268926263 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.883096161 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.08905456 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.045541143 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.828999194 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.019884242 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.845444366 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.050666309 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.974017481 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.373322048 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.847618587 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.012198595 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.387482982 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.976428652 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.230642618 seconds)
  done (took 167.00719611 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.817116434 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.818827859 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.819252155 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.818243487 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.385929618 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.820550603 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.819575088 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.81829638 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.279098661 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.272997776 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.819021866 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.3814083 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.821761639 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.821109623 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.820633402 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.818639372 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.441102782 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.819010237 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.819251342 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.817319723 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.820489897 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.219583798 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.81925712 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.226061303 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.43772988 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.8190596 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.819275451 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.819964727 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.818904539 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.819804747 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.818713484 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.818494793 seconds)
  done (took 208.034428133 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.815470817 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.822334824 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.821695537 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.820290915 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.822443246 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.818529952 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.820261736 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.820983331 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.452585168 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.455671049 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.821429023 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.821955582 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.82106625 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.819332746 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.821009185 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.819975353 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.821655565 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.792800644 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.82113991 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.821910045 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.823200193 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.430065618 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.821259564 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.436574744 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.820914526 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.820508736 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.82348938 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.820514742 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.820714076 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.82141896 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.823053364 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.820529622 seconds)
  done (took 218.463335365 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.063027954 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.813859691 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.815368786 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.732248969 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.813910742 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.814471948 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.808133443 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.066817636 seconds)
  done (took 18.656564988 seconds)
done (took 613.893846 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.27294311 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.121086819 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.995324773 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.83766744 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.094179099 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.885139704 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.832003561 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.901417782 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.461983904 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.909317201 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.48415922 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.868720896 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.574057072 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.863001184 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.956033531 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.894005934 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.395642941 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.477084511 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.023810345 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.926595219 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.008492436 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.763970985 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.916713436 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.505333671 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.608684258 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.827336801 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.906356707 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.384290251 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.846028909 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.996266827 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.606071698 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.170500113 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.862536983 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.844856422 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.887116004 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.86736896 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.118718579 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.86190629 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.968219022 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.566021439 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.902054538 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.369991104 seconds)
  done (took 100.291814921 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.812871742 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.81068199 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.809869584 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.810100429 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.81137559 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.811380097 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.810677948 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.811012282 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.812091031 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.81382355 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.810856581 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.810748363 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.8102989 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.811184073 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.810502244 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.810543893 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.810918229 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.811843108 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.810597 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.810398494 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.811384248 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.810650463 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.816106579 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.810868047 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.811819384 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.812107498 seconds)
  done (took 48.835247822 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.816267199 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.992093574 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.067262626 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.852316659 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.827613321 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.832388422 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.847048905 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.821074293 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.830759631 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.830541315 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.932395856 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.823838039 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.848843225 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.069148143 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.848109572 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.817912956 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.81794778 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.830297484 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.001114835 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.846827241 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.849303133 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.82286332 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.850128995 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.84407786 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.831169823 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.830653812 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.833493794 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.257518501 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.839617321 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.933273117 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.888193091 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.857505378 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.188948153 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.077927855 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.889110676 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.831082013 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.817762989 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.935776474 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.837106616 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.830325162 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.848772926 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.835866853 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.064840695 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.324896095 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.845906907 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.818470761 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.267935596 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.946990224 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.872148741 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.840495328 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.067323694 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.849356641 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.820879045 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.833772956 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.868178597 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.83756602 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.831184623 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.127045988 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.843867377 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.849373346 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.825303005 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.833778258 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.006481913 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.845582855 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.99365179 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.841992769 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.83926352 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.833512246 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.069903322 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.851863412 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.323869529 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.849574572 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.819827911 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.933720972 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.999261954 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.29657695 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.847683903 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.00235914 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.211612903 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.858127691 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.840684307 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.246187497 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.862157108 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.839972997 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.822567446 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.822287641 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.82063811 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.864626587 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.849176852 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.26033313 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.330963076 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.147012909 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.860605112 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.850558428 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.833290368 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.127198335 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.83006348 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.820908396 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.062612473 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.337908184 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.848899567 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.84008534 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.312773079 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.850232839 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.853216702 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.843644775 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.072195592 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.851908765 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.866711149 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.822658713 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.840386579 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.836783437 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.852324977 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.842580347 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.821516613 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.310072829 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.958366162 seconds)
  done (took 227.069912862 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.831347706 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.834251741 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.829389571 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.83391427 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.828151136 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.834058823 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.82826243 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.829708937 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.833540944 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.828392787 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.828390126 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.831594045 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.833685135 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.834178429 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.844392632 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.835151802 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.433573305 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.831238424 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.844963223 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.830077041 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.48741696 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.836023003 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.829342938 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.82994352 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.829066426 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.831723138 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.833028908 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.836733681 seconds)
  done (took 166.310509504 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.822727644 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.951152179 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.840877353 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.864046676 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.831912885 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.820597838 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.858586759 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.851065193 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.841938514 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.822070061 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.821575109 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.897999767 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.835300059 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.922503264 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.8693839 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.855145106 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.939089684 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.830941096 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.821871494 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.82104066 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.865072985 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.827007683 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.897430581 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.96387671 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.845575246 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.952934169 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.839257508 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.825337404 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.83571976 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.954979586 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.842886506 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.884638082 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.865153568 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.854700433 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.958371607 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.95640866 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.929444392 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.852916821 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.841432273 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.822725389 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.822806905 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.819652128 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.954694203 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.844279082 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.83785228 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.93769264 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.845360079 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.826101237 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.833237259 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.82279065 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.851419696 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.856132383 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.905820659 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.968273257 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.859833586 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.849062295 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.862831643 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.116799594 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.834192473 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.937223905 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.82587303 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.941898385 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.84811382 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.820504735 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.824271973 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.829912236 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.854607372 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.857408855 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.943026044 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.845205348 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.937983454 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.859734459 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.833037538 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.824546227 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.827341036 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.956152996 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.956607943 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.861504538 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.878310803 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.871163847 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.829312854 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.838921284 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.821786421 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.855112908 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.830436605 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.941309802 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.956780346 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.833393112 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.828303598 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.827467234 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.827661203 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.864632859 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.964334597 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.874356626 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.930309423 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.905754862 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.914608902 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.842209741 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.839908355 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.831438445 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.903022885 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.843060061 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.837924252 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.164689109 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.909598476 seconds)
  done (took 198.476430084 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.294131914 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.878864123 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.895537765 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.173946829 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.187421286 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.78548296 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.887748217 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.876260277 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.911005784 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.063796528 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.940764964 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.895526398 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.875292663 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.862843937 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.875956013 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.90952656 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.887383953 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.215618891 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.002711402 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.004748448 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.87251694 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.197593841 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.169252566 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.272257124 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.925713863 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.241752635 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.554009352 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.030140758 seconds)
  done (took 60.436367835 seconds)
done (took 803.15070406 seconds)
SAVING RESULT...
DONE!
