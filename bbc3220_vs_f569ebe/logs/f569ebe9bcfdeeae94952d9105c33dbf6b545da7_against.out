cset: moving following pidspec: 5375
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.969168635 seconds)
loading group "string"... done (took 0.518410896 seconds)
loading group "linalg"... done (took 9.505355535 seconds)
loading group "parallel"... done (took 0.175453666 seconds)
loading group "find"... done (took 3.559015641 seconds)
loading group "tuple"... done (took 2.071146407 seconds)
loading group "dates"... done (took 1.421182331 seconds)
loading group "micro"... done (took 0.191789193 seconds)
loading group "io"... done (took 0.515041542 seconds)
loading group "scalar"... done (took 58.875687475 seconds)
loading group "sparse"... done (took 14.110227565 seconds)
loading group "broadcast"... done (took 1.36534611 seconds)
loading group "union"... done (took 10.980452054 seconds)
loading group "simd"... done (took 3.739378311 seconds)
loading group "random"... done (took 13.750452554 seconds)
loading group "problem"... done (took 2.347923713 seconds)
loading group "array"... done (took 24.433757394 seconds)
loading group "misc"... done (took 1.169552147 seconds)
loading group "sort"... done (took 3.833866513 seconds)
loading group "collection"... done (took 22.339310467 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.69371587 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.149143477 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.185037427 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.225360083 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.277862569 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.1673687 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156344532 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.149954544 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.663041578 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209629381 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138247189 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.421670661 seconds)
done (took 6.191197358 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.305837915 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.061899561 seconds)
    (2/2) benchmarking "String"...
    done (took 0.157640647 seconds)
  done (took 0.923562836 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.094787123 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159846026 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110160866 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097627988 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093929682 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.11072267 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09349024 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.17175585 seconds)
  done (took 1.532607394 seconds)
done (took 3.558354872 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.502386512 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.971086267 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.57246358 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.182627064 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.311928982 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.312866881 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.270185057 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.224127733 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090356392 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086953935 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.17531566 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.482950241 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.402819311 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.037810185 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069815233 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.11146173 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.137799576 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.863211516 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080097755 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110764923 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.540502113 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.215657173 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117087724 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.107077095 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185803585 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133833709 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.139551824 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103853989 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.747544992 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.136532865 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.217559579 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.08331688 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.137759627 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.166065881 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.221149351 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110638651 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.758128321 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200156529 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099810877 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100539671 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.770750317 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.129104407 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.20720079 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108005215 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068667601 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.167515994 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.103279474 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.095833137 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094504615 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.08652881 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.175401075 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.595412168 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107229697 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.193813962 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093964672 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.774666248 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097974889 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.281651808 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127208914 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097623518 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091494247 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090836271 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.170989481 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096202737 seconds)
  done (took 21.077964244 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.176522448 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.191125561 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078739971 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.163092597 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.130437746 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098432908 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.089671249 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079100073 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.134065302 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182451903 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.146420016 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.194851525 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076771005 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091953244 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.172251653 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.234581088 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.128890273 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.106409551 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090834526 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.113299883 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.127666374 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.09858635 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112731724 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096372171 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.179442232 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207370015 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111510549 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123933498 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090116627 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098462102 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143256345 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150232791 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094075371 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089288729 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177749349 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124093295 seconds)
  done (took 5.426071221 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.178154847 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.239813387 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122020195 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.255595282 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.199437373 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.136264256 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.186847783 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.192809505 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.30578253 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.315751675 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163633588 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13044494 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097294426 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07989333 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080439768 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096125492 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.82989883 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.174390193 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.168954935 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166015804 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116135089 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097761175 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.723755584 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100625156 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.088459503 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097305251 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082530606 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.225374749 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095467308 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.49227538 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085784303 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.120995624 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114028188 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.212426036 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125744343 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124000755 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.11333173 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086916779 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.217509572 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119530843 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079876778 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080580009 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132410833 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116885953 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.109507781 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.111323095 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.13634185 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08857509 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112312955 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.164221582 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.088241389 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19463355 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.162758267 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.086742595 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.291821747 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.110510701 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121659535 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.093387295 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.861419179 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.121882538 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099453988 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.084311979 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079934187 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113112498 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080280321 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.817209087 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.127548552 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 2.057743167 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084244861 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.161347892 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098093759 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.118402417 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087193909 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086155928 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.129023879 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.088888608 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097287511 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087355592 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080946117 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.107200923 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11426914 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085954157 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096844718 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149548836 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098407626 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.125323269 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111662105 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.107110409 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.089971497 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129569689 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084263997 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.090338443 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.18733716 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09812428 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.104224217 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114404282 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11690488 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145417864 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.089502443 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.315892335 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097004374 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123174951 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101663836 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113727661 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114679667 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082642214 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086245953 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095557473 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08427608 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148945827 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.103465392 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081913349 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.091034272 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110597724 seconds)
  done (took 29.236531895 seconds)
done (took 56.435785027 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.423244255 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083607908 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082864587 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104381221 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084428683 seconds)
  done (took 1.550968457 seconds)
done (took 2.296225589 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.306905857 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.202751481 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089619148 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.190455923 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089326513 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.197531684 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.167388535 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.122088291 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.209504435 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.087307402 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.193148374 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08888763 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088621395 seconds)
  done (took 2.809624254 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.106478834 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107829843 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104298529 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122086335 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088218132 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104410554 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120721357 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110019018 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102224522 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11565088 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087668969 seconds)
  done (took 1.923483287 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101170337 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105967247 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093900069 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122061471 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088293211 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100954109 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118319236 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110016923 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100520255 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11506547 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08740888 seconds)
  done (took 1.895586513 seconds)
done (took 7.379175662 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.215784353 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.060100869 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.194005187 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.249404341 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.348470221 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.296500763 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.619995741 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.203155303 seconds)
  done (took 16.068583163 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.193984304 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.112976797 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097459251 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091094754 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.118622277 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096808121 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.091669339 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.112496987 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.097988718 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.096393473 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095742203 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.114866073 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093674762 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096899193 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.110927094 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.092266411 seconds)
  done (took 2.530648695 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.139646669 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117599243 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.118884182 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099857111 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.096237727 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.11810182 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103629588 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.097617302 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.114990321 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097086298 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.104115824 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.116675312 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.100030667 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094949714 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.117728029 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.121256481 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.096595524 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.117200867 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.118711395 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.099437575 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.119440887 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098572032 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115778899 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10288543 seconds)
  done (took 3.467168276 seconds)
done (took 22.820083686 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147142804 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102492922 seconds)
  done (took 1.009573005 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.166258223 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.183518588 seconds)
  done (took 1.113923636 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11251766 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092836317 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139360669 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.105584865 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093073638 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.110958174 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119016043 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.11081926 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092659758 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093363828 seconds)
  done (took 1.840460927 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.097289187 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096890394 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12468925 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.171754104 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118415268 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094763447 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096526451 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.115134892 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.098450927 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092925224 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.116482689 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11235507 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097189314 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12985534 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097022673 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096631422 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.117757224 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096195892 seconds)
  done (took 2.741235041 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.094131314 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093298246 seconds)
  done (took 0.959634741 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.0964124 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092097047 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094338673 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111869114 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093340431 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092163954 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.109726314 seconds)
  done (took 1.462520898 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.534303908 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.241945222 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.382800774 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073991881 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124830818 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.326705093 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.108037621 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074593005 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.093862285 seconds)
  done (took 2.76818798 seconds)
done (took 12.663408664 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094197733 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.442805751 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.633946258 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.132829601 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.093148367 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.149235319 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.334524663 seconds)
done (took 2.65931387 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.35543207 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.167176915 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084798283 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094896425 seconds)
  done (took 1.473197116 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084021578 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100688363 seconds)
  done (took 0.965425002 seconds)
done (took 3.219684641 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09232885 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.090452633 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.089526259 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.108303926 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.091166621 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090191846 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.09106144 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.108528257 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.113095318 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089495668 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.111114619 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.09041897 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089922049 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109865088 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09089871 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091216208 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.212583598 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109869559 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089827554 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090515072 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107142885 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090575764 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.090555509 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088902855 seconds)
  done (took 3.241287737 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113944937 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093846152 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.113013953 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096848559 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.096843111 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112330206 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096539511 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092374247 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.114084549 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09428252 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095308978 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.095076336 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.110996866 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.09663219 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092301892 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.113050759 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.096042032 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092173593 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11000051 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.097828223 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.094352641 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11117559 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096418196 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09514101 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.112406962 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096379085 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.092701104 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.111517813 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096998159 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095502089 seconds)
  done (took 3.808293219 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.099366477 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088514957 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091980481 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.118645604 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088279522 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09216598 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.106128649 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092559186 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092335834 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091433555 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.111249483 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090712164 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091174653 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110058828 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093263187 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094862692 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.117656862 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092130221 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091379497 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09191497 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112208124 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092592151 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.091691967 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.108771235 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092559187 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089092125 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.092992272 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109298816 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093165409 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091729472 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.111508314 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.094887485 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09187523 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.099868217 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.112278034 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09261478 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096104051 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.107132548 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093824711 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088762894 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.087712271 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.109891558 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.092574272 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.096688063 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.109800135 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.093592208 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090934748 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.110361939 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093101155 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093085511 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087830443 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.110029634 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094406698 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093185872 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.111664409 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.090005719 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091973497 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.087781903 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.110707444 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090831523 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088765199 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.105925342 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096615359 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093045352 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.123943764 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.099843213 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090947599 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.092202437 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.11144846 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.0972264 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.093595701 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.118879293 seconds)
  done (took 7.853722041 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116554835 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101444674 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.111071946 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094095624 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091208107 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093758571 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11541314 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092361955 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093309002 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116222811 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092726177 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09302838 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110669659 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09351238 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09305471 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.111650232 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09895148 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091728564 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.09185344 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114385705 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093599123 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09745534 seconds)
  done (took 2.995450399 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.242908473 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100168673 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143147114 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124953808 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111536949 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.125192246 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097384521 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097972863 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115479769 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103658224 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102282839 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115663521 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111996505 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100093036 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.12147264 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104189995 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115126302 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10340449 seconds)
  done (took 2.930815294 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105510763 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093317174 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.156481212 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094192705 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093434786 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.112939292 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101192058 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113431812 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.113395356 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094232584 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.101782845 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112899203 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09453325 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094026482 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111829933 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095610202 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094003504 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094123632 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119686379 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099552604 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098652001 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119227731 seconds)
  done (took 3.106309468 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107444179 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094743402 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.130461003 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098032019 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092409168 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.092879059 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.119566043 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094525079 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.099607499 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.112729977 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094842367 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093146202 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126800412 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095192413 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099199346 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112768391 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094580673 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093423961 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112614111 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095167619 seconds)
  done (took 2.853213946 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.196781169 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128644641 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110820727 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11658794 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130472807 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110182796 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136302319 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111297114 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109745659 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140735843 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111728872 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109988148 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136580846 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116681667 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127928908 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121176862 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118556837 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.138215691 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109656123 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127625447 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123747999 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10987731 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137445761 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111748568 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109193285 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129224743 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110950911 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132666033 seconds)
  done (took 4.2699939 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094011257 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092694469 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091506189 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110531793 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093000933 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091495643 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090964151 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110819469 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093695225 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092349453 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111350962 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093268006 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092424183 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091980761 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111302911 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092924177 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093222399 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109843088 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09239911 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091922304 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092106545 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111353126 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093679161 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091913853 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0917301 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.111986587 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093318012 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092125752 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11165107 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093310399 seconds)
  done (took 3.719236224 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.107242059 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104264376 seconds)
  done (took 1.009563227 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100642407 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107402205 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091573725 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112209381 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099357188 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092651238 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119694481 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101128084 seconds)
  done (took 1.623839037 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.166780356 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.191595663 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.098402038 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.124643085 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170965665 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.183829452 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131155365 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.118290462 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.093238882 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085480493 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.184331122 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084791578 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.112700226 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091801339 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092862018 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119699579 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095406266 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103711513 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.121915433 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097168921 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098605556 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117745001 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098026991 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104326325 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106253596 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.099342032 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096567867 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.122939517 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09147525 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095468216 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.111560765 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095060971 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.097623378 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098303493 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.114309648 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.17005291 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123041414 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09141365 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093322552 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119581617 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127580539 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094666018 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.115837077 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093151231 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098331988 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.118228791 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099377582 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094699403 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.105407119 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090085617 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095536101 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107870142 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095628083 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094765403 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.111935045 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101946064 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096290387 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.109332548 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.092477751 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090714748 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092431028 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.108648314 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096319302 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096248063 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114659623 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095394463 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092942685 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.114937172 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.098141321 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095257155 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112499292 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110976053 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094427441 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.118609496 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100761626 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095720901 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110185171 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100912693 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092514209 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.112699318 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100070198 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124545586 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115106956 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090707066 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.090493909 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.120083357 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097572045 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.098424317 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087048499 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123021719 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09836209 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096097905 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.106174325 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092992831 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.0904189 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.116254169 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.089027313 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094530806 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094026691 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.119630087 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100001893 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091870202 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.116499661 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099768553 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099060572 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.112956333 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.158895834 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112038549 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.092092996 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097539987 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120005484 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.090285504 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093382825 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093219397 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092788265 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089357313 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101146103 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.114383191 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095957594 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.09953661 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116494423 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.097937036 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.09615727 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.113650136 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.092260685 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098437099 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.122047364 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.097629245 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.095898019 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.115197051 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096400737 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.095468565 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100179569 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.111849908 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099735029 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091360152 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.11556728 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096476165 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.100323442 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11517589 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.091749656 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092361675 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.115279743 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.095648266 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097058991 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.116450283 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.091440399 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.086226328 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.114893521 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.091391161 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096298698 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103428934 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.11238999 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096518 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090162024 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.123600005 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090828589 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100595055 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119363224 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100951035 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099787829 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.106187386 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093437301 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097229194 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.116271908 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.09314725 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096163137 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.095716921 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.12318899 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.087315782 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099730769 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.108767812 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092501218 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100160363 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.115967471 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099389106 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090698964 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.154969217 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108125063 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100382946 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.115449877 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095177117 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098730432 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093212482 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.119287306 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101295842 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101768738 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112428054 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.095815955 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100266102 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.111877844 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098966705 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093604012 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116029141 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.088800189 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096838432 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08723309 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.1199017 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096255746 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099605264 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.120839808 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097536565 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094412634 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124834031 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.093028171 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099080057 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.108831158 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10131449 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10577616 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.121788881 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102912598 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096783257 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113080442 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097073867 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105110154 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097278153 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.11578295 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098369911 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08747523 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.109037539 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102274737 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097347924 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.111243615 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095887473 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097293029 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.118721312 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.094584584 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088387357 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100681309 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123441326 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090530507 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096058445 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.113541044 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.094391612 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103521474 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.109158853 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.092516793 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097488654 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.120728621 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.097539358 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.095045676 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.119321877 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101665652 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097725137 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098393448 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114428518 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103008979 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092190354 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.115789864 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.092210259 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.098369981 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.109390587 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100129423 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095738781 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.11265441 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.092987313 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100490712 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123534214 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.113251413 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093438349 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100831189 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.123609992 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100558877 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093313403 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.122020475 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.091697973 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.089422125 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.113722492 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.091181777 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097615486 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.111772105 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100589956 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.094612241 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095846406 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.121495757 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098061353 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.094356203 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.122472487 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107011304 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.10990413 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089830068 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094937981 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094730692 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.114147406 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091691827 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098252089 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117936855 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.101100147 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099108763 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.112860442 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096133663 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.103278915 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.113950943 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.104475227 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10166195 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101427842 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.113434047 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100501119 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092897847 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.131031257 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.089260094 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094768685 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116135299 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094635987 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092666533 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.116408518 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.09320473 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.089901306 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.11354747 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103479779 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.094411517 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.121967465 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.096422038 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.0941772 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092442132 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112771324 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101366172 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094532692 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.123681649 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09629339 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.090129688 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.110694105 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101490629 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09659748 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.124182342 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.092731275 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099937988 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102588116 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.120963566 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096703918 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10501077 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.125728698 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102765443 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101168033 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.109761583 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.095128438 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10080814 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.11701055 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099797747 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098377175 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089850322 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.119458976 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101906883 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097131905 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.115456442 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.09011558 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097562336 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.122826792 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099518381 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099642839 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.119799522 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097583429 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091254272 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10059296 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.122294951 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096018076 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102743372 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11775422 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100624318 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092411472 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.122275605 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097728559 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.091303161 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.109614359 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.095409409 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102459957 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.090420646 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.122589193 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100691785 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.093797193 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.115013299 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100961232 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092977815 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119044328 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100962839 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.095046933 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.129197505 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097878857 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.09428231 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.123282786 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103125963 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088972836 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.094577251 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116328061 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102628204 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095083809 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.122658824 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096210978 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102283398 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.120802931 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101035474 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102505423 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.124338996 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.091256367 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103093696 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099327296 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.120087617 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.09246113 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095018857 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.112994537 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09564226 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102363017 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.114178975 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106459208 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10322437 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.114727438 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.0946568 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10273583 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115865572 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103961125 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093647873 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098131473 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.112081222 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098187835 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094860248 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.124373288 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093507491 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.090622348 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122706665 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102218446 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099770857 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.119247706 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103943106 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.090199669 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.090306735 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.120963427 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092753485 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107467996 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120748805 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093967746 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096058025 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.121040392 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099440997 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103205442 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.111258212 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093629504 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096569822 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119114589 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095021092 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.091363574 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100428903 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.116432334 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096974343 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.096068502 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.112074308 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095411853 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104314941 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.11628015 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092715491 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.09434859 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124882291 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.096925524 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.094250394 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.110982269 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104869132 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.098073854 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124348495 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.094715327 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.097095797 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.115298531 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.100707848 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.1038535 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094492183 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117619915 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093910056 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102135614 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123422329 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089584227 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093391764 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.128602038 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102826065 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.098299511 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.120329827 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.096380971 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104629926 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124884736 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100554337 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090989573 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.092273745 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.116142283 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090588195 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098678819 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122636894 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096013815 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.096040076 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123455993 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101671449 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098613099 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098498769 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.113046498 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103487741 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.095112584 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.121210875 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090212031 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.091731637 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.120595503 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103219899 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094750875 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.118051535 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100063074 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099315353 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091086164 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.116479407 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099976471 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100745423 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.124982024 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096804978 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.09591478 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.121651433 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108520085 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097347784 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.115773521 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105310039 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106194231 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11891596 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.097015619 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099062597 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.123710215 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100875886 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102398147 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094979886 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.11758702 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102874046 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103275353 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.128723631 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096152102 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090162722 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.122766729 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094429187 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091187992 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.12160492 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103769062 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103787919 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.117150302 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.094365701 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10495755 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.12231276 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097540197 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094029974 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.115115267 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104617005 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095473174 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099851315 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.115121274 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104417468 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104869341 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.124348215 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.106425056 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091025541 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124519954 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09973922 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104139291 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.120148519 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.093912152 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.091753428 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100542534 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.126849371 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10277983 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100077601 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.122406069 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10226014 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.098322489 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118841928 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.096115924 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104127348 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102474903 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.120524893 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.100145836 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095381752 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119639586 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099608896 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103363423 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.125317752 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.098037397 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107167119 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.124735625 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.097444584 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094465713 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118597414 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.10068976 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097745879 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101288579 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.116473401 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091287866 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102630719 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.126670158 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096824743 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104546186 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.126014978 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09596332 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100181245 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.124775155 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103250979 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098040331 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097836674 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.122830843 seconds)
  done (took 63.231344854 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147180658 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105447138 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120371871 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099687747 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118342703 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122067338 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098983327 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100895581 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122035002 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.1079763 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099563429 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120431166 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114422511 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120751878 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138824497 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109351476 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120459871 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101016477 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099020832 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099866261 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.136309583 seconds)
  done (took 3.25698673 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117024169 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112412758 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.132166807 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113196797 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106355075 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.132029778 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110802568 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.131104171 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112637508 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106604199 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134365201 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109863412 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127987364 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107340815 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107202459 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128968146 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112440695 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106443145 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.135088966 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110816536 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127771136 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112071654 seconds)
  done (took 3.44755845 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129122076 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100885664 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097575956 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119885636 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102130864 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098355245 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123254361 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101004884 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107924967 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.09417266 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.111762536 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09505287 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097698806 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.12145064 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094197523 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098550032 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.129296331 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103171779 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104365157 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.098409861 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.112817069 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100692204 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.100011391 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110572021 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104685938 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104750052 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.100046591 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.12438586 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089905288 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102070033 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.121849713 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09391725 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090460247 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110909006 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090981053 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10142875 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102428388 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.121302925 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101914356 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.091187434 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.120407281 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104930243 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090645466 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099645772 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.122646602 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093196209 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10327689 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.120339535 seconds)
  done (took 5.917565146 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129543149 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.158247498 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103797068 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.128616356 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.138752351 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109375012 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.103487462 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.131840509 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101357582 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.125544735 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.116252772 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.114148244 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.128354381 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106939856 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103512046 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126621479 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105593805 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101914706 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130553753 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102596427 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107825024 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.127009377 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.114272842 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.135183741 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107377691 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102289753 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102788001 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.129985314 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112569832 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128772451 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109081259 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108644333 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.136403519 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107187164 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103286179 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.126148094 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.117106791 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104151234 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.382373345 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102811608 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104659887 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.128746958 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.106034085 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.115217794 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.127715752 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107322795 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103467487 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.12312711 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11246067 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.104937785 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.132214229 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.116353902 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127573066 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105641856 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106312122 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.135100141 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105073767 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104104928 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.127440997 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.114402048 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102079531 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.128044216 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115052271 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104334636 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.132294896 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.116012168 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.127798304 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107114459 seconds)
  done (took 9.164126109 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135558998 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108365945 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.138080687 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116310881 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10773891 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.131061429 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107362325 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.107295278 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130473505 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113154822 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128849696 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.22610941 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.128134451 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112495869 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.107675704 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.130213346 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108153418 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131073163 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10789752 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108044955 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.129191149 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116984918 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108243792 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137962446 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119558151 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104372141 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.130022959 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107091901 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137193214 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108036783 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11887643 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.131042502 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10761578 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116374157 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.141835774 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108458765 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124406393 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110648428 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108451711 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.133079563 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105457684 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117251642 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.13007506 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106895087 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108641189 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.13032593 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117051616 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.118714538 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.136551093 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113414143 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.130811467 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116466906 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107870561 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.130615841 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.1164646 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144758911 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116368918 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115868925 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131166331 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115149768 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138023069 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.123380006 seconds)
  done (took 8.424823645 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101743315 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100294876 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.102168719 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.122582348 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101766642 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100443988 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100092197 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.122675376 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10145082 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100237119 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121963345 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100741302 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099953423 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100637238 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122399504 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101740382 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102011436 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120928856 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101810991 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10046054 seconds)
  done (took 2.998774495 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110927584 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117685846 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.125036361 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11104373 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102613608 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.131207747 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102791423 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102888433 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102790166 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126461891 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110670638 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.133030604 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104337639 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108833672 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.13215256 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109557996 seconds)
  done (took 2.707643758 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.1206673 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119503884 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.21070759 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105578999 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.126188533 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110600098 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102621151 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.128819105 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102615633 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.110164009 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.130569537 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106612929 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103569944 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103672751 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12538864 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107453329 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102697556 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.12985094 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103098935 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.218642888 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107538117 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106953405 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127774488 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107015215 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104729728 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.132304674 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110840631 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103897639 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.128122577 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104885195 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104959995 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131882274 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102904356 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108260903 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.126316621 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.107225507 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103925645 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103471818 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.129933702 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105766871 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10609324 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.128800108 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103574065 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106858979 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.12268711 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103535932 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102228503 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.129884953 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106346555 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105592618 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104049404 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.131264388 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106954453 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.113145324 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.134404592 seconds)
  done (took 7.310494442 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114263343 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106250523 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138968301 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10232195 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105094649 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10445623 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.129165028 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105394128 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105090599 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.12482565 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10517783 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105545824 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.127602609 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10547752 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105449373 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.127542127 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103089017 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104275201 seconds)
  done (took 2.897970895 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108462815 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103072883 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108516873 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.127160583 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103064363 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103027766 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.125904977 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102620173 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101775233 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103032794 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.127451542 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102905334 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102546001 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.126171421 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102811258 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104552541 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125992628 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103061151 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103375227 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101657061 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.127138654 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103251537 seconds)
  done (took 3.300962015 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115645712 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.215766404 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.110007286 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.224781168 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.101089252 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.098855867 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.133697378 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101292001 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.141334314 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100755341 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099130832 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.122755974 seconds)
  done (took 2.448508361 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131704877 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1427442 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127849149 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105251862 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113954435 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13220068 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10947286 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109366911 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14110279 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119676881 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131599696 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117759248 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11675535 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140032262 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112505718 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136828713 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109498561 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10928806 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126591308 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125354488 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108553609 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139895863 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109326123 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109385139 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131613175 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117576055 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139911437 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121730633 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109630422 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139084447 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113493762 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130274457 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118189192 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121263605 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127828197 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116700594 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110112047 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146357648 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113035184 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13906063 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106874275 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114562403 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13951404 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114905743 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139181037 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109641806 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11339766 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131901341 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109290085 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129508717 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136434529 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116999864 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135156992 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119133446 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117030106 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151621865 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122180691 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140776631 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114450587 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142148873 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117746747 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114188613 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14014338 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120689789 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137302935 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11846751 seconds)
  done (took 9.060543034 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143749146 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106003563 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131407632 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120320119 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140936358 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111870372 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109286104 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132921373 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109686853 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106921557 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175568904 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109902663 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116660576 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139199615 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111001476 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132100877 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110205285 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117034226 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128079905 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132021257 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132372699 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118743173 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117759039 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14027517 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121238183 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136570928 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109606117 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110862422 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130780806 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110777634 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115028804 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132636699 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117858284 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10642331 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140475685 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108987533 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109780511 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138495335 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109790079 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13661437 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117849763 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124462126 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133763029 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110399165 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145707495 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110336168 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110135863 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128543092 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1107358 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106979665 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144885324 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120382069 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145444752 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11845382 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108720669 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132657861 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109210397 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110200606 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132990445 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11340653 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139474161 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111707082 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131402883 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13304129 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110296289 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118648677 seconds)
  done (took 9.004775188 seconds)
done (took 171.365773823 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.174936492 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.215562608 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.198725411 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157701269 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095345295 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.15332236 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.129238432 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.199192788 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.095139263 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094433727 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.119438442 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09770139 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.162511657 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095818539 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.119820335 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098735391 seconds)
  done (took 3.095467727 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.197960719 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.346338455 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110764574 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.12492685 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101457595 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.10090955 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.123065301 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101565779 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099842794 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131775836 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100655188 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09781607 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129946622 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097393391 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100885105 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123477783 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107798903 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101324966 seconds)
  done (took 3.196643232 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120631891 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.1527329 seconds)
  done (took 1.17508246 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.131134832 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.217282658 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297912116 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173782225 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120467275 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.143146276 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151105738 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135223201 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.191334946 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13799164 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112770415 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098184902 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149478506 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106889082 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.140049444 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099293841 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128811143 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136749862 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114813134 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102439563 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.149552537 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105165468 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106254224 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.139663012 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182607788 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.136808389 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104207665 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.104348535 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126149562 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115955038 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.107242688 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.142508136 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112662092 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.181593484 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103911607 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.179051121 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.107759793 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.124840037 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114355394 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.101717125 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.127339796 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.106569977 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.1137542 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.122125307 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103988433 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.106847596 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.12723266 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.10388863 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.131776464 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108619259 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108817678 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.130809093 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153433757 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.131786382 seconds)
  done (took 8.018167953 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.903969352 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.148474676 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099481855 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.04071223 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14568787 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114671006 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.863132386 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148555763 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.260851747 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.903206336 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117430366 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107165513 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.268072637 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260613727 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.300390224 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362753881 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.749340961 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113489222 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.13154075 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165870324 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10571463 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141652091 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117058601 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.518101987 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101795975 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09929042 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128620965 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108838282 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181055147 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101316166 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.105901177 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197178356 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.295900896 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.213254633 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101250026 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122922475 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10037261 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18645332 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.28150577 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.225376845 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.176113387 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121060647 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101331461 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105605329 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.138861025 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097332698 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181574207 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192362869 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170694053 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.129136813 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109893933 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109458332 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126649485 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.15645998 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.1221677 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.365242326 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.36717267 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099943436 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129890609 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112295146 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275479095 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126905383 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.242583222 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124408208 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218699459 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123723484 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.895330615 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.164252102 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123629968 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106503628 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106821196 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130452622 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103690141 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.190175301 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.477478316 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131453798 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10711446 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100353962 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.238046403 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100970173 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124153916 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161022641 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124544888 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10784933 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131533347 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107252606 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189563142 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250514468 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130975314 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107213005 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105944199 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134641982 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102415468 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.242735756 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.233113582 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.180131985 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.236735691 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104927589 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182412163 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.164047187 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130148952 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189341885 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107795342 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111711203 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127444698 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.232003316 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134588623 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.127249422 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106412135 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106601614 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160518666 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104119176 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130804832 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166585569 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.557401608 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18870158 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.098750546 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127856902 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107999837 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182844201 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108519177 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273336365 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10971905 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187008418 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106118313 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.123123757 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106440072 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.182740067 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108720669 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129552927 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106768186 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110830434 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.28233751 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228121677 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133241454 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.259560591 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.179343127 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106857373 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19304941 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131269486 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168509068 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13544376 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104700255 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103344077 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.880013094 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136499899 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106976732 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130358825 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18827932 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101436293 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126613587 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10246736 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099356699 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.869067219 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128860102 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100282305 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.1041835 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12839433 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108361895 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108840097 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12951626 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157473657 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.268701907 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10990839 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10725051 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124141694 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161897473 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.126476139 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101437201 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101348153 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124371193 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110242301 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.1064363 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126688875 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.17060284 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.179496988 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.234405297 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.658733489 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124619199 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101840116 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245993503 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10237042 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.329704706 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132802223 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.240817215 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189148704 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098550172 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.366779602 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.189103237 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.207747438 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106076967 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193834635 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100464242 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107782212 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.18060034 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101250794 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133108547 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.157204208 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134662027 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10857505 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.285300457 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.126562393 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.2349099 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.123438533 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.167335455 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127723155 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106693665 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.331349608 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.125200348 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113833819 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179463743 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107205602 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101984128 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.636198499 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125986622 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111453978 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10712724 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.261142147 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163946966 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132379265 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110365152 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110371926 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180995293 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.240396213 seconds)
  done (took 48.237148943 seconds)
done (took 64.620972892 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.262343835 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172868072 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.379153592 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.1540529 seconds)
  done (took 1.963832342 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.271287082 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.171497786 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.254633498 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098829257 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.262201849 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098389397 seconds)
  done (took 2.089877141 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.178806746 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.175862029 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14778702 seconds)
  done (took 1.43653547 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.21237994 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.210005756 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.349004297 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.23809585 seconds)
  done (took 2.026929822 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.286770685 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117151979 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126133148 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.23672717 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.254124564 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.210983394 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124445504 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.178059304 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131009118 seconds)
  done (took 2.643052025 seconds)
done (took 11.089498322 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.139289151 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.278761566 seconds)
    (3/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.410830036 seconds)
    (4/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.403626467 seconds)
    (5/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.428714294 seconds)
    (6/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.291024229 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.137437868 seconds)
    (8/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.192485511 seconds)
    (9/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.145394886 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.21662203 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.139184739 seconds)
    (12/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.410253287 seconds)
    (13/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.180107052 seconds)
    (14/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.256908647 seconds)
    (15/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.209025254 seconds)
    (16/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.228268553 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.128671041 seconds)
    (18/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.316293853 seconds)
    (19/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.235097564 seconds)
    (20/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.31141509 seconds)
    (21/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.202916167 seconds)
    (22/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.300685164 seconds)
    (23/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.192557867 seconds)
    (24/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.138703392 seconds)
    (25/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.088305643 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.130954852 seconds)
    (27/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.081161787 seconds)
    (28/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.13353381 seconds)
    (29/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.21615123 seconds)
    (30/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.086156696 seconds)
    (31/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.338640759 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.130773054 seconds)
    (33/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.156164761 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.131261944 seconds)
    (35/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.249496881 seconds)
    (36/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.148630911 seconds)
    (37/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.111617126 seconds)
    (38/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.177131463 seconds)
    (39/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.131161302 seconds)
    (40/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.14728521 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114993325 seconds)
    (42/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.113763908 seconds)
    (43/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.19118758 seconds)
    (44/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.133975486 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.106107557 seconds)
    (46/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.139305424 seconds)
    (47/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.174937051 seconds)
    (48/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.180277185 seconds)
    (49/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.110548975 seconds)
    (50/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.136819424 seconds)
    (51/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.136555424 seconds)
    (52/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.146841299 seconds)
    (53/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.128674533 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.114502061 seconds)
    (55/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.275417565 seconds)
    (56/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.17336192 seconds)
    (57/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085988589 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.143908454 seconds)
    (59/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.155679853 seconds)
    (60/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.07973493 seconds)
    (61/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.101324058 seconds)
    (62/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.160601638 seconds)
    (63/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.28542631 seconds)
    (64/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.10602696 seconds)
    (65/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.080688543 seconds)
    (66/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.081809356 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.102274738 seconds)
    (68/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.19357245 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103859436 seconds)
    (70/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.220946741 seconds)
    (71/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.090107059 seconds)
    (72/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.102353518 seconds)
    (73/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110904118 seconds)
    (74/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.110126225 seconds)
    (75/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.174892981 seconds)
    (76/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106118173 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.156603155 seconds)
    (78/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082666658 seconds)
    (79/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.085310779 seconds)
    (80/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.218127459 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.139643176 seconds)
    (82/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.085322372 seconds)
    (83/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.135107894 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.128643245 seconds)
    (85/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108263139 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.1241213 seconds)
    (87/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.156956971 seconds)
    (88/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.081145794 seconds)
    (89/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.180913578 seconds)
    (90/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.202221386 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.108713824 seconds)
    (92/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.083543096 seconds)
    (93/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125045021 seconds)
    (94/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.136756986 seconds)
    (95/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.194602051 seconds)
    (96/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.208286123 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.102171862 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111761838 seconds)
    (99/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.177521596 seconds)
    (100/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.15016295 seconds)
    (101/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.08696469 seconds)
    (102/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.13430409 seconds)
    (103/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.13715969 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.129307505 seconds)
    (105/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.088280011 seconds)
    (106/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.21906012 seconds)
    (107/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082526975 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.105592408 seconds)
    (109/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.11616107 seconds)
    (110/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.081717166 seconds)
    (111/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111692206 seconds)
    (112/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.083019007 seconds)
    (113/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.082174067 seconds)
    (114/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.174305126 seconds)
    (115/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.132753474 seconds)
    (116/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.123734799 seconds)
    (117/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.113596638 seconds)
    (118/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.137066872 seconds)
    (119/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.081731832 seconds)
    (120/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.135824605 seconds)
    (121/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.08450055 seconds)
    (122/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108975589 seconds)
    (123/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.086124779 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111009507 seconds)
    (125/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.115677769 seconds)
    (126/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.110060504 seconds)
    (127/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.084075216 seconds)
    (128/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.082424308 seconds)
    (129/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.105100377 seconds)
    (130/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.091648177 seconds)
    (131/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.102821805 seconds)
    (132/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.147446753 seconds)
    (133/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.112198207 seconds)
    (134/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.10989526 seconds)
    (135/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.087141179 seconds)
    (136/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.134861702 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.150695979 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125736659 seconds)
    (139/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.087455744 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.129471911 seconds)
    (141/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115181686 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.10478644 seconds)
    (143/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.086933191 seconds)
    (144/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.127657993 seconds)
    (145/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.081703547 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.106776009 seconds)
    (147/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.139023405 seconds)
    (148/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.083849769 seconds)
    (149/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.080356796 seconds)
    (150/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.145668105 seconds)
    (151/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081951972 seconds)
    (152/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.108485374 seconds)
    (153/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.087742093 seconds)
    (154/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.119978735 seconds)
    (155/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.087053389 seconds)
    (156/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.112295426 seconds)
    (157/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.089124951 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.105305081 seconds)
    (159/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080429013 seconds)
    (160/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.138832809 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.106119221 seconds)
    (162/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.087275344 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.103380465 seconds)
    (164/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.112159095 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.103804332 seconds)
    (166/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.129873569 seconds)
    (167/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.109792942 seconds)
    (168/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.081689647 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111536111 seconds)
    (170/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114240156 seconds)
    (171/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.080375445 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.150612937 seconds)
    (173/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.081641248 seconds)
    (174/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.081404137 seconds)
    (175/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.081733857 seconds)
    (176/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.105663506 seconds)
    (177/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.104200821 seconds)
    (178/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.082024747 seconds)
    (179/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.112756308 seconds)
    (180/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.107915888 seconds)
    (181/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.104251106 seconds)
    (182/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.112077591 seconds)
    (183/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.080765019 seconds)
    (184/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.13184421 seconds)
    (185/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.08373509 seconds)
    (186/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.084527369 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123865402 seconds)
    (188/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.131700687 seconds)
    (189/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.081429838 seconds)
    (190/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.083437706 seconds)
    (191/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.106200866 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.132597099 seconds)
  done (took 27.655649508 seconds)
done (took 28.591185095 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.226090971 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.133191449 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.112701342 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.112017806 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.23439964 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119490545 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.155178952 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11434366 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.12250685 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.138721831 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103498915 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124873561 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.137895259 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.210277019 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.141611444 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.105259545 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103134902 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.149909426 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128105955 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129145543 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.235406263 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105216872 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.148980258 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.104367252 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.235034985 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105905925 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112532606 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.140229005 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126794895 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11313841 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.139831538 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.105616783 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.129163771 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.153243649 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104003728 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113601039 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101482737 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.111795152 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.114986759 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113726473 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.150530944 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11393481 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112580308 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.131262223 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114179953 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11264533 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.12705652 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.11806697 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102994243 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.13679917 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107352059 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.129504597 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111202619 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.1269248 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103437106 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.104631532 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.147323064 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104590605 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125831435 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127371295 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.106255202 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102298553 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.138336236 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103602071 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112859115 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.104892039 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.13936849 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115529146 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110410269 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.13027299 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103697195 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11121058 seconds)
done (took 10.173864917 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108920695 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148645788 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.234407812 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.235940409 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132542344 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.148107172 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117160359 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127523618 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.14255046 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123082481 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.142279545 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.160564762 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.241988733 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121183846 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.120509249 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.142813762 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115038931 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112130879 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.237855526 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.129281314 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.154137967 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119885846 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.156087098 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.124696513 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107318116 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.157847936 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11253575 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115769261 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.133242781 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.127268209 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.128549377 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.133118883 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111610283 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.127046742 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.152377687 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118162163 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.120502963 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.14154677 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109660105 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.108105507 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.13927211 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123801428 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.108808669 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.146690023 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115685941 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122658614 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.141823901 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120203833 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107890536 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.141038466 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112067463 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132778128 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.146330969 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.126195587 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119842824 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.145502022 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121095707 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.120459313 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.137237005 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121069656 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108039996 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.133424019 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110038155 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.127789295 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.138315703 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120930741 seconds)
  done (took 9.858786442 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127796349 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137482777 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.144771692 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118598811 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113749731 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127326736 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102496623 seconds)
  done (took 1.855475965 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104149697 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.245820995 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.218492449 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.246285369 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.242398841 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.256907391 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127748368 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103807544 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.166641792 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114936334 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.247058931 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.276275985 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.114564918 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.145738924 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.22287918 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.131694471 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.221869695 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.133179576 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119485935 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.249355802 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120130011 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.162635975 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.118463947 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103670166 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.241013819 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.105342866 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.293863137 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.151370855 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114345546 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118510601 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.145938531 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.186662424 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.243289947 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118722081 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.139419964 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.218170831 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.243712137 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.146060193 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.231229963 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.13814543 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.214823617 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.146760841 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120189306 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.119225915 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.146838226 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.206140739 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.150789357 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.120796157 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.14554721 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.22555068 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.14300359 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.217934348 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.143679514 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119048448 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115030619 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.148092296 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126850139 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.120023503 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.252191218 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121184265 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.245353826 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.247951572 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.247049014 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.247246455 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130153702 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.248829058 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.205488212 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.145761832 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114232823 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120133643 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.248017712 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.145909546 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117959693 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.239361304 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121845313 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.253085675 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.249473275 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11773648 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.117634373 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.134710776 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.117408854 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104936458 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.240055876 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119191204 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116063642 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151804849 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118034982 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.146877686 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.110717083 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.128445454 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.145089819 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.119011921 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.127579003 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.146174175 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122416684 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.25321572 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116347128 seconds)
  done (took 17.203745742 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.109027203 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.106139685 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109219895 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.134804852 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.107743938 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.106979805 seconds)
  done (took 1.69022646 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.1452874 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119800709 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.156090868 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121166176 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.190798425 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.225430413 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.260862852 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113156778 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.168699875 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131740286 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.255071053 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.257345015 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.255153885 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12346598 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.260540115 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122177548 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.262654978 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117633185 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.153942202 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117433927 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.119256646 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.149795375 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117666779 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.246202957 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121497154 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.121479973 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.141945494 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127735517 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127317517 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.141733107 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124750082 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.11925916 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.138444281 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.114809362 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.261699271 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.112202466 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141715368 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123494754 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123167059 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.147019254 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.23205437 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.145689966 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127544362 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122545472 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.144140117 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.112311768 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.151806246 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115255787 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.263025277 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.1242225 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122315345 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.149115401 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121725675 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122833846 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.140431615 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11453307 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122725244 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.26105729 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.151895364 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.134070192 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119660398 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.14913314 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115715134 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.1237473 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.147920346 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122898659 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111755622 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.148624836 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117845433 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120282893 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.150063915 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121761364 seconds)
  done (took 11.923082678 seconds)
done (took 43.508198844 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.693232917 seconds)
  done (took 2.699880061 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.134781805 seconds)
  done (took 2.143245102 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.75310387 seconds)
  done (took 19.791185388 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.446500494 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.486230896 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.177233362 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149933312 seconds)
  done (took 3.266572935 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.853956568 seconds)
  done (took 1.88624573 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.348512405 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.257772026 seconds)
  done (took 1.623492694 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.727270836 seconds)
  done (took 1.752811443 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.752638028 seconds)
  done (took 2.768629726 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.294528027 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.249921167 seconds)
  done (took 1.573316202 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.669990227 seconds)
  done (took 1.697763591 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.347432729 seconds)
  done (took 21.38010085 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.263399207 seconds)
  done (took 1.30120632 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.298255107 seconds)
  done (took 1.335494618 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.769132304 seconds)
  done (took 4.803151365 seconds)
done (took 69.042585585 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.121115961 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.124249948 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.122280145 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.146837598 seconds)
  done (took 1.53377479 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.126267663 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120582093 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.148960632 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119586576 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126101161 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.119750493 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.146517026 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122182716 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119243725 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148362931 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120623719 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119323344 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.149505185 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120608912 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117272525 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.149446449 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123959199 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12074671 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.1465458 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.122372545 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120536069 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147574074 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126142717 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.123493497 seconds)
  done (took 4.13738884 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115840639 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110947628 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.112299336 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135107335 seconds)
  done (took 1.509962825 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128503422 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131150197 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156185434 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126339949 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132756756 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.156914019 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119215649 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116593178 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.146151825 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12866699 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.137324795 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.160500857 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.133351176 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121325205 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157732139 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115783718 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120622881 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.159886114 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127016082 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127827149 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.147481534 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126709199 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.124828444 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.15552711 seconds)
  done (took 4.289669168 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.197885988 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.132607715 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.179565921 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.166650173 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.181514213 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118931674 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.148704315 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.152824811 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.127692984 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.121820519 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.149715966 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16831903 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.153238761 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.12233944 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.1211777 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152153497 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.133333645 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12612826 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.195971079 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.124607257 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.154842735 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.132843639 seconds)
  done (took 4.297600554 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.123103852 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110305647 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.134173836 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.109578041 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12356676 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.138693335 seconds)
  done (took 1.780206617 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109252301 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.106307024 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.105187398 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.131768782 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108973076 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.105178668 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.102745608 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.132261652 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105734744 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.105521938 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.131405257 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104476345 seconds)
  done (took 2.383054926 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207300244 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148347426 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258499772 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.404523299 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190772584 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161828959 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.317648983 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191554318 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.180354918 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166763944 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216795306 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16430581 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182699001 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189736977 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168523385 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.162147225 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195461727 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210887851 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172975278 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217987846 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18695017 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203926282 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190346272 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181529299 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141803019 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192684838 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120326475 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129623327 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198657246 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194463346 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17855867 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180133591 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143101926 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222379186 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265533348 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179341242 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273747101 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161185721 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.200206744 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.192178419 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264442776 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14174519 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22235544 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181224791 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129741428 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215592359 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155923878 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.215223738 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135777602 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175690917 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217272392 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182163528 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201039462 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138934218 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332648586 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136099569 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.171127837 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179282994 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218660347 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232342465 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179423864 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.154327167 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203138262 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192721575 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24313455 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.171798592 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.167182363 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152693509 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167050293 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.236056904 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183320659 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190069003 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.24030046 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132571887 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203804478 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196253867 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158830044 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237098447 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173337126 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.149856277 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154116456 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162100432 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127511536 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.189865136 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150562862 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242430829 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135353595 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.346877071 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180061864 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185967504 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194227353 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163991874 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195152121 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150172309 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101972953 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173496993 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.161681175 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18731991 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128864641 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185024436 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140286135 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126308101 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184084722 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123843891 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200100655 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.137355316 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194522153 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172831056 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.16130913 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179290606 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176802301 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.162390064 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198935493 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22318732 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132276738 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132010502 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249547795 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199593398 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137317881 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202783259 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197945703 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.180986214 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13537301 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195620826 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194125105 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174693444 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230221315 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140365546 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136189595 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.170568408 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201432668 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161660013 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.188869199 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128679492 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.193832889 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194653734 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.156240189 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141755666 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211282315 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13480157 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12435492 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167657004 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136677576 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.171542694 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.149727839 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.139393564 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184916951 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166872757 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195892927 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186613046 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137630281 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204603602 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132438071 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.196046369 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152076881 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119733033 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.204609748 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228594223 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130312451 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209747273 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.162236274 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213190308 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200823094 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130039023 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184203731 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158736806 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121806271 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193862642 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169161945 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194789714 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.218677599 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179911216 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.193181689 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.19378868 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150731179 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200618249 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.183990507 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187811383 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142695032 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205233152 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171019932 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.151890126 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123821611 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.128054063 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16638275 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132327232 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166270655 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1824357 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195971219 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205070281 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167656934 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167171887 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193274019 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.154103604 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161858711 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.205216529 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14003359 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.219155592 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189708762 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20848566 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141779133 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19343647 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120052626 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155667211 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.135137855 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191231511 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13866959 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136563665 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171814376 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.220531884 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174377132 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178794943 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219427415 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167848021 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23091463 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.12141998 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.190927143 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172045202 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199204173 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.187945688 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134460953 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.191265244 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.222514749 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144770575 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223883708 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169293735 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211304663 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228189003 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.167286287 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160882679 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150140182 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163400458 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171287284 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164426146 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178653165 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132824293 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184284956 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.140299615 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17001771 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189608399 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17839133 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180580575 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.188731752 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20515039 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126959581 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142609475 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204682523 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146709369 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.136899671 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17253912 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226880178 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150900963 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186793236 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202652586 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131986337 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.317783568 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216011827 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209830734 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137298535 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167207017 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172878758 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189164279 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164703975 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215779325 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14262505 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238492269 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20296324 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.144296353 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131150197 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178801368 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153594532 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.172198573 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.152193516 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.194309765 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.144752905 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220002209 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137625322 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201123202 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205936453 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146196314 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.150253535 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169329215 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256092412 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169994941 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204484592 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.165217448 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.194115397 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185798907 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154069592 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126466082 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132857887 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21674062 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1291644 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206638009 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.193403295 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210739718 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175622682 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193491504 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142338212 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12633492 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197473156 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14938401 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216161497 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163599366 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138104853 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222398323 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131069531 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130461911 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191884597 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313390481 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150480588 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204596757 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108971818 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.313301992 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130209854 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132960553 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191545238 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171466427 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.164005772 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.184426316 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203802592 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141147907 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192576933 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136352605 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208380968 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185257916 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195888667 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207373437 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.146320073 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193422572 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16319715 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205817723 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146244365 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.179528207 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159525314 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226015473 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205620841 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.134798356 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168597278 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20232957 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170437944 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205817514 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169768307 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184500068 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127100101 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196462553 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138551279 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155700246 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160468032 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.196029048 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129581911 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206538625 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201543855 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132397562 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128007828 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178507477 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167040725 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172413615 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129758051 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221687409 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.130497949 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212931337 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244830225 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133604769 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168109297 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176220314 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132762763 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168885372 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146057051 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130962813 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.203542084 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183894963 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.158724235 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177996587 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198513023 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166103944 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190058387 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142946949 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.295871773 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128116361 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222740755 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150751922 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22878468 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14995217 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207127875 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20217138 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152233465 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197778293 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14950288 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.249748519 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168377278 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.197250922 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133747315 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173507679 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140696523 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.134469055 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182913343 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168814624 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174541259 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.137321583 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.197667454 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146160625 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.178080536 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143020841 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232015398 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153544455 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221993035 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189749269 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170177228 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176878847 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210026778 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129690515 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.197851417 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20468378 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144933514 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182930734 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135677379 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138822263 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246527998 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126263123 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193701936 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175365317 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200113157 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173363526 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.16733315 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179022556 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171924517 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176624695 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158244355 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.153514074 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200381557 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135267202 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126105561 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2022283 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193013162 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.166598281 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17190971 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.177460206 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196579468 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.153322221 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135141207 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318782297 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163041194 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225099505 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137659894 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170011145 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146413382 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191764749 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.167430998 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201577379 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13151854 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159800139 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.146188981 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.186050544 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.145039813 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170649774 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213459058 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191345213 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187320189 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133515442 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284976882 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142922365 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204087125 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118444043 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.16026193 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142024765 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135970853 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173801082 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210414327 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217069992 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.194196483 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.14747427 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167321277 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128309891 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131511766 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195920864 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153130087 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201738573 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147704328 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.134697925 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14293745 seconds)
  done (took 86.505676876 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.182983046 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.175014644 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.187664088 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.247058512 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.216391135 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.354780101 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.252563052 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.351946012 seconds)
  done (took 3.100066705 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121128182 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.163902616 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.14412552 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.146085756 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.11149707 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.494499126 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.163127308 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.123026119 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.164077918 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.155216316 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.139070269 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.584833658 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.118142118 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.148598506 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122232513 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137099418 seconds)
  done (took 4.157657479 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.432914759 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.563347337 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.253211669 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.292676254 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.273697095 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.215175756 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.815908015 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.212287261 seconds)
  done (took 13.186451853 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.176551362 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.171301043 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.459316579 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.315848963 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.184880354 seconds)
  done (took 2.443512265 seconds)
done (took 130.347378256 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.126838895 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124965891 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.126970336 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156468152 seconds)
  done (took 1.661483489 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.196189683 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.09394805 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09565092 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121864519 seconds)
  done (took 1.64255231 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.470631286 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093241675 seconds)
  done (took 1.730764017 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.149698226 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.148039426 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.168308903 seconds)
  done (took 1.624865564 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.136318313 seconds)
  done (took 1.27479919 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.11871782 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.134224959 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.279801782 seconds)
  done (took 1.675848933 seconds)
done (took 10.755816225 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121719738 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.931377377 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.436202816 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135983773 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.71585856 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.432528955 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.4415389 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179192479 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17794721 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140487977 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133397899 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.693652105 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.448816082 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.886425152 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.409139109 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.914622663 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.701195034 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119349046 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147486702 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114518613 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.415918044 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140742688 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115108353 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114676245 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.725604213 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423332674 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.1113694 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.921354524 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11147507 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114648308 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.432229406 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113614169 seconds)
  done (took 21.149235179 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114857972 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170443113 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149253128 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113713064 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115487591 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.143508892 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125726812 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125303435 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207190733 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111611819 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.163680033 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111539533 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117913947 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142232961 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137645228 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112194994 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.143556035 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121424449 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125166196 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.142350644 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136157747 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11109681 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114560867 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144364447 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113705591 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.161082286 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11351674 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124172983 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139925126 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.117583319 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117556429 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113102022 seconds)
  done (took 5.351863879 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.162021302 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180153147 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.15139097 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150882315 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.192665492 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114554092 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.228757511 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152490621 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.209129387 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112652524 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133735861 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.140780193 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15414523 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113002848 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167534852 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112459483 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114835064 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145007825 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119972798 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113888016 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.165599061 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112518359 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114422371 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143867597 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113971756 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137164719 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142561495 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125941714 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111595196 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.146489229 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118358417 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113174308 seconds)
  done (took 5.665058525 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.127102057 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128334546 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.1338599 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.166090604 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121636627 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125594812 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.158759295 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122212817 seconds)
  done (took 2.234829792 seconds)
done (took 35.545062889 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.137302306 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130520927 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133549036 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.158171231 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.257424285 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.12027116 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130867969 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.118575483 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.16288475 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135081843 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111252695 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.150835871 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133568242 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.12369045 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.258036585 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.128380781 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.264618776 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.260440242 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.121443167 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126738044 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.153022252 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.232235608 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.158266075 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.121299783 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.257562921 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116335184 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.25303965 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123357936 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.124889974 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.143611838 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.229456204 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.157897523 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.122726709 seconds)
  done (took 6.49529371 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.241866441 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.155204304 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.121731332 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120950367 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120989199 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.151165103 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.24513222 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.154408602 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120234215 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.125181841 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.157398647 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.228771201 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.159790222 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.117220702 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123890196 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111726149 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.281885008 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.123946348 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.146474981 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095751771 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116096537 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.151181306 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.261011403 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.149175953 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.121829319 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120054722 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122914094 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.158182964 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123355072 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.123745205 seconds)
  done (took 5.715487074 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.12626026 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134985252 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139539393 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.219088755 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.150143185 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164745531 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140729768 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13537315 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.175208034 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116285109 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129668933 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.183481084 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132782039 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126547517 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145767349 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134007613 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.129715168 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.146526733 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124190933 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133405791 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.165951899 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132066166 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13900392 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.153362519 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114514004 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122236354 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.155604284 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127153111 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122418081 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13039619 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.149631528 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119027985 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.11756474 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.182035369 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116448747 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.129332229 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.168647424 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129523384 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.128106375 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.183896779 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.119078271 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.127380165 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.174880478 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.172968574 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.118288716 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.159519517 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127798095 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129702248 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.145328048 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134116357 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.158119688 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.146692956 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.136853436 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113461495 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.144709883 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123096031 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114377813 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.147576728 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130975524 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.117245985 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.168042318 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12455306 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127115606 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115828905 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.155955796 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113870136 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113146581 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.151683744 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142482365 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122650793 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.184808417 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114908816 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12618539 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.158898978 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.128458235 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128390349 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.144533673 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.128179428 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126187904 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12049563 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.160588927 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.117746258 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116952372 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.163715233 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.137125748 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129464159 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.160130768 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127886444 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117577451 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.149144944 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134673201 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116422906 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.1511269 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.129293956 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115538086 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.148888696 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129499498 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126886945 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112182701 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.17441785 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.118922595 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113696511 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.17325618 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119077782 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119455833 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.15604659 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.159347358 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114306505 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.157119212 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128629485 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.115698441 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.154353009 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12002036 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114614365 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.163955975 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.137610027 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123323504 seconds)
  done (took 17.295489392 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.360150267 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.347059147 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.186536011 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.435888391 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129082057 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.276981731 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.348532659 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.356224768 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.115978365 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.184114824 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.179416251 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.314937255 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.114955191 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.177836302 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.355924312 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.406015737 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.179218531 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.15683405 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.185956887 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.129135416 seconds)
  done (took 6.116807452 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.138229659 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151555516 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169736529 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143387787 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126895187 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.164073308 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116645908 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137534948 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.158602431 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12525692 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118561655 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.163246318 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128742628 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.132516083 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.162591136 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.151220766 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123042393 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.165970128 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.139614402 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.11986636 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135942707 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142911958 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124402342 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.169444313 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134609715 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126236863 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.145259254 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121987998 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122875821 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.124884876 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.15048422 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133795506 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.15308469 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107361208 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12857899 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.131455264 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.153130017 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.12005102 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12036363 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.14941928 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132362711 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.128905149 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123699599 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.133003016 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135788636 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.112519127 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.128684241 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.159653124 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108384313 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.136187569 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.159882482 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129671238 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122806469 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.168311207 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123682488 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131955886 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.158408342 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.131102706 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122155198 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.145384619 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.115363972 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118756931 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.123485046 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.161035143 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128674533 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135518421 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.163156991 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115580899 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12028429 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.149959852 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120102563 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.130366997 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.167602389 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124765517 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121843217 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.159257752 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.125467282 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096875657 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.125031123 seconds)
  done (took 11.9173654 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141663964 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126947848 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132914946 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.182790005 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.129382375 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.121080411 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.157988177 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.139153939 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12937595 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.165593474 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.131638737 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.130030712 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.170699709 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.127259898 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125705789 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163101048 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129804286 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.153474125 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.165927245 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.144431146 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.129834876 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.153219833 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.129306178 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126873815 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.175893737 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127567339 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143228968 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.162187803 seconds)
  done (took 5.20909314 seconds)
done (took 53.905635069 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.324475829 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.590638726 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.284461732 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.283090469 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.293531182 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.32777981 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.283514126 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.283843008 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.872178019 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.255321085 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.285447472 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.279975059 seconds)
done (took 29.546636762 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.379978208 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.505840931 seconds)
    (2/2) benchmarking "String"...
    done (took 1.684371595 seconds)
  done (took 4.371890448 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.272663025 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.273133685 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.610326634 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.273584092 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.27406886 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.273714905 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.274773 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.286595523 seconds)
  done (took 16.44003829 seconds)
done (took 26.6401416 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.273698492 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.492429659 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.513513485 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.268538618 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.276224861 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.27665201 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.276365661 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.320122272 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.289567828 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.257170901 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.793895719 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.543645599 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.29564828 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.655377894 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.271936257 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.294560224 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.295002947 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.544544596 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.278053724 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.318661123 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.257123479 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.258726057 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.302974841 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.289516775 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.293027766 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.295083055 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.31134881 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.288235396 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.494753348 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.289222603 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.325127657 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.282569243 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.305459934 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.283523345 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.300277849 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.287673942 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.492916104 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.296214414 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.266274085 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.309970073 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.504676118 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.284641224 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.281554449 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.287573371 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.260525658 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.277505261 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.284972063 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.465774314 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.313546087 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.294067842 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.325320978 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.656693983 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.287232895 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.297345004 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.294995544 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.536480652 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.281691548 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.376714106 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.316699491 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.296740459 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.281921395 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.289820933 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.316604297 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.301307939 seconds)
  done (took 149.055024599 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.283876812 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.287012825 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.287491587 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.292753499 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.285759104 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.28781572 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.283959852 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.283274709 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.286950875 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.292640077 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.287217459 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.283858862 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.286177383 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.294173023 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.292858959 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.308256448 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.288764444 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.284498888 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.293419086 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.282744545 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.292750216 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.288022101 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.28444085 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.284011117 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.299887298 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.376763833 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.292369162 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.308472537 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.300329323 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.283125249 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.29595237 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.296058389 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.044014955 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.241794155 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.298980339 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.328119938 seconds)
  done (took 83.472529504 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.284719796 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.285597282 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.2839433 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.28597638 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.321028882 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.284860317 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.900628984 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.899064539 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.254139231 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.784736803 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.88818613 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.57611593 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.286276069 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.380561452 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.299142789 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.289252286 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.382535587 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.312830354 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.286367491 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.286983213 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.914972149 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.30119305 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.291929442 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.476919377 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.303016675 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320193999 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.682521919 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.284789428 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320507796 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.628531324 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.340531571 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.286899891 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.695183864 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.979321742 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.405756067 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.287929491 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322054152 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.287458413 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.574561332 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.286393123 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.289295238 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.291240597 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.007905824 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.293060591 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.904436032 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.288366698 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.287350019 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.287618628 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.287442279 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.633405198 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.291455568 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.125039505 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.28951866 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.286849606 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.290677188 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.287875784 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.287457225 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.323514394 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.576776838 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.248837649 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.292060115 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.288432838 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.292978248 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325260565 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.288519092 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.406481719 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.294116731 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.864510704 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.344580691 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.513491625 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.905301855 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.289336444 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.385984349 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.409519534 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.2888588 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.288785327 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.28786887 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.289982476 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.403076047 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.289262901 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.023195548 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.474903688 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.306780981 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.901464914 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.393375303 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.289944831 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.697718404 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.294883379 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.290007899 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.058431034 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.387345625 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.289890635 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.289157721 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.289133625 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.289035568 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.022524443 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.907452757 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.63449102 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.295729785 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.133083684 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.293128057 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.197987328 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.905534426 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.004010426 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.296614185 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.404449267 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.478144183 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.308939356 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.290146044 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.894094424 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.292470083 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.349507922 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.295940915 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.69697208 seconds)
  done (took 390.056143811 seconds)
done (took 623.758886185 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.270693082 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.270518479 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.271640968 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.270546624 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.270701393 seconds)
  done (took 12.542182285 seconds)
done (took 13.731816665 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.570182353 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.572767389 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.386439155 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.573493669 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.355824089 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.591686904 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.548646514 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.338004923 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.472138042 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.409573661 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.482336476 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.377152221 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.355712622 seconds)
  done (took 20.222689003 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.66675448 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.303136663 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.424341881 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.647781327 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.36652992 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.666064308 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.708385403 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.303018491 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.538511077 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.345322056 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.342610537 seconds)
  done (took 19.504253021 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.672006126 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.303453044 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.426621709 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.644138267 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.367039481 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.67103645 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.707092501 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.303251831 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.551091937 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.347632335 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.344156264 seconds)
  done (took 19.527875507 seconds)
done (took 60.446526966 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.355292318 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.42661703 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.349268577 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.334313393 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.332015894 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.332494795 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.334372269 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.33148084 seconds)
  done (took 11.98798709 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.33031002 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.329347049 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.334357672 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.330656015 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.33348724 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.333744535 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.334633336 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.333916206 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.338244549 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.33598686 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.335150999 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.337165013 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.335413183 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.334865977 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.336940263 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.333658002 seconds)
  done (took 22.539245109 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.334837272 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.332271094 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.331043354 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.333232809 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.331941373 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.331557247 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.332740637 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.333078319 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.331558853 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.332887443 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.333929336 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.331928453 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.333340992 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.331643989 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.33388764 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.33537093 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.334276656 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.333468593 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.336103425 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.334017266 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.332403863 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.333417399 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.333840916 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.334281824 seconds)
  done (took 33.189314158 seconds)
done (took 68.908670232 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.303974549 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.303809932 seconds)
  done (took 5.801082177 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.430787951 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.430524999 seconds)
  done (took 4.057760977 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.333542415 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.333435488 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.332788129 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.333475507 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.332597951 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.332483272 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.332146008 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.332812923 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.332740568 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.332999609 seconds)
  done (took 14.520909398 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.333225964 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.333836237 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.333420192 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.334004205 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.336132549 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.33334658 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.33423552 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.33546312 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.334097583 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.334111063 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.333447082 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.332677011 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.33504058 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.334847329 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.33416917 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.334522777 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.338454702 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.334973324 seconds)
  done (took 25.21286422 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.35601734 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.360412661 seconds)
  done (took 3.909531652 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.515194286 seconds)
    (2/7) benchmarking "second"...
    done (took 1.416179879 seconds)
    (3/7) benchmarking "month"...
    done (took 1.499336892 seconds)
    (4/7) benchmarking "year"...
    done (took 1.487514649 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.416022387 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.365531748 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.416785752 seconds)
  done (took 11.309906169 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.329558738 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.692707641 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.874395759 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.537293744 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.323024737 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.349831916 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.276874315 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.352895295 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.353383625 seconds)
  done (took 15.284185929 seconds)
done (took 81.291483577 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.29988604 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.329476884 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.319053771 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.318237466 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.742571733 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.356929677 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.303105653 seconds)
done (took 16.868878857 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.278804169 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.293937378 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.280877967 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.309863286 seconds)
  done (took 10.357821481 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.300962574 seconds)
    (2/2) benchmarking "read"...
    done (took 1.712198248 seconds)
  done (took 5.208838568 seconds)
done (took 16.764433662 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.338275209 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.339676016 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.338139368 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.340046035 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.337955057 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.338559184 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.338590753 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.337415114 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.339573839 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.340543584 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.339352302 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.340472067 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34064653 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.340814988 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340025572 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.339773933 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.339602962 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338891 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.339923254 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.338728759 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.341996143 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.339288187 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.339767299 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.340876029 seconds)
  done (took 33.346856679 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.339301458 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.339596816 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.340588772 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.340223921 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.339226657 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.33948479 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.337988092 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.339649896 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.340760372 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.338319489 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.340943426 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.339919902 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.33963034 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.341558169 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34146961 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.339858512 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.341810784 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341578073 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.340232721 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.342642245 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.339759337 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341090721 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.340996645 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.340177197 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.340287896 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.340604487 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.340584931 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.34127161 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.340690321 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.340797178 seconds)
  done (took 41.410318381 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.347254424 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.347792481 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.341054753 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.344017629 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.343100404 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.342266639 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.342687642 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.340176289 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.341707001 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.343883953 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.341313165 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.342195541 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.344310334 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.342474208 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.342326214 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.34161921 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.343387522 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.342174937 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.342164461 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.343806081 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.342560112 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.342903591 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.34297469 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.343171851 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.342649788 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.341257502 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.343770042 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.343136163 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.342623877 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.344044868 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.344131541 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.343284436 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.342726753 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.342981185 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.344597871 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.345316538 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.349085383 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.350233923 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.342731153 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.344845249 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.344674766 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.344599827 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.344181827 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.344848741 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.344714716 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.344707522 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.34437822 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.344839033 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.34545175 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.344706963 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.345174271 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.347399903 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.345573833 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.344618474 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.345218481 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.344731687 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.345690328 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.345068461 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.346249129 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.347830964 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.345415503 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.345167077 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.344213325 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.344307471 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.346239561 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.345162329 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.344964258 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.345358303 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.345003369 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.344380176 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.344770449 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.345044925 seconds)
  done (took 97.986023644 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.351360672 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.345311509 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.348811536 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.354996679 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.346379383 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.348335008 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.352856114 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.345517122 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346733199 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.352233479 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.345678386 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.34488848 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352389853 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.347949973 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.34713723 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.349660107 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.346795637 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.347554882 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.348400869 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.348335218 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.346495947 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.346439166 seconds)
  done (took 30.868338076 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.348742812 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.34893257 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.346104906 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.348568208 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.348048799 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.347247859 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.347620393 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.348882983 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34601097 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.347918754 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.347928323 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.346184386 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.349644253 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34811878 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346572494 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.350663098 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.348845618 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.348899675 seconds)
  done (took 25.470049509 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.347544056 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.348046634 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.348418818 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.347959332 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.346952919 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.347338374 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.347531903 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.347405561 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.347787453 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.347938519 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.350055828 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346900259 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.346990214 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348968539 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.34825511 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.348528817 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.349005066 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.346342297 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.348604316 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.348200075 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.351263034 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.34854963 seconds)
  done (took 30.865245225 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.350990164 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.349706552 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.349151593 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.349506387 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.350415371 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.348568278 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.348847154 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.348925237 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.351572571 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.350361244 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.349141186 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.351107986 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.351904456 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.350623567 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.351512437 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.347432659 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.35069704 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.351552876 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.350027542 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.35112873 seconds)
  done (took 28.21164556 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.352553282 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.350994913 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.351415638 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.3518504 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.350716526 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.351870234 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.350648431 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.351734253 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.351272044 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.351717143 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.35297198 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.359076179 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.351832869 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.351116857 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.351262475 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.351872609 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.352586108 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.353204622 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.351004412 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.352487282 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.35324527 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.352596793 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.35253666 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.351796622 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.351325333 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.353184228 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353668787 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.353258958 seconds)
  done (took 39.072781113 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.353780114 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.352280342 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.353575269 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.351852006 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.353396825 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.353785492 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.352935314 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.351076208 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.354726045 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.353167257 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.354968324 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.353434819 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.35449892 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.354031961 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.352441676 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.354702299 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.353293391 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.35493033 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.353823905 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355440731 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.354488864 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354386825 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.353260076 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.353360717 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355205994 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.354603124 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.354096775 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.354197905 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.355773594 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.354070515 seconds)
  done (took 41.82607104 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.380973237 seconds)
    (2/2) benchmarking "in"...
    done (took 1.380000837 seconds)
  done (took 3.973515347 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.355283657 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.355663315 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.355634819 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.356442674 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.356131461 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.355850419 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.355641664 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.355946591 seconds)
  done (took 12.05899619 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.347635618 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.355641733 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.354969791 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.356966762 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.356545689 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.349410145 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.365444726 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.3618567 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.34984756 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.349246157 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.356557493 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.354571206 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.353032254 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.349890514 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.349092647 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.356011752 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.362392243 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.358061455 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.358440135 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.357392655 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.358382515 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.353793523 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.357719372 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.361656255 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.351055327 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.368907596 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.366055419 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.361813957 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.352965905 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.363314707 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.351702615 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.361791678 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.359041537 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.359402826 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.358917849 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.359470503 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.370519812 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.357026407 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.370310428 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.364210421 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.360279055 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.361458605 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.356891473 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.357778597 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.359074572 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.362738586 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.361035645 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.361208713 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.351258914 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.360319074 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.368414587 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.352560126 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.362157017 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.363560477 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.35948468 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.371630569 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.367369621 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.355051365 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.360166751 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.373593108 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.380575491 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.369778238 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.363270776 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.364848771 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.369072701 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.381449275 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.373191032 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.368521374 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.362506434 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.363304999 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.369254288 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.379276862 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.376486912 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.366266129 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.36098997 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.360951557 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.355534457 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.366797062 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.372397007 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.369918409 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.369043927 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.362438757 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.371322778 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.376117591 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.356745785 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.365463443 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.362195221 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.36241955 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.354539568 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.37527335 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.370425527 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.362878827 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.353309035 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.358562776 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.358887886 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.364161043 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.354547041 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.358838439 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.367146618 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.363371906 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.363363037 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.359917208 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.371582588 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.36806999 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.363514453 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.371258873 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.370779762 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.357021797 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.374288518 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.369659089 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.36454119 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.355226597 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.36739239 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.365882142 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.36094555 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.367116796 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.369854784 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.366533901 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.369985667 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.364626396 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.373047718 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.387100902 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.370793241 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.363521647 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.367420955 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.374994404 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.36466844 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.36771813 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.371032587 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.365612694 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.364909741 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.367372765 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.373093813 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.364042033 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.372560365 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.360477614 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.36902507 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.367882117 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.365936269 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.369564523 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.366029577 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.362232725 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.37121627 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.373561191 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.371154949 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.368746892 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.381035187 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.364576529 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.372949242 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.369054961 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.370830606 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.36675404 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.361384642 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.371020924 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.357682566 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.369735914 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.360636642 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.369804149 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.368032205 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.374159591 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.3682462 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.358633734 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.364460034 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.37067039 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.373698569 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.367508606 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.37183653 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.369002929 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.368999997 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.360993321 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.37056486 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.358791016 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.368517114 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.374556499 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.367529628 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.36779307 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.373352645 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.373593807 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.368560904 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.367764155 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.365468961 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.373270791 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.375226557 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.378651573 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.375427979 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.370551032 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.369136885 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.363342783 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.365281926 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.370356593 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.364924897 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.376533636 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.384645561 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.382369225 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.365171646 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.373021807 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.360958681 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.3734954 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.376423567 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.376475807 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.370570238 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.369541197 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.364597412 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.373036194 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.367491076 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.373849845 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.361500788 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.374867503 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.371018968 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.369348085 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.370921051 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.364464015 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.368509571 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.375382792 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.371777864 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.370703495 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.364437755 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.374020467 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.361397493 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.366606047 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.374955991 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.371649216 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.381581485 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.379415637 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.374144785 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.380911287 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.371657737 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.36520538 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.372661216 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.377125191 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.370744003 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.38453605 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.373757584 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.367784059 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.388473981 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.373934143 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.364711741 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.380255339 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.380614183 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.372254949 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.366743844 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.379303262 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.373260036 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.37245302 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.373080194 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.366663805 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.376865172 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.383504355 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.381954996 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.366143488 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.376865591 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.368828955 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.375560607 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.375480151 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.377705782 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.376344087 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.385396355 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.383448272 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.374260302 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.367893851 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.377981306 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.375828519 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.374361921 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.369308136 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.382088044 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.384338679 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.373867026 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.379077744 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.371890378 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.378373325 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.365543621 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.376012411 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.368729082 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.392660268 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.395307252 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.385977993 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.378282881 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.378933592 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.386402977 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.379343211 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.370553546 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.371113463 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.372817101 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.37111046 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.369294377 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.379562653 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.369631222 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.383506171 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.380914291 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.377717027 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.380789833 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.375642741 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.369074168 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.379561116 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.376995008 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.379477167 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.368639686 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.377344563 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.375923223 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.385504191 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.37815123 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.373241387 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.392900591 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.381732761 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.374862753 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.37449008 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.373519286 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.370364835 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.378046887 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.382189244 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.374204499 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.384709466 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.373814296 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.378576074 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.375322518 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.393196929 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.388758515 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.376262862 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.384388127 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.377366214 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.369065089 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.372438423 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.380382519 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.390081308 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.393625544 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.371077496 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.382519803 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.378563643 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.379644436 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.378483255 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.37858662 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.379739002 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.380061179 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.393012756 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.384330298 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.375301635 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.390391473 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.388670584 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.380410805 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.379671116 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.370073946 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.390084242 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.389171975 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.379328894 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.377024829 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.374229712 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.382458761 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.381439148 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.379897612 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.381235281 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.379932742 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.393108718 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.386198413 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.383429834 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.381106983 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.392424833 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.392512763 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.392681989 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.393221373 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.378024818 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.386741568 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.381288151 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.377339534 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.37518109 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.378715198 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.385449504 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.374370652 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.387323277 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.381531758 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.385273225 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.389364178 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.390191797 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.373675032 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.391631715 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.408923858 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.374352214 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.386493143 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.383423619 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.374944258 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.387050266 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.382567784 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.373860461 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.379222875 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.384628869 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.386975885 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.376683306 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.386365962 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.375660201 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.387492642 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.384265904 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.383062749 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.383334431 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.382765853 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.375982169 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.384607079 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.390560349 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.393482859 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.381540069 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.385512711 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.378278062 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.397178301 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.394772408 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.382939269 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.388671213 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.385881124 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.377441014 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.385043867 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.39019934 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.378198443 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.388664019 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.377355877 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.383438145 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.382482647 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.393616255 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.388431308 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.387030292 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.378192297 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.379401599 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.387158311 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.383869974 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.386192545 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.389086419 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.390791036 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.377461617 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.376961903 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.385741162 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.382426284 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.390044222 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.379401878 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.385281815 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.383460983 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.388249442 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.38510854 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.387282768 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.376683097 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.380219301 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.400183362 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.3937815 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.389450712 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.385410044 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.388377042 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.38014876 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.388934375 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.386587219 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.382531815 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.382421116 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.389815283 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.382272494 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.382794768 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.382229263 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.388836737 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.399759984 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.390473747 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.381055021 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.402588346 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.400996384 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.396233138 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.38105083 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.385962559 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.383542348 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.389281556 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.386840184 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.381020171 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.402966886 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.393738757 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.391413811 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.394587469 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.390336299 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.380200793 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.3909692 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.386658318 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.391267074 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.394777995 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.391701975 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.396018027 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.38979901 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.389738528 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.380085903 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.381326145 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.386763149 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.389145086 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.391081575 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.395400002 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.391825036 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.388604654 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.394877798 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.389006242 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.390125867 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.38996649 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.380196253 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.393597328 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.381292551 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.398306377 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.393162567 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.382953726 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.392303099 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.391118662 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.38560553 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.392086871 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.396358713 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.390429048 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.383670438 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.390553296 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.404105508 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.402961159 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.39179242 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.384825892 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.39097388 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.39448557 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.391522344 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.391047353 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.388731416 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.413136615 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.405155641 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.384880507 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.387707124 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.402816797 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.401930511 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.393539849 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.392715721 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.393327042 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.397714053 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.398765723 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.395641582 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.404586365 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.399129456 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.385992032 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.396652465 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.389831626 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.391749608 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.402445311 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.404866639 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.393019043 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.395297056 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.413168951 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.404895413 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.40312787 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.426257976 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.399599908 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.396696396 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.397544758 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.385906476 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.39509717 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.395328554 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.399269279 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.392910719 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.393990186 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.395448192 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.386375181 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.404189807 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.40821469 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.405909369 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.395150109 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.386051536 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.388611009 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.396239005 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.396086052 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.395593462 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.39626757 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.395578586 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.393789112 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.389026007 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.41430492 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.41717847 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.403975604 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.404574492 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.400615469 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.403932511 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.403344796 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.397659506 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.402970378 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.396636751 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.396171399 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.399771647 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.406918505 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.396506078 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.391919881 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.392032884 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.390610566 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.39947964 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.413969961 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.41871393 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.408053077 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.400588162 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.399570644 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.395399652 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.391636046 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.400413628 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.396815615 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.391118173 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.39290115 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.400260536 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.398203361 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.398304561 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.394461964 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.40306641 seconds)
  done (took 822.970646707 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.399064294 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.396240053 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.397210986 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.396363532 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.397393202 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.397817976 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.396507685 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.39811138 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.397735704 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.396189069 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.397710491 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.397180326 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.396944262 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.39763171 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.398259095 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.399533348 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.398666129 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.397877062 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.397334885 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.397515006 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.399178136 seconds)
  done (took 30.596772677 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.396568586 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.39857785 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.397371063 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.398961348 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.398029875 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.398949405 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.397450752 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397320567 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.399992486 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.399091113 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.398632885 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.398090149 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.397862815 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.397441253 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.399980333 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.39861745 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.3987894 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.398636936 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.397886072 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.40062853 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.39936978 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.398535177 seconds)
  done (took 32.014450721 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.399603749 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.400617984 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.393584967 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.403511927 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.40078232 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.399322498 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.401977165 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.400552682 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.40033806 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.392323353 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.393189734 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.394630281 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.402337756 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.406392671 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.402657628 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.406418582 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.402233622 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.400870879 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.403228371 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.401560702 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.416747828 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.412180138 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.400721419 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.392239265 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.402852206 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.401278193 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.401612593 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.401534511 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.393368808 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.404516175 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.401356835 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.395107716 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.412337491 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.404398911 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.396481284 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.404732124 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.402658327 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.402901025 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.401545755 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.410598373 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.424510757 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.402235857 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.414028138 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.415725002 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.402734315 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.401148987 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.410060805 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.401594156 seconds)
  done (took 68.587345921 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.402551051 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.40445695 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.403530854 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.402772168 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.401510346 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.401841253 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.402348511 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.402516549 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.403554949 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.403222156 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.402348162 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.406358587 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.402495038 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.404733102 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.404340175 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.403606074 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.403933768 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.403433216 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.404248753 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.404844778 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.404457509 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.405366633 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.404722696 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.403615152 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.405168771 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.404912594 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.403902759 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.40442566 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.40367361 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.405399178 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.403984683 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.406129718 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.405658639 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.403990619 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.405314601 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.405924455 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.406767648 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.405325356 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.405507293 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.40559208 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.406429407 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.406751654 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.406519292 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.405564143 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.405940937 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.404916785 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.406580893 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.406936175 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.408239833 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.406103318 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.407097648 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.405770245 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.406476341 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.407131312 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.405475236 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.405573292 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.404880467 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.406248379 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.407442874 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.408480646 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.406056385 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.408295286 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.407273858 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.409105585 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.408916105 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.407707363 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.407454607 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.407076347 seconds)
  done (took 96.813826327 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.407700728 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.407416055 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.408698481 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.408641211 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.407985262 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.408458436 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.407642271 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.408156372 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.407815197 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.410423909 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.408284042 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.408915687 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.40887022 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.408615579 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.408802964 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.408906818 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.409376989 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.408287814 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.410245395 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.409997039 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.409351566 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.40964064 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.410238271 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.410180372 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.410049769 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.409832214 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.408371693 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.408948303 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.410126316 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.411091313 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.411675535 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.411186995 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.412268557 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.409651535 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.412165751 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.409060048 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.410696221 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.411582507 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.41111897 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.409893325 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.411387859 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.412084106 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.411129377 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.410954563 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.410116398 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.41221883 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.411961047 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.411274087 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.411054436 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.412022786 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.413154564 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.411998551 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.411995408 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.410928792 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.412526761 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.410215433 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.412334209 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.411193421 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.412956354 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.41215737 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.413895789 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.412126011 seconds)
  done (took 88.697771555 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.412348107 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.411379827 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.412202697 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.4108725 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.41353017 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.411738043 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.411492551 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.415315034 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.412670704 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.412294049 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.414496425 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.413451319 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.413434837 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.413897745 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.413083605 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.413683262 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.414935238 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.412044925 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.412696964 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.413644989 seconds)
  done (took 29.518565944 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.414522056 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.413364158 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.412279593 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.412530671 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.41436177 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.41239071 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.414285503 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.414330621 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.413881123 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.413977923 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.414380348 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.413497135 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.41451158 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.416013516 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.414252678 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.414787384 seconds)
  done (took 23.884352333 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.414878735 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.414447047 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.415615002 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.415131561 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.414890329 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.414558303 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.417938342 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.415838425 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.414440272 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.416632939 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.415951009 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.415425523 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.415682609 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.415950939 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.416681898 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.416977746 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.415747352 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.416430749 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.416978654 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.416240222 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.416526152 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.413894322 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.415938508 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.415716203 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.417913479 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.416269695 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.415407923 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.416147473 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.418225391 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.416626514 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.41916699 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.416771015 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.414390825 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.41654459 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.417546463 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.416961403 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.418195778 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.416459104 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.416701454 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.417042978 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.417086768 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.417061835 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.417283371 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.41818153 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.416574063 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.41877155 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.417669803 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.41731459 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.416468673 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.416753067 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.418621041 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.418472908 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.418302635 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.417691594 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.420103562 seconds)
  done (took 79.178671535 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.416442901 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.417426755 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.418025714 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.418325194 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.418310387 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.418523193 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.418347892 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.419629409 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.418465295 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.419401518 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.418929251 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.420757696 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.41916734 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.4196908 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.417356215 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.41895586 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.418792851 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.419464165 seconds)
  done (took 26.800494812 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.418622927 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.418942241 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.41901355 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.420505359 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.419319244 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.419741924 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.419315333 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.420370216 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.421030845 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.420365677 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.420519048 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.421572045 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.421238972 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.420329568 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.420990337 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.419642051 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.419259251 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.421118147 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.419987416 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.419471708 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.421360915 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.420651118 seconds)
  done (took 32.510085047 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.413971428 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.411095713 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.411880729 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.436800937 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.427967342 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.412399999 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.412380723 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.410911332 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.44274017 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.466927393 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.460152301 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.430337335 seconds)
  done (took 18.405155991 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421823194 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420098184 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.420693651 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422221988 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422099835 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421761106 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420546007 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421444515 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421570299 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423782381 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421323689 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422005969 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425483296 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425621163 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42868517 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422886597 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421103061 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422025734 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423164286 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42322421 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42215075 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421703346 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420295276 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422384229 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421319569 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422498909 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420224666 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422248248 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421480483 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42393254 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422915023 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424547842 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427497868 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424935531 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424359271 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424285309 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423141938 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424951595 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425300662 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425232916 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.424944262 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424730407 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424475067 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425281944 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424464313 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424138014 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423727906 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424807093 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424462077 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.43140458 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424366814 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424064471 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424456839 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426460376 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426217258 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426029804 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423694522 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424768611 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424894115 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425991182 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425441951 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427941989 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424646948 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42738284 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425551602 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42573263 seconds)
  done (took 95.245011187 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426073944 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.427059126 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425714052 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427102706 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425865398 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426112706 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426193023 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426245334 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426136732 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425667678 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426697138 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427275074 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427174992 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427753069 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427269837 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426725773 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426970916 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428625037 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426551659 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426953735 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426429786 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426830674 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427370618 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42797642 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.4299435 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428014694 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428520833 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429314929 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428317875 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428331355 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427913424 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429536535 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427145519 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.429762612 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428549748 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428478161 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428211088 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.429075094 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428807602 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.430021094 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428941488 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429546662 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428994358 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430294872 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.429766244 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42993519 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430465285 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42997472 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.430385526 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429430097 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.430871691 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430446777 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.428282256 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.430206872 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429565869 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.430357031 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.429181672 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.429241177 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429749202 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429437919 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.429923735 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.430713291 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.430200517 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428991494 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.430970796 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.43088133 seconds)
  done (took 95.553633185 seconds)
done (took 1927.065787535 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.650545576 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.609309675 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.420722356 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.412806056 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.418234749 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.402906682 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.414848215 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.419150508 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.420968198 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.420339625 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.417469149 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.682259315 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.440502664 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.416804889 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.421075264 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.577713758 seconds)
  done (took 28.819918023 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.459701544 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.437076042 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.572592855 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.425962967 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.459959678 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.690655704 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.497012085 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.427235754 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.632756302 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.452673905 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.401833502 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.457895659 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.427372503 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.409162226 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.453749391 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.690175685 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.781506573 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.408166709 seconds)
  done (took 31.36127192 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.014738816 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.421986553 seconds)
  done (took 5.713501416 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.454947867 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.426491316 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.432313285 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.426105583 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.400804879 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.397197926 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.433079095 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.399125964 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.412570411 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.58411101 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.430402148 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.45201139 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.427821931 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.428554777 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.436108041 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.489165487 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.656324103 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.437489781 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.435421501 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.445804107 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.425888516 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.581557962 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.483542007 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.4377366 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.584466991 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.401424581 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.438510792 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.442556697 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.603013344 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.439292595 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.428862079 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.42866303 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.431721241 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.402072428 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.0714579 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.416105707 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.463733412 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.443729332 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.436367013 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.63203987 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.430826015 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.44303909 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.402570536 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.068295137 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.588482376 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.603782716 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.414613059 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.429127475 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.430595539 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.509341795 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.431118789 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.435482403 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.528879196 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.365819913 seconds)
  done (took 91.368177897 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.406302017 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.400425711 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.666459541 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.424639684 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.400398333 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.403619273 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.402766511 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.80030603 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.411336246 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.402061952 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.838240253 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.169978459 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.405566168 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.482379778 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.446596037 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.464289139 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.403584353 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.419864216 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.421653689 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.40244552 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.094244387 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.404296524 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.421947372 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.48049085 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.476168443 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.094259613 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.403609076 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.403108384 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.404847921 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.402443425 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.137705011 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.416921314 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.469808486 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.40779676 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.798015237 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.937270585 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.897006386 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.411167999 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.411481656 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.405645159 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.431414637 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.094387492 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.91806032 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.404559547 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.415925517 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.096072762 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.405212143 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.406900905 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.411962722 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.767005497 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.404440886 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.406968302 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.403486645 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.40690349 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.403622974 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.468265832 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.465258745 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.099410407 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.415111586 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.405353641 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.442180392 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.405755928 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.418286082 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.40632283 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.40877363 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.920767368 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.766379161 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.414803657 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.921293553 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.129609848 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.405318511 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.204928923 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.40586907 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.417862285 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.442820418 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.405308385 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.406481578 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093040882 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.426301418 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.4054686 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.902291765 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.406780359 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.822810289 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.428686707 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.407368493 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.121328278 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.417189364 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.454794147 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.405107172 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.407032487 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.4278667 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.409597896 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.805900527 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.474254582 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.408163077 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.408651757 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.430320783 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.408440557 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.407476188 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.411118061 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.204205926 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.409838989 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.407664759 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.429365425 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.408796677 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.408749604 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.410191967 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.406308861 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.795938715 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.409616194 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.410313211 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.408695338 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.409054671 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.415504863 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.487710902 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.41069657 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.854220778 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.411939955 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.409370214 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.426756154 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.408516823 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.454509194 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.409370423 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.431606212 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.409355548 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.814007493 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.429078307 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.408767344 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.409933973 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.421676318 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.408489166 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.430146529 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.46738213 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.410826963 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.355589492 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.45291842 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.412991554 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.409560392 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.414373295 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.416257612 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.411375567 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.412093745 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.813702007 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.810779918 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.753159881 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.417382546 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.411141668 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.375149801 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.437803998 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.680782661 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.434415368 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.412221763 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.808780572 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.736841676 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.411445897 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.410283738 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.413030107 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.781361234 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.412902786 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.835270462 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.164274312 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.412461389 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.429273234 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.362177411 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.34014514 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.413788793 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.415970704 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.820722034 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.431417291 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.410251262 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.409871045 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.413201078 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.412432615 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.413002869 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.415694901 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.413391745 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.413529961 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.758972841 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.692977717 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.43304173 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.416243853 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103317538 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.445125459 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.419341803 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.42238416 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.416815574 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.413489174 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.475843332 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.41828259 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.457294046 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.415074222 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.416734978 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.13648195 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.414707764 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.415954291 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.695867191 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.310477611 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.414809662 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.41444125 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.414864348 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.473944347 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.132898395 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.482680165 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.862685891 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.418956838 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.487126889 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.415325859 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.429422694 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.134855556 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.432175208 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.415144692 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.303258745 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.415326139 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.853499317 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.415010875 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.417639701 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.236595729 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.415737225 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.420691626 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.415451504 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.435467457 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.815268059 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.4165976 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.463670066 seconds)
  done (took 523.399963025 seconds)
done (took 681.937658919 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.414916659 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.423188382 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.422459519 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.416631333 seconds)
  done (took 10.972297245 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.455946458 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.445544995 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.454165226 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.444300424 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.454360223 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.44578916 seconds)
  done (took 9.996053478 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.417192438 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.426690364 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.422942541 seconds)
  done (took 8.560593425 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.735138805 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.437365045 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.92305928 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.432566669 seconds)
  done (took 9.823979432 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.455965524 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.45546574 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.456828763 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.455684553 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.45669348 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.457623976 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.456283861 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.455317188 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.456383525 seconds)
  done (took 14.39889032 seconds)
done (took 55.04698321 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.485983518 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.669204932 seconds)
    (3/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.665939223 seconds)
    (4/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.395032776 seconds)
    (5/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.780041791 seconds)
    (6/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.394665481 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.568074404 seconds)
    (8/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.394095925 seconds)
    (9/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.481422603 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.772999346 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.485666229 seconds)
    (12/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.870603867 seconds)
    (13/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.411958672 seconds)
    (14/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.401054212 seconds)
    (15/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.634008347 seconds)
    (16/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.999759327 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.655681145 seconds)
    (18/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.857415318 seconds)
    (19/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.551083067 seconds)
    (20/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.501577819 seconds)
    (21/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.578970761 seconds)
    (22/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.395655342 seconds)
    (23/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.56944043 seconds)
    (24/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.487077861 seconds)
    (25/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.618822407 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.580228882 seconds)
    (27/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.692560765 seconds)
    (28/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.604588055 seconds)
    (29/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.399292885 seconds)
    (30/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.402877978 seconds)
    (31/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.42178527 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.670611745 seconds)
    (33/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.772147491 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.582048946 seconds)
    (35/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.665384264 seconds)
    (36/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.39775945 seconds)
    (37/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.487237029 seconds)
    (38/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.416580139 seconds)
    (39/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.558996853 seconds)
    (40/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.419226216 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.600461763 seconds)
    (42/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.573213186 seconds)
    (43/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.577381314 seconds)
    (44/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.742090946 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.669791319 seconds)
    (46/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.575453135 seconds)
    (47/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.725181813 seconds)
    (48/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.413694856 seconds)
    (49/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.486128928 seconds)
    (50/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.489599481 seconds)
    (51/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.694703495 seconds)
    (52/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.62274225 seconds)
    (53/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.455717728 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.618636001 seconds)
    (55/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.928626957 seconds)
    (56/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.670835725 seconds)
    (57/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.74504635 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.607008405 seconds)
    (59/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.785839806 seconds)
    (60/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.61194346 seconds)
    (61/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.6263374 seconds)
    (62/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.82595182 seconds)
    (63/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.834191345 seconds)
    (64/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.498583933 seconds)
    (65/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.400665895 seconds)
    (66/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.68206348 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.668393795 seconds)
    (68/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.39852463 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.693171387 seconds)
    (70/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.092116532 seconds)
    (71/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.416914399 seconds)
    (72/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.571299046 seconds)
    (73/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.485338603 seconds)
    (74/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.856130098 seconds)
    (75/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.600253356 seconds)
    (76/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.422930388 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.632243457 seconds)
    (78/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.847831907 seconds)
    (79/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.746461194 seconds)
    (80/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.402043095 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.629706752 seconds)
    (82/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.741403778 seconds)
    (83/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.670496646 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.610543841 seconds)
    (85/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.632946341 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.583529512 seconds)
    (87/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.835611497 seconds)
    (88/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.415560247 seconds)
    (89/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.594278784 seconds)
    (90/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.746582788 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.612274578 seconds)
    (92/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.693273774 seconds)
    (93/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.586328122 seconds)
    (94/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.484216883 seconds)
    (95/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.918709775 seconds)
    (96/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.400033063 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.638698817 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.487130451 seconds)
    (99/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.688814339 seconds)
    (100/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.691767997 seconds)
    (101/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.921456144 seconds)
    (102/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.629524117 seconds)
    (103/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.49532472 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.582650001 seconds)
    (105/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.402238511 seconds)
    (106/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.660005089 seconds)
    (107/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.728597052 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.779443601 seconds)
    (109/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.403608448 seconds)
    (110/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.425743176 seconds)
    (111/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.488772979 seconds)
    (112/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.437636588 seconds)
    (113/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.786315355 seconds)
    (114/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.745831366 seconds)
    (115/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.590732173 seconds)
    (116/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.424045613 seconds)
    (117/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.68363917 seconds)
    (118/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.4050374 seconds)
    (119/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.442427141 seconds)
    (120/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.501305299 seconds)
    (121/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.751735818 seconds)
    (122/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.616619684 seconds)
    (123/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.403507527 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.495281488 seconds)
    (125/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.403376435 seconds)
    (126/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.56372385 seconds)
    (127/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.43217025 seconds)
    (128/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.594967628 seconds)
    (129/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.402741997 seconds)
    (130/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.406880093 seconds)
    (131/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.622888986 seconds)
    (132/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.627459609 seconds)
    (133/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.780343715 seconds)
    (134/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.719128459 seconds)
    (135/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.099252565 seconds)
    (136/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.697370036 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.64802256 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.594895342 seconds)
    (139/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.408041972 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.628430334 seconds)
    (141/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.657941628 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.612039143 seconds)
    (143/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.846776535 seconds)
    (144/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.638864411 seconds)
    (145/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.503845984 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.775815765 seconds)
    (147/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.558816174 seconds)
    (148/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.607088932 seconds)
    (149/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.407050505 seconds)
    (150/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.615001461 seconds)
    (151/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.406301038 seconds)
    (152/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.651506941 seconds)
    (153/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.70289092 seconds)
    (154/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.430380707 seconds)
    (155/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.417087606 seconds)
    (156/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.693929235 seconds)
    (157/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.746898401 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.607813815 seconds)
    (159/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.406485978 seconds)
    (160/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.58946644 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.449169199 seconds)
    (162/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.933041695 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.615945156 seconds)
    (164/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.790388568 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.553474293 seconds)
    (166/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.561258174 seconds)
    (167/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.93207132 seconds)
    (168/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.407777693 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.509659294 seconds)
    (170/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.586705125 seconds)
    (171/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.56930822 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.619889093 seconds)
    (173/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.419802965 seconds)
    (174/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.408191921 seconds)
    (175/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.506456024 seconds)
    (176/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.652350624 seconds)
    (177/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.719417393 seconds)
    (178/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.584026572 seconds)
    (179/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.498169774 seconds)
    (180/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.83062476 seconds)
    (181/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.526121652 seconds)
    (182/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.495772961 seconds)
    (183/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.426015627 seconds)
    (184/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.431662364 seconds)
    (185/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.849531704 seconds)
    (186/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.603101973 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.717241626 seconds)
    (188/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.430220631 seconds)
    (189/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.607899161 seconds)
    (190/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.68531096 seconds)
    (191/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.429985894 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.685244961 seconds)
  done (took 356.305759282 seconds)
done (took 357.601606191 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.490081595 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.614452019 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.460827456 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.461398688 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.462469076 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.446374641 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.490273519 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.466513235 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.483542216 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.483307479 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.447108532 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.469237463 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.486118312 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.471048657 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.504683103 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.462806199 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.460934523 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.471655718 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.485050228 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.488592578 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.46447352 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.46785314 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.49699672 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.463255209 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.478909574 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.479113231 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.477686932 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.432640282 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.472672049 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.486720134 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.442139675 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.477429777 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.487568357 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.474681522 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.466699711 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.472851611 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.465310219 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.615671937 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.493952967 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.47400909 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.475736125 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.487940052 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.479289231 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.475122919 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.475396907 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.500884924 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.484107791 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.487446553 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.446624532 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.442111598 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.492263647 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.485699334 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.473246423 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.444093135 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.440220855 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.487876077 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.47577782 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.495012041 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.470866582 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.47386389 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.506126652 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.492977983 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.484001423 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.481185841 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.473982481 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.489081677 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.476589865 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.491533735 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.473968163 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.475367992 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.474586329 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.47396991 seconds)
done (took 115.795314058 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.643786546 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.438057242 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.677823556 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.474455237 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.695214874 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.644635257 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.473185382 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.475944602 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.473012874 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.332337723 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.474724125 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.473128881 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.438160327 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.4756857 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.643377905 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.475115307 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.474680545 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.232998135 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.474629001 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.658696961 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.441236208 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.474059515 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.476440964 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.340355921 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.438205724 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.435676911 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.6561099 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.476202107 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.239886022 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.44626918 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.438301058 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.235377697 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.658427304 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.494150967 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.486543156 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.48468894 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.696754245 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.479661345 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.646755918 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.641841885 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.679308451 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.516025746 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.445102481 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.441698627 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.479592202 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.478998481 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.476875237 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.506004918 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.440363192 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.477213758 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.234094364 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.485130267 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.487941867 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.480516412 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.478848951 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.497015088 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.477964971 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.478533199 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.657796009 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.479840768 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.649792547 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.337307069 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.337636302 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.477854552 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.440550436 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.478300418 seconds)
  done (took 118.569544846 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.590390859 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.602914938 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.643704692 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.469779711 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.559288719 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.646783854 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.468748925 seconds)
  done (took 12.295297747 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.482046914 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.479946577 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.562619031 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.562209273 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.47985711 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.700231852 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.483002902 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.487899125 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.478612119 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.56271206 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.480496577 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.479855923 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.487128286 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.444033071 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.563008396 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.489696141 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.642800038 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.471988162 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.479497358 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.681165601 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.479466139 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.490583335 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.564516619 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.491165741 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.480880914 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.484063651 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.326063252 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.480765815 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.480896418 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.481298634 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.479860393 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.590192859 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.48105873 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.44581598 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.479598767 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.643847797 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.481868679 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.480527237 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.48137553 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.449581193 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.480849834 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.48088252 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.483766616 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.479666234 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.481241644 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.503872315 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.479964945 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.480690387 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.48353146 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.481930977 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.565343959 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.481118095 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.48218499 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.481467511 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.56775041 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.489215283 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.483656825 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.482050057 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.481427352 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.483051092 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.687538688 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.563771971 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.482308889 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.564809953 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.482534965 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.483303778 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.484555264 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.483930254 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.623520561 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.481102869 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.566293381 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.481420787 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.717892199 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.506943726 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.483129873 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.480213789 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.478760812 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.482085885 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.445491078 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.487929017 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.482142806 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.478003034 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.488722973 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.482313568 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.483725968 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.692670067 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.645193498 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.483067784 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.498762238 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.489228693 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.483019733 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.569147795 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.484128254 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.484183289 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.56818182 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.649985449 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.570243325 seconds)
  done (took 152.922878046 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.497252898 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.495459933 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.4827308 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.510184641 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.477193363 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.481337746 seconds)
  done (took 10.264754338 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.479919409 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.488697341 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.485884623 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.485056445 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.48816962 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.494965246 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.495887431 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.481017035 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.491574871 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.486639048 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.487217753 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.486401378 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.488094401 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.487318883 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.485157505 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.485064337 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.486425125 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.485363537 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.486279924 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.489137061 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.451816393 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.488343525 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.48816515 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.479064831 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.490569786 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.48785268 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.510586716 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.485806749 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.488957918 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.493554872 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.490493659 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.489448413 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.479306482 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.485775251 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.492176414 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.479721549 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.491147582 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.488005702 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.48677447 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.488803639 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.488253289 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.488280668 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.487902826 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.490009239 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.479907955 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.484484375 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.493712993 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.515040356 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.488162357 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.490383938 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.491503773 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.488737639 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.490782662 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.49130284 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.482534545 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.485839086 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.494477405 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.490043601 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.491221684 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.482331936 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.49311571 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.492233964 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.483393384 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.493173049 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.489568611 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.492449982 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.488435296 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.494845329 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.490298382 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.489669183 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.492186891 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.49031682 seconds)
  done (took 109.489964544 seconds)
done (took 404.852858045 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.96914489 seconds)
  done (took 4.292836541 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.584818992 seconds)
  done (took 3.911652522 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.259493125 seconds)
  done (took 26.588940326 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.503858905 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.470236194 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.484927029 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.457393499 seconds)
  done (took 11.241190168 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.824591801 seconds)
  done (took 4.149787973 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.476146723 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.466464346 seconds)
  done (took 6.268971494 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.79132507 seconds)
  done (took 4.117324766 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.289255847 seconds)
  done (took 4.619365214 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.46676201 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.468698219 seconds)
  done (took 6.267343145 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.438704182 seconds)
  done (took 3.764171617 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 22.328895875 seconds)
  done (took 23.655709012 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.482096432 seconds)
  done (took 3.811805467 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.491036884 seconds)
  done (took 3.816189754 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.676927352 seconds)
  done (took 7.00255235 seconds)
done (took 114.834269082 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.453500826 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.45268948 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.456640681 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.455399322 seconds)
  done (took 11.144474448 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.610845415 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.609607828 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.614163086 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.600166334 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.60247368 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.615369454 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.526225297 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.526355551 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.587980776 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.586826788 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.615932096 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.601372842 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.612800343 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.524398948 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.58507042 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.616980413 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.587266369 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.613759193 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.526100282 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.601305724 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.49422011 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.597503146 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.587112649 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.494702085 seconds)
  done (took 39.264887387 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.053198734 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.61452668 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.696627414 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.578803003 seconds)
  done (took 8.271342396 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.639811459 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.662253 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.682377487 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.707124629 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.742209188 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.66986549 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.529477526 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.524114135 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.508284748 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.661864612 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.738176621 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.65451319 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.878921823 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.495176796 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.881537101 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.495138523 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.494887094 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.660681082 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.709627251 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.737892647 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.495554568 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.65985039 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.667324595 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.657739577 seconds)
  done (took 40.882904803 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.510447313 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.517934089 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.496742219 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.518982477 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.496720358 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.497441958 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.497152885 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.511257752 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.495556104 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.495293501 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.497535895 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.520330344 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.496766523 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.497358987 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.511545568 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.497602174 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.498859178 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.511102005 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.515042869 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.497198002 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.496888675 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.51115718 seconds)
  done (took 34.418747525 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.460061786 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.458272941 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.89866791 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.801929491 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.458843335 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.45877049 seconds)
  done (took 14.868048864 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.587766783 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.78424065 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.488686725 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.937154298 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.061449505 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.490163309 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.492902415 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.832790538 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.211369616 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.188257949 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.577171022 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.586829372 seconds)
  done (took 22.571454443 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628640346 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.469694994 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.471357706 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516442209 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471090283 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.471930334 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.512660304 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.319905695 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.498964918 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.836169529 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481391034 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630325755 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.808503581 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476988799 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.470830544 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.454492642 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.793592048 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125407428 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474929599 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474460544 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534789235 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.486954521 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.484262978 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.759394683 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.481847098 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473042208 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.822769501 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.472220944 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89012255 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844078496 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849835933 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474940354 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.832903681 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281658023 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649310921 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759612308 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485953486 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.475491611 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.448981047 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.481345288 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483997721 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.476904779 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845353937 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475571858 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47289128 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483244133 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337581476 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.507092906 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.475645052 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.475043509 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855292143 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643444743 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.502675445 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.474993014 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.564377914 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474460055 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.502793197 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.691529279 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203709005 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474262824 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486779779 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.474519909 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.466760334 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475716151 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.306971718 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.506460353 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.503053775 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.503296055 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474712602 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48804614 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528068619 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475515217 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.528064637 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47736259 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478212628 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486021093 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478635656 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183837344 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480862615 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.479645282 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790632384 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476214049 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476462545 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.477438717 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.477504367 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.422972711 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5072409 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.44624306 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584645994 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.32893289 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.766948855 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533943597 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537532671 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.784005005 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.446772107 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477536494 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.486266865 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480273784 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530135222 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335834466 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477157536 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.506699281 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817277253 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.774347003 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492254497 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.462372206 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089110424 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489472369 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.537314487 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.493207411 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.772911556 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.296194928 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866440907 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484261022 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54209198 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.478497021 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.479395948 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486336635 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.512047727 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.493493831 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.876181392 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.448317624 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501632296 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631070124 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481573949 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.479759612 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492007399 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481471073 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.479690749 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.759066778 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487332573 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.864100177 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.485411797 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481057612 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.493754129 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497294384 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.482347721 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.791236651 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490046814 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.840345829 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479190265 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481415828 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483960704 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.787075577 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.482257765 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.509462202 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911754211 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481288229 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.509072836 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870113999 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544884304 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.687545742 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547384622 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.484318781 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.827055452 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.509827402 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.511219968 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492082478 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.482732965 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486721391 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.512454621 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47803551 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296152535 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486355213 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.492506415 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.483475658 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.528038517 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634510715 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.512442539 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.771454945 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.50252347 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482034412 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.512341339 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.484299784 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790110879 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857475242 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.497103019 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.732144989 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.090858481 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.294632229 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.530257583 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.483363283 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.482644685 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.482728634 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485991061 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484542134 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.485157994 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774210603 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880354338 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.483415942 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.299372218 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487704616 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.484734686 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.535786779 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864293427 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.520924763 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484397562 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.491736554 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488243652 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498990898 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.862966652 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.789322511 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.53203232 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48568348 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.089104488 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.514244724 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.487070597 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.485811219 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541730761 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.50497441 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489154522 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916843196 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481645187 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868579448 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503137305 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.53567182 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.486324623 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502788238 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506668551 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.495765767 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537905833 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.776519346 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.496541355 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511158856 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208412606 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50266881 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.239097863 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490950211 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.522130921 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.493667875 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.350386247 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4899563 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488748325 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.857847356 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345881763 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489345049 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099323873 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.487881874 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.480016768 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870722388 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805331669 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489146211 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.526838783 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874261175 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.78866293 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544451009 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.503647426 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495767095 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.45883677 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181789179 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507779585 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.740527758 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346805275 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503706163 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.492254357 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.530026409 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.494789876 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030923206 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.489804604 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490614833 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.502788727 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.512809416 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491577595 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.500099349 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491154637 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.321037403 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.501449451 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.11054199 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490465652 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.781676427 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.876266389 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.850785215 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.507500011 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.501199349 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.828073738 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876731462 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491476744 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.501224423 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.2466945 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.439306562 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.526670536 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500530899 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.495828206 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501705559 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918812651 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.493743444 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.501554143 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491937977 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.492536586 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492984967 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.492023462 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.502764772 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49269303 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147124575 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.486672293 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511605631 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493892485 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500298187 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.83082276 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.538806227 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.309087979 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.815317716 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49529357 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555670801 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.521680306 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49229724 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.463007133 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.493717463 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.494160536 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483548153 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.796111293 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.507981985 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.463498605 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.538700626 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.792395318 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.494006745 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.509870563 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8262249 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.501570067 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.498992016 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508430716 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.556635379 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.493382224 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518411943 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.486706724 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595262498 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.646579359 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785341977 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.884351355 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.878486992 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036067366 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495183501 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.515889206 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.538217046 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.657626644 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495488078 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.503701274 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.494103196 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309943185 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515824812 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.313741503 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883887888 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.498221946 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497935456 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496010142 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823539013 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494879621 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860229154 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496199202 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.485659804 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.568470893 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496040663 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498049578 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799761408 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.851239183 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497075222 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503911705 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498035818 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.49869952 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888387483 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.797220233 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156611535 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209888073 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497892644 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.49920559 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.36684644 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.857965248 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498188283 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497807996 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498256727 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.506604227 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.512278482 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.527426986 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497572352 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.808352724 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877289354 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316621827 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.873599289 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.523159265 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.48919035 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500606048 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.837558114 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431789476 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.789689736 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32581734 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.438059197 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837640107 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652297894 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790575813 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.507078589 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.822706226 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.513507758 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.499069959 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49864693 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499452619 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.498095952 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.874487042 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317993999 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841413772 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.527140986 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.517727568 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.559781449 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.789480073 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.811816223 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.458267353 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.80784449 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890947305 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.502554759 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.499997311 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325165721 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890425382 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501582149 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.529087254 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839079397 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.509096862 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5646702 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.45777169 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.504039236 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217395802 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.801007447 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.552259613 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505008214 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.446996019 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323583956 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.512096755 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16415181 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50278803 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501389108 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.881992256 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.52988533 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.512605339 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.873667804 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.529001 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.503926163 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.803396438 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.323242641 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.503915826 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.515960305 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522600395 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.505038245 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503206658 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.57894052 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501785179 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504813706 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.049874149 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.505036988 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503973934 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.547580387 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.504303655 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507299916 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.509208259 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506219262 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.53672328 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.49484952 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.473552747 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.517840502 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.721965062 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207568015 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511261663 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.206343278 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.928878665 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.844597068 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.50708683 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.479247326 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.533878366 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504244918 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504335083 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505542011 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.523175398 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222590037 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.51024631 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.891315439 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.534445127 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.804929593 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805584425 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.505982849 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821198003 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517883035 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562388415 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.474728665 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507278125 seconds)
  done (took 1060.095949589 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.554651119 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.552704572 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.515915047 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.514898578 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.559576676 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.527365945 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.535526899 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.528170726 seconds)
  done (took 21.650846243 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.501447566 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.531501038 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.496456917 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.52970046 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.507644722 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.149365014 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.514557333 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.531009146 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.551425011 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.518306483 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.497812397 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.321871168 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.532982651 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.510194278 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.509777117 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.531854924 seconds)
  done (took 35.105912003 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.868841841 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.73463504 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.056909961 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.509068087 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.520097214 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.526852333 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.911516123 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.499354911 seconds)
  done (took 28.99100591 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.541959631 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.541750386 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.542282926 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.543442081 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.543181085 seconds)
  done (took 9.07596357 seconds)
done (took 1327.666678737 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.537635128 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.53715469 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.53650335 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.537630029 seconds)
  done (took 7.513404254 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.477176183 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.478784767 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.48277913 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.518538775 seconds)
  done (took 10.323044991 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.443891154 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.208187299 seconds)
  done (took 6.016327775 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.173447127 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.167909202 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.165177988 seconds)
  done (took 7.87199748 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.908672325 seconds)
  done (took 3.27677549 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.501406987 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.503145896 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.502421572 seconds)
  done (took 8.874589081 seconds)
done (took 45.242719554 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.515318114 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.277778899 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.661934804 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.507671401 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.668778341 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.663469356 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.792671401 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.505414131 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.515312317 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.504120182 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.50925631 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.670141643 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.778964839 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.278273515 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.780496738 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.278708417 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.671962615 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.512945257 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.503463604 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.506333941 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.796356575 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.523331982 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.507276309 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.503928258 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.705433421 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.652946858 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.508175516 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.278902436 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.50498363 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.504171725 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.786174764 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.504345629 seconds)
  done (took 87.248572255 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.505639789 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.50543683 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.526173545 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.50970064 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.51857167 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.507027326 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.508451669 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.505812017 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.50842904 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.515535181 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.503985458 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.503918131 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.525324694 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.505425026 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.505875922 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.503849197 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.506139643 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.505687071 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.504696791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.50583283 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.508817567 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.506397288 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.507316607 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.50543641 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.506583693 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.508268405 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.518418928 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.506539973 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.508719719 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.511372641 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.508797523 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.508163712 seconds)
  done (took 81.657680144 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.506273109 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.508452157 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.508158964 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.526481754 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.518258363 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.507593668 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.530840619 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.51218699 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.517845041 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.525210084 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.508289008 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.51891054 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.511065688 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.512114006 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.510603408 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.516592857 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.519986236 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.509604748 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.509586449 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.508316735 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.51211687 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.507734049 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.525086675 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.508262329 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.525514103 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.507732303 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.510337104 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.510446755 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.534644455 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.508950265 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.509626538 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.522559468 seconds)
  done (took 81.8435234 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.837614755 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.546562171 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.550210261 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.520242763 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.552708344 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.54621527 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.518845868 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.8378592 seconds)
  done (took 16.283725186 seconds)
done (took 268.40395382 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.518971721 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.519027804 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.59884368 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.518784826 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.58856884 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.576287319 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.840216064 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.576398298 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.820786987 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.524550782 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.566299387 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.519723284 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.538475039 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.759648416 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.532230251 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.532650905 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.52000174 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.511120933 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.529283787 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.860941535 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.578162069 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.512556939 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.528306428 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.542675503 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.491272459 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.629625806 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.625285869 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.776358572 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.724196491 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.622020091 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.513977721 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.544259574 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.521969937 seconds)
  done (took 71.938191654 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.538949331 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.54769835 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.55047035 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.549273969 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.551827576 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.551908661 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.540325135 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.549248337 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.549736737 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.550677429 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.551677556 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.554256586 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.55150435 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.549520578 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.551243353 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.523996592 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.540348881 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.550081403 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.544615206 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.523321785 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.552697448 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.55317223 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.552673354 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.552277633 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.552515862 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.553348998 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.551712267 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.552113365 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.552940078 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.551701721 seconds)
  done (took 47.821858563 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.551291614 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.514701416 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.516335283 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.583568274 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.542914151 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.548838648 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.943673005 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.553347182 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.547595473 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.55004774 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.531493914 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.556070084 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.612015466 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.535716797 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.546680342 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.552407118 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.554446694 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.545557015 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.515951993 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.567885553 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.955087166 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.552974579 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.943491348 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.568064416 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.548047136 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.544016177 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.557991139 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.516230171 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.570267211 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.533783311 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.517364464 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.937772953 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.516685956 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.518368572 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.518510629 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.556197964 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.554485944 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.518282876 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.570779008 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.544798609 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.941173944 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.548837251 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.517419499 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.556158433 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.546974514 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.555528814 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.533432499 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.536031642 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.854764003 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.560352333 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.534414048 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.553684655 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.556933671 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.548033657 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.857347781 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.550294769 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.54652753 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.524066294 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.561380327 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.937292445 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.558129145 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.548892007 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.532677515 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.554248484 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.536799547 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.555591043 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.570122151 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.550878782 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.527029729 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.556345398 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.519092687 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.571593288 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.556147957 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.519999576 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.538213693 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.524371081 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.556195379 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.520435105 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.536105604 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.935773816 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.554531201 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.533638181 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.959101014 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.554790243 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.560559901 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.560439774 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.558546307 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.732042811 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.934748826 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.521976643 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.525278878 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.529797469 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.947404834 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.56623213 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.55201915 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.532219077 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.560086377 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.560663405 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.539638665 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.521866083 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.573184621 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.573388209 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.5237907 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.578591733 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.944656091 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.564742067 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.526275443 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.553021512 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.691206472 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.559475475 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.570405427 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.55524037 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.962647275 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.555867055 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.559704485 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.537898919 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.523316967 seconds)
  done (took 226.044894402 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.522945061 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.527505628 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.525715526 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.522641881 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.523304535 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.553406407 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.523593818 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.526528758 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.550189657 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.523825691 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.523408599 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.554995856 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.553162452 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.523955525 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.541546449 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.52614037 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.524450491 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.54337713 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.525516128 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.525373373 seconds)
  done (took 48.02671506 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.563797393 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.301498745 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.272229311 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.563208632 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.561983964 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.554769779 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.629592563 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.566340734 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.563791666 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.970725118 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.785985076 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.565902759 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.5658802 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.561315094 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.272581101 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.53628307 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.970872902 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.300622167 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.564676626 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.301416681 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.538864544 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.563829031 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.559020739 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.302837952 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.981900491 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.944098617 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.633803642 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.306236079 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.564456905 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.564193184 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.303235418 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.565055515 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.55720284 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.285538964 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.564214835 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.587145056 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.563489323 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.63427123 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.635373116 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.974241417 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.310271508 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.957794772 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.58522016 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.807039988 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.566569114 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.536361573 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.314288151 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.564928054 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.537101959 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.565592664 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.577858189 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.286438869 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.557579005 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.284813034 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.568987369 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.56611361 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.305669178 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.286395497 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.275528683 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.786989113 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.555668496 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.946558847 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.565916867 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.317794952 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.568055268 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.569007763 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.56708601 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.790939546 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.306384003 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.947597527 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.974356725 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.975472928 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.567745801 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.648407384 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.56869683 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.976200256 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.646111981 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.041082459 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.976533259 seconds)
  done (took 144.742997629 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.934861899 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.70109104 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.098601296 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.320277251 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.2349539 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.770705339 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.70359038 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.89139869 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.546312559 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.723974606 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.449507721 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.681086261 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.473372836 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.658546942 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.689816003 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.751453799 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.11598088 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.531315819 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.380504672 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.428173443 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.540552677 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.739359104 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.440037381 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.052719553 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.556083284 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.433745729 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.536975197 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.274044067 seconds)
  done (took 61.050417795 seconds)
done (took 600.999309425 seconds)
SAVING RESULT...
DONE!
