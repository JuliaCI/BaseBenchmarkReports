cset: moving following pidspec: 789
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.985671432 seconds)
loading group "string"... done (took 0.520407658 seconds)
loading group "linalg"... done (took 9.536310798 seconds)
loading group "parallel"... done (took 0.173167551 seconds)
loading group "find"... done (took 3.560244847 seconds)
loading group "tuple"... done (took 2.079241501 seconds)
loading group "dates"... done (took 1.405643972 seconds)
loading group "micro"... done (took 0.192646914 seconds)
loading group "io"... done (took 0.522542985 seconds)
loading group "scalar"... done (took 58.68287392 seconds)
loading group "sparse"... done (took 14.06490595 seconds)
loading group "broadcast"... done (took 1.362757303 seconds)
loading group "union"... done (took 11.019470074 seconds)
loading group "simd"... done (took 3.833816996 seconds)
loading group "random"... done (took 14.248826405 seconds)
loading group "problem"... done (took 2.22221485 seconds)
loading group "array"... done (took 24.651620923 seconds)
loading group "misc"... done (took 1.171704866 seconds)
loading group "sort"... done (took 3.843825182 seconds)
loading group "collection"... done (took 23.044573685 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.696638658 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.149414531 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.186244424 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.226372572 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.27880829 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166223792 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161785029 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.155712608 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.666591681 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.215470486 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141825577 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.426943748 seconds)
done (took 6.22309932 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.360868096 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.061799549 seconds)
    (2/2) benchmarking "String"...
    done (took 0.158385016 seconds)
  done (took 0.925311033 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.094360812 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.16099233 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110312212 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.099333441 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095385245 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112490352 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095389225 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.173029685 seconds)
  done (took 1.543937745 seconds)
done (took 3.624223374 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.49815846 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.946202167 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.57917421 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.183494075 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.315126107 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.311164569 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.271537393 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.225059695 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092487739 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086678271 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.191178921 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.45214814 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.420106985 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.065584806 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.073207704 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.097656204 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.15488038 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.886941838 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080689381 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.113267895 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.557581589 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.217853751 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.120501985 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.108628269 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.189547427 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139033951 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.146600556 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.109447507 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.743592743 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.13446256 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.217811008 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.085220614 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.142851616 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.172024739 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.228770572 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.112888588 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.78967954 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.205105063 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103232821 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.105245227 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.752959996 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.130217257 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.211607006 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.111568378 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.072629487 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.175455343 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.106714479 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.097566317 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098208788 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.089295433 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.17713293 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.548261269 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109893584 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.198605982 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09580052 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.766608101 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.0977324 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.280321681 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128603923 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.099016921 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09423845 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.093326812 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.170766758 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.097070864 seconds)
  done (took 21.212152258 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.176452118 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.192449473 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.080316499 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.16471543 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.131562261 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101122845 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.092321936 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082684537 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.137506383 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.188311936 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.14621175 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.198649074 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.078552238 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090873427 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.173368555 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.234708548 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.134024236 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.108969304 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09323532 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.115717857 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.131897639 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098504775 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.115817591 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.099615251 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.186834234 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209486136 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113944587 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12620767 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094560698 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.102926008 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.148449254 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.153133579 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096290597 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091580151 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.182133147 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127821771 seconds)
  done (took 5.519530312 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.239434149 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104845455 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.255256551 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.203005983 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.135892141 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.203229265 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.177214295 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.307711477 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.238695927 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163734439 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.200866954 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112978473 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115119038 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080671641 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081452187 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099418019 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.835389891 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.173029824 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.151834741 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.1861361 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117294874 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083226575 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.734855528 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100798223 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.089610487 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097872292 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08230935 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.224317492 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097567994 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.497461514 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085259585 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.118830055 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114910772 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209239666 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129811619 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123428894 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114147407 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.087591237 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.219580576 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121929262 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080792606 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080849877 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133184465 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116277147 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.108781571 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110871431 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.13570357 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.088456709 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087696138 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131358254 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.124637288 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196729347 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.153421465 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.105124541 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.273932181 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.131106826 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102803296 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.112118308 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.829203421 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138671824 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089427364 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099127549 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081567565 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097049213 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.099234547 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.810158052 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111893628 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.500062124 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086605147 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.164280807 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099107575 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121866614 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086812157 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086891567 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.129070464 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.088790202 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098035301 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089882798 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081610029 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.109435425 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.115068962 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086196296 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099191874 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149965439 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.102159779 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.128553917 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111947057 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.107449558 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.092150476 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128788165 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085658588 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.091819218 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.187966082 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100050223 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.134514382 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.0874621 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117573052 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146234168 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.093859212 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.293797137 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.100330706 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128573752 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103631195 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115039839 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11891575 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08379215 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087255369 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097471823 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083462569 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14969201 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.10291183 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083824835 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.089990773 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112013686 seconds)
  done (took 28.65007757 seconds)
done (took 56.078504538 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.428189716 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.0850597 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082268004 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104582643 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084310442 seconds)
  done (took 1.556963703 seconds)
done (took 2.303504238 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.30647752 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.204178548 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090294583 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.193516229 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089887059 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.19952237 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.187261103 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.103237291 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.209918035 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.088374436 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.19608988 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087392887 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088415294 seconds)
  done (took 2.817152865 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.106388738 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108775495 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104369976 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122520399 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087732665 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104075386 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121953707 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111379387 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103683436 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115195306 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088948252 seconds)
  done (took 1.925755992 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101986992 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10629103 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093884565 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121188805 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088715681 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101446979 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117859122 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108806434 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101630103 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114977191 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087911598 seconds)
  done (took 1.894950258 seconds)
done (took 7.385158755 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.222889936 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.176495559 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.194528089 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.248821446 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.350553446 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.303716625 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.617564426 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.202961913 seconds)
  done (took 16.198508205 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.116621813 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091538317 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.197967703 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.098200127 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.113560461 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097156 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096886902 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.116967877 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095549861 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.098642013 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094261707 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.10964858 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099280921 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094602882 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.110251659 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098205365 seconds)
  done (took 2.546882184 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.138315983 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11754295 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.118107337 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.101761962 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09825614 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.120506106 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104509519 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.099572229 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.116238245 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097528464 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.104048567 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.118366588 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099599956 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.096408768 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.117741788 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.120515045 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097224793 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.119269916 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.120123725 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.118980353 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.102311894 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099292795 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.116147591 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101895709 seconds)
  done (took 3.482442635 seconds)
done (took 22.980604238 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148216683 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103555976 seconds)
  done (took 1.008685601 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.167445595 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.18451711 seconds)
  done (took 1.112846892 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115698302 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091109281 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142303222 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.106254923 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093036761 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.110923323 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119216976 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.110797609 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094647511 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095675923 seconds)
  done (took 1.845893182 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.097510515 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097616743 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123777123 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.171519786 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.120379834 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098460147 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.099930725 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.116193477 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.098083702 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093271986 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.116548689 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110828549 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097298546 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.132684261 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09681273 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.101248699 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.124809936 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100503353 seconds)
  done (took 2.762550881 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093699485 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093231898 seconds)
  done (took 0.953803622 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.096942775 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091746234 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094199968 seconds)
    (4/7) benchmarking "year"...
    done (took 0.114206283 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093619796 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094116577 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.112303387 seconds)
  done (took 1.463649253 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.545225619 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.243015609 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.385629276 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076280371 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.127639974 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.333122948 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.110790764 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076894485 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.097817466 seconds)
  done (took 2.799579332 seconds)
done (took 12.712083499 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093057015 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.442052931 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.64980847 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.13741496 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.095074171 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.153691821 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.345552252 seconds)
done (took 2.69223705 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.356040387 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.173369323 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08824062 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097539918 seconds)
  done (took 1.485634102 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083736347 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101562775 seconds)
  done (took 0.965134952 seconds)
done (took 3.229966884 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092595784 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.115134613 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.112952492 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.09448534 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.093295523 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.094034095 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.115440239 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.094045479 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09272925 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.093022374 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.116793483 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.093852786 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.09480619 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111792638 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.093496806 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092785053 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.217458309 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111085914 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.092845117 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093659326 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111424295 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095431898 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.09251784 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.093839656 seconds)
  done (took 3.319975466 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.11453754 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09505252 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.117447337 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100622572 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10043428 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.117908989 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099948743 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097234152 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.117444264 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097341568 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098747474 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.117162455 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098655632 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.099425423 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096752597 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.118549852 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09951468 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097007308 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115876468 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100023404 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.098092222 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115859985 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099835531 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098310546 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.118723687 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099518102 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097401423 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.116059731 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099962363 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099965226 seconds)
  done (took 3.922721038 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.099062388 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090708114 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.095695479 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.122604558 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.093313891 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095963041 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.110045069 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096135409 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.096088965 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094161625 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.116606029 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095644844 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.09503953 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.114855876 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.097888565 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098069804 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.12273544 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.096313155 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095383149 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.096467714 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.116777769 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.096558857 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095262044 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.113181991 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096613892 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.092579231 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09562913 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.115463147 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097184914 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.095032056 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.116692632 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.099711283 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097299314 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.106096452 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.116808569 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.095527581 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.10086974 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.112538124 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097278012 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.092270672 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.09093845 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.114979635 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.095187454 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101538471 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.115266194 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097317194 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.094460336 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096668159 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.11625794 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098100883 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.09257965 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.114188613 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098576642 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097406241 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.118212379 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.092907625 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095028984 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.091170672 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.115783508 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.096515626 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.091408482 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.110925279 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101923995 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097472381 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.129605797 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103674916 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09544447 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.096765587 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.115686778 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.101366312 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098544724 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.12508993 seconds)
  done (took 8.157513955 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.117115521 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102983138 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.116054702 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097075124 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096457518 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09735435 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.121390786 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097179117 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096541886 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121967325 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096778718 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096313155 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116714353 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09836593 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097059898 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.116333928 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104449526 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095785086 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.096587772 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116242017 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09683026 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100725798 seconds)
  done (took 3.081421108 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.248614157 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102438515 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.147011083 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.13078367 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.116296562 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.12976287 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101275169 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103286808 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118538468 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108101596 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105644161 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120338557 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116681528 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10621623 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126462101 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105827843 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121064488 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108912104 seconds)
  done (took 3.006303315 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.107363723 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094283638 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.157200926 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095055174 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094603302 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.114424537 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100973455 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117123553 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.117890969 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094935536 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.101799048 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114699572 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09884141 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098421804 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117450829 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.098969848 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098118623 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097461067 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124939421 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104614769 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.121804596 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107017799 seconds)
  done (took 3.169375868 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108617653 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094774412 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.133676775 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100722376 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098124489 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097003048 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.124379574 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.098881149 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.104299157 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.117471013 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098180152 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098381924 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.132728959 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099056382 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104714014 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118481896 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099148502 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.097715988 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118174874 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09910953 seconds)
  done (took 2.937375416 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.200582281 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129349828 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112266721 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119035807 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129907581 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111899635 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.138729793 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111901311 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112014524 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140379862 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11228467 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113245057 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.14044684 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121341966 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130275924 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123333631 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118071369 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.139020192 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110688797 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129531975 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12486518 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114030702 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.143100669 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115889598 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11512295 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135299747 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113774873 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.139238865 seconds)
  done (took 4.341410664 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093467333 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093471174 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091568139 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110963202 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093008895 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092925644 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091741904 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.112032822 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093340151 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092354551 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.112082479 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.095209035 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093463002 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.096786889 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.117535477 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09860828 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096165511 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.114698664 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097799658 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09455951 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095807295 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117224823 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.098485079 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095224679 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115305445 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093893993 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092956234 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092589428 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114231845 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095977847 seconds)
  done (took 3.789263286 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.106946002 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103494097 seconds)
  done (took 1.011258415 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.102155658 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108420701 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.095075149 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11411528 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100571867 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093166387 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120810195 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100710502 seconds)
  done (took 1.636008462 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.169373075 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.192894781 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.09876661 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.124712646 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.172106313 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.184458932 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131462667 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.118583515 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.093636907 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086412805 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.186933478 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.086107877 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.113856657 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092186164 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09401852 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.121025167 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097075892 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105940358 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.128488965 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101276985 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103607449 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.123871339 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101011727 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.108920695 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.112792765 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.103801328 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.103073093 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.129562006 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096413727 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.100930642 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.116997978 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.102095734 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.103369429 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102850299 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.11932069 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.179793464 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12887819 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096310432 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.099348178 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.126243847 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.133828052 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.099657086 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.122869536 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.098711296 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102397868 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.122959631 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100704077 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.096216984 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.105700941 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.091225846 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095090235 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108819006 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095342082 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.097356863 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.116009794 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103091951 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.098454699 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.108572745 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.092128894 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.091129326 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093425498 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.11002307 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097795187 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100497067 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.120717795 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.100788654 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097587829 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.120166608 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.101814833 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100428483 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.119340735 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117769026 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.100033531 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.124951015 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106387761 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100471157 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11627575 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106798498 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.097164102 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.118995928 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102803087 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125881301 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120576646 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096817898 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.094310107 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106470383 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.123684723 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102766839 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.091891574 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1303524 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.102938021 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09994134 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.113020238 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.099883023 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.094815199 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.123289282 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.09508332 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101062921 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.098161155 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.12624692 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107041615 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099885956 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.121809973 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104613163 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105103589 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.118935934 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.16299028 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.114658366 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.092446183 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100271619 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.123823917 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.092704945 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09859927 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.098082724 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.118739331 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.095747022 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103951767 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.120330734 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102485239 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103641391 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123884888 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.101792972 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.10280616 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.120278564 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.097061226 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.104520205 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.128901378 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.10330336 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102477417 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.120536767 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.102809583 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.100083049 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103544522 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.118226766 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105232027 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09693139 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.121855649 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100706103 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104960834 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.121942741 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.097115282 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.09782459 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.120285268 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.09816814 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101751836 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.119155865 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.092301891 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087399173 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.115955738 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.092884018 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096782768 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103724782 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.112358003 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097953867 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091882774 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124534062 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.093256202 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100548471 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118500474 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.102050268 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100787398 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.108039996 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094258286 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098351683 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.116343147 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.094075301 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095977499 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094898451 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.123238926 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089654767 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10031995 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.109599203 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.09488986 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10090096 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.116200391 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099568946 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091675066 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.155081872 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109454771 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100961163 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.115555965 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095487492 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099777563 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.096201549 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.122637523 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101069486 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101192197 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.114709629 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.095349765 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100871067 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.112099451 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099647308 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09481513 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117096804 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.090229351 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096753715 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08761631 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.122010278 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097101524 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099367455 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.122076627 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098478375 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093264373 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125870755 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092031117 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099365359 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.108349532 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.101902344 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.106431482 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.122700031 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102745677 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097915174 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113989496 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098575594 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102583995 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097605499 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.116873312 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096440826 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.089640519 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.110958942 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102558433 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.09833946 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.112894943 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095837886 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097341917 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098360622 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.11538255 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.089191649 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100252414 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.124566538 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091789675 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096089105 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.113741489 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.094216869 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10287181 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.109885971 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.092857129 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097356864 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.120792455 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09652659 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094983168 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.119607599 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102675556 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098760743 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097923765 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113508428 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103522522 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093364177 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.116762125 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.093839237 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.098162413 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.109502961 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09902635 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.097346876 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.113967915 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.0935832 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09929454 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10203141 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.132590324 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093656952 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101082198 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.122346843 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101070045 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092701034 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.123246818 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.092049346 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.088381979 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.112788993 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088972138 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098223385 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.11353448 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102245613 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092584608 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095681232 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.120911535 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097832273 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.09451586 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.123031777 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107305406 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.09092504 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.11072686 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094547358 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09564673 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.112798143 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.092779676 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097921042 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117956061 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100765468 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098738394 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.114569946 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097093143 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.102386484 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.114688048 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.104058484 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102969099 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103705437 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.114063877 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100872115 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.093084114 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121558056 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099764991 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096371054 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116461039 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096091898 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.09539153 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.116017616 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.093194323 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.089732849 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.113934111 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103208166 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.094892444 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101181791 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.1179877 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.09504386 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.093111491 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112813158 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102398915 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.096279492 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.12510732 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097536425 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.090437199 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.11225338 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10210188 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095333003 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.124368399 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.092772761 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098561207 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102888014 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.120853985 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096999207 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104418585 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.125573441 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101993905 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102183176 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.11087206 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.095066349 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10067195 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.117950962 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099953702 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098029784 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.091252177 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.119483072 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101840464 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097680229 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.116265344 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089262539 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096944171 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.123115307 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100190534 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.101241157 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.118879782 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09841908 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.09102638 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101006769 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.123284951 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096624857 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103974255 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118261267 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10027162 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093216603 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.125285205 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098141111 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090605726 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.11034371 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.094767079 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102670668 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.090098539 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.123084786 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101185354 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.094287409 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.116754791 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100520953 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.093711708 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.120353992 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101494121 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.095272101 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126384507 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.099667213 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094622228 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101921062 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.124025478 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090060265 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.095376164 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116546804 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104262211 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095341593 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.123890824 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097296032 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102367626 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.120604373 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102404014 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102253715 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102863639 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.112283413 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103309716 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101116839 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.121056735 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.094262476 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095199815 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.112813718 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.096398781 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102615354 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.115884639 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106139405 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103511627 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.115270594 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.096335994 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104173513 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094914094 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124424552 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092761726 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098271645 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.112460041 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097423283 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094975276 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.125202793 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.094143396 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.091710894 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123491961 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102459678 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102095105 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.120097116 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104708217 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.091238068 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.091108792 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.121245237 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.093620145 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107595386 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.121445192 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094663574 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096094692 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.121742786 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099128248 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104285747 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.111481495 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.094728876 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.098095365 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.120482011 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.096972457 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.09140925 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102771798 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.118708741 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099218273 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.096765518 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.113835006 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.097127994 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.106289424 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.117431414 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.095712171 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.095639606 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124097276 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.096800229 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.095339009 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.11326587 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104009385 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.099354743 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124681358 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.096035606 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096936699 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094890768 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.122030951 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104092496 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.096551104 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119923979 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.095460114 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103402046 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124258818 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.091696577 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.096081631 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.129353949 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103946947 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.099323454 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.122076767 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.097152089 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105222668 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.125328647 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.101772509 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.092239523 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.092423695 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.11739335 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.092075047 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100944889 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123947606 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097747417 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.095445518 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122949154 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103124426 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099036756 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099732095 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.114305109 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104436255 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094849352 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.121386666 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.092276888 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.09139137 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.120246157 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103938846 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096546774 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.118277262 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099876458 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099351949 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.09195918 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.116340143 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.100209042 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103129106 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.125214107 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097044044 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095587784 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.122285872 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108554936 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.09892487 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.117733198 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105480453 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105663436 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118245623 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.097344292 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100463753 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104389532 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.122263802 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103801887 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094985053 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.119145947 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10474223 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.106066281 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.128962908 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097080711 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091714037 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.123207707 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.096288082 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.092819694 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.12290285 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106037507 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105079214 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.118221877 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.095864076 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105493583 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.123785783 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099293353 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095366108 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.095560196 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.12410391 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096072902 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101861417 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.115259839 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105491348 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104453576 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.124034488 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.105962427 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.092868583 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12378257 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.100371004 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.106152466 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099565595 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.114563242 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.091780666 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.10123969 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.126940234 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.104504979 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101452077 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.122496024 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104759969 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097937175 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097490819 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.117575706 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104455043 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102596915 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.120388074 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.100034578 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096588679 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119482024 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100132146 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104221913 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.125410431 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09880593 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108523228 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.125313002 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.097518266 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094658406 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097456457 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.122553504 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098085797 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101835435 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.117931477 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.093247473 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103795951 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.127051352 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097712635 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105375551 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.126744818 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.097555353 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100444616 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.126721492 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104639633 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098003385 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098515042 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.122564189 seconds)
  done (took 64.130739252 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148405883 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10706117 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121364107 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100006782 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118354297 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124177662 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100393842 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100634166 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12132269 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111075298 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100068591 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119810347 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11605575 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121597447 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139559787 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109817177 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12099709 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102085118 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100994897 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101182979 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.136056757 seconds)
  done (took 3.270756428 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11898601 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112981477 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.133540725 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115069451 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106194091 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.133899709 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111460543 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134629271 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11447566 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107216777 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.135530573 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11015004 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.12948546 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108823615 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108179538 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.130747981 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116067762 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106738713 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.133954255 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111945031 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.130130514 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112649241 seconds)
  done (took 3.473584665 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.130209924 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102152236 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098351613 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.122551059 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103049068 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.10046047 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124221034 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099643467 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108578262 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.095009429 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.113332149 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095345924 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.0988368 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.122201783 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.095121384 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099872267 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.13076635 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.104752986 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105440573 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.100450344 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.112334955 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100644223 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.100195214 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.11173886 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106062579 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104336243 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.10019654 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.12548146 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091817472 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10249788 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.122867091 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.096101816 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.091034062 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110663933 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091798475 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103024973 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102218586 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.121949796 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101319448 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.091408203 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.120699706 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.105065246 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090888653 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.09987981 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.122036259 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094660501 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104071894 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.121069166 seconds)
  done (took 5.952667096 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129803308 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159394012 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104690059 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.129943131 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.138092491 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110624263 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102325512 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.133662807 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102843246 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.125870406 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.116296283 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.114881997 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.129478546 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10759797 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107150428 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.127325548 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106339221 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102465683 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130570655 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103222973 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109654936 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.128580317 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.114918315 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.134568578 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107569265 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103906928 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123160494 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10793272 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113707965 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.131053607 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107737444 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108859723 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.137436402 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104981297 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.1040295 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.12743939 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.116694309 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104318853 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.38228339 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103953233 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.105607564 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.130422102 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105171405 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.115269826 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.128074457 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.106005101 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104781062 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.125670939 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114355464 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.126362088 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111597711 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.116017546 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128195003 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105565449 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.1087111 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.137021475 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105456846 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102561366 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.128278114 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.113021146 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103115557 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.129065015 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115625039 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103884998 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.131999956 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.114887724 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.127406215 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107158668 seconds)
  done (took 9.196838649 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135240452 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108097964 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.139216586 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117260093 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107322726 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.130554661 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107860993 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.107085685 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130155169 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113457305 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12912934 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.228357181 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.129333905 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113002428 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10724171 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.131762356 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108401564 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130884591 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109320536 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10799872 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.129957447 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117634512 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108538733 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.139036955 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12065815 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104742929 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.130744 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108531259 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137770453 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108877183 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119768442 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.132124623 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108316707 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116231611 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.141724726 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108511983 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125407218 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10990406 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108674224 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.133962287 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106397259 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117756525 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.130670876 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106446776 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10870265 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130311124 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117304512 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.120411191 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.136739037 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114082663 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.130214185 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117180055 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1083239 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.130810769 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116621604 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145636537 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118139465 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116791249 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131354344 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.118112156 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13889385 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.125685745 seconds)
  done (took 8.454985931 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102391792 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101554604 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100545257 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.124174311 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102245265 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100227899 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100324629 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.123664119 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101290185 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.102679468 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124282075 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102166204 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100723632 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100841036 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123803872 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101115651 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102033646 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.122768894 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102906452 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101836623 seconds)
  done (took 3.010994764 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110940924 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118500963 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.125547669 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111157711 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103267741 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.130895067 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104617982 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103528529 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10418336 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127258222 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111533527 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.134082065 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105455729 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108994517 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.133570267 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109089082 seconds)
  done (took 2.712076585 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.122548475 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120502823 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.212809464 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106284325 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.127542895 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110701018 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103911538 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.128747447 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103707322 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.109800066 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.129475124 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107634148 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103271443 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.104295316 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.127994699 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106419049 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102411137 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.130336896 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103823957 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.220266767 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.10726392 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.107427628 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.128746469 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107469533 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106150649 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.132218839 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110187197 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103901272 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.128155333 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105383583 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106884333 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.133221061 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102793589 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108644402 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104436674 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.127818978 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104161151 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.104811163 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.128667619 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104914249 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105769526 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.128294876 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103738191 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106862751 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.124760838 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105041011 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102153214 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.131539214 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106704211 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106457043 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104008407 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.133478496 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108512612 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.112575768 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.133130128 seconds)
  done (took 7.332680504 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11459942 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106274687 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.13872644 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102825157 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104061348 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106163571 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.128466266 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106076897 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105500357 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.125496545 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105538351 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106025913 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.128318971 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107347939 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105338325 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.128441752 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102816357 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104877862 seconds)
  done (took 2.900765524 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109441221 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103601862 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108280669 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.127424723 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10391908 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104248103 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.125223326 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103539424 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103851614 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103869354 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126951759 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104287842 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10387557 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.128450692 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103997024 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103917125 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.126507079 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104694738 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103559398 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102897093 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.127951466 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103434941 seconds)
  done (took 3.311879255 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.116294188 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.216852087 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.111741794 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.224317631 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100734597 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.100246197 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.135256586 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101821607 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.142421044 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100358433 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.09964696 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.122868209 seconds)
  done (took 2.452768889 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13330096 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141849742 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12796718 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106190878 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113591819 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133336369 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109997926 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109482009 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142760822 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12101923 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132488286 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117911293 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116737052 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140351996 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114215083 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138003373 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110435552 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109726314 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128480234 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127883511 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109078536 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139759462 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109440803 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109124701 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131431798 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117486868 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139375824 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121184335 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110768625 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141924822 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114869984 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132213461 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118845281 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120266341 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127986317 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117481699 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109949038 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147059902 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113780879 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140809246 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105349151 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113825788 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139558459 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114940315 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14032818 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109397361 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114846378 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132529144 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109766263 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130001308 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136515824 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118887674 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136582871 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119457649 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117985394 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153820399 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121611554 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140078986 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113548657 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144669305 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117977293 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115160105 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139300117 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121747814 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138250611 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118935515 seconds)
  done (took 9.093885473 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144639064 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106888593 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132468242 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121205706 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141876771 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111889228 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109836523 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132949867 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110200955 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10646752 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.177575585 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110063996 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119612487 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141660472 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1097414 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132924026 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111313876 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119283464 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130187925 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132266889 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131166959 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119033921 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118675007 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140495729 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12136229 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1363151 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111854587 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111020193 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131754464 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111280631 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115597801 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133958864 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118932163 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107114739 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141378942 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109440942 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110102339 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139627392 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110168828 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135585608 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11906109 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125845682 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132625035 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110519431 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144330016 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110884213 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110139076 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130731499 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11032639 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107141767 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144582841 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122037167 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147567578 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118619484 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109509317 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133401043 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110007913 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110521596 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132687334 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114402746 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119010246 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13264522 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132721346 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133492883 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110801311 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119715433 seconds)
  done (took 9.042230161 seconds)
done (took 173.488142735 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.175802663 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.218258411 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.199135728 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.158388508 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.096747289 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.155761707 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.129360165 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.20059136 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.096543073 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095467867 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.09515819 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.122997135 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.165224642 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095404241 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.11906996 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.099348318 seconds)
  done (took 3.107454586 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198835551 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.348877675 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112243534 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.125253498 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103705436 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100763862 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.124278303 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102583436 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.101092814 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.132470896 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10090557 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097986972 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.131273467 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097542223 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.101418064 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123333491 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109592428 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100718045 seconds)
  done (took 3.207599724 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121242513 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.154090126 seconds)
  done (took 1.170923132 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.134419816 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.220237923 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299403647 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172720219 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122451535 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.143250339 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152393472 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13604698 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.194249982 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136154814 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11537829 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099313467 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149348461 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105741729 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.140494263 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100079067 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129808756 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.139155405 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114493679 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102885988 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147973217 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106274199 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.107844929 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.139673907 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18412076 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.138433455 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105919336 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.105471792 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126550031 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115279883 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.108057875 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.141829348 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.114371597 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.182603808 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104309564 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.180559413 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.109531805 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.125551929 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115216048 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.10277543 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.127943923 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105897754 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135576877 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099752071 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105171544 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.108974612 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.12811727 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.10524851 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.133810521 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108811253 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.109454142 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.131577766 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155115885 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.133616782 seconds)
  done (took 8.056909681 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.89690749 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.1486182 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101628217 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.038442877 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146099934 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114862163 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.87872997 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.15048003 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.260915162 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.903540387 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118064176 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108427545 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.267347894 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260748871 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.293856223 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.367015386 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.748295157 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115683147 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.13230181 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.166236153 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106216929 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14185498 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11742394 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.519208902 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102537271 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101558166 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130028476 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109169679 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18056542 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.102050407 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.105130897 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200766592 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.296811487 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.215630074 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101873499 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122787402 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10080402 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188085859 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.280985941 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.22841955 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.176135527 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121156538 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100125372 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106377005 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.139587933 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098124 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184012926 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193644806 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170962173 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.129165308 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10978086 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109026295 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128204711 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.158472526 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.123236971 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.363413182 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.367810529 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101007957 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129994463 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113811959 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274933774 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126838895 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.243994505 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125323688 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222672311 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.124220475 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.856360854 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167862547 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123548741 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106583037 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106834536 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130508146 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105017754 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.193152285 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.484037949 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131225556 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108055081 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100198775 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.237123799 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100998458 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125321663 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186089237 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104256554 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106976244 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131346172 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107975602 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.19312428 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250497427 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.1311708 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107384465 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129180254 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112547552 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.103327595 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.237991647 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.235485882 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.180612004 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.236494738 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106786205 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18589857 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189727339 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108674085 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.191699238 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10688545 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113408207 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129008933 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231703557 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.135786332 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.127103594 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107400879 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108327043 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.163076255 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10524362 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132669035 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169390255 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.558738371 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.188640259 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099187124 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129545803 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108610041 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186127719 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108697272 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271257888 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108716129 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.190797866 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.13068701 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.100479608 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108043279 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183801655 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10956959 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133816597 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10583811 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112160143 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.283067351 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228606794 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.134518363 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.259260622 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.180542302 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129545803 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172608681 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133449582 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170811456 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135913722 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106538338 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103122192 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.863186652 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114580004 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.1077343 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131127918 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186628132 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102693366 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127010774 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100607347 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.101436782 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.824422225 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129209238 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100318833 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10384924 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129533093 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107649164 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111223501 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.130016184 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.15873932 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.271388771 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110847615 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106015087 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125979637 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159395409 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.127013917 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101059848 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102271245 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125535447 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10885623 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107129755 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127444558 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172052884 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.179645889 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.235627869 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.659601127 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125695663 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103147893 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245109172 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10230428 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.355640965 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108191901 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.241092181 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.190205821 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099174134 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.367051145 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.190423307 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.211259058 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105092973 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194818559 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100388743 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108806015 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.181575255 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101329086 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133116928 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179642327 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.112427076 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108963018 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.284135084 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.125874666 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256819111 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.101396763 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191352475 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10511637 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107526383 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.332217246 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.126689504 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114613387 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.182989052 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107892421 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102868179 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.640695091 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126952736 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112797514 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107654612 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.262427855 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166006446 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132298039 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110448752 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111710714 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182309915 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.236152307 seconds)
  done (took 48.285537009 seconds)
done (took 64.722038887 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.263046788 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173759945 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.382667168 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.155397903 seconds)
  done (took 1.964855098 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.274805267 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.172559792 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.255136843 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099685372 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.262904521 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098762349 seconds)
  done (took 2.087940373 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.183524664 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172168961 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.15031248 seconds)
  done (took 1.432924606 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210881984 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211890772 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.351651911 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.237816554 seconds)
  done (took 2.023834665 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.288976482 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118005718 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126846997 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.239873241 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.257238508 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.212745699 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125126736 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.178763514 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131808451 seconds)
  done (took 2.64766574 seconds)
done (took 11.078892575 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.233946928 seconds)
    (2/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.192451219 seconds)
    (3/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.335759876 seconds)
    (4/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.248580004 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.226260406 seconds)
    (6/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.231756566 seconds)
    (7/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.296354586 seconds)
    (8/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.158034621 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112050352 seconds)
    (10/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.133441411 seconds)
    (11/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.360851055 seconds)
    (12/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.163373778 seconds)
    (13/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.277847972 seconds)
    (14/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.138818351 seconds)
    (15/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.112228936 seconds)
    (16/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.307999362 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.140160141 seconds)
    (18/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.389194324 seconds)
    (19/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.300018878 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.123774469 seconds)
    (21/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.271122466 seconds)
    (22/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.224933212 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131194407 seconds)
    (24/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.142740848 seconds)
    (25/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.221238608 seconds)
    (26/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118934957 seconds)
    (27/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.403981819 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.132443868 seconds)
    (29/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109119253 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133443715 seconds)
    (31/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.15456365 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.120157249 seconds)
    (33/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.10164428 seconds)
    (34/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.139095341 seconds)
    (35/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.087561624 seconds)
    (36/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.175608155 seconds)
    (37/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.18001528 seconds)
    (38/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.165130216 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.12387944 seconds)
    (40/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.19869007 seconds)
    (41/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.17317279 seconds)
    (42/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.169820827 seconds)
    (43/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.209023647 seconds)
    (44/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.229969817 seconds)
    (45/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.10611531 seconds)
    (46/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.314144906 seconds)
    (47/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.3782921 seconds)
    (48/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.14920822 seconds)
    (49/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.145170765 seconds)
    (50/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.137100814 seconds)
    (51/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.132410763 seconds)
    (52/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.080989558 seconds)
    (53/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080998289 seconds)
    (54/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.291666908 seconds)
    (55/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.17914813 seconds)
    (56/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.204633773 seconds)
    (57/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.108265304 seconds)
    (58/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081229604 seconds)
    (59/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.149937433 seconds)
    (60/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.194755911 seconds)
    (61/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.104528725 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.149997357 seconds)
    (63/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.196888235 seconds)
    (64/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.138234478 seconds)
    (65/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.088332811 seconds)
    (66/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111561184 seconds)
    (67/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.216454132 seconds)
    (68/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.135037214 seconds)
    (69/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.206269247 seconds)
    (70/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.174563608 seconds)
    (71/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082571185 seconds)
    (72/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.12311817 seconds)
    (73/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.202928948 seconds)
    (74/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.164498014 seconds)
    (75/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.086638951 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.134427499 seconds)
    (77/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125529441 seconds)
    (78/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083267712 seconds)
    (79/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.138711494 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.127108343 seconds)
    (81/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.102185131 seconds)
    (82/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.236289824 seconds)
    (83/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.152776131 seconds)
    (84/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.118768385 seconds)
    (85/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.137308103 seconds)
    (86/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.172008606 seconds)
    (87/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.110926606 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.131084896 seconds)
    (89/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.086910214 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.12103711 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.125897015 seconds)
    (92/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.113659705 seconds)
    (93/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.079723336 seconds)
    (94/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.224354298 seconds)
    (95/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106448871 seconds)
    (96/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.088222112 seconds)
    (97/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.179352626 seconds)
    (98/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.116862207 seconds)
    (99/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.151476176 seconds)
    (100/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081360765 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.129936286 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.130121784 seconds)
    (103/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.087254252 seconds)
    (104/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110863959 seconds)
    (105/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.105263526 seconds)
    (106/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090664811 seconds)
    (107/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.081498353 seconds)
    (108/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.081372359 seconds)
    (109/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.133084521 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.106346414 seconds)
    (111/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.083811845 seconds)
    (112/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.087082442 seconds)
    (113/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.08670544 seconds)
    (114/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.112147571 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11193232 seconds)
    (116/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.135329779 seconds)
    (117/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081788333 seconds)
    (118/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.110538498 seconds)
    (119/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.087430182 seconds)
    (120/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.112811762 seconds)
    (121/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.113613959 seconds)
    (122/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.105251233 seconds)
    (123/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.150545331 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.122791383 seconds)
    (125/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.080293731 seconds)
    (126/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.153359167 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.106894738 seconds)
    (128/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.127198578 seconds)
    (129/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.163657334 seconds)
    (130/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10701298 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.105714002 seconds)
    (132/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.137407767 seconds)
    (133/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.08848311 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114043972 seconds)
    (135/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.080344854 seconds)
    (136/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.083657216 seconds)
    (137/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.109975437 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.106486097 seconds)
    (139/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.082751654 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.10451755 seconds)
    (141/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.129311974 seconds)
    (142/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.089269941 seconds)
    (143/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.081334295 seconds)
    (144/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.081342886 seconds)
    (145/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.108775425 seconds)
    (146/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115847344 seconds)
    (147/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.195100648 seconds)
    (148/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.135976021 seconds)
    (149/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.133910674 seconds)
    (150/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.081067641 seconds)
    (151/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.172298795 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.106241723 seconds)
    (153/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.146396899 seconds)
    (154/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.088840138 seconds)
    (155/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.110760035 seconds)
    (156/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.089828811 seconds)
    (157/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.137829468 seconds)
    (158/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.102760833 seconds)
    (159/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.1142162 seconds)
    (160/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.086812157 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.106883075 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.105482618 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.129658247 seconds)
    (164/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.08159641 seconds)
    (165/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.088372341 seconds)
    (166/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115223591 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.13731802 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.107350732 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.127473333 seconds)
    (170/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.137566027 seconds)
    (171/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.084985318 seconds)
    (172/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.082757801 seconds)
    (173/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.080937877 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.131193569 seconds)
    (175/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11317312 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.106700999 seconds)
    (177/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.085519674 seconds)
    (178/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.115289591 seconds)
    (179/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.085330474 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.127966971 seconds)
    (181/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.081000663 seconds)
    (182/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.088243344 seconds)
    (183/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.108947513 seconds)
    (184/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.097004375 seconds)
    (185/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.104483818 seconds)
    (186/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.083656728 seconds)
    (187/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.131092788 seconds)
    (188/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.081712067 seconds)
    (189/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.089187249 seconds)
    (190/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.081572524 seconds)
    (191/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.086517077 seconds)
    (192/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.111278885 seconds)
  done (took 27.804629206 seconds)
done (took 28.73650965 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.227758083 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.135061589 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.114805382 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.113088822 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.235228306 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121034665 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.156387066 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.115139362 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122765402 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.139415773 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103747132 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125423631 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.138224421 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.209114301 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.142794345 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.106561735 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.104694389 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.149634042 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.130139175 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130823898 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.234296764 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105441621 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.151683604 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.105665951 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.235472542 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105374084 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.113136803 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.140601259 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.129193943 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113231159 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.139418078 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.104546744 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.130340038 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.154547446 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10477296 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.114812994 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10371249 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.113136523 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.115068194 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114700899 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.15126309 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115084537 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11421627 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.130539435 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115314036 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113162784 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128333988 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.118760354 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102990332 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.114128689 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.131652495 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128436514 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111865413 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.127938337 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102694693 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.104980249 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.148709972 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104141106 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127134114 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126869276 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.106595259 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104076293 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.138367316 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104785392 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11243427 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.104203195 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.138851386 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116060848 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112076961 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130552146 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104861658 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113465546 seconds)
done (took 10.223809746 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109321863 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.149617769 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.237116326 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.237037824 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.133337976 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.148544308 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118476659 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127843701 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.142545362 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123766227 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.142179114 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.161053511 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.242784226 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121631809 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.121465586 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.142341216 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116274912 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112331114 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.239617063 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.129185212 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156059021 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.121189573 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.157027301 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.125455478 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107988663 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.168791716 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112637368 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116971648 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.132346439 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117843896 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.129646585 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.132049334 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113351844 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126998343 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.150474652 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119731078 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.121130348 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.142553044 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.110763666 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.10891399 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141601457 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.124124793 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107959399 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.147310632 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117241235 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.123957593 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.141099717 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122135573 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.110639978 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.140495449 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109909088 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132153467 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.146190797 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124852748 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.121828691 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.146673959 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121236087 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.120211376 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.1369531 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121555262 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107543355 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.133623836 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110572721 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.12907214 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.138034383 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121193694 seconds)
  done (took 9.891091738 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.128381409 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139317576 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.144406911 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119052919 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113897724 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127805708 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102539436 seconds)
  done (took 1.855320429 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104327792 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.246106575 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.219843878 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.247499421 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.244726791 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.257577518 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128065517 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103490674 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.168010681 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114336537 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.248844215 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.277370397 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.114702854 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119507027 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.249409789 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.131338559 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.224970927 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.132643195 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119316081 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.251427993 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12185139 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.163142324 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.119838982 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.104650669 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.241234866 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.106199608 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.297361906 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.151032823 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114583775 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11772307 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.144575927 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.187425719 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.244020835 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.1195365 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138724275 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.218960805 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.24562949 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118737096 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.259305879 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.139253113 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.216277992 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.147551933 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120956513 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.119522741 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.147863706 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.206877634 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.152498583 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.120166049 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117867293 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.253773193 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.143568536 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.218563687 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.145547699 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120271161 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115767165 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.14825761 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.128122019 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.119815236 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.253152653 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122208557 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.247356874 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.249529637 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.246273915 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.249156335 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129662508 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.248684347 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.20731086 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.1465326 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114605565 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119810766 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.248983477 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.118864277 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.145970028 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.239272606 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124069548 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.252196247 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.221507009 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145285026 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.119557732 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.108994656 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.146214963 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.10570157 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.242938086 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119682328 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117830486 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152221242 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119578125 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.146730112 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.11193211 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.130124159 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.144651984 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.119186246 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.125948558 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.146811476 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123894177 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.25333899 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116661692 seconds)
  done (took 17.267840206 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108884726 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.107574644 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.110348809 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132346019 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.107180878 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.107448999 seconds)
  done (took 1.679460217 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.145684518 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119864265 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.154604856 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121160309 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.168281525 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.251312336 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.261178115 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113916791 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.169701398 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.132185385 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.256194101 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.260565328 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.257883632 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.125101244 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.259946463 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.124147421 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.264922725 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118346264 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128352984 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.145138708 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.121443027 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.149780359 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118705668 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.246753934 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.122183624 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.121853555 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.142401139 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129603004 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127505181 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.143150676 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124531968 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120664018 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.139269665 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.11628895 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.262525562 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.112562638 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.144167285 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.124522329 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123221466 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.150724614 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.231731633 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.145579336 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126878076 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.150524728 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.116168194 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.11348999 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.150001338 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115520696 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.263978541 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123091351 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122685853 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.149709191 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.122263662 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.12281897 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.140855133 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116041083 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122909624 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.261681322 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.153268513 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.113851419 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120523008 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.150388747 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116821979 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.125197205 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.151421699 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.124831936 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.112776352 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.148869699 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118716214 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122295999 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.17154451 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121283579 seconds)
  done (took 11.973050554 seconds)
done (took 43.641851385 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.701461617 seconds)
  done (took 2.703263802 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.127332393 seconds)
  done (took 2.131944642 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.969821092 seconds)
  done (took 20.008763965 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.449769206 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.488699575 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.183298309 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149800264 seconds)
  done (took 3.276467629 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.864962158 seconds)
  done (took 1.894671173 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.349352596 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261569506 seconds)
  done (took 1.624341056 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.787631234 seconds)
  done (took 1.810641004 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.558442802 seconds)
  done (took 2.575103371 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.297732624 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.252619485 seconds)
  done (took 1.579122666 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.669106385 seconds)
  done (took 1.695284785 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.356084318 seconds)
  done (took 21.387327677 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265966154 seconds)
  done (took 1.299539977 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.296377982 seconds)
  done (took 1.328522992 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.740244832 seconds)
  done (took 4.77158967 seconds)
done (took 69.103671076 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.121700183 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.124695535 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.12325031 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.147612556 seconds)
  done (took 1.535351877 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.126927802 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121385897 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.14884302 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123274056 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12715779 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.120605072 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.145585203 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.123618094 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118765871 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.149403706 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121078315 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.12013944 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.149737966 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119969586 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118474214 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.149610366 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124299256 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121277154 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.148592779 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.122459008 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.12229537 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.148805166 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12596092 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.124217053 seconds)
  done (took 4.154901332 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.117379172 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11182281 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.112973724 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.136188407 seconds)
  done (took 1.512144806 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.129028978 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132648642 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156861288 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128778597 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133994624 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.156497974 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120576227 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118572271 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.146606841 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129959822 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.137194332 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.160365714 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.133901944 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.122425135 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.15713751 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114485858 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.12162203 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.158292266 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12796739 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12984675 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.150291249 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127352578 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.125259364 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.157734584 seconds)
  done (took 4.307204638 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.199115963 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.134514243 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.179768321 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.167700445 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.183315001 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118665369 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.148446251 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.153184075 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.128315549 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.122032208 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.150911928 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.167459284 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.155006583 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.123439789 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.121022233 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.154321859 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.135355341 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.126429905 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.195167836 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.126278628 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.156011668 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.134502509 seconds)
  done (took 4.313533236 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.1249712 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.111291177 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.134780897 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.109899171 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123383358 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.139193259 seconds)
  done (took 1.784511774 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.112081083 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.106233831 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.105246763 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.131054864 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108560034 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.105140535 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.103110109 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.133862902 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105358998 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104608065 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.132060997 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104095011 seconds)
  done (took 2.382973282 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210421172 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148972086 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287169968 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.401573902 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166198788 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191101256 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.287624285 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193291759 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.209476708 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140500199 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217990849 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163637359 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185972601 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191052996 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17035183 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.161939587 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196276496 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212350049 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17246432 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249344627 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160113727 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207624238 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191249809 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180881172 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14268225 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193967403 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123005726 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157453123 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174322098 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197943747 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181503877 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18138801 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144232029 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224914355 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2670635 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213186677 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275638264 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136185824 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201936014 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.193598362 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266468732 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170717659 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197574985 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182283934 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130481536 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216503299 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1869149 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.188258926 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.164093422 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147897858 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221174704 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182685801 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.204116459 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139207716 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332709418 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164675341 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146496772 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207944669 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192919156 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231828712 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211397483 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12518631 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206441965 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219593707 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218953961 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.172951183 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.170081754 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156444406 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16717922 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.23878651 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214794004 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162454946 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.245460265 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161236566 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176219825 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199528097 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158780806 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238794542 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201233411 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123812882 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153553465 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163749874 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127737403 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.218555027 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125271168 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249222614 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133755068 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.348834792 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210895673 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159321238 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193190908 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165220871 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19470353 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148989756 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.103697824 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175483209 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.163833404 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191123815 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130557524 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184807649 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142995977 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.156034228 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15546104 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123221466 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200882529 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136612973 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195726076 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178050505 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.162195276 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180068569 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1780086 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.163498235 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202059773 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22428725 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132597308 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133809055 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251626342 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200879595 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139222941 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204964332 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227734756 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.154168208 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136782198 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197839125 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226153479 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144822955 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23048322 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14038126 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165315366 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.144400067 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20329345 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162357448 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.190006146 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12907207 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.196215385 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194931004 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.156977923 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141118295 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21454076 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135108871 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153385008 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139880357 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137507989 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.172604421 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.150881547 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.170090694 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156474787 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197844502 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168042668 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189250602 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136477271 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206552104 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132691454 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.200495817 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15297902 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.147857699 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.178867998 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230151893 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13064706 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211945109 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.164579378 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215603604 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203421608 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132691594 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215606468 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13010572 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121102062 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195721816 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199837424 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167768402 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.2191961 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207583591 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.168550414 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.193782603 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152474907 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201329024 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.184739693 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189227625 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.143365298 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205556656 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201579684 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122663503 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124607676 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.157373783 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139014814 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132278763 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167829652 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184814145 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200169239 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208131635 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168577582 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16890402 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194273099 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.157249536 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162012292 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.207404587 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140476663 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.220196018 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223040724 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183453357 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171584738 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166243836 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.150093039 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127287555 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.134545252 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191798552 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138518173 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166821703 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144905438 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.224583797 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174847514 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181082455 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220079034 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168720617 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232072109 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.12187751 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.192321314 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171098154 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200968224 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.189324215 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160865429 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.164094959 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.226222762 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144353692 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225698673 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197991518 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183095211 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229010058 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.166054008 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161807448 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150470951 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191357365 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140936288 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194315842 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147845826 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131101378 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184698976 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.139424713 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173613767 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22239127 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146291159 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212654766 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.160420819 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205043742 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126435911 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1755226 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176949177 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177613019 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106703653 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200980027 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199201798 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180432511 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157922596 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205600447 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131305106 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.350256062 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191414075 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209385775 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136782408 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17102929 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173490707 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19253 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194614832 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187970062 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172541843 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211877292 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205246281 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.145320644 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161779022 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151535402 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181697827 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.143593819 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.182935204 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.165361321 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.17454091 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194487931 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170294909 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171398402 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209386892 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145892854 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.181243788 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140918968 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260071619 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169812796 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206309895 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.195514109 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.167238725 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216116029 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126751244 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127797048 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.163894794 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187421739 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161791175 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180850372 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.19768743 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213156715 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178345445 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192366362 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142951279 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.158159637 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169639729 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182390512 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214503395 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137690485 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138665748 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224677454 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129206375 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16230814 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162080457 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320060603 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150170004 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204656332 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108269145 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.316810678 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130548655 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162863937 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164042648 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203939412 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136763062 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.190437485 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202977907 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142266695 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19398647 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135868186 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211489045 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215393102 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170166961 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208773616 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.177747883 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166031798 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193829955 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17722114 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177801311 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.150391192 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1906336 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196328668 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.20948034 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.134047074 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201226008 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17273698 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202671652 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177522225 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170476078 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184285865 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159624488 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16922131 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170821373 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127208774 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193469225 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.168149944 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160620425 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178490016 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20349557 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132544019 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16049513 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151096798 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198439759 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14261234 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.130442914 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220061364 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.160221213 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187557929 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246351369 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132290915 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198246928 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149137401 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161103866 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141518765 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144780632 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163358483 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.179122009 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215670931 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133725595 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209421533 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169129748 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197021632 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1607284 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176936606 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.266863405 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.158683307 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194271702 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182545839 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201863798 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182450716 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177759896 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201694294 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152161459 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19841315 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150590449 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.251937415 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198491721 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.170554161 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132755988 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175951215 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139918281 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.164225702 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155357885 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202033093 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144428562 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.138042694 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.199968795 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146177737 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.181175763 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14310905 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23290336 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152800576 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222466977 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219524844 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139803323 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208988447 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180438309 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160616933 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.167627113 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206365977 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145119223 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186546348 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13569484 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.1696567 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217793897 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.156377148 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164017156 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209245114 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170610802 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205610364 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.137562884 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21149994 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143090822 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208257628 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12904553 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.184749192 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171144808 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163663549 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129150641 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174596015 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19494993 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.165747334 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175349533 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.177257108 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227601778 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125198393 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163753994 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289814997 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194724553 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196975537 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.16944557 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138252566 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179595883 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161921428 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.200104776 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173180822 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.160531378 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13147014 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.14689801 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.190634158 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.146184651 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200119442 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183267369 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193725543 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185758608 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.167639335 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255216812 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175028892 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174569545 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.150136061 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131470909 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144597577 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166248236 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143967329 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211070556 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249319903 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.164154115 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.180430347 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138353697 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12671353 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161919543 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16643569 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182896163 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171190973 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179992442 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.105646116 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14244011 seconds)
  done (took 87.128943424 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175297082 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.214087839 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.191818247 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.24501747 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231216204 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.316895814 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.267558046 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268710288 seconds)
  done (took 3.039902909 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121671199 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.164033359 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.145276645 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.147413159 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.112569622 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.497781876 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.163756718 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.123128228 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.164436273 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.156030246 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.137949107 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.590249082 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.125248469 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.147827737 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.135732274 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.144078936 seconds)
  done (took 4.199681678 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.477830456 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.564719089 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.410952817 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.29520849 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.277263122 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.217863947 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.816039037 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.21470775 seconds)
  done (took 13.399479012 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.177799356 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.173545742 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.462880301 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.318049942 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.187771713 seconds)
  done (took 2.45517541 seconds)
done (took 131.234488202 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.127428984 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128022076 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.125870406 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15812758 seconds)
  done (took 1.661926911 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.197205664 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.094131035 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095509701 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.12417906 seconds)
  done (took 1.643947949 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.474236913 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.094126983 seconds)
  done (took 1.731363535 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.154525865 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.151479947 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.172090249 seconds)
  done (took 1.627128422 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.139322535 seconds)
  done (took 1.275330124 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.121900068 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131032236 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.282562049 seconds)
  done (took 1.675868349 seconds)
done (took 10.757291762 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122865066 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.938077531 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.439835052 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137070294 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.777188077 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.433057793 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.451012661 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.181193781 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178579204 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.141303024 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135026808 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.694853235 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.464823914 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.884621711 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.417361733 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.914961183 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.698995662 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114292746 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.150765191 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114307693 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.425172922 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139951526 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115880658 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114408752 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.765825249 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424974782 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112241158 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.925050804 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112123196 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.117166785 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.434208079 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113326353 seconds)
  done (took 21.320556826 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115755013 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172721126 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150572779 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114652568 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117030175 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.144270022 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125620724 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12647125 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.2104526 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114456594 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.16506282 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113106422 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.119913922 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.143246009 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140538891 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113284029 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.145044003 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117223565 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121990513 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114979915 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.166458039 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112625914 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115930245 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.147156632 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113654327 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134628293 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.143432974 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125423212 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113592797 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.147439489 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118988665 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113518346 seconds)
  done (took 5.387877048 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.164145525 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182153261 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.152404017 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.152629046 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.195428413 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115886664 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.231831995 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.153766341 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.211009445 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114157184 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135134084 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.142926206 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15671085 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113854841 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.169572611 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113907432 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115660798 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14554232 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122418989 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115243775 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.16530035 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113425806 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114881858 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.145333775 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113631769 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137379481 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.144441971 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.127944203 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112993419 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.148184835 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119611929 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.114292816 seconds)
  done (took 5.712766756 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.130122971 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129111111 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135930624 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.168528414 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.123342849 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127181327 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.160913759 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124234583 seconds)
  done (took 2.252142399 seconds)
done (took 35.816454593 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.140652034 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132104997 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134546788 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.161773226 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.228378972 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.151902487 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.131793784 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.119226265 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.163191563 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136152161 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.113101813 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.152654329 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13389049 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.125163682 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.260714438 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.129006279 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.265298402 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.261701087 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.122046666 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.129401162 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.154258862 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.233073214 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.159242177 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.1218245 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.259395207 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117070613 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.2564148 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124436424 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.124383276 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.113959115 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.262433931 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.159363701 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.123595256 seconds)
  done (took 6.543079675 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.242362314 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.156296761 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.12480344 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.121856907 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.124228717 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.154202919 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.249589491 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.155968088 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121684608 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.12066702 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.153971885 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.229152324 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.161183136 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.119132677 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.124034069 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.113458352 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.282163604 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.123834462 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.147605782 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.096837174 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.117601547 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.121856208 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.292112216 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.149841959 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.122797529 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.121896786 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123829923 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.161428349 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.125655923 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.124250577 seconds)
  done (took 5.747541919 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.128365625 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135657614 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.140684859 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.221470133 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.15247756 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.165293505 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141548517 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134646312 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.176071483 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118113693 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.132081182 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.185356601 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133624394 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126878984 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.147459464 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134682979 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132530191 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.147771166 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125441859 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133784052 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.168130668 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.134589321 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139581298 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.153846728 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.116775534 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123916735 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.126468666 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.159456031 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124393053 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130460515 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.14898815 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119594607 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.117634023 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.182872067 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.120999046 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.128855492 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.170399881 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129477429 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.128981067 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.181421674 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.119986278 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.11665422 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.175186523 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171357056 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.116743966 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.161318558 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.128843479 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129378743 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.145501184 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134433366 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.158468196 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.147235622 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.138182307 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.114604308 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.146175362 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125726253 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114970137 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.149519363 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.13257936 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.11874862 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.16785675 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124415122 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127527321 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117112169 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.157471701 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.114454149 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.114866074 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.153238551 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143263609 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123018018 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.185016126 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115682728 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.127250679 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.158689174 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.128972965 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128257162 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.145216162 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.129010261 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126634818 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.121624754 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.160709263 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.119144341 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.118423369 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.163648324 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.138016364 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129460946 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.158628902 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129193454 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.11825589 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.149155839 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134820077 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.117925332 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.151286347 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.130434324 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.116291674 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.119411763 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.158651809 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127121263 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112339775 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.172812967 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.120876335 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.115838683 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.173489101 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119752449 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120738119 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.155941129 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.159107453 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.11600714 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.15840492 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.130620382 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.116120842 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.156382177 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.119814468 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.115119876 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130667245 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.16416054 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123097706 seconds)
  done (took 17.36997554 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.361016858 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.347438874 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.189290831 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.435876797 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129360724 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.27855295 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.345782589 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.348961694 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.116094721 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.182957832 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.179043648 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.316670297 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.116308366 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.179812391 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.352346063 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.408082481 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.179626752 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.153188754 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.183593947 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.13144793 seconds)
  done (took 6.105315208 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.137178268 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150279515 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.170309786 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.145645965 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126507778 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.166469284 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.117308842 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138380796 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.158894368 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126114222 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118010397 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.164093772 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.130490546 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.132743626 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.163351918 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148884505 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122867301 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.153028608 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.140571437 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120851611 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135711252 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14255025 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124401015 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.169130655 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.135489087 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126688177 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.146412194 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122130195 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123120126 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.156082209 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121497643 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135795062 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.153654107 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108512961 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127982196 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.131331785 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.155013288 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.120514348 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121126507 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.150065522 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.133579906 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129022832 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125222139 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.133016426 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.137368097 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.113021775 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.129040641 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.160133771 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.109752365 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.13681649 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.160437022 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.13090268 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.124225015 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.17116611 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.124544819 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.133276725 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.159415034 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.131616457 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121024049 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.144550784 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11525481 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119080297 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.124717326 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.161732438 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128433301 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13548769 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.163004597 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116458594 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.120021338 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.151441814 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120292043 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.130056832 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.1672983 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.12603593 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.123422049 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.159314253 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.126342254 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.097530349 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.125289605 seconds)
  done (took 11.941989551 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.144520472 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127208914 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.134138007 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.183092068 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.130428597 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.122300538 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.157831803 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.140148129 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.130124159 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.167366744 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.132669455 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.130081276 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.1714827 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.127665327 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126584114 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.165087125 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130358756 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.155870589 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.166664421 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.145204429 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.132207734 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.152812309 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.130777594 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.127746483 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.176761654 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.128869321 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144377647 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.161636477 seconds)
  done (took 5.236583367 seconds)
done (took 54.098717094 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.307064118 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.597998531 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.287870126 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.286697841 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.312206252 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.334243831 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.291226978 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.288234628 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.871251505 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.257863727 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.287375092 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.284941472 seconds)
done (took 29.589613596 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.446510552 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.508272595 seconds)
    (2/2) benchmarking "String"...
    done (took 1.687548116 seconds)
  done (took 4.385529264 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.27597839 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.276683858 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.605372094 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.275594264 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.275942003 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.276959381 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.285204704 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.293587754 seconds)
  done (took 16.465059139 seconds)
done (took 26.751016244 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.34532003 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.612050736 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.543216983 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.272442257 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.280710068 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.279169369 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.278477871 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.355128609 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.284125516 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.276060455 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.792868493 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.571287103 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.281022957 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.705747777 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.275791356 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.281773052 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.29856164 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.661758524 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.28312944 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.319368056 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.256491695 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.259464489 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.318154913 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.29148595 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.293618274 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.278761915 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.27100639 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.290770566 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.629607089 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.317813181 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.322031034 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.280010259 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.276130645 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.286251345 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.296552167 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.289173086 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.621203157 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.296867639 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.262586046 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.31253695 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.612971733 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.30128084 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.287572323 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.291748553 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.263512559 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.295173081 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.280438315 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.46480373 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.316810399 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.285651549 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.35458741 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.725088016 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.286236399 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.285450056 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.296306465 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.678513658 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.284712462 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.41823412 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.313416461 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.293456452 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.289784266 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.287924254 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.343739172 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.291448096 seconds)
  done (took 150.17584534 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.280771668 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.285370088 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.286370354 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.293593969 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.28625372 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.285301084 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.281793726 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.280603001 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.287081828 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.292818103 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.285578424 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.286050132 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.28554504 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.314628278 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.292424686 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.308021642 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.286796317 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.284516907 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.316662265 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.283092005 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.29353635 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.287061225 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.288495067 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.287992418 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.30417206 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.377298678 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.329380294 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.307427851 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.295550154 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.282348405 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.302271748 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.29343501 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.042068898 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.245345864 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.300476687 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.33052569 seconds)
  done (took 83.551165971 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.28453283 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.284824208 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.283555402 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.32039193 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.283705421 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.898266393 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.899868273 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.349308037 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.49935086 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.919123235 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.287972793 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.586635005 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.285309745 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.379896005 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.296562922 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.286979651 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.381634284 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.310272905 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.285376094 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.284905364 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.919296232 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.301137317 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.624095076 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.476022754 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.301070687 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321959448 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.680720572 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.284870653 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320072127 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.628010797 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.341561522 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.285730259 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.660940962 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.761177592 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.40612902 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.287145384 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.321336394 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.285450824 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.575159453 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.286014443 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.286824184 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.289708349 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.970623499 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.28624045 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.901959181 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.287871034 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.319912958 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.287166894 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.285669078 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.287371389 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.410811739 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.229246751 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.292554312 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.286429789 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.289497988 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.287274031 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.287529092 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.322746209 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.315989695 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.221627834 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.287208031 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.289486743 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.291418623 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323149193 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.288536831 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.566468334 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.287338704 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.848053933 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.347825167 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.398732199 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.924064505 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.291240597 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.386822794 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.410681764 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.289812273 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.288765701 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.289322197 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.289469282 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.40424966 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.288052761 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.035497112 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.475988393 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.307279369 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.945394243 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.394390865 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.289218622 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.719213386 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.29380035 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.289557492 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.143056879 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.388462667 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.289766527 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.289519987 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.289915777 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.037081671 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.289075447 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.929635465 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.688842275 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.293368801 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.040870212 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.294695087 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.204096345 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.935899879 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.046341088 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.296684236 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.404814188 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.478155358 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.309428455 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.291107549 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.937763175 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.295220154 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.344488569 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.290083466 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.694761185 seconds)
  done (took 389.855917721 seconds)
done (took 624.761773912 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.270577634 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.269880409 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.271054511 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.270699438 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.270539151 seconds)
  done (took 12.539344354 seconds)
done (took 13.727951579 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.573447643 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.570951516 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.384907885 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.573379268 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.360023226 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.590079297 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.5591739 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.337547952 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.476177592 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.410943459 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.471492639 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.377549478 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.357759252 seconds)
  done (took 20.231876764 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.674723091 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.30234145 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.423095213 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.640918723 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.368614053 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.672209783 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.707085936 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.303306377 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.555243722 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.345305224 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.342453255 seconds)
  done (took 19.524392942 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.675792851 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.303896047 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.419771187 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.68122769 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.367187196 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.676893619 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.708960686 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.302696662 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.545595568 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.346687662 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.344887363 seconds)
  done (took 19.563585705 seconds)
done (took 60.511148451 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.357521791 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.431655101 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.353548241 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.334274351 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.334799349 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.33289338 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.336202041 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.333982555 seconds)
  done (took 12.004087112 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.333745234 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.330243671 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.329510058 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.332303291 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.332560726 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.331935507 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.333151792 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.332992555 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.333380733 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.332857761 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.332771437 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.333163735 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.3329459 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.332031259 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.331935158 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.3332495 seconds)
  done (took 22.511064012 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.336538606 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.334307177 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.334171335 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.332458129 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.334292859 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.335871133 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.334498193 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.333955805 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.335761761 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.333736155 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.334714421 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.335971843 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.334372828 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.33305611 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.335581292 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.337719901 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.332970764 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.334361095 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.336505292 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.335531355 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.334321704 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.334693748 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.334003926 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.334075723 seconds)
  done (took 33.225466102 seconds)
done (took 68.932370033 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.305531242 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.302594275 seconds)
  done (took 5.801680996 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.432423844 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.451916337 seconds)
  done (took 4.077767082 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.335060415 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.334254726 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.334885043 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.335648549 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.333699767 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.336320771 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.335836143 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.338075533 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.337584549 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.335080669 seconds)
  done (took 14.549876909 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.3430453 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.335798917 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.336553343 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.335402568 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.336757348 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.335512568 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.337514428 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.335556149 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.335607343 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.336028416 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.335025494 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.335397678 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.337831438 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.337178562 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.334291952 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.336792409 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.335355844 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.335605596 seconds)
  done (took 25.248651732 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.357543581 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.363229639 seconds)
  done (took 3.914264098 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.516535658 seconds)
    (2/7) benchmarking "second"...
    done (took 1.418015727 seconds)
    (3/7) benchmarking "month"...
    done (took 1.504352544 seconds)
    (4/7) benchmarking "year"...
    done (took 1.488907214 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.416907485 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.364468834 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.418065244 seconds)
  done (took 11.321094114 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.33107611 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.683789468 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.866474012 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.536811839 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.323079423 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.353817758 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.27985535 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.356680063 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.357162458 seconds)
  done (took 15.285091282 seconds)
done (took 81.392351362 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.300084598 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.323880851 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.323957537 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.320777454 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.703038704 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.361921373 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.305907127 seconds)
done (took 16.840192877 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.290373867 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.284847046 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.296782084 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.314883688 seconds)
  done (took 10.383668063 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.304252796 seconds)
    (2/2) benchmarking "read"...
    done (took 1.717500599 seconds)
  done (took 5.219408138 seconds)
done (took 16.801843517 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.339046327 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.339539616 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.340000778 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.340320232 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.340247318 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.339869266 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.34139928 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.339122803 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.339162473 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.340243965 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.339840143 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.339614136 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.340740956 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.340487083 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.340000359 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.340280213 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.339706257 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.339812696 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.340204086 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34018942 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.339893851 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.339954962 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.340369261 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.338415101 seconds)
  done (took 33.355442338 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.339053451 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.340017051 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.341029331 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.341731165 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.340201222 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.339061343 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.340660079 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.339866613 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.339865845 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.341662023 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.340861642 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.34095027 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.340786423 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.339641724 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.343293515 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.340746473 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.342741908 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342926988 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342077649 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.339776588 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.344013021 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341407801 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.340192632 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.342852119 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.339902163 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.341429731 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.343491306 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.342013394 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.340242359 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.34137267 seconds)
  done (took 41.431813153 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.350156888 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.35072791 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.341755261 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.341461509 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.342069686 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.340810099 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.342767051 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.345061687 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.342678423 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.34284702 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.343770881 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.342157058 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.343193083 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.343629591 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.344828696 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.344020423 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.343908119 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.343664163 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.34363462 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.343631966 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.343056962 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.344069522 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.342791845 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.343237084 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.343005629 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.348595097 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.344646481 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.34392949 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.346306957 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.343391852 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.345035496 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.348761389 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.343103826 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.344429414 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.350180704 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.343579724 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.350878209 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.352713009 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.344636423 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.345319192 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.347056214 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.343867401 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.344618964 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.346074595 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.34502935 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.34462455 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.345397624 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.344028735 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.343890239 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.344957275 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.34503396 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.34652095 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.345983103 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.344390093 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.34506469 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.345501757 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.346566208 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.346834259 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.345589966 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.345798513 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.345079706 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.344311661 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.34782377 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.344871788 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.347536443 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.345893566 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.345396716 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.346479046 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.346814284 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.347551389 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.347570107 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.347920221 seconds)
  done (took 98.053999257 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.346790398 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.347204208 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.348130862 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.346771821 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.347425465 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.35096111 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.346626131 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.349102005 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346798919 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.347731021 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.346561878 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.346312195 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349477542 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.347581072 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.348571909 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.348277878 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.348658793 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.348047332 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.349661154 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.34741464 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.347659992 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.347791154 seconds)
  done (took 30.857750557 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.349574551 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.35017358 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.348432995 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.349642297 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.349343865 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.350058692 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.348776126 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.349241758 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350149974 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.347877268 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349780862 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350757663 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.351424438 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.348014436 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.347883554 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.351885809 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.349276468 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.351306546 seconds)
  done (took 25.49846248 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.349501917 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.347755465 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.350329605 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.348326906 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.349521891 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.352419956 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.350915993 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.349189725 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.349983472 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.349501288 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.350816958 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.349204253 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.348964557 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348870551 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351589333 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.349507225 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.348859237 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351912698 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.351296838 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.350568462 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.350954965 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.3501256 seconds)
  done (took 30.906567449 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.350949447 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.349656196 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.35134419 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.352661606 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.350425358 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.350449942 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.350897345 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.350537593 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.351925688 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.351442806 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.350566647 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.351101701 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.35349181 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.351532412 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.351974298 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.35090433 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.352911637 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.350882259 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.351321422 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.351515371 seconds)
  done (took 28.23356378 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.352970164 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.350528024 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.352471288 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.351618387 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.352156653 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.352624939 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353714323 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.354369435 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.353453326 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.35389605 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.352507257 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.353617244 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.353837175 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.352174254 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.352810438 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.353885994 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.353256375 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.35313094 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.353274393 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354389898 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.353564026 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.353538254 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.353755042 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.354844915 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.354400933 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.353246456 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.355141531 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.354926908 seconds)
  done (took 39.102882149 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.353927549 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.354574349 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.353597758 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.354249517 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.355433746 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.354148526 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.354928235 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.35327181 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.353711669 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.354925093 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.354665142 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.356907118 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.353581136 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.355606603 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.356014267 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.354349181 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355185041 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.354183936 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.355322419 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.357267359 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.355915371 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.356554978 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.355019657 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.355156057 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356265347 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.355302863 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.355135524 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.35653214 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.358135626 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.35465739 seconds)
  done (took 41.865964381 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.381318393 seconds)
    (2/2) benchmarking "in"...
    done (took 1.381128983 seconds)
  done (took 3.974048236 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.354972025 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.357279232 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.356318984 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.356448471 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.354308045 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.355085587 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.355848883 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.357186553 seconds)
  done (took 12.058758938 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.348785414 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.358349061 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.35630816 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.35720122 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.356864654 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.34934645 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.365394091 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.361965583 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.356521804 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.351893073 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.358466674 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.35596035 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.356010635 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.352209384 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.351023968 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.355298185 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.360632382 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.360596903 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.359821246 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.359568489 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.35980176 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.355242869 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.361621055 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.362067062 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.352187035 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.372006454 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.367266047 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.364406535 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.35467038 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.364656357 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.355097321 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.361268008 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.36132842 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.361292871 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.360758725 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.360477893 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.371204048 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.358232845 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.369925324 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.365818167 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.361730985 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.359346325 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.357883918 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.35929981 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.361058204 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.365131278 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.360926624 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.361194325 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.354200629 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.361154236 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.369435178 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.354265232 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.36333538 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.364496211 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.361451969 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.37263754 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.367901113 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.357019003 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.360801817 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.372611489 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.380005725 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.370060048 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.364006555 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.36682912 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.372038581 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.385089194 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.373571597 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.37030086 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.362575716 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.36260044 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.371581121 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.382675897 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.378449941 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.367594859 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.363609088 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.366724358 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.361740623 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.368724333 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.374202194 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.37003281 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.367543457 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.363014319 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.373558257 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.378698856 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.357543023 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.368345933 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.36400404 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.361771703 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.354863213 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.377295255 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.370427552 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.364578554 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.356319403 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.35991134 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.361501836 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.366474256 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.355493321 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.362822185 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.367634459 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.364394941 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.364344656 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.36592272 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.373859483 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.371226746 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.364898427 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.375503408 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.371728417 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.358514236 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.377145027 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.37287968 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.37136175 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.359333893 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.368377711 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.36770507 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.36298764 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.371474473 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.371938079 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.36839964 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.371203978 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.364872167 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.373262619 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.391763855 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.371895127 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.365797145 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.368670555 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.377837782 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.366745171 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.370959045 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.371594949 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.365653412 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.365554167 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.36969345 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.373881972 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.361160313 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.369464092 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.362725107 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.370141482 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.368495672 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.367821216 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.370895209 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.367222116 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.364778999 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.37374648 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.378236226 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.372742861 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.371310625 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.38304005 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.367001488 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.373780004 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.370101743 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.372772054 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.370020727 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.362524173 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.373178181 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.361339874 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.369973305 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.362037938 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.371443953 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.369022905 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.369306879 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.368058326 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.360007512 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.367882536 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.373590106 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.376657884 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.368837197 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.374988468 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.369661184 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.370107888 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.361208713 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.374878607 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.360244972 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.369318682 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.376564715 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.369475546 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.369142123 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.377838132 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.37589396 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.372198239 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.370651812 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.368469831 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.376855185 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.375663553 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.381551872 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.377908811 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.372347559 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.371776816 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.365955615 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.367395323 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.375542169 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.368613705 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.380134234 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.384715333 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.385121879 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.367325831 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.375374201 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.363790605 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.375816226 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.379844811 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.379653027 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.372389324 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.372913134 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.364340465 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.375542169 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.370181013 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.376412601 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.363582897 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.378079364 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.379772944 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.378137332 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.374400473 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.367747253 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.370606416 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.375015706 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.37212714 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.373725947 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.366673444 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.376292265 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.364321399 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.368445177 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.376363433 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.373699547 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.382716475 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.380261135 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.376569465 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.382315935 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.375029744 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.366863062 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.374965908 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.378171764 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.373737331 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.387043562 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.377226182 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.371053051 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.388987036 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.377129313 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.367830085 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.382274101 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.382224094 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.376455344 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.369858276 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.388139582 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.375962125 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.374116988 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.374462981 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.367690822 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.377497097 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.385423943 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.38423699 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.368664549 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.378821007 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.37118561 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.378395395 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.380897948 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.381651186 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.377038728 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.383729524 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.384011263 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.376239535 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.370694626 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.379050577 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.37614036 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.375885299 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.370770543 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.383109472 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.385512781 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.375347312 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.381973923 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.373441134 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.381006062 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.368949152 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.37849436 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.370266987 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.396358643 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.39889011 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.389575029 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.380894456 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.381804837 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.388011912 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.382723809 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.371294422 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.372693902 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.37585422 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.372807464 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.372729242 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.381338018 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.372972778 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.382088673 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.383355034 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.380698062 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.381288291 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.377845744 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.371844772 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.382188335 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.37689283 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.378236297 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.370116549 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.379560068 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.378357611 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.388438152 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.37925144 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.374000074 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.393480204 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.384842794 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.376489846 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.375794855 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.374698068 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.371958543 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.380926862 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.385193746 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.3783053 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.386367778 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.375698544 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.383601993 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.376838353 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.392943753 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.390253188 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.377663039 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.386711606 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.380154139 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.370416378 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.374130188 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.381907993 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.391762877 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.393094541 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.372823877 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.385023263 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.381528475 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.381240938 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.379805491 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.380679903 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.381475605 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.379784328 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.393844427 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.386491187 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.377996461 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.392893189 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.391320921 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.381858405 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.380303319 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.37333309 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.393238344 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.391669639 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.382216203 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.379861992 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.376998709 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.383915999 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.381490481 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.383416495 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.381584139 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.380601402 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.393872642 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.387767677 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.385661682 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.384819606 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.395961735 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.393362383 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.393663189 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.395106668 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.38041325 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.390550642 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.383171911 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.378684608 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.377420481 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.37951956 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.387164946 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.37564742 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.387856026 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.383212279 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.386790177 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.392517303 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.390690883 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.375591058 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.393939341 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.40656476 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.376587973 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.387710337 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.383522583 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.38204125 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.388079867 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.384682298 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.375411706 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.380485815 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.387348419 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.392850306 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.378459928 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.388625956 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.379776297 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.38938569 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.384453289 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.386483086 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.385210437 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.385884196 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.378299294 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.387624013 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.393862865 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.397777399 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.384305714 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.388317677 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.384143612 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.40059326 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.403839343 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.385888527 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.391161893 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.387820826 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.380143034 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.389307746 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.391214204 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.381241707 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.389912293 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.38031638 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.386251142 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.384141377 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.395558751 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.390334204 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.392743239 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.381106214 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.381296322 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.387784997 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.386286342 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.387508495 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.392860782 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.394772268 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.378811719 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.380722227 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.389219816 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.38513941 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.393860072 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.382801402 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.386308413 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.385181594 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.389886521 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.387653207 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.387711454 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.379438964 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.381475256 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.40127512 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.3969187 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.391942718 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.38877814 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.392971829 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.383423619 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.389601569 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.388558 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.383389257 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.384168336 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.392486013 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.384584241 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.386313302 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.38429454 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.389515385 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.401516632 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.393881023 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.382774165 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.404799731 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.406048982 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.39774171 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.382893104 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.386419321 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.384485136 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.391086046 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.391214623 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.382970907 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.407313249 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.398123533 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.394885551 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.398392072 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.392050344 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.384069999 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.396897329 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.39158974 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.395341126 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.398291711 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.395341893 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.396582205 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.390429398 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.391238718 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.383120228 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.384209962 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.38983407 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.390783982 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.39266802 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.399503316 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.394893304 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.39169988 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.396897399 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.392533227 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.390336858 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.391287468 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.382957498 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.39365809 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.384480456 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.401278193 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.394626509 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.386892565 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.395119239 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.391462001 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.389798172 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.393655157 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.399993254 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.390844325 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.385894952 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.393616744 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.40616855 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.406314518 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.392059632 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.387981112 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.39129508 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.395746205 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.392567798 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.392632401 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.389886591 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.414423092 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.405910277 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.387041257 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.390148495 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.404636791 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.404589647 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.393516801 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.393107462 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.397097913 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.396370586 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.400893717 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.394901754 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.405662201 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.401739704 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.392462058 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.398690574 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.391157912 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.39390016 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.404790721 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.406008892 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.395459367 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.396913602 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.415966933 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.40538954 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.405104937 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.429388193 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.404391648 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.399591876 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.398971546 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.388002902 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.39727524 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.3973807 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.407881477 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.395925278 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.395389875 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.396140389 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.388831638 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.408036245 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.412410754 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.407157154 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.396929526 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.386825168 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.391282928 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.397557539 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.396344466 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.397506345 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.396415355 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.395636275 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.396148281 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.39121595 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.417426476 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.42041261 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.404015203 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.398750009 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.397343126 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.406183426 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.405553947 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.401651215 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.404143921 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.396630535 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.398192955 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.402363108 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.406249426 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.400319063 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.391087163 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.3949255 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.393226401 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.400674835 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.414299193 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.421096496 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.407551897 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.401949578 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.40333495 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.397399558 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.394394706 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.401152828 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.40061086 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.393268376 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.396250109 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.403354784 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.401060218 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.399771857 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.398849812 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.406074195 seconds)
  done (took 824.190896154 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.399494027 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.398385787 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.399606821 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.399266555 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.398888644 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.398434326 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.400637959 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.399281292 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.39956785 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.404191762 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.400891762 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.398738834 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.400356149 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.399517913 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.401501336 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.40005611 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.400727564 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.401150454 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.400668548 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.40081312 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.400207666 seconds)
  done (took 30.650665075 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.400858448 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.399830384 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.399818022 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.402297527 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.400155006 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.402042815 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.40097152 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.400684683 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.402000702 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.401591082 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.401409285 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.402475203 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.400986326 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.401638923 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.402751076 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.40105938 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.4005626 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.40137625 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.400997013 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.400355799 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.401838879 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.401641019 seconds)
  done (took 32.076248314 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.402033526 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.402844035 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.393815442 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.405297908 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.401967108 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.401697869 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.401967526 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.402015787 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.405179179 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.395103455 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.394465944 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.396843621 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.402574377 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.409011649 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.405970061 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.409305821 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.403745196 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.403778581 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.405419432 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.402484981 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.415746235 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.41536546 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.404199095 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.394856287 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.405276467 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.403988315 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.40371321 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.405024899 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.397180675 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.408968556 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.404776054 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.399595019 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.414810012 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.408507046 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.398325513 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.407789636 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.405715979 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.405276048 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.405219616 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.413128514 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.428816541 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.406481508 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.418270507 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.417953987 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.405535927 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.407223293 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.412786849 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.405374245 seconds)
  done (took 68.717057458 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.403800371 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.405564841 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.403983007 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.405277095 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.405649699 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.405779465 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.40578093 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.404536499 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.40551274 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.405727362 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.406554563 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.405872911 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.405575597 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.406470683 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.405440036 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.406452245 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.407821833 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.405216125 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.406382474 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.405969292 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.406277014 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.40819276 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.407710296 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.406491286 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.408419674 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.407544493 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.407040379 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.40734782 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.406981921 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.406810531 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.407767077 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.407911508 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.407417452 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.406593813 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.408059153 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.40752389 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.408820842 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.406887566 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.407521864 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.408995795 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.407924429 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.407303331 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.408492239 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.410980125 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.407875611 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.406759407 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.407722518 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.408873643 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.407955439 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.408411642 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.408749534 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.408404239 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.40791968 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.407878474 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.408600144 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.407720982 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.410768018 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.40889229 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.409575687 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.408057966 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.408276919 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.410175834 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.408773211 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.409616474 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.408262811 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.410936614 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.414037498 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.418163092 seconds)
  done (took 96.976380658 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.412947344 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.408862118 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.410480969 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.41004076 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.410014919 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.409757414 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.410341427 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.410138747 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.409808049 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.409852957 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.411141877 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.412797465 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.412545059 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.412310043 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.411869275 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.410228214 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.412654501 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.411361109 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.411103325 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.410356862 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.412437224 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.410935916 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.410870544 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.411519789 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.413196259 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.412297262 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.411718697 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.411507846 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.414239968 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.41295824 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.41355685 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.411489757 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.411205154 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.411395332 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.41150617 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.412634596 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.412172595 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.411026221 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.413129002 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.413358989 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.413450202 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.414046856 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.412603027 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.41250071 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.415081834 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.416016869 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.413204151 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.414930419 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.412476126 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.413710361 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.413710221 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.415292056 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.41438391 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.414408285 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.413683053 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.413792703 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.41522466 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.414166355 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.413858704 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.41451165 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.414286133 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.414453123 seconds)
  done (took 88.836947145 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.4147892 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.414241573 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.414691351 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.414691561 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.415271732 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.415370767 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.415818659 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.414655104 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.415627016 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.414558863 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.414522894 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.414695542 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.416351688 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.415421751 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.415085955 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.415968539 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.413795288 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.414570736 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.415828088 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.414786475 seconds)
  done (took 29.561442136 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.414826704 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.416235822 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.415556755 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.415740367 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.417009523 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.415589161 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.415850437 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.417193625 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.416371453 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.416885485 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.416630425 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.416507644 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.415910012 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.416674634 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.416312507 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.416046272 seconds)
  done (took 23.920346785 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.416873821 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.417448476 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.418107848 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.416929695 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.416028393 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.416011003 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.41687452 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.417796775 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.416809498 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.417669383 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.416383816 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.418097999 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.418273022 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.418704362 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.417253269 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.417020209 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.416697124 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.418032 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.417737618 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.419304857 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.418733067 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.41703718 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.420689042 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.418060146 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.418540584 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.419755682 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.419807854 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.418281124 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.419789346 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.417946374 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.418504965 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.42083934 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.419526743 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.418919612 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.419388736 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.41894748 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.421287232 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.418095276 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.419367715 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.418558254 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.419186965 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.41955447 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.418968292 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.419943416 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.418543238 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.419454038 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.417967187 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.420001873 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.419584152 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.420789403 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.419545181 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.422107587 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.420006553 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.422332686 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.420216635 seconds)
  done (took 79.293796721 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.420269645 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.421669264 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.419802685 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.42142901 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.420562489 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.420810705 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.421903581 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.422085238 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.420772502 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.420308336 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.420804909 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.422992197 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.420934045 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.422002197 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.422601226 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.420085124 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.421879487 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.420800369 seconds)
  done (took 26.848221482 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.422161226 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.420768032 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.421299804 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.421492356 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.420620806 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.422389049 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.42203188 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.421550953 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.421128553 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.422111289 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.421480692 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.422711366 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.421572673 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.423960547 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.420943613 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.423267303 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.422963563 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.423267162 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.422500375 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.42205346 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.421046349 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.423538985 seconds)
  done (took 32.552193475 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.4134773 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.412695427 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.41259318 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.439235255 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.433160599 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.413550913 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.414245415 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.413687243 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.447289351 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.468993578 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.464515146 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.430913107 seconds)
  done (took 18.433941635 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424261632 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425775513 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.42373922 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425731233 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425143379 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424346909 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424361785 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424810027 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425193315 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425957868 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423706324 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424827976 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425769366 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423997283 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426038744 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425870636 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424616356 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424926103 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424782998 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425435386 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42501103 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425782846 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426241424 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425508369 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426013392 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425891519 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424043029 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426056135 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424432185 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42625623 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424923169 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425277963 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425402979 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.432393742 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.430234878 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427313488 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424849767 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425654129 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425614807 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424713366 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.426729405 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426760135 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424932389 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425898643 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425779004 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425972744 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423673989 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426969449 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426548236 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427347919 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426789748 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.431094694 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427274306 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426561296 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.4272639 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427214522 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427531253 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427909792 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426280045 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.428737621 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.429612733 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427458129 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427271373 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428081113 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428033342 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427658573 seconds)
  done (took 95.39651069 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428005475 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.42878183 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429258707 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42911644 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430043513 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.429146751 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.4302295 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.428734338 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428232599 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428258719 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428165831 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427714865 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42811778 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.429370872 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.429336091 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430182358 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430094009 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428052478 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.429570338 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42942444 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428861939 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429724827 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.430593932 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430226078 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.429441341 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429871424 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.429891399 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.430720624 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429637107 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429092066 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.429177062 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.43076644 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430315266 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.42982931 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429647514 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431741145 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.432704955 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.432049844 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431156574 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432428523 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43063891 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432382916 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.432256294 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431116904 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.431347311 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430380916 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.431278936 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43091164 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432476365 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.432347507 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.431521215 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431568637 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.431223272 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431600136 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431552993 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433109964 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.432359031 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433163533 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.432848409 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.432438371 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.432872924 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.433472511 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.434861515 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.433576155 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.434349159 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.432407571 seconds)
  done (took 95.701589988 seconds)
done (took 1929.695208008 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.653316039 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.6011893 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.422365931 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.416876685 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.422771779 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.405425927 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.419260438 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.423311931 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.421890452 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.4234176 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.423529766 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.723037336 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.439304747 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.424380921 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.424134592 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.577145459 seconds)
  done (took 28.89833826 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.460999964 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.439547026 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.576190171 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.433532784 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.46127018 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.693313584 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.503132067 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.432731983 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.642014043 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.456967048 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.407465851 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.45991463 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.428710662 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.412467605 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.455697892 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.694639382 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.789263076 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.412165541 seconds)
  done (took 31.43768003 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.032031518 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.43968182 seconds)
  done (took 5.750604808 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.455803493 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.429947691 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.431944314 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.429095068 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.398405482 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.400602339 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.428690618 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.405264664 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.399684694 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.592286701 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.437749242 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.451731676 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.431334529 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.432108301 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.438704112 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.493455907 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.654489513 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.441136824 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.437583788 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.44365523 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.429320656 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.587341938 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.487829633 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.444071554 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.587089043 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.41732353 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.436197997 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.446033885 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.606636011 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.440584309 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.430994333 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.430032688 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.43122439 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.407815686 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.057446272 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.414922247 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.465891158 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.450671765 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.439508963 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.630630124 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.432327812 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.44605812 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.404094543 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.062966666 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.596920041 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.608148983 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.405412587 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.436399838 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.434481508 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.512324857 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.436920785 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.43561552 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.528064567 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.348604177 seconds)
  done (took 91.450902942 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.40235808 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.402429527 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.67336405 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.425184516 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.402582968 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.406423819 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.406534309 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.804419543 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.445193135 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.406087325 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.841061143 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.166661487 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.410922437 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.472709275 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.442164817 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.455996115 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.404723254 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.423924788 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.423177905 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.416930602 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.115870461 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.41080671 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.421955403 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.478323116 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.476250227 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.097845543 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.403182975 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.403679755 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.426145113 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.405005693 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.151792068 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.42103741 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.457738725 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.405766683 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.803168895 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.942923957 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.904208001 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.412066856 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.448894584 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.414204209 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.445826805 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.102896255 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.930665904 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.415155796 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.42608009 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.102636585 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.40722888 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.41610459 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.418546171 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.770672025 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.405817877 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.406726651 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.407386163 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.411345744 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.406765902 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.454596565 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.453471632 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.101372528 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.41916266 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.40764283 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.413515364 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.411965306 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.418175384 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.41283043 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.410211522 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.925485496 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.670857516 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.408240601 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.925957554 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.132569442 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.409694068 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.217807795 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.413595751 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.420966661 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.442760703 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.408641978 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.408216925 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.095492241 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.433579578 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.408787458 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.906177106 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.411543814 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.825473407 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.429718332 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.410004163 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.127737682 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.416678196 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.450502191 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.40843057 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.410019389 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.428935342 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.411784767 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.812299176 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.470083941 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.408436506 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.409889693 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.423359213 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.411720094 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.410297496 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.410671218 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.216029496 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.426733875 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.410768786 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.430069494 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.415468196 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.411816894 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.413502513 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.414711326 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.789303374 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.409773477 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.418497422 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.409903871 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.411015046 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.414114183 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.490859068 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.423428147 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.864827504 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.413858145 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.411157731 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.431062777 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.409050271 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.427709627 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.411447084 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.417881422 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.410011986 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.841231277 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.43345044 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.411406646 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.413896279 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.425659017 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.411208088 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.435021661 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.469952359 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.413293408 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.343360144 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.459575201 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.415288076 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.412154367 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.428649621 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.419176698 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.413295713 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.414147428 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.820321565 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.814718477 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.664693674 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.417498133 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.415157612 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.360151525 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.464260295 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.682663068 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.436829013 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.414244088 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.803445117 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.650182331 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.41694478 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.411964609 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.416946457 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.787067196 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.414012354 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846748669 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.166110509 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.413178589 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.422333315 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.335868688 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.346498252 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.416108361 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.415197492 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.831213453 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.434972702 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.416083009 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.414089389 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.416779117 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.414806939 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.418892654 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.426601596 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.417205359 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.415888431 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.758861863 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.699485947 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.435637801 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.421707258 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.104809348 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.440009655 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.428527329 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.423280363 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.412835599 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.413579129 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.485431842 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.426332986 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.463524866 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.413106304 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.426635608 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.134322179 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.41295852 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.417219397 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.695784988 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.296927214 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.414310786 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.416331015 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.414259103 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.474642341 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.135909601 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.462345735 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.867672139 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.414072907 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.490918363 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.414774463 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.424656166 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.135435728 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.419813162 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.438025115 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.305964816 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.414400672 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.877375049 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.414955212 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.417189365 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.234023824 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.41581391 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.4169144 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.41610892 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.437023521 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.811953741 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.41715647 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.436389153 seconds)
  done (took 523.693419337 seconds)
done (took 682.508523762 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.417656254 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.42063687 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.421199581 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.421773048 seconds)
  done (took 10.9745791 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.455825912 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.444387377 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.455550597 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.446043802 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.454863429 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.445957408 seconds)
  done (took 9.997628469 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.417583619 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.424662313 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.423091582 seconds)
  done (took 8.559115165 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.741388971 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.443102646 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.928462412 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.426113195 seconds)
  done (took 9.835709765 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.455344426 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.455661575 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.455782052 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.456376401 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.456221214 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.456838471 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.457352084 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.457258985 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.45728357 seconds)
  done (took 14.398933622 seconds)
done (took 55.06071736 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.608066012 seconds)
    (2/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.573534456 seconds)
    (3/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.500942823 seconds)
    (4/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.570648544 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.556949595 seconds)
    (6/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.395915431 seconds)
    (7/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.40095406 seconds)
    (8/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.562982764 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.486371277 seconds)
    (10/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.578229467 seconds)
    (11/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.419535753 seconds)
    (12/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.670648062 seconds)
    (13/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.402759247 seconds)
    (14/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.497638073 seconds)
    (15/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.48556447 seconds)
    (16/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.818987526 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.646423962 seconds)
    (18/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.923584975 seconds)
    (19/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.611361682 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.686148916 seconds)
    (21/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.610161879 seconds)
    (22/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.544651244 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.582189048 seconds)
    (24/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.43950994 seconds)
    (25/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.683279278 seconds)
    (26/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.480711269 seconds)
    (27/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.409475605 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.637760291 seconds)
    (29/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.713377588 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.588257417 seconds)
    (31/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.432326904 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.609574304 seconds)
    (33/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.562137685 seconds)
    (34/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.555212642 seconds)
    (35/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.399641044 seconds)
    (36/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.749510186 seconds)
    (37/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.695388988 seconds)
    (38/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.40029399 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.79425135 seconds)
    (40/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.683337595 seconds)
    (41/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.40647648 seconds)
    (42/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.639467142 seconds)
    (43/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.401342936 seconds)
    (44/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.401292441 seconds)
    (45/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.704589739 seconds)
    (46/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.498129406 seconds)
    (47/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.788311349 seconds)
    (48/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.788923857 seconds)
    (49/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.744362953 seconds)
    (50/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.489782535 seconds)
    (51/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.681713995 seconds)
    (52/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.83549151 seconds)
    (53/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.405760118 seconds)
    (54/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.679046826 seconds)
    (55/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.404795121 seconds)
    (56/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.432808459 seconds)
    (57/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.625578364 seconds)
    (58/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.404143362 seconds)
    (59/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.607246145 seconds)
    (60/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.838471708 seconds)
    (61/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.46734679 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.437778924 seconds)
    (63/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.960773504 seconds)
    (64/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.498179971 seconds)
    (65/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.937866959 seconds)
    (66/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.489904128 seconds)
    (67/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.586616986 seconds)
    (68/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.614803181 seconds)
    (69/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.696585858 seconds)
    (70/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.574376602 seconds)
    (71/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.855839279 seconds)
    (72/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.590756757 seconds)
    (73/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.40249874 seconds)
    (74/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.794256029 seconds)
    (75/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.674961739 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.615287111 seconds)
    (77/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.584164648 seconds)
    (78/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.448994177 seconds)
    (79/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.515971829 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.584473067 seconds)
    (81/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.717716129 seconds)
    (82/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.581804921 seconds)
    (83/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.687910383 seconds)
    (84/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.431472187 seconds)
    (85/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.50259394 seconds)
    (86/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.404194836 seconds)
    (87/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.498450886 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.631152677 seconds)
    (89/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.744079187 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.676704698 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.621746243 seconds)
    (92/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.488245747 seconds)
    (93/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.402895648 seconds)
    (94/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.866828806 seconds)
    (95/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.430362548 seconds)
    (96/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.850461291 seconds)
    (97/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.739201123 seconds)
    (98/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.660211888 seconds)
    (99/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.921767636 seconds)
    (100/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.410808944 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.683842337 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.584689785 seconds)
    (103/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.405061984 seconds)
    (104/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.498549362 seconds)
    (105/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.413612094 seconds)
    (106/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.41039737 seconds)
    (107/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.654052306 seconds)
    (108/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.404712918 seconds)
    (109/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.643365193 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.46736467 seconds)
    (111/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.014003178 seconds)
    (112/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.116373179 seconds)
    (113/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.798800393 seconds)
    (114/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.661490194 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.495446034 seconds)
    (116/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.840388642 seconds)
    (117/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.40958735 seconds)
    (118/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.63196961 seconds)
    (119/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.437608581 seconds)
    (120/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.500378575 seconds)
    (121/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.560243869 seconds)
    (122/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.404423216 seconds)
    (123/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.754103018 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.617471188 seconds)
    (125/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.404535451 seconds)
    (126/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.647455098 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.605449408 seconds)
    (128/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.596110581 seconds)
    (129/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.404580429 seconds)
    (130/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.4659126 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.618282045 seconds)
    (132/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.499657394 seconds)
    (133/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.930371313 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.566691267 seconds)
    (135/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.405226042 seconds)
    (136/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.761278721 seconds)
    (137/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.685097734 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.687869736 seconds)
    (139/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.409626461 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.636844252 seconds)
    (141/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.611877041 seconds)
    (142/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.407305007 seconds)
    (143/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.760990277 seconds)
    (144/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.564932803 seconds)
    (145/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.631807369 seconds)
    (146/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.595595431 seconds)
    (147/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.790332067 seconds)
    (148/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.627040632 seconds)
    (149/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.611139937 seconds)
    (150/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.590395259 seconds)
    (151/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.693339635 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.682395227 seconds)
    (153/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.757293019 seconds)
    (154/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.797905376 seconds)
    (155/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.635992328 seconds)
    (156/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.431148542 seconds)
    (157/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.720792707 seconds)
    (158/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.630515655 seconds)
    (159/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.672298063 seconds)
    (160/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.633840728 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.784124573 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.62132957 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.524248301 seconds)
    (164/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.489782394 seconds)
    (165/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.753221831 seconds)
    (166/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.566011362 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.498660688 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.786261018 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.624808225 seconds)
    (170/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.501763806 seconds)
    (171/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.611408337 seconds)
    (172/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.410430754 seconds)
    (173/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.628880879 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.685906428 seconds)
    (175/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.494216548 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.429131316 seconds)
    (177/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.438085108 seconds)
    (178/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.408985808 seconds)
    (179/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.710487625 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.723545641 seconds)
    (181/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.409313642 seconds)
    (182/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.414307992 seconds)
    (183/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.849246193 seconds)
    (184/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.907621214 seconds)
    (185/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.618354541 seconds)
    (186/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.868684838 seconds)
    (187/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.438958753 seconds)
    (188/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.59049604 seconds)
    (189/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.113577641 seconds)
    (190/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.584111639 seconds)
    (191/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.757471324 seconds)
    (192/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.605609484 seconds)
  done (took 357.083082083 seconds)
done (took 358.379609455 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.490612319 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.616518483 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.463574174 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.464071024 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.464374974 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.436230823 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.49883173 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.471941858 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.487259658 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.484832184 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.440683693 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.478104304 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.486411086 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.472386608 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.506001007 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.466537819 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.46501919 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.474749058 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.488005982 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.489440661 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.466058219 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.467912784 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.500165908 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.463873584 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.48035913 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.480255834 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.478658564 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.440972697 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.471040277 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.487745753 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.449370273 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.478039211 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.488523925 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.475739478 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.466948486 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.473392741 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.466715076 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.615647283 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.495858796 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.474856754 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.473600379 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.488322921 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.478477466 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.477169478 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.476158666 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.500971108 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.481372247 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.48878122 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.44149469 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.44672692 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.498261127 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.486694991 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.474762049 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.440220786 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.452643804 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.490034731 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.47694396 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.493435164 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.473365154 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.474104144 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.508650087 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.493952129 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.48893983 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.482722838 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.474782024 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.490327646 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.475501389 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.492193037 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.480067891 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.47604636 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.468861369 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.473422424 seconds)
done (took 115.898821494 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.647351105 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.438749509 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.685483259 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.477433059 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.696538296 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.646636629 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.476621363 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.477489351 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.476517789 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.334232098 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.475312887 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.477064856 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.439084397 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.47807043 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.644846317 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.47618311 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.475027376 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.232987798 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.478337643 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.658046808 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.44415285 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.476656913 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.475993351 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.344773592 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.438168569 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.446826863 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.65881646 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.47724365 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.239731742 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.447009148 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.439419217 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.24011126 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.659224683 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.498051533 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.489759557 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.487626604 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.702523205 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.479812692 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.647858014 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.648810998 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.686534928 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.516243092 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.446415288 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.445948888 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.480699187 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.481440063 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.478683637 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.508211205 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.443098945 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.478193421 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.240547768 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.489699772 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.490410897 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.479009167 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.480587371 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.498546289 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.479560494 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.48069318 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.661559336 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.481864838 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.653964446 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.344632652 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.342084911 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.48116412 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.44450911 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.479511046 seconds)
  done (took 118.743251642 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.596585991 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.606706202 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.650694408 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.474894188 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.563768829 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.647386375 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.474716583 seconds)
  done (took 12.329580808 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.485354109 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.480985257 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.564855978 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.564869667 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.481328247 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.70532824 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.479546316 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.493737437 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.480879307 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.565219152 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.482828578 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.481290044 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.491350402 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.445879466 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.565038822 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.491952154 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.647542819 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.474935186 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.483085384 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.683212579 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.480756526 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.490609944 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.566442073 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.491849277 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.481193733 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.487955557 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.321137067 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.481734374 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.482838285 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.483582863 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.482156145 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.594748118 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.482923073 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.449417625 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.481480013 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.645639086 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.483430051 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.482735759 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.483722685 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.451172666 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.484356146 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.483703339 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.483359092 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.483965594 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.487267689 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.509516957 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.486289283 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.485849073 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.483786591 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.483457638 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.569018309 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.482529517 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.484265841 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.482756711 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.569979884 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.493204338 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.484012317 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.484370673 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.482678349 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.481957168 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.685407551 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.56596799 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.483925575 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.567355667 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.483334997 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.487416941 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.484060857 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.485595898 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.62671999 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.484475644 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.568853623 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.483699289 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.718933812 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.510384316 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.4862156 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.482727238 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.48325866 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.486059086 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.450691111 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.490898598 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.484589346 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.478637961 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.490763595 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.485544007 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.48633489 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.697238664 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.648537778 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.487678706 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.500438918 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.49385952 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.486529327 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.571548589 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.487037213 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.485991969 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.569962144 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.654625005 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.570945369 seconds)
  done (took 153.15574446 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.496588219 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.497181241 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.487856103 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.512394838 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.478288615 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.477896596 seconds)
  done (took 10.27202733 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.481231448 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.491845017 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.488625894 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.487132407 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.488878858 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.4888519 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.489415728 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.480875605 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.493490617 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.487800369 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.489710598 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.491028573 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.490499246 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.490304598 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.489377594 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.489582579 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.489215633 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.489926338 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.486606712 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.488884516 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.453237105 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.488767461 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.489929411 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.481816438 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.492362332 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.489078884 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.512381567 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.490599049 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.489572032 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.491225665 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.492001393 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.490478852 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.481637644 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.486014388 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.493558225 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.483227092 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.493555081 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.490635716 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.48862282 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.4923279 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.491712878 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.491221405 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.49039169 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.492259595 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.483569593 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.488447797 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.494958123 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.512229662 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.490720154 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.491279372 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.491727195 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.492007188 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.491066636 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.492747018 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.484937016 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.486786484 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.494868726 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.492518008 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.493051595 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.485281124 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.495437513 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.498854917 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.485364444 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.496054841 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.492299964 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.492654269 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.484454552 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.497310657 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.493445081 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.490328484 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.493829348 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.490802217 seconds)
  done (took 109.612193565 seconds)
done (took 405.424829453 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.021680899 seconds)
  done (took 4.348476996 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.580552877 seconds)
  done (took 3.908850072 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.344412443 seconds)
  done (took 26.676786693 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.511808241 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.476819014 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.481006279 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.461909227 seconds)
  done (took 11.25831169 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.845431531 seconds)
  done (took 4.172436453 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.464278523 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.490594929 seconds)
  done (took 6.283512729 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.775261994 seconds)
  done (took 4.10150355 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.851827945 seconds)
  done (took 4.185258684 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.479302151 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.479653872 seconds)
  done (took 6.302888727 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.433816619 seconds)
  done (took 3.760855763 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 22.315229822 seconds)
  done (took 23.642813727 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.466052631 seconds)
  done (took 3.795278087 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.499712638 seconds)
  done (took 3.828053484 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.855454943 seconds)
  done (took 7.183890563 seconds)
done (took 114.777944741 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.456078667 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.463929946 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.461687202 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.463122021 seconds)
  done (took 11.172531856 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.609468774 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.611827663 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.614412629 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.601476068 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.601425432 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.612954693 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.527547043 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.529240834 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.590044237 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.589422579 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.622062135 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.602210379 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.61829769 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.529931844 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.589977399 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.61933602 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.591063641 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.615635061 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.528362441 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.599669623 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.495786441 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.604819859 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.590345114 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.496546035 seconds)
  done (took 39.322069728 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.071408173 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.614093455 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.697743686 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.579364876 seconds)
  done (took 8.290888667 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.659187038 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.663126645 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.674485491 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.711044191 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.76729464 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.670217351 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.527140428 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.52621978 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.512704863 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.664204087 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.749234453 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.654139888 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.882670554 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.495293082 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.879751329 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.495541786 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.497698695 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.661908194 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.71016028 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.739288075 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.49640258 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.661701743 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.665696944 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.66098161 seconds)
  done (took 40.955377637 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.512769117 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.520882229 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.498185838 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.520577652 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.499657044 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.500959933 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.498319863 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.513464387 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.498213634 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.497693806 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.50066227 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.519537296 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.499846943 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.49972535 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.512927587 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.500294486 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.501421306 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.512605409 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.51549593 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.500439755 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.499061578 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.512700114 seconds)
  done (took 34.466296169 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.462680694 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.460374047 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.899188996 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.803735517 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.459678566 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.461332129 seconds)
  done (took 14.879269284 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.590250059 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.789157616 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.490326458 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.941930116 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.066291181 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.491772942 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.491585557 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.834254761 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.21656064 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.192715778 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.57675386 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.588545233 seconds)
  done (took 22.603085351 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630316607 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.472981725 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.49473065 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534236302 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476246177 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.474600716 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.541069643 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364003132 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.506987237 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.829516169 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489102351 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637237668 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.812106344 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484944 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.478998063 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.441925192 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.797663795 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148623648 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481795625 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474610843 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5413789 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.473394697 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.488949328 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.757763051 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.475314354 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473150391 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.851188619 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.474777624 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897153192 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853371997 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862547255 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481138907 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.834872647 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.295459359 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.657269615 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.75014197 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46815241 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.4757341 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.473095567 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.492487347 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482318736 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.482607181 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852326402 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482730311 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47594076 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488230312 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341780054 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.507816112 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.477294914 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.476902615 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864478786 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638808049 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.50367655 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.476464779 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489093481 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480911713 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.503971071 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.686306548 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202697774 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476897725 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496124612 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.488666401 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476274742 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477734075 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314593985 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.507672588 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.504318182 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.502676702 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477031402 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.49126296 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536869388 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47741504 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.527982155 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477278151 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451217644 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.497508098 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483823258 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215338347 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494360771 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.48285365 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790611432 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47661445 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477916221 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.477051167 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.478476348 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.463916466 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515445924 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.44815266 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588558992 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370917489 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.764615528 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528801533 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538941719 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.782038973 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.44753212 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480074387 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.479635155 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506479699 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530584162 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.33838905 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48053513 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.506197611 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820343983 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.779050814 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484643613 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.453531765 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122129218 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498754276 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.537112366 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.483671003 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.762434036 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.29442522 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876781329 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488398909 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550889957 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.480637098 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.496405793 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497182987 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.514458647 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.501064346 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.885194618 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.465401641 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488930541 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630804378 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486997753 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.480736552 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484528305 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488852807 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.481271606 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.75369745 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490814439 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.866470031 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.490654363 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481043364 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.487751619 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486620051 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.510200354 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.788310511 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494609615 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.840642584 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482778571 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482445847 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483443181 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.788503203 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.487092597 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.517542699 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912486427 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485593385 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.49001343 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871941048 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.549991518 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681347746 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543864412 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.484881423 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.829917617 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.512637885 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.511282266 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488526788 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.491335665 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494054027 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.518494147 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476418195 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300711354 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485884343 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.494458479 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.485090667 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.528484872 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635853903 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.515264686 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.761766423 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.501452803 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478451415 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.534137895 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.500491438 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789536226 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864545275 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.507546455 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.738581282 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.117279299 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30248232 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.529981362 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.486561873 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.484695854 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.491898655 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491025779 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485324076 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.486913594 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766275307 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883780123 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491626903 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.330603633 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489961956 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.487633588 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.540549395 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870140469 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.523782389 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487401855 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.497170555 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487840597 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493460377 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.895885643 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797015179 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.532378454 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48527833 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.137578319 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.517195866 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.488877042 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486482185 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542165593 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.486872877 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505957636 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91808686 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480128304 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873811048 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.515752248 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.541705897 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.487545099 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487840458 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49617399 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.515279003 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523990585 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.767997244 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.512993237 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497358358 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214464353 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481405073 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.242301622 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491251436 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.517434724 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.497356822 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373984848 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494320821 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490235176 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.870037104 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39773291 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495960065 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129650146 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.507782309 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.498668999 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897779389 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803010634 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511384513 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.50133568 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885329971 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.794337953 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546389523 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.493749659 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495934085 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.459707272 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176334784 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495732523 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.751521615 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393752865 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496911165 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.498643298 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.539875916 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.495553939 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057537764 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.49715959 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490172528 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.504356106 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.495530193 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490954471 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.500843089 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492409964 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.331968053 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.506580969 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.132324579 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49679404 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.772683523 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.872314909 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.860424779 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.498086453 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.516548089 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.832466825 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87906877 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498173964 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499365736 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.254705155 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.444939332 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.523998827 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493378732 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.504187508 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514803314 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92677358 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.504744703 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.498394314 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5072629 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.494107666 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494486974 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.494145589 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.501881071 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494537609 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15043107 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.496063082 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51588739 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499288492 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499147622 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.833443415 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.538734011 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.311206195 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.80813468 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4876595 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.558255697 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.521259513 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49790773 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.469669642 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.495198656 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.494829056 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.577494736 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.806258882 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.493895767 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.46920834 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.571951992 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.797664353 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.495176656 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.494380187 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819489475 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.495464472 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.51805254 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493437678 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.557730351 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.499511146 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502360531 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.501404962 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59937161 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.646458883 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777274541 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.88405893 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.888820429 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063311752 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501591788 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504449903 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.540702417 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.657447711 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507620906 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.514830273 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.495878003 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308489578 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48277913 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.320412952 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891696633 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.505516309 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499691057 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497663285 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825216251 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496990015 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.859071255 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497316733 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.492704974 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553668312 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502970874 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507617554 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800395846 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.851146295 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498625978 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511041872 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503605382 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.497552727 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889925946 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.797711985 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160908451 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214804551 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498979235 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.504677236 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371061711 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.854071946 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500547591 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500865299 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500229673 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.508105745 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.509047904 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.535425489 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517411677 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.818170523 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882456073 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.335277552 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.885700339 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.530613426 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.499924467 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506816894 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.845073246 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420797924 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.780329189 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324386711 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.452591004 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84076348 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652372135 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785468809 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.502029553 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824450791 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.505358398 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500588169 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501054569 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501258505 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.501424099 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.879896738 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32991437 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84217127 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.5283102 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.50520335 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.56016425 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.783982307 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.808414254 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.503971141 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.814734471 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90206967 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.519711411 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.502474582 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32938651 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895027922 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509940895 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.529930098 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823448498 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.504946055 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5730045 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.456306699 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.502881337 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217387071 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.801590831 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.554193938 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513899079 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.455999258 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330147081 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.520113835 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164257689 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505750766 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519515017 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.862390951 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.534128327 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.508839008 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.875278763 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.531110555 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.509770481 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793951592 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.319558723 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.506621059 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.513019009 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523961531 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.512426755 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504568913 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.573719465 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510164386 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508624665 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.066785937 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.509346684 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505926696 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548399207 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.511424742 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515272159 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.511246716 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50544954 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.538036087 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.488898344 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.49254329 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.523055132 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.727038264 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201072287 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511294837 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.205470542 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.929912037 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.84658042 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.515578063 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.482331936 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.535441274 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507883649 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507132646 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506696208 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.498561584 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253156914 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.515246038 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.896758729 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541600716 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.806555918 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.803299707 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.509271535 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797073915 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517914813 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560547539 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.475019763 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508403408 seconds)
  done (took 1061.89396252 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.526265736 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.522617227 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.538489846 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.593729831 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.537524639 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.647599251 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.515361067 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.512038438 seconds)
  done (took 21.756695667 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.507150665 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.530706104 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.50465377 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.530800669 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.516448565 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.160192857 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.503017388 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.532822156 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.553347741 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.502930995 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.505012893 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.348407713 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.540246214 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.502108753 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.506196284 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.532782067 seconds)
  done (took 35.147994309 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.770826933 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.742675448 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.107472885 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.51887981 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.526818669 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.537708532 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.921942448 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.504105306 seconds)
  done (took 28.99721061 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.543397034 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.54320958 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.545053529 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.544046768 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.544826894 seconds)
  done (took 9.086691611 seconds)
done (took 1329.90177665 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.540000722 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.53830316 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.537985871 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.537668023 seconds)
  done (took 7.518631245 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.479871987 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.478546468 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.483183232 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.521549702 seconds)
  done (took 10.328076915 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.473795515 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.250104849 seconds)
  done (took 6.087839173 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.178021312 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.18265961 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.17971175 seconds)
  done (took 7.907157816 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.901789676 seconds)
  done (took 3.269283615 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.502161553 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.508175655 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.515496349 seconds)
  done (took 8.894816862 seconds)
done (took 45.372533688 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.502925268 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.294832534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.661931521 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.513444412 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.671901783 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.661697064 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.798541072 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.514474851 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.502244733 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.511268157 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.514084019 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.672204196 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.789258816 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.273767844 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.789287939 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.274411432 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.670120481 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.519634515 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.503399001 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.509104474 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.80141497 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.514811974 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.504435375 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.502814359 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.670050989 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.652283297 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.516060318 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.277283306 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.50285347 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.505909026 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.652469983 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.506974036 seconds)
  done (took 87.123415627 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.503012918 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.504522537 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.525341037 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.504064029 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.517043474 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.504990963 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.506802436 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.504925591 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.523283373 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.506048151 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.525237462 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.505990322 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.529961317 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.505235687 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.508061884 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.506508265 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.505961617 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.50473297 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.505522665 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.506886525 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.506008341 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.512250895 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.506016721 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.526565075 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.50748702 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.505553186 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.519098064 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.505844773 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.507730627 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.514784108 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.506895535 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.506499744 seconds)
  done (took 81.697967181 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.51112205 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.507066367 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.507488697 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.526460453 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.507910329 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.532457863 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.52829232 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.526193939 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.532166695 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.505709699 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.528496885 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.517425017 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.509247161 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.513042336 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.510032525 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.512113168 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.520982382 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.508699535 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.508583529 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.510181288 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.511857618 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.508405154 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.527053265 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.50726723 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.509805332 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.5287854 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.516302596 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.509028348 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.531096796 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.511933466 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.510512545 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.509932095 seconds)
  done (took 81.877154911 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.835483199 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.544014431 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.548336559 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.517333455 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.550546546 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.545814381 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.519889924 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.842387359 seconds)
  done (took 16.276536982 seconds)
done (took 268.345373744 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.538051452 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.19150438 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.577442006 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.518198928 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.569612029 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.57866793 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.835856152 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.575821758 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.821002587 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.538085953 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.570352696 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.533713331 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.519942026 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.748041494 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.493019189 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.519064541 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.527936689 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.517087194 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.264959811 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.861499986 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.577357079 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.515203924 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.50556848 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.526572409 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.497714829 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.631395305 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.626721806 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.775482413 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.727402206 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.626743876 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.181853223 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.528930878 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.545771778 seconds)
  done (took 70.940596219 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.540519503 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.550536699 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.551012248 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.549753149 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.552038287 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.550150058 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.539616805 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.55083513 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.550539842 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.54952414 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.54995541 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.552984008 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.551785671 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.551465449 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.552249975 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.523650458 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.542094704 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.550028254 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.538872576 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.523111843 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.550558768 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.550641601 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.551516642 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.552262477 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.550591175 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.550963918 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.551571258 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.553690103 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.552549315 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.551731544 seconds)
  done (took 47.812463583 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.551000654 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.319909536 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.517861106 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.562754034 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.543881453 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.545621758 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.94677731 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.553970585 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.54904007 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.546546108 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.160279041 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.555717734 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.588464078 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.489602763 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.547606857 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.555581614 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.554784935 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.544934241 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.319269581 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.565857152 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.943524452 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.552989664 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.946889755 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.563845793 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.54889019 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.5479664 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.55642404 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.496986802 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.572884722 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.160214298 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.526277538 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.941458268 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.432193089 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.553323086 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.527489006 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.560646784 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.554411703 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.164880674 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.546685651 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.545099136 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.942484655 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.545508894 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.49264917 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.336714606 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.569599528 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.555436135 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.517901682 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.19094146 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.861254633 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.560347654 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.524485551 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.550687905 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.557109811 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.550323264 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.860654068 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.550766756 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.547641218 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.518560147 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.560219494 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.948117565 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.563285597 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.550801956 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.331787094 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.555582871 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.320389345 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.562003799 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.564997756 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.55048348 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.518650032 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.558371075 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.354316076 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.572187846 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.558468714 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.180252252 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.327092852 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.52720531 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.572703694 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.332612059 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.471667452 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.96833906 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.561946321 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.47906099 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.964960558 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.554640992 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.56125573 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.561258104 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.558764142 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.695142448 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.946474478 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.2903636 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.35702934 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.545068057 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.971891258 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.570773281 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.550137626 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.520624166 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.561073513 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.560443965 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.509205256 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.361529912 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.573682659 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.566422518 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.345238525 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.574573764 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.944999779 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.565452562 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.523147322 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.556420827 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.697385401 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.560398218 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.565536372 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.557794466 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.945716491 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.559170269 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.561442625 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.338289387 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.220715008 seconds)
  done (took 221.164860635 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.525217558 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.524252002 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.526043779 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.524969412 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.523260744 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.562968657 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.531220346 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.527035805 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.551461677 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.523946376 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.524930301 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.555632878 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.5536695 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.522492001 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.532418613 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.526493767 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.525488891 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.533507927 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.525922047 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.525109723 seconds)
  done (took 48.030687633 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.570906538 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.358116211 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.300462091 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.568030124 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.561655362 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.553646941 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.628534117 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.561223533 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.560633304 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.982430517 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.792977165 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.567867744 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.562608625 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.562208295 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.297266014 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.539568475 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.973083519 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.307282581 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.564069565 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.343639718 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.541778881 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.565262664 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.553489937 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.306365984 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.983889921 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.960283637 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.639525948 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.326687214 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.566930473 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.56620154 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.306720639 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.565386772 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.556539627 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.33065797 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.571501516 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.58635557 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.56574387 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.637057548 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.636516347 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.997670164 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.354735403 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.971602394 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.591916122 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.785895539 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.566420981 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.535597997 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.319499568 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.567247274 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.536132004 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.567718073 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.578173733 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.314087008 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.563391337 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.312296207 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.573118411 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.566682607 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.318259605 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.315480481 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.31027947 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.795213484 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.557271913 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.960341605 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.573600596 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.323433448 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.568773794 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.566549559 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.569504195 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.796100468 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.320115219 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.961742412 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.987208708 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.979626879 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.568752633 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.646683911 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.56921128 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.979605996 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.646472991 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.036759702 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.978162377 seconds)
  done (took 145.343157677 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.934177663 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.702328069 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.09379859 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.324370578 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.235435177 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.771291098 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.705326983 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.893624951 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.561152434 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.738699104 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.453887956 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.68245976 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.463227132 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.661197768 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.694013184 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.757121279 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.117132493 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.531410523 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.385958298 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.431151964 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.539825141 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.733093293 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.181597115 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.853443584 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.533717102 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.250597579 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.560013253 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.251857865 seconds)
  done (took 60.431576112 seconds)
done (took 595.097685203 seconds)
SAVING RESULT...
DONE!
