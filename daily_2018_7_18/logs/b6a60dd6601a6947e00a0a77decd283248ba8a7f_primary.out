cset: moving following pidspec: 17175
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.383127773 seconds)
loading group "string"... done (took 0.507146487 seconds)
loading group "linalg"... done (took 8.478221577 seconds)
loading group "parallel"... done (took 0.172537406 seconds)
loading group "find"... done (took 1.355579536 seconds)
loading group "tuple"... done (took 1.938660991 seconds)
loading group "dates"... done (took 1.32180258 seconds)
loading group "micro"... done (took 0.209133364 seconds)
loading group "io"... done (took 0.572892304 seconds)
loading group "scalar"... done (took 40.824023325 seconds)
loading group "sparse"... done (took 12.91881047 seconds)
loading group "broadcast"... done (took 1.030761916 seconds)
loading group "union"... done (took 14.089143243 seconds)
loading group "simd"... done (took 4.868981503 seconds)
loading group "random"... done (took 9.742669778 seconds)
loading group "problem"... done (took 2.081718588 seconds)
loading group "array"... done (took 23.357853636 seconds)
loading group "misc"... done (took 1.073456583 seconds)
loading group "sort"... done (took 3.542653986 seconds)
loading group "collection"... done (took 20.950309982 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.580528787 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.133102097 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.146528914 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.172875737 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.206787159 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136905223 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15473143 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.460340325 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.047727097 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.225474286 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123755107 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.529530969 seconds)
done (took 5.665672576 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.223070605 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.072810808 seconds)
    (2/2) benchmarking "String"...
    done (took 0.126334742 seconds)
  done (took 0.891304908 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07311349 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.171542796 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092133152 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.107835594 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.107978951 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.106454013 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092314993 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108067652 seconds)
  done (took 1.481174977 seconds)
done (took 3.370815457 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.762248409 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.817948871 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.494143282 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.128122162 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.154783266 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127498065 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.309716999 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.161844115 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.10406251 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.113696236 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175593566 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.355711739 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.424517144 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.939860628 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092516566 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.129340992 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.078176136 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.713608804 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078210838 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.130072712 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.500940291 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.109937492 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116780036 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.123762484 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.205900223 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.129322593 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.181571386 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101635064 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.74007431 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.100159551 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.181250532 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095925489 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.160593981 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.227033659 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.076279151 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.105346704 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681067195 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.18736874 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.109147919 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.092639995 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.732802915 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.078007009 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.192078564 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105685466 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.112883925 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.201123946 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115652094 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.074694972 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097866621 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084754608 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.168622475 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.448112146 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104602787 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.141861254 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.107573066 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.744845449 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.093198718 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.159179212 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.121564248 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108812824 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.094873383 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.114270702 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.155231213 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.120096945 seconds)
  done (took 19.732423877 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113858838 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139219781 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.092050533 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136837707 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137481539 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.094615775 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081340349 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.092469398 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106698299 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179420007 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13454919 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.142097739 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088806678 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.077901122 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114542533 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246596545 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.103756177 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.117134248 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078633732 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104521952 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136085358 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093140281 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106759651 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.090492355 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166889864 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.215775484 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106423579 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12084393 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091379294 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097187342 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140367807 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157873421 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072711625 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091589898 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177717169 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.117927367 seconds)
  done (took 5.079253361 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194918099 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117013788 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.189601927 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.172449283 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145352447 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161733293 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116203442 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.260894588 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.244914367 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16110821 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126297032 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114203405 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075437242 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.093985686 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075969789 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.749527834 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.185524325 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.144182368 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.12130218 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099801389 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081920493 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.746349045 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097343049 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.077877449 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099025928 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.109956911 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087812632 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.169002216 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099969648 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.224344469 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.098334121 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105909302 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128927714 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190276946 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125019101 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116247128 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09998328 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07690487 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.212969645 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086623042 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.093609214 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.100841838 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133388728 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132630579 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095329963 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.087301597 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.240754935 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079754222 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112619761 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.02695684 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197929215 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.093613745 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094119347 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.126422713 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095515633 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098889834 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.335260317 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076831059 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.295732671 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131403628 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.09319679 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075696428 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100036239 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077002445 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.386728924 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101177709 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.182473562 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079856338 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.152293503 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097243172 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100247846 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082055929 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100100849 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098434623 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.094249378 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077646034 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.094474109 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.075597243 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.09914367 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095517879 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098240804 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09263301 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144018916 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.11991539 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095815711 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122532878 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097468727 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07631515 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124694414 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.079413177 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075711605 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097756983 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135542786 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082700066 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11242468 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097496969 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.139553369 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.078842461 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.178375618 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.07872961 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121146256 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096577409 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109679397 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114905157 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093718029 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080767768 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.092479258 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076674408 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.156638377 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.07856195 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076157842 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.096926218 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.076670068 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108023647 seconds)
  done (took 23.842043181 seconds)
done (took 49.346698712 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.41742443 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107637685 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106616325 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107149412 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.106472748 seconds)
  done (took 1.618168451 seconds)
done (took 2.367716937 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.319117897 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.193321089 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083676927 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187053212 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084171782 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192675963 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160221773 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.0960647 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205173717 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.078859423 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.182184409 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080206009 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101708136 seconds)
  done (took 2.738212204 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089556822 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112582769 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077947121 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103601892 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071824582 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086888222 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103602069 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.123767966 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087040035 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080918033 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088791491 seconds)
  done (took 1.771179269 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087895878 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111286834 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077920611 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087020216 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088651776 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08675162 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103709233 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096914696 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104897092 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083296412 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08876259 seconds)
  done (took 1.763178342 seconds)
done (took 7.011441577 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.114739914 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.744493849 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.099513722 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.188890098 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.327880409 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.214395427 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.631565142 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.11233856 seconds)
  done (took 16.356067962 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.105950726 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094652504 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.093037306 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092924034 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.077673256 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094294474 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.075489232 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094379922 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078244439 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094494388 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076445514 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091476696 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07810085 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.092396171 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079725179 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.093888219 seconds)
  done (took 2.225765307 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111062882 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110572218 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098605233 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.084630798 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097228542 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.097587345 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.082305382 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.098130407 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.078444333 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09616957 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.085018162 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100620592 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.082725762 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094107417 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.098348673 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.086026957 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09467166 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.082894222 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.099618697 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.083142218 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101815075 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096626277 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.083574819 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101479466 seconds)
  done (took 3.098168229 seconds)
done (took 22.427134353 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161739415 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080443052 seconds)
  done (took 0.994302482 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097184337 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115226311 seconds)
  done (took 0.969665269 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.103513608 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093313057 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.131646425 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110798224 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.077360579 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077075347 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.126711425 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.093601245 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077790934 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094594039 seconds)
  done (took 1.74448529 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081174774 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096767897 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.085862264 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.115247713 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105214488 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079883587 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.098402752 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.081589947 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.098637921 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076172005 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101981 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098759355 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.10053973 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.113818453 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.082037141 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.099625627 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104775274 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.08133963 seconds)
  done (took 2.459813817 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077208941 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079144856 seconds)
  done (took 0.915259411 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080726183 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091964736 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080861141 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095318126 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075857861 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091534984 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.07514752 seconds)
  done (took 1.350252162 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.466291945 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.177398283 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.318060144 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110417352 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.127927943 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.337013754 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.148087191 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.090143908 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108710767 seconds)
  done (took 2.683272387 seconds)
done (took 11.874394933 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088048569 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.128978229 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.592262092 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11205594 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.073823156 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.15448901 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.25553507 seconds)
done (took 2.166877625 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332984283 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117411742 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085045822 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075505609 seconds)
  done (took 1.369734061 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075951678 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081191185 seconds)
  done (took 0.922061381 seconds)
done (took 3.057466702 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074108471 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07350552 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.104776652 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.090093676 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073945697 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.071620109 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089708562 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074056033 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.092637035 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07468206 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.090655212 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.07465133 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074226883 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088266615 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071299387 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.089305822 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073980334 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.08838429 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073022864 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071943591 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091946084 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.072266501 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088840367 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.07416878 seconds)
  done (took 2.756585293 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100277292 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092547373 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.081266462 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097448484 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.078475189 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.097223145 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096757113 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.074852374 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.096887173 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.077816653 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095996353 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.079384631 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.093697471 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.078413739 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094489964 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.078671661 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.097452623 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075140019 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093224007 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07813265 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.096755092 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075742861 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094891645 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09719285 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.078413201 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095380675 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077141499 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.092499046 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080548537 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095553477 seconds)
  done (took 3.408994505 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08061203 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071720094 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089078673 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.083232493 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089452791 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076576242 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.089548234 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.075909223 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09420948 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.072384788 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.094960497 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.072268296 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075540083 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094281108 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077504465 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.096876338 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.089868257 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.09350495 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.075014442 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095554421 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.077570243 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091979052 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.075611071 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07223685 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.088539293 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.071445288 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090176712 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.072585303 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089737754 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.072237927 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.07762296 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095818112 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.072365458 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.101924434 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.078517355 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088559156 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.080397453 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089732075 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077157796 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.089479009 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07174137 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072010438 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.0924218 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083332883 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092388582 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.074492632 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092464593 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.076482917 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093502162 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.079687028 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.089025844 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.07575682 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.077397808 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093573765 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.07818273 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.089016615 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.073479983 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.088906107 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.076580214 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089382725 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.07171854 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.071523006 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096252438 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07365985 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113100406 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.10079262 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.075029664 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.077543441 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093307412 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079507194 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094686377 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.090714051 seconds)
  done (took 6.808043373 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.07678374 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101598891 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074917486 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091257306 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071404621 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072710179 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.095723921 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073735799 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091612749 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090715863 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090112965 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074283516 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091158455 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076500093 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089833565 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.074352961 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100123731 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070845431 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089729883 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076392733 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090295125 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078443087 seconds)
  done (took 2.617334727 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.215006276 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101039271 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135002745 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109970435 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092944073 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109157725 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.079337806 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099528138 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096631562 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083616497 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100833519 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080088864 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110274203 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099606416 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083851565 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102054284 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07988344 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102144265 seconds)
  done (took 2.655723764 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088528481 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093585206 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099546311 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094191993 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.075721742 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095606697 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082033965 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108996963 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.077833943 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093635104 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.103940033 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078538453 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095079134 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076012052 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09497012 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.075589385 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.095972883 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075571159 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103330543 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08169058 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099467823 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08651809 seconds)
  done (took 2.751076475 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09238301 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094872068 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095851119 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097779904 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074526296 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094483119 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085298332 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093561655 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.086969909 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09478668 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076173598 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09357886 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.083233581 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093082603 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099546719 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076460606 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09446983 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.077024219 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077580059 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092014482 seconds)
  done (took 2.55428439 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117113663 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107406658 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089739544 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11834762 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108709436 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092611302 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118927416 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089929358 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106805896 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120578112 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090406446 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108188517 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101270167 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114880192 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107221596 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101582627 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118339069 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118999424 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090373955 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107067929 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12124355 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0901006 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118934624 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089479555 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108024663 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089024209 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107764093 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114936742 seconds)
  done (took 3.74961612 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075193044 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075395505 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090030187 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072795602 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090638574 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.073255916 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072109892 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.091070218 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075468979 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089836661 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.075135099 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091794894 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075134711 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074444011 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092821319 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.075239023 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093202333 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.072281298 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090006174 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072517285 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.075124931 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093579552 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.075106833 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090257857 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073428086 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092620423 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072340799 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073128232 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092467301 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073007287 seconds)
  done (took 3.210632258 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083318448 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104107519 seconds)
  done (took 0.97275285 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.074566254 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109960579 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072748081 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.097072431 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082637308 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094521664 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.086006246 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099389578 seconds)
  done (took 1.500270819 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100234843 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114831413 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082619121 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105925025 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094550302 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.11336934 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157937425 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083527359 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.101401459 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.077551174 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113174381 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.075983034 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.102304165 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081091133 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10284342 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09060715 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095521933 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086069101 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101847685 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079010362 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100314837 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109749435 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087222209 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102396562 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.079148706 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106836609 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.090391105 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106903702 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081797643 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106585897 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083250951 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087110269 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080466532 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100323969 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.076772575 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.1119749 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111421762 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081279082 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.103385392 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082664959 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103292167 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.074891377 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.105176547 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.083272696 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107029329 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08187989 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100947181 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.075893233 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.095665328 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.080249548 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093214427 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08035873 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.070289844 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10402927 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103764579 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094978795 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096995295 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.082320752 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.099569988 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08012123 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.101725706 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.080485831 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105358282 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.079803072 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104532107 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085754901 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102430197 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.075920117 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088953756 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.077598263 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.103945783 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1011012 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106724385 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100504198 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083525473 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.0961638 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082375876 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10268987 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084984655 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107210567 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082050043 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103091876 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087663076 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098996025 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.080868758 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.102011328 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078826289 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.098326181 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.078091447 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115655575 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079933145 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096486188 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.0786975 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10639911 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.082336046 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099074105 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078264477 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10486495 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.071839747 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100788738 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083922476 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102424247 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.089926942 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100517586 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084837536 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.104763472 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088520204 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101068855 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.080843456 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.092148575 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083880323 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.097484903 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.086305711 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089202021 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082759025 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099175457 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082643605 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.105968672 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079073423 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100211452 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088250694 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107292836 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079081895 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092064153 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.081672526 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100444484 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087279195 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106367323 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.080201965 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09414818 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.076254596 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103720492 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081887748 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103074719 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083166087 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100081363 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.070981001 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095995309 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.081842993 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.105814165 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.080610256 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102208165 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104633955 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083764771 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098370371 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087456059 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.098755421 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.077528033 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104675753 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.082267427 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094308105 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087384155 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.098831026 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.078800314 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.099839201 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086938499 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.100871154 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.0824363 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097697381 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.081978175 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101279394 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.077193969 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100068738 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079471333 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.106697684 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.081919562 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093894993 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.074403453 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101608738 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.078576654 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081541179 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.095710493 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.082651807 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100516423 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.078233336 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.09859896 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.080893864 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110581848 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089941667 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101581582 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.102494175 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.089108683 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099199591 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084000156 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099240415 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083927991 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100895017 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.087275098 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.102278564 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082698403 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.099393067 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.074143898 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101905902 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08727174 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.095649716 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.078081514 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.07738158 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099960607 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106778759 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.081755737 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10161941 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079602399 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083037121 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105484257 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.099195383 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081626367 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.077363746 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.099881553 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086380876 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10182674 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083692849 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.107046328 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101476133 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.075701909 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105852397 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079665927 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.103707732 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.076115642 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.078690451 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.096546211 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.0831364 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.10030476 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.080424233 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.089977429 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086773971 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106195596 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083142888 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.096380926 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082341464 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10917219 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.080573725 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102859489 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.081574459 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.102780105 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114882038 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.077699786 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.099353657 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.089192973 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.109328588 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.071801905 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10281942 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.079224105 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.094943702 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.079903901 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.079343037 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101431579 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101810362 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.083052147 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.071373693 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.099542473 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.079425445 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.096695041 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.076256356 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105183569 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.082463926 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100225104 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108204916 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083952225 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101274084 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083596345 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.0997005 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084225785 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.10153122 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082884395 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101341845 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.080147824 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.09606667 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.082201457 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.095807537 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.077854517 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.080452431 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100995382 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082994255 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102262539 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.080306488 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105633265 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.10036217 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.083057835 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118926341 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.078943632 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.096429751 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08330446 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103009414 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.081456759 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100811762 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.075052699 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105795731 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081517904 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106673175 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.080870548 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09215649 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.082295239 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.100582062 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.08372731 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10211811 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083342728 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.099213248 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082235134 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.100147388 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091144724 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097172408 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.088213816 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102764562 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083984886 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.100548924 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082544212 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.098999435 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.077888539 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100343288 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085172517 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101363269 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081249071 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.102617311 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.082301855 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.100130982 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079527709 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102278129 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082095277 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102714851 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.071597821 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.096751354 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.079000135 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100975204 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086888008 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102063189 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.079683307 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098911168 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084101365 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099307923 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.074165565 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103966783 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084520892 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102058636 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090746207 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.097241679 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08178447 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111596658 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.071930504 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098157666 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.078315895 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098617323 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088158819 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102320547 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.08787167 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101488963 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.078295646 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.093249044 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084172977 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098443574 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.072124425 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097163318 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085837529 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.098591442 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08032607 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101299525 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.084841463 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102132895 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086010312 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100028036 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082646875 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100773025 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.073916294 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.078409542 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.096486743 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.081401357 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102659794 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.078917821 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.093548918 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081316616 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101130637 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082706725 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100781021 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.081143285 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106864698 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08273744 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.101195911 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088080049 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.091090135 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.082628065 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100008117 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082074101 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.096957617 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.083967843 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102620862 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084041196 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.105164134 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082020236 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102986666 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.081647539 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097905577 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.081872539 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10147936 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082500884 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.096845095 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085322435 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107771481 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.079045157 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.101672274 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082953487 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.098299326 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083541971 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102386618 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.083169419 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104148157 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.083158302 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.101289413 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.085422249 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10085424 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083231961 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10236456 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.081979454 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104922978 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.078488883 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107970922 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083759324 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103514788 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.080811248 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.097992967 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081846285 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100935653 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080869332 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107652341 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.08399631 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.098220005 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.077833699 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097256273 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08208635 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106669485 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088850639 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.102133018 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083754783 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095492509 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.074892834 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103750769 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080164337 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.100030432 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.085902205 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105579287 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.083384008 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.099349379 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081031606 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.106869431 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086323613 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.103763786 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079884623 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.103737509 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084177762 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.101447103 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.080239575 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101567921 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08419497 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.103997445 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.081869931 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.097750462 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091495994 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106875333 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103001577 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.081893002 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.10319099 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083577705 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.07713819 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103149858 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.081701304 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10480457 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.101710218 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082533252 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111811482 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.078417971 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100996154 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089048804 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100794426 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088932871 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096207573 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083289168 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1040223 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084548049 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095635189 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.078951262 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.098798965 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.083427597 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.097480274 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.076838558 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112156825 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.087960252 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.102196363 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081506017 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100307667 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077881277 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.094878244 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.079088709 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084627535 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10096314 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.109656537 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.078588637 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.079265967 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096167498 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08250522 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102893141 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.085322364 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095318063 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.077023282 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.098509678 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.083389915 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109533077 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081300699 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102538911 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084927509 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.102566485 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080580045 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108318085 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.075392649 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.103622981 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095063714 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103407212 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085117926 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.105247245 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108438105 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085147866 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.095979661 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085166467 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102645616 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084365805 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104415845 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087701904 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118456796 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084923289 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.098585872 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083077147 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.102560264 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.079682431 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109929721 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085838369 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103667806 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.085536303 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.101245491 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085038994 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109821318 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085099457 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103094636 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.083684513 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100486581 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082712693 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10015093 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081503698 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104181082 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084960723 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102264034 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.086421612 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.098477446 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093546031 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.108624241 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085086595 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095401957 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.07982299 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.099201576 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077564197 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103649806 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.076946093 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099715541 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081183779 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100116982 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.08667473 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104488443 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.084194951 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104496695 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.082594083 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.091698304 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087259693 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.102602469 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086162439 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.093926664 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084177533 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103124458 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088344859 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107524122 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.081882842 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.102876161 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.082601645 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10531862 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077736316 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.105710706 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082449169 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.101530041 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.079099212 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082998587 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105019449 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084431727 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10383728 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104995481 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08411247 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.10607007 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088222549 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.095528504 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.076148809 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.08619457 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.09896238 seconds)
  done (took 55.745217428 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143176375 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083819379 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074015138 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094250158 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119512084 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079321868 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093588707 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078655388 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098124921 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087977847 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093600064 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074344247 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115557462 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122600651 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119753518 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088697972 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092877422 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078620947 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093320348 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07919055 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115148305 seconds)
  done (took 2.861280873 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.09990839 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112013139 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110031915 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096090801 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105352943 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.112489691 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.090919558 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11205237 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.116195216 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086513444 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11645013 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112278425 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086092574 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107050445 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106312595 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089457985 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116988817 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104103864 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.093317876 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110586368 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108812736 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.091377576 seconds)
  done (took 3.118095582 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08767287 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081403315 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.106573201 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.076453307 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102282065 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.076471673 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.106773879 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.079610648 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107015105 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.083312246 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.100166169 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.083218884 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.107264303 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.076937872 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.100255009 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.079230936 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107105038 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08263214 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10411302 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.077201712 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.122456741 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.077053767 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.096985884 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.080700374 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.111063611 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.084334168 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.101687425 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.083559446 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.099196984 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.083618188 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.098909381 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084901424 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105813229 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.081540388 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.099751383 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083095163 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082575374 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.097153253 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.080258404 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.106237422 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.078104532 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.102867364 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089825721 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099054435 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.079550129 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.104751302 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08364097 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.096241766 seconds)
  done (took 5.25897828 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.114401867 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.150706277 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.081419897 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141888987 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118888113 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092373152 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.103534344 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140777979 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.077012467 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.101770665 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.119550324 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.095261377 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104583507 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108286685 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.086877042 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10151418 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084889303 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097415245 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088836613 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101870326 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107900301 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.086242183 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.116662776 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.113931676 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087414464 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10140723 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.079345634 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108126881 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.114644248 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.089647593 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107656538 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090274033 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.11843784 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103734418 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082063003 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104576179 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.119769902 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083204534 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104719441 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.077284142 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104523377 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088030203 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.106022531 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.119305569 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084647578 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103475788 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082996904 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.096201671 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114259073 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086697516 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112825371 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.117083631 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087893084 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102837686 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088967235 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.117547788 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102311893 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082104133 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106640184 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.093196505 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.097247338 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106990357 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.096048381 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104244234 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091814211 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115995308 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10410198 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086838925 seconds)
  done (took 7.888514886 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111334736 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107918175 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120689066 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099738162 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108847079 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.08769451 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108860121 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.107616826 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088615709 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115096893 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087982347 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.155365618 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.105518193 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113609176 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.088650743 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107598086 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.088730548 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108303759 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087839308 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108832961 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.108434273 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.100200947 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108424688 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119497961 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121178144 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085857397 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107474665 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.088952243 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119044888 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107788869 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100841979 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.108323572 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107368341 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099887434 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12232465 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108358322 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.083335129 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108295621 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.089048151 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.107605792 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085207072 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120128613 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108352784 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.085094796 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108254954 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.088388297 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12089149 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.121644387 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114211937 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095664189 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.10957962 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120068156 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08906299 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108415085 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119645483 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128824408 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099700984 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120204764 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108321239 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120156671 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100384092 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12926934 seconds)
  done (took 7.459364668 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07975769 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079102803 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097315414 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.07803537 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099516818 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077438422 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078309701 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.099836235 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081729733 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099146005 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079842497 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097603903 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077200858 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078867963 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097512983 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077719836 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097657977 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078250427 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099133912 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077445369 seconds)
  done (took 2.578395609 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088028744 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.120256537 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080462935 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107166965 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082230439 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107535741 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081361728 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102564145 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080060626 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103129766 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113048884 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093341437 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100361048 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086960002 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.112308918 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106664881 seconds)
  done (took 2.418743499 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100949977 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120735098 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12475703 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085550811 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.098196861 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.088034929 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102585169 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.075741001 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.095814139 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.088573071 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.106051521 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.087044206 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103033666 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.078337667 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.079679257 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107308374 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.074985077 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.104142833 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.082474082 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.125181312 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105239403 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083920164 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104154203 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.08242815 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103469384 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.085460849 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10748274 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.077857976 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098794375 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.083075156 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10329714 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087492107 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.097030469 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084784442 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.098347742 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077919376 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103078719 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083319865 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106511227 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083168766 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.098982261 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.082999852 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102936504 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.086025282 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.096371167 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.083999479 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.096768325 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.085799361 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.101679202 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.083246557 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103242462 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088664293 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107829179 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.091458434 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111269624 seconds)
  done (took 6.058251099 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095655047 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103510861 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085222171 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097824161 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083827924 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108655014 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.084850579 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103875099 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082652882 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096964266 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084134612 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104296776 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083599874 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104099172 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082529851 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10492871 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075597546 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.100908441 seconds)
  done (took 2.54030469 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085878576 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079014469 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108922484 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079079925 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100845656 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081086889 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096297581 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078557473 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098220465 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.080583314 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100311479 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.081964762 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097662927 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.082532024 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100524137 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081129806 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.102312795 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078372668 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079847828 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096817158 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081669162 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098991062 seconds)
  done (took 2.827505793 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.09739537 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.132571423 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.093934765 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.142442587 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.105419372 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.084862004 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.115405154 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.084871384 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.123232216 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.083961104 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.104543045 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.083963118 seconds)
  done (took 2.110858191 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105699118 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137711158 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081467264 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103552292 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115943933 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086558338 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10490447 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085343538 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119672515 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118213212 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085812949 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120944947 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118884811 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117383888 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093818879 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114643233 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105976173 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085699159 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101784433 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107180116 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105984398 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119323955 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085527799 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106273054 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104806383 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097830521 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120166064 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11921755 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08563497 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119888742 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11409292 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085542261 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12052909 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118238148 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082851559 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120737432 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10580297 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129031696 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094873617 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117137449 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103325331 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09517628 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120095967 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113015312 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099215919 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106831217 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113580576 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08625138 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105717984 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135585862 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114513169 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096975919 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114768236 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120370145 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09915605 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134416701 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118858981 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117289891 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11497581 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119443161 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097217369 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114319951 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117900911 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118718343 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094630946 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117810342 seconds)
  done (took 8.01907885 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120967048 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103161667 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085211074 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120019042 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119338389 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106380154 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08629077 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106337477 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086226316 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102270515 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153594984 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086419838 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118250872 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116894996 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085286929 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106527287 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105151719 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09731079 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10279402 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135081601 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085776955 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118182821 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117576063 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11800231 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119253809 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094961885 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105801904 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085718877 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105942835 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106537792 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093437945 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105835352 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118072995 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082821351 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11797575 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085774595 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106581413 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113942933 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086515634 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114367252 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118328401 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128696881 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086544265 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.344090351 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099641409 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106498212 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106760573 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082368197 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106087662 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083705197 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119851735 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119316296 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119885079 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097542464 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105534616 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105352525 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086743621 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105663215 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085764068 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115271153 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118446935 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086320532 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13434895 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106454184 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086059675 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118397624 seconds)
  done (took 8.067939355 seconds)
done (took 150.70346391 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098780471 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137249002 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094844126 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.163622305 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080745169 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.136616198 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.113321185 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.117000425 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080729715 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.100934582 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.081425491 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.104414688 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.146106611 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.101369939 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.081040015 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.103873042 seconds)
  done (took 2.606201886 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.175606436 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.282907292 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100615199 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107808926 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.086710595 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.104453086 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08606064 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.108626588 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.082904116 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.113260228 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102774559 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.083314884 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.112855239 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.083378679 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.102070318 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.082808477 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.113352717 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.0854794 seconds)
  done (took 2.883767361 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111333233 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146088393 seconds)
  done (took 1.133646372 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116311299 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180438027 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.291552059 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154860778 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.109619515 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.123575443 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155202695 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.119909369 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197992528 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125500516 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.104639243 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.108718409 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.134094842 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.091936906 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.111110899 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.086187311 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.134853199 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.110209577 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.089401277 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.108635017 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.113066787 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.109273569 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.09243945 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.110424624 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180940448 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123777829 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.0879431 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108849709 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.109764625 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.088552891 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.11359081 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.101422943 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123974278 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.185344061 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.093928899 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.181563583 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.095036963 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.106950578 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.088754657 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.107050272 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.09197921 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.112153268 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.122640657 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.086885581 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.108447299 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.095188078 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108703386 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.088540104 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115755591 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118081261 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095661129 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114371829 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.160794671 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118544647 seconds)
  done (took 7.386098927 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794029174 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14986496 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086719283 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.898903126 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140465369 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101262007 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.798846223 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132121399 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234903337 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.814355347 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101573743 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123091761 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231267457 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.250881838 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.142242481 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313281751 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.695881054 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.099035638 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.136140954 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.147473905 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093215492 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138288848 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.127708425 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428029897 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.108932068 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08745296 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113255829 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100368603 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178576543 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087533328 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111932815 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179734443 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.262546285 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202973801 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.087350672 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.106854066 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086043198 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.165248726 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266639365 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215462185 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.177671648 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083436521 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106976908 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099712322 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129271739 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08172409 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183682334 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.17265381 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171980842 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111923781 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121201888 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096426799 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120017637 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.160971273 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083421492 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.339194214 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.34090806 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108061185 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095119275 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127564716 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265065371 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086061962 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224742628 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135632666 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191327181 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107047368 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777071696 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.165168063 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.086703505 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117680206 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093847772 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114743103 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119402233 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165027126 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.403138856 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102545022 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112698699 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08575637 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230360554 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08649867 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106870148 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162189921 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.086632145 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117483086 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124616724 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099700965 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.191379369 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.248176152 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122624449 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095202705 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113133432 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.098178322 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.110000627 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210159033 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219790805 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.157749775 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211642489 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122262899 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162381671 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185561305 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098550965 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.169386479 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115637955 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126895159 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119371732 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.194125469 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.140027865 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.108839827 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092715532 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115321955 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.144006878 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090218161 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115862999 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.167659474 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.459123048 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185362297 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.082832878 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112109672 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095661816 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160765377 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115672724 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262191006 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097034615 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164747388 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116865322 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.104425409 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.095402008 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16311179 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123439991 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117346112 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09946903 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117276659 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.24820257 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218763154 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124340876 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221182977 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.180076742 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118682091 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17245406 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117441228 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167835271 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095457303 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11997057 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108746814 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.750680176 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122783916 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116264928 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091715995 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185510959 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107759415 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087805976 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108341703 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0838245 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775878327 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.089368013 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105422931 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.087673963 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118691159 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.095180138 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11397551 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091879054 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182386764 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.210180239 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122255765 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116215087 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.0868388 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159488684 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.109466192 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086574872 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.108436469 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.086787722 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117844589 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091127046 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109770029 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170558009 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.15678865 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221146098 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.605499889 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087168228 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107998264 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229981103 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086859916 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.304721541 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094843313 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.226145629 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164616132 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105677771 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.336951701 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167856311 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185842708 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089483424 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191337026 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083629166 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115191534 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164879164 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086699544 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115948002 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.157142684 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.1258706 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123822126 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.125378773 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108812787 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227188017 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.083100014 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189720443 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088885494 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120847643 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.309629568 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086745209 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130269739 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.161600967 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11351969 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086883826 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.859841373 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08667918 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119134165 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096810095 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223032684 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163657797 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116022761 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11577008 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100582657 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182399584 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210245534 seconds)
  done (took 43.652978477 seconds)
done (took 58.531640762 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.309033824 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.259057285 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.29299696 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.193146584 seconds)
  done (took 2.027304159 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17691175 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148994884 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120172473 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.105339307 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15077897 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083007257 seconds)
  done (took 1.684899616 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.468684313 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.368688027 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.343607381 seconds)
  done (took 2.082597695 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.25096351 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.276519181 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.320094242 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.424865178 seconds)
  done (took 2.275860492 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.202602367 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.12299056 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.095983037 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.135981842 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.1684197 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.172439319 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14074434 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.150013936 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.125713527 seconds)
  done (took 2.257597221 seconds)
done (took 11.230260193 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.29961051 seconds)
    (2/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.237665182 seconds)
    (3/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.204167281 seconds)
    (4/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.149317701 seconds)
    (5/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.20811927 seconds)
    (6/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.252676899 seconds)
    (7/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094014986 seconds)
    (8/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11034395 seconds)
    (9/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.225929678 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.089379648 seconds)
    (11/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.121616344 seconds)
    (12/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.163749082 seconds)
    (13/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.074609989 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.120991321 seconds)
    (15/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.2384647 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.090992525 seconds)
    (17/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.191844696 seconds)
    (18/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.144708763 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.224151342 seconds)
    (20/286) benchmarking ("sort", Int8, false)...
    done (took 0.203105195 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.115219711 seconds)
    (22/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.236545909 seconds)
    (23/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.133657806 seconds)
    (24/286) benchmarking ("sort", Float64, true)...
    done (took 0.224469258 seconds)
    (25/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.243810789 seconds)
    (26/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.116655221 seconds)
    (27/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.238992025 seconds)
    (28/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095057642 seconds)
    (29/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.202864581 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.138930913 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.112222338 seconds)
    (32/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.106942016 seconds)
    (33/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.122094827 seconds)
    (34/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098911038 seconds)
    (35/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.114940694 seconds)
    (36/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.175046306 seconds)
    (37/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.088904804 seconds)
    (38/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.200552908 seconds)
    (39/286) benchmarking ("sort", Int64, true)...
    done (took 0.220719689 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.114282362 seconds)
    (41/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.208149851 seconds)
    (42/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.091403488 seconds)
    (43/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112504138 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090517423 seconds)
    (45/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117899684 seconds)
    (46/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.204737188 seconds)
    (47/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.074169709 seconds)
    (48/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.119514577 seconds)
    (49/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.097626644 seconds)
    (50/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.098976367 seconds)
    (51/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.080699958 seconds)
    (52/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.188312647 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.114164865 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.096462255 seconds)
    (55/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.108287731 seconds)
    (56/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.098519678 seconds)
    (57/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.166220723 seconds)
    (58/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.189588889 seconds)
    (59/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.089727201 seconds)
    (60/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.10727769 seconds)
    (61/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.074916035 seconds)
    (62/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.12239873 seconds)
    (63/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.185640402 seconds)
    (64/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.102870843 seconds)
    (65/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.102651545 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087245127 seconds)
    (67/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.131239763 seconds)
    (68/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.180684414 seconds)
    (69/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.12315361 seconds)
    (70/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.122577396 seconds)
    (71/286) benchmarking ("sort", Float32, false)...
    done (took 0.171409565 seconds)
    (72/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.090453328 seconds)
    (73/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162651405 seconds)
    (74/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.094372691 seconds)
    (75/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.107999903 seconds)
    (76/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.085848375 seconds)
    (77/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.100566209 seconds)
    (78/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.086760005 seconds)
    (79/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.221629818 seconds)
    (80/286) benchmarking ("sort", BigInt, true)...
    done (took 0.245294993 seconds)
    (81/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.218203217 seconds)
    (82/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.177061816 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.090855587 seconds)
    (84/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135858139 seconds)
    (85/286) benchmarking ("sort", Int64, false)...
    done (took 0.083974239 seconds)
    (86/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.185978628 seconds)
    (87/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120845933 seconds)
    (88/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.072773587 seconds)
    (89/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.112937999 seconds)
    (90/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.083239654 seconds)
    (91/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.149811282 seconds)
    (92/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.153626752 seconds)
    (93/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.091539521 seconds)
    (94/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.104294704 seconds)
    (95/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.154774927 seconds)
    (96/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.226324049 seconds)
    (97/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.095955847 seconds)
    (98/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.180861003 seconds)
    (99/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.165880778 seconds)
    (100/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123148915 seconds)
    (101/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087696547 seconds)
    (102/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.180462839 seconds)
    (103/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121698804 seconds)
    (104/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.107984715 seconds)
    (105/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.120133117 seconds)
    (106/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.077930818 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.141438392 seconds)
    (108/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.162102585 seconds)
    (109/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.09041868 seconds)
    (110/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.096683506 seconds)
    (111/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.088186248 seconds)
    (112/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.177016217 seconds)
    (113/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.114457741 seconds)
    (114/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.09858536 seconds)
    (115/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.145782298 seconds)
    (116/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.137776183 seconds)
    (117/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.122471816 seconds)
    (118/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.11299159 seconds)
    (119/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.071488946 seconds)
    (120/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.122371552 seconds)
    (121/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.074990752 seconds)
    (122/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120010146 seconds)
    (123/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124067699 seconds)
    (124/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.072203157 seconds)
    (125/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.097484629 seconds)
    (126/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.152023857 seconds)
    (127/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.146593548 seconds)
    (128/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.098226169 seconds)
    (129/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.157784124 seconds)
    (130/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.096762568 seconds)
    (131/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.073637248 seconds)
    (132/286) benchmarking ("sort", Bool, false)...
    done (took 0.181702478 seconds)
    (133/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119390521 seconds)
    (134/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.156615451 seconds)
    (135/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.119770566 seconds)
    (136/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.071180651 seconds)
    (137/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123408688 seconds)
    (138/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.21732509 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.139365493 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.089711052 seconds)
    (141/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.119590892 seconds)
    (142/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08888534 seconds)
    (143/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.188992111 seconds)
    (144/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.111791346 seconds)
    (145/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.15693601 seconds)
    (146/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.124144229 seconds)
    (147/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.120805508 seconds)
    (148/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.088892786 seconds)
    (149/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.111896391 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.098871251 seconds)
    (151/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.178023762 seconds)
    (152/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.133197678 seconds)
    (153/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.086220825 seconds)
    (154/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107733983 seconds)
    (155/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.090913295 seconds)
    (156/286) benchmarking ("sort", Float32, true)...
    done (took 0.226009833 seconds)
    (157/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.104566992 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090761174 seconds)
    (159/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.072138663 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.114424147 seconds)
    (161/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.073019707 seconds)
    (162/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118928341 seconds)
    (163/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.08910774 seconds)
    (164/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.098246138 seconds)
    (165/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.16026178 seconds)
    (166/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.132503915 seconds)
    (167/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.112341174 seconds)
    (168/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.130991018 seconds)
    (169/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.115279359 seconds)
    (170/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.088283808 seconds)
    (171/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.119677122 seconds)
    (172/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130103075 seconds)
    (173/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.073268293 seconds)
    (174/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.089769329 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.114183346 seconds)
    (176/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.071180729 seconds)
    (177/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.099662461 seconds)
    (178/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.084192543 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.114386829 seconds)
    (180/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.071514056 seconds)
    (181/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.112822263 seconds)
    (182/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.086497069 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.115222248 seconds)
    (184/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097013297 seconds)
    (185/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.133634879 seconds)
    (186/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.090874642 seconds)
    (187/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.114613959 seconds)
    (188/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.114099307 seconds)
    (189/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.091199895 seconds)
    (190/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.110432553 seconds)
    (191/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.076680499 seconds)
    (192/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.073398607 seconds)
    (193/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.103222368 seconds)
    (194/286) benchmarking ("sort", Bool, true)...
    done (took 0.217278605 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.087146894 seconds)
    (196/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.101413805 seconds)
    (197/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.082836649 seconds)
    (198/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.117028869 seconds)
    (199/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.131148548 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.11410723 seconds)
    (201/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.084549229 seconds)
    (202/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.134490324 seconds)
    (203/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.098439048 seconds)
    (204/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.148167183 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124908251 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121895876 seconds)
    (207/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.071906626 seconds)
    (208/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.073476034 seconds)
    (209/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.188662046 seconds)
    (210/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.098957532 seconds)
    (211/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.073135136 seconds)
    (212/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.117018054 seconds)
    (213/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.079461979 seconds)
    (214/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.12271412 seconds)
    (215/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.07693298 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.110163607 seconds)
    (217/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.161951817 seconds)
    (218/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.097278162 seconds)
    (219/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086759416 seconds)
    (220/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110635607 seconds)
    (221/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092763062 seconds)
    (222/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.100071109 seconds)
    (223/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.10811156 seconds)
    (224/286) benchmarking ("sort", Int8, true)...
    done (took 0.217490182 seconds)
    (225/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.180140668 seconds)
    (226/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108528075 seconds)
    (227/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187143786 seconds)
    (228/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.074196686 seconds)
    (229/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.111459811 seconds)
    (230/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109111444 seconds)
    (231/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.097915638 seconds)
    (232/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112885185 seconds)
    (233/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.107522054 seconds)
    (234/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.093259576 seconds)
    (235/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.103863976 seconds)
    (236/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.090969179 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.10922335 seconds)
    (238/286) benchmarking ("sort", Float64, false)...
    done (took 0.147485048 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.115880046 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.0910006 seconds)
    (241/286) benchmarking ("sort", BigInt, false)...
    done (took 0.252647331 seconds)
    (242/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.08978085 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122286476 seconds)
    (244/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.09231942 seconds)
    (245/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.099736702 seconds)
    (246/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.134456952 seconds)
    (247/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.072155225 seconds)
    (248/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.136038144 seconds)
    (249/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.073051521 seconds)
    (250/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.097870916 seconds)
    (251/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.09581924 seconds)
    (252/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.07361195 seconds)
    (253/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.096436463 seconds)
    (254/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.106831992 seconds)
    (255/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.169281062 seconds)
    (256/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.185210038 seconds)
    (257/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.089313753 seconds)
    (258/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.097318734 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093702048 seconds)
    (260/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.097319534 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085153213 seconds)
    (262/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.108452644 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085793328 seconds)
    (264/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114537515 seconds)
    (265/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.073077493 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122866717 seconds)
    (267/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.075813262 seconds)
    (268/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.114705388 seconds)
    (269/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085370687 seconds)
    (270/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116120443 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.087369305 seconds)
    (272/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.169493508 seconds)
    (273/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.097619478 seconds)
    (274/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.108170166 seconds)
    (275/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.113121587 seconds)
    (276/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.074117377 seconds)
    (277/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.098391076 seconds)
    (278/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.088552722 seconds)
    (279/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.244259591 seconds)
    (280/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.114283411 seconds)
    (281/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.075823773 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.110933218 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.091995799 seconds)
    (284/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.073790426 seconds)
    (285/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.1042529 seconds)
    (286/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.111098379 seconds)
  done (took 36.66864212 seconds)
done (took 37.574323562 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099251029 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148712921 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09479348 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.139163584 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12267778 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100411406 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117512246 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098150186 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122934945 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.099822001 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.12115169 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.079455358 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.118912174 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.095903082 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.119486695 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138547802 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.099247504 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.114964216 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.087504665 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.111497832 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.087168151 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112063716 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.089119655 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.103669297 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.094654625 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118009175 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.090962597 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119621575 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088305512 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109874485 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.08609756 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.115509584 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086786976 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122189976 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.089118071 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.11203894 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095891077 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.117913781 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.090712745 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113369418 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.092785213 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.112495387 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.092030915 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.116980494 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.088281906 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.111514926 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.088012736 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124175484 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114802697 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112646583 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.092725526 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.11884376 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096170563 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.115855599 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.085547683 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.112466439 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.087880765 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138870788 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.11135664 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088811095 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.116636503 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.091167104 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.110634285 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.087660722 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.113079604 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.094779844 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.119579638 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.086742293 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.118430348 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.089906432 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.10752691 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.088208062 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.110317226 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.085691997 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.093597939 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.118640784 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.082843057 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.112377754 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.090886511 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.114636386 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.086484908 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110396004 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.089936185 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112248922 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086061949 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.103242447 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.085808823 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.114297892 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.087005644 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.11239439 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.090562981 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.115435611 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089845307 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.120499777 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.08750372 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.112270291 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.088531384 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.1124896 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089660119 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111596298 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.084511661 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110355834 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.092002261 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.109018736 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.088503155 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122060993 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086697107 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.114850856 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08660831 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111557088 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10063201 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.118875283 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088254588 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112816456 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.083896396 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.115547423 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085533912 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110217624 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086704825 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.130715778 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.088851938 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112930423 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086134919 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.115182224 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.098421163 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.107814206 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.08634239 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110987849 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.088071915 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.115097942 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.08822031 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.110400877 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.086321014 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.107498369 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086626818 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.109863838 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.091518842 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110917374 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.087979015 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112670301 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.087689326 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.113522891 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.088863053 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.113013587 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085493743 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.105529885 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089240225 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086007126 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11352575 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087978048 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112995537 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.083651549 seconds)
done (took 16.580628655 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.094966537 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187073464 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.145496279 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.149383048 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.144755035 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.104969634 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123801332 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.144443775 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.096369458 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14214856 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.144808992 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109056896 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.150347701 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.120123347 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.129278254 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.094246646 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.118663311 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.105187039 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.153190819 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.139583874 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.145573267 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.095993518 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.142210022 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139546243 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.094226199 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.139715707 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.123608477 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.09465436 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122258301 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112963888 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135108377 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122541263 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.096727646 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132716595 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.102059226 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118451492 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.130341981 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.091027302 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.119671114 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.095087296 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.13323124 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131445559 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092466052 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.126950415 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.119413551 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.098683126 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.118590012 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.093609313 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.120712603 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.09029565 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125288984 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140529483 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.093160293 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122134927 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.096195942 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.11970921 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121552134 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.098806795 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.121452411 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09787482 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.118880917 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.122638028 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.100101141 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.137134909 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.119010722 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.097023669 seconds)
  done (took 8.864161941 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109695766 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.147249366 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.126584505 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.101134548 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.123157042 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.083810465 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.108594744 seconds)
  done (took 1.769765134 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.085723301 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.139509813 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117464384 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142571203 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134460867 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.121074284 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126660259 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.084913966 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133598277 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.120629213 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112816037 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.166662765 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.113520565 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097223747 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.14732708 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.084741457 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.145697309 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.110743261 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095611241 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.143264331 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091010735 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.132859227 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.123577733 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.085869837 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.131409647 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.08706398 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.176187898 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122299295 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084565172 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.090648873 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115132463 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.181333026 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.133036661 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.096070525 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10823075 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113570843 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130964124 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115442142 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.10992267 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.116034992 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.1071662 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117487101 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092725214 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.116662238 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.09302446 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125316004 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121691188 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.094510084 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116068126 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113715043 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.121482378 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.107698824 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.111972083 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.090152946 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.121223937 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091913947 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12528894 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115466772 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11362788 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119337098 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111318345 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.137745873 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.132225991 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112067617 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129757658 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13251536 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.107665983 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116696223 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093256349 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120756079 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112245337 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.115189949 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.096636609 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.125336561 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11904554 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114086738 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138542675 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091167081 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12459272 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.090413258 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113772988 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.085685807 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.127285705 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091000266 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113236825 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103217755 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124191562 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.091347945 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.114840142 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.1337782 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.090519662 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.123007147 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.097063618 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113972796 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126408809 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.114263856 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.121913515 seconds)
  done (took 12.162594238 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.088365692 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.087852771 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.117528248 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.088977342 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.112753625 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.08887157 seconds)
  done (took 1.563706047 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117684252 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116148436 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102231295 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119560411 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15510107 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.111327123 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.13681529 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096577009 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.132113194 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126835877 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.1100331 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.137690292 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.142865696 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.093988409 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.136319085 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.094014658 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.136832639 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.091453861 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127950127 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090865205 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.129648344 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.118922972 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090682918 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134851645 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.095465098 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.12013161 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093668933 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126433286 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125244619 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.097342325 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.11900919 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.094900399 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.120543413 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.097051471 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.136976905 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.120624544 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089714638 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122271958 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.095573215 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120793692 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.112019697 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117551243 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.100207141 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.123558086 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.121589602 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.094913898 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121654331 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.093573835 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.137158761 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096361289 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122530906 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094024742 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120084321 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096945222 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120194025 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122340416 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097235007 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.13728313 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.09321596 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12075157 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.09114378 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.122156343 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097205871 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120716302 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120806321 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096908513 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120018248 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.090196128 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117101414 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.093077117 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122739859 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.090309276 seconds)
  done (took 9.136927904 seconds)
done (took 34.461590071 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.67226729 seconds)
  done (took 1.647622378 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.827519199 seconds)
  done (took 1.805621879 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.620279521 seconds)
  done (took 18.623739121 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.490111987 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.582934042 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.975430176 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161798199 seconds)
  done (took 3.188333199 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.963179995 seconds)
  done (took 1.960431693 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.298318998 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.264706213 seconds)
  done (took 1.546233516 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.816989613 seconds)
  done (took 1.807060286 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.49785515 seconds)
  done (took 2.488195735 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.348141622 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.197573566 seconds)
  done (took 1.543871466 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.56623464 seconds)
  done (took 1.559646354 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.645241624 seconds)
  done (took 15.641253718 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237885936 seconds)
  done (took 1.244760082 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.29176908 seconds)
  done (took 1.285946613 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.679280978 seconds)
  done (took 4.675885817 seconds)
done (took 60.007539201 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.096869948 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125877011 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100305579 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122551354 seconds)
  done (took 1.437997277 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101622604 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120701619 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.09755394 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119597132 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101260784 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.121143979 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.094279405 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.165413487 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120012802 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095843833 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121163136 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.093416453 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.122112985 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.092964014 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118266158 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.095063371 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122558543 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.094763142 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122044897 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120997743 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.091545563 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.121643943 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.096419123 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.11891649 seconds)
  done (took 3.6693353 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097514553 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090752633 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118280071 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.090529119 seconds)
  done (took 1.399072988 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100861939 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133065701 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106872225 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126341039 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106914102 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.132433507 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115587425 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.090141643 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.117502575 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100664506 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.118221041 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.110247641 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.134358266 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.085713944 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128068483 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087835123 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.113330252 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.107272221 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125401065 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126990612 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.090397188 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124933907 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.098364304 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.130662909 seconds)
  done (took 3.718630303 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172563171 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128129171 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139784695 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095300225 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.166112254 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141904027 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088708703 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141871783 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089833181 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.127600143 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.092628432 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.167347084 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.125823263 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.092340098 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117081622 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.121866657 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.09876588 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.124533375 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09116091 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.131795973 seconds)
  done (took 3.459086017 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09680851 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116025794 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086457643 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088295767 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123597783 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09335216 seconds)
  done (took 1.612166151 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.087116415 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.085395322 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.111842004 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.084997991 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.116457145 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085729326 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.110628372 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.085863628 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085946749 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.112036207 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.08459852 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.110147185 seconds)
  done (took 2.172907112 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.379021232 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114702095 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.113168019 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089494006 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12223528 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088299192 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128683792 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.087710277 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.145628323 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089108305 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114706318 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090996694 seconds)
  done (took 2.572323909 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207978154 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09435516 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263800957 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.373218089 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130800761 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163860787 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279596487 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161363526 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.207959082 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110486468 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221346095 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129713164 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153395236 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178776655 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138084156 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.17681611 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17569498 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200868895 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147483891 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204583142 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16154168 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166907128 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178970983 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150450222 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134351713 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130162892 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11686069 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125873541 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174229103 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171123037 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174557954 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148732903 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110598182 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227881572 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213812419 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205630852 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.306703792 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106267208 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.211953509 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.181772018 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228109141 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139559699 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195534856 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15527968 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127438984 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181524014 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158996666 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.18086441 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103763584 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139334803 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184366982 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175808454 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.205149535 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109166254 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32480691 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120730342 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145474483 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182196902 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186492909 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216248105 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166468578 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.091939044 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183505193 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179732184 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178351855 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143093388 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.166311016 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124122669 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175268018 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193517295 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1760142 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164995171 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.211895898 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105802712 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164888217 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166867149 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15356668 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177758168 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160265873 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118906679 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123799311 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135426032 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126476302 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.157716216 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120657592 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201525722 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133388641 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.189344146 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203050908 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157782113 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162071253 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165211962 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165753733 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14701875 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.089847905 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147443625 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.161196155 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158587637 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102220242 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156580262 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1427469 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.12570905 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153450066 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.094696679 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15954677 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.133425006 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166945821 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16371271 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100138151 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164053377 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148613702 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.157123311 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172155994 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186434036 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103764567 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131198301 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192613156 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161258213 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136157479 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174304828 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185161672 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.164624684 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108334613 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195289611 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192989238 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112157299 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215263471 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113194106 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132675717 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.151364328 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159091401 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156470041 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.127002671 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128053095 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.151447392 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193598254 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125138559 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107059747 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17499417 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125527839 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127436413 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114288193 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135115612 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.141701471 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.118948172 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138730867 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157142606 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160875938 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152519703 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159690988 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111833566 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221101014 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102799163 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.159374634 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147148152 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.116931238 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.178757728 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184206471 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099755627 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226850685 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.168692673 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195915064 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163044007 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131373756 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177538019 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098094335 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119618162 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167628006 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160120879 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162933171 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.182712373 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194155219 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.165887269 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152827516 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150027305 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167083912 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.172858195 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154697322 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142922454 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133889225 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195825138 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.092841435 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123709996 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.097151597 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14149638 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129434634 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103203624 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181905891 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164935089 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212725303 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159577163 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112717692 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179598362 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124914819 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164499174 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.170584137 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138487515 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.182841131 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181199068 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166918364 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140897658 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17612386 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.090453331 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121272559 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.103832286 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163824439 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131573677 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103782868 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142194562 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181259126 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175494022 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149812353 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228234279 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167826813 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190635099 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120700197 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.134145789 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171061353 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157784438 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183366692 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10562815 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.158982445 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176654349 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142973546 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18936714 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162201507 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168218708 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225845264 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.127823077 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128854731 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148351569 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166766863 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138977999 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135452654 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145266059 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13517509 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154555026 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104276653 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124413694 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182095037 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143590919 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179334057 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15639767 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171870894 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124981029 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142115318 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133366984 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146537123 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.116306405 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172604787 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187048214 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142986741 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158812982 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175113348 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100098872 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.310327131 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215763452 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184820676 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134935466 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113937034 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160501262 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158785416 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165806184 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178557193 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142493244 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1801201 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158265201 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113204804 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135169085 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146249805 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12085316 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.149878442 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.131730125 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.15293503 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141765701 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185815449 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142943508 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127998702 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163844276 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.147047424 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14671891 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112950577 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228652051 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15756613 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178612584 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126050208 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.165044676 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228485213 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094021901 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128851318 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.097666134 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177904675 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132933096 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159347544 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.183801909 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195818911 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15694731 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167214861 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136952282 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.090260316 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159155335 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14960711 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223420882 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112211902 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135149211 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191518494 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.150312484 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128877125 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133614754 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311959311 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115655534 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174009974 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.115959996 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278240788 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095055664 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128353837 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159068395 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170169649 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137979842 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153703952 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16269382 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144588663 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159398568 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136787378 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187532107 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203991347 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170824841 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175520034 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.143520923 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157684966 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16342535 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176632776 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143585979 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.114195191 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16133096 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181551986 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.186040707 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132486838 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164570342 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164088079 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159896465 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173060771 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132156282 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199925328 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129991586 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165741794 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109909163 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123963765 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159271663 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.184117446 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130097254 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177416547 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157658583 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102631976 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125385 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150519353 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15835705 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113169537 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128402408 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180333669 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.123443192 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133583199 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179189852 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130137146 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154207006 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115992775 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136938002 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143495511 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144868597 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105261223 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.169785655 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18041571 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129299089 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178683387 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178518221 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166060618 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160558705 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142811409 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636510822 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.12744144 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182190237 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146071134 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18449902 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146840086 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137297131 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159543302 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150104545 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1684972 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150541899 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.221158671 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166907289 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.157812068 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100031092 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144762775 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143240201 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.130056813 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122341923 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166723154 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140534408 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135792723 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.127476395 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144454975 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.144894602 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1374226 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182779458 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118116743 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212201113 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179718258 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108308054 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166860149 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173281332 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130042925 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.159910951 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1719696 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139246642 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149568693 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.10130532 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133402664 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178916361 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.094154684 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161247734 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161029497 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161295719 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164305622 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.103708906 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15917836 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141951153 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16228775 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12887092 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.123753816 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156894159 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129766418 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.09672767 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153245638 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159921696 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.158773839 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124710052 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142386689 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178493914 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123783275 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102414583 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311003615 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131775366 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218796662 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.122297627 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132912964 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143839061 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154585594 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.123456283 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159611185 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128280437 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10147146 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.129730699 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.180811454 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.152949159 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154405928 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182767558 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160844735 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201257094 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132797427 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.233296005 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138867653 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15438493 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.100160728 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127432036 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141875941 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103712435 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143073088 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188964825 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178905126 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.151131705 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.143139331 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096365294 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126380523 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101877129 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16024596 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153776287 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158245599 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141729209 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.087253314 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143724435 seconds)
  done (took 76.143983717 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.181467032 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.156926626 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.150767076 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.193027029 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165174725 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239326056 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.202962389 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.224128925 seconds)
  done (took 2.609020567 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.098401613 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155906591 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.137683299 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.123183647 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.089467871 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.330293464 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.136047322 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121449237 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.145178148 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.131764084 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.090219013 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.560793944 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.091959138 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.123269296 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.111782532 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.088302151 seconds)
  done (took 3.626019226 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.257400778 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535761397 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.061565397 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.244635647 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.224770848 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.151366573 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.751807096 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.181003522 seconds)
  done (took 12.504828804 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118102431 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136771615 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.131489155 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.160406573 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116469619 seconds)
  done (took 1.766745167 seconds)
done (took 117.684694449 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.093469329 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123116018 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.094103592 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.125759697 seconds)
  done (took 1.525419772 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.1062236 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078492158 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10922197 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077329132 seconds)
  done (took 1.467430032 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.422471117 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.107418445 seconds)
  done (took 1.664190457 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113313521 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132012836 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104073729 seconds)
  done (took 1.449381556 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100968203 seconds)
  done (took 1.20492097 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094807798 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.09688452 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138153184 seconds)
  done (took 1.43289072 seconds)
done (took 9.850208158 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110162545 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.430803845 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.382889925 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135330978 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.719679545 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.376883149 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.035133356 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155316973 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.137152227 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117026786 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105886385 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.697012426 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.019982364 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.341591322 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.004960819 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.339173353 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.671302759 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119152587 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094547057 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118551318 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.013468567 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088549802 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089344398 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119135214 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.6676908 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420737281 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087664688 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.381183559 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120124309 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093137398 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.405509067 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089187191 seconds)
  done (took 16.780882846 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.09439919 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177306276 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09661326 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119174648 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.092233426 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119278708 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099377357 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.131145289 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179243236 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087432421 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135746975 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087335421 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123314687 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.089066236 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13734219 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.08739947 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.120522966 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091114519 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125140957 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090130522 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137336173 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087005539 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119149001 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090630085 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11763605 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101274228 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117447351 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101216675 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117013165 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.092689708 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.123388014 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.08873151 seconds)
  done (took 4.686223412 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138881949 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185365008 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.125831963 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123369691 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167172511 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.118392083 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.173596776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155550999 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181903855 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11804308 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.106545533 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117952858 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123899625 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118846011 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109171483 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117957368 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.091112319 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12068348 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09547816 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119719374 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108872714 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117095006 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.090779657 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119522171 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088505285 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132390181 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088930738 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.131005016 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11673332 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093853633 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.122697712 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089629006 seconds)
  done (took 5.021350899 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096619936 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126535119 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.105601343 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.134150557 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.091458356 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124986236 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097258301 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119362548 seconds)
  done (took 2.008987558 seconds)
done (took 29.602359562 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105932939 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093488325 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131049393 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100999579 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127389618 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101332944 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115864164 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099748454 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.130038575 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.096722022 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134038513 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.08704915 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.118990175 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.087365239 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.130017045 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092971705 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133261406 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097738658 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.138787624 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.104189095 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.11842708 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.100439792 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.097378855 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.139402153 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.138242118 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.110117855 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133716393 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.094541606 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118585142 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.090013393 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.131887275 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110718873 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.120578861 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105333112 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125030759 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.093529998 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.118446291 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.090871088 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132771245 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099590982 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124649744 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100612506 seconds)
  done (took 5.823790038 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.115894372 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.161792572 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.089086854 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.119364556 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.090669433 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.15653463 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.1532363 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.089255718 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.118489097 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.11404924 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.145595103 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.090084506 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.119003752 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.089161875 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.118537503 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.090282244 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.142480164 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.113634024 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.148383189 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.119437697 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.164498502 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.149307688 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.123615589 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.142361481 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.160610816 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.15437341 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.110783955 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.155501747 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.116093338 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.117648872 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.148445035 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.121433883 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.118936009 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.088609413 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.159550358 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.12410102 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.147427044 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.160307974 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.149370153 seconds)
  done (took 6.117649005 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.098412229 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132266634 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11048154 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184559453 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.125846763 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.13147865 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.099362621 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137736319 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.105212543 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118783476 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090676882 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149193998 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135153779 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.097263938 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089120712 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134474194 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138888914 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.091062622 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123079292 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108168946 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137129466 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10278059 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.131376943 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.099970138 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.118831954 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097885393 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121696264 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.104742921 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123638617 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.096671257 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122994828 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.094141468 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122915316 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.11005374 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.121958784 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.097136052 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141151033 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098550973 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131286866 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121059968 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.131234916 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.093402227 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140773716 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.158983054 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.089821991 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126103393 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.09625946 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.127346426 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.088290137 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136800892 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099472248 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.089395211 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134693872 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.11883349 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.088553255 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133162168 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.090133004 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.092597976 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126627635 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.096138972 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.13778507 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.093487185 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135044233 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089822767 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.126056384 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.089117591 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.119691987 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094495247 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141787934 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093497292 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158681906 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.119355863 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095811829 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.128497624 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.096180399 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128556751 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.089741436 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103205781 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129823026 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.09402767 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129937822 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.092503146 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.122593076 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.107734724 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134741612 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125975955 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.09541825 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125591811 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.093274977 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.119747672 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.104704919 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091781281 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123532948 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.107092698 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119613973 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092203375 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126048893 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.09408921 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.117677882 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102468549 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.124839331 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.088914239 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129891274 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.089662301 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123335335 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.097961291 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123068564 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.089281379 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123072829 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.096279642 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118485083 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093600519 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.123280892 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.092131287 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132946945 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.097092964 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122162468 seconds)
  done (took 14.436225055 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.235272895 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.2173688 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191775944 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.302940484 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.142817262 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116578516 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213507828 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.165414083 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.090086523 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160424771 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176742532 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187297127 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.176527694 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.186747674 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172585758 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121091587 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.108434576 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.172754708 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216471885 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.297648496 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108638401 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.135848185 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16245102 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161201628 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.108103234 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.136624283 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142841445 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.111224211 seconds)
  done (took 5.849114518 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106572234 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155917083 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096817308 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145704212 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146820127 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.090036017 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.125119318 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.090664293 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.133443491 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.105318089 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.121985062 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.097666418 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.125449614 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.099503073 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120330601 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.099098886 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130734057 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.100085449 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123173717 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.093200447 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134585128 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.108052759 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12544245 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092770186 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13741395 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122688831 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.092436035 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141944876 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.126975695 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11552663 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.117004194 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099340479 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.1347419 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.089553445 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.092798991 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.123146687 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.092530471 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.12298664 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.091777019 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118736001 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.090186734 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.111374759 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.092072356 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136035765 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.096614601 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.118416099 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.095562466 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12495355 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.097133281 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.117665126 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.092731379 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.09238241 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.124132828 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.101137968 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124214389 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.097400961 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.125201768 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091934926 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.129583731 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.092944088 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11909852 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090957147 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126588 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.0939963 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129086838 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.095997243 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.122300271 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.092677975 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.126079974 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097128955 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.123063522 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.099534336 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.117874371 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.090916505 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131557505 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.099108798 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.123610884 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091686432 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093806697 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.11975991 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078769567 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.119891547 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077747826 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12491666 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.088787637 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.091483675 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.123463514 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.095524428 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137127393 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129449435 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097016998 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.119380935 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.093007884 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.125622497 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088095244 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.124029064 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.108454061 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140109434 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.089898044 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.118666196 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105914566 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.123192066 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.089120296 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.112692576 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102347569 seconds)
  done (took 12.774827961 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131333687 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.17123366 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122335441 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.110174583 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155984556 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.162999241 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.098855072 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128690327 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.605889309 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.109085157 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124392328 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.099155905 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.12406731 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.104073906 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161809107 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.131097105 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.091129777 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.135573642 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.095801279 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.174918011 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.140910317 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.129938578 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.16206973 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124588709 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.096025553 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.157165362 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.165464215 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.104732616 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.133177441 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.131614232 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.134311637 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.165267696 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.163116337 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.096259023 seconds)
  done (took 6.09464094 seconds)
done (took 52.203805461 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.232000029 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.450219298 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.207456415 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.201072897 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.252060039 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.228093318 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.204623382 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.39696004 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.008089861 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.192348019 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.201766808 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.203509994 seconds)
done (took 27.914923738 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.248243903 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.362560871 seconds)
    (2/2) benchmarking "String"...
    done (took 1.495260419 seconds)
  done (took 3.991958451 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.202608099 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.203623208 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.447318618 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.202798576 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.219824953 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.222871904 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.209543969 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.224525851 seconds)
  done (took 15.863184915 seconds)
done (took 25.441144999 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.262677013 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.378752824 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.458588528 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.225043014 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.221987597 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.212052213 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.204266279 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.243037651 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.207611297 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.204195395 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.204199891 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.4760661 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.238390695 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.572720812 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.213146647 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.217174767 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.222022961 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.416025656 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.216633819 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.256065687 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.191184528 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.192871949 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.229901997 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.244541424 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.214992227 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.220511996 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.248677436 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.205760368 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.399764781 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.222344638 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.252187288 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.208461958 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.252826623 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.216042593 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.318379954 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.234204697 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.377827724 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.213691929 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.200114068 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.212951398 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.378633599 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.619017503 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.206043603 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.214737762 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.211597985 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.256555748 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.195581713 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.922783087 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.212500157 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.219816029 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.270779786 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.583765239 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.208476992 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.216008694 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.216378671 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.432817236 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.206411475 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.248143103 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.238413408 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.214486607 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.20773648 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.207746705 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.214604621 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.215573554 seconds)
  done (took 143.762822887 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.207573252 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.2108006 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.212122641 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.229702053 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.211540948 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.210865969 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.208762481 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.208618478 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.213475727 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.213784976 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.214167046 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.213666366 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.212963467 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.188201996 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.21023506 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.223893194 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.212714703 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.230148888 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.230092408 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.209315804 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.216059857 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.213116647 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.214196939 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.213197567 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.213746911 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.27854694 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.257076461 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.214094362 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.210823682 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.210262042 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.258586437 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.233631007 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.847506595 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.061011312 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.220922801 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.237534096 seconds)
  done (took 80.510736894 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.208942836 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.209723828 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.209755309 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.244709852 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.209369507 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.809297382 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.810873469 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.938378994 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.616835048 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.652159765 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.480580793 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.211645577 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305096647 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.224935598 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.211464895 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.225062689 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.236602652 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.215699504 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.210903399 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.810734362 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.229462331 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.229002581 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.409456747 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.22709476 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.243625003 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.211103695 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.609867822 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.212290867 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.243855359 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.54672462 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.261516931 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.212932984 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.607001185 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.797340197 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32931016 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.213899788 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.244649725 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.211895794 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.494593901 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211387824 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.21272677 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.214838461 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.912236416 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.215535802 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.813558248 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.216150844 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.198550069 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.217532675 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.213342482 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.412459013 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.942088882 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.232942399 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.214766992 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.212989752 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.21327072 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.214661053 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.215962622 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.246613791 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.427460304 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.326681323 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.213586938 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.215692403 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.247212817 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.214540312 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.434478465 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.2302625 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.224531315 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.273143842 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.429170761 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.815300014 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218105632 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312453918 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334457862 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.214106216 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.213648522 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214196607 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.213327506 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.3262512 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.214827892 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.643554259 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.392619829 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.231075241 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.636230877 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.315572849 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.215226472 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.631651234 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.218849187 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.214536185 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.971606991 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.214822097 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312637718 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.2140157 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.214340646 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.214546964 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.647594782 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816181636 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.486917986 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.219414231 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.724074517 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.218960268 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.651479726 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.818150205 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.944383832 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.219961571 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330707692 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.394894839 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.232242982 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.215938162 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.671472507 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.217593362 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.274059777 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.216617605 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.216662481 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.616342803 seconds)
  done (took 368.142992358 seconds)
done (took 593.552858058 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.935430857 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.886503156 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.020108276 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.911810318 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.884314898 seconds)
  done (took 10.784279635 seconds)
done (took 11.930490692 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.410889318 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.408883616 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277783278 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.410884228 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248618649 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.428924213 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.393424599 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.237456815 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.323182899 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.300260185 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.325260727 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.27130146 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.252663894 seconds)
  done (took 18.435160463 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.559156591 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.219724223 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.301214912 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.561606006 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258581818 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545509582 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.428768411 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.237049843 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.432180546 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252886606 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232456574 seconds)
  done (took 18.178082036 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.569625989 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.218896152 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.303498689 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.5684373 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.259398307 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.559189674 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.428116242 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.237927683 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.424244515 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235775988 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.231830855 seconds)
  done (took 18.185457795 seconds)
done (took 55.945847506 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.261297755 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.392338478 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.244525167 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.235493226 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.22872478 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.230209073 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.235764075 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.229158408 seconds)
  done (took 11.206713215 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.225655133 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.226032653 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.227616622 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.225473514 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.227516238 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.22488373 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.225312275 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.228756928 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.227886713 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.227128338 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.225840845 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.226572339 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.227981881 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.226074076 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.228461071 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.22965397 seconds)
  done (took 20.780626329 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.228358964 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.224864326 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.224906666 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.225534907 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.226235059 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.226336259 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.2265569 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.225829394 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.227558464 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.226389614 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.227446719 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.225583036 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.226185599 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.225544131 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.226917873 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.226922486 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.225750838 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.228332969 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.230949324 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.226607595 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.225627961 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.227422692 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.227208238 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.226158835 seconds)
  done (took 30.591766926 seconds)
done (took 63.727395922 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.221400891 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.226486551 seconds)
  done (took 5.59903698 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.289976846 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.290259685 seconds)
  done (took 3.733548218 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.229965903 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.23077711 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.231523869 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.229724769 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.231373082 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.231978422 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.231599209 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.230996484 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.229248734 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.231375721 seconds)
  done (took 13.459709947 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.231992191 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.229607896 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.228892766 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.231963893 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.231717205 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.229742888 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.23128026 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.233469864 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.231682691 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.229990626 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.231385967 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.230892825 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.231825121 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.229561067 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.23371184 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.2304785 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.232823418 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.231245169 seconds)
  done (took 23.316615762 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.244308006 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.253686999 seconds)
  done (took 3.652776761 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.361221431 seconds)
    (2/7) benchmarking "second"...
    done (took 1.272897904 seconds)
    (3/7) benchmarking "month"...
    done (took 1.34186816 seconds)
    (4/7) benchmarking "year"...
    done (took 1.32763274 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.270802558 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.251732537 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.271773908 seconds)
  done (took 10.250879363 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.232861958 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.425050322 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.535268869 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.816679128 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.234197767 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.236900088 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.118291895 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.23693295 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.239252464 seconds)
  done (took 14.229382092 seconds)
done (took 75.392664818 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.224245666 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.243763639 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.233182946 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.240105737 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.568908262 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.256523317 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.22920778 seconds)
done (took 16.149397538 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.211634512 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.215810008 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.234637355 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.226544935 seconds)
  done (took 10.042451467 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.226803369 seconds)
    (2/2) benchmarking "read"...
    done (took 1.544350053 seconds)
  done (took 4.925310575 seconds)
done (took 16.122668764 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233754039 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.234418298 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.231306677 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.231735571 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.234097038 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.231670511 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.232390922 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.233605802 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.234797033 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.235040064 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.234554474 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.234428619 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234425421 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230077943 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231785761 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.232336521 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23290589 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.232026351 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231977967 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232350359 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233839464 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.232043331 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.232879583 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.234916925 seconds)
  done (took 30.748163386 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.234460633 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.232799252 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.235752291 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.234103125 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.232767879 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.236758007 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.23566941 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.232802741 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.235096266 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.235328564 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232809455 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.232399326 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.235255174 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.233938184 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235857763 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.232969935 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.236773482 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233378834 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235936139 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.23409129 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.235866841 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233523049 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.232346482 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237203367 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.233991206 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232868756 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.23649335 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.234249021 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236687624 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.234591734 seconds)
  done (took 38.19414403 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.240432366 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.243618326 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.236807755 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.236893191 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.237238493 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.238016403 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.237288687 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.237079998 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.237401517 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.238376147 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.237992225 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.236955518 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.239060078 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.237037632 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.238980646 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.237717791 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.23796429 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.236073976 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.239377253 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.237776059 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.237638131 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.237558169 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.238973264 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.236893125 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.237978952 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.237598735 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.239068593 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.23866472 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.238191406 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.238090939 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.239315701 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.238757085 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.238721254 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.238117248 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.239240469 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.239477393 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.244058085 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.245529913 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.239240136 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.238286427 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.239281135 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.238652445 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.238868708 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.238670771 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.240531786 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.240225203 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.239231737 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.239025637 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.23956497 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.23941408 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.239498377 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.240155802 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.240091444 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.239532845 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.240743269 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.240267003 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.240836716 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.23974898 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.24070599 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.241049127 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.241001899 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.238723922 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.239798331 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.241219842 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.24143919 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.24078839 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.239117743 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.240819294 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.240760244 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.241366804 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.24033105 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.240829806 seconds)
  done (took 90.385094102 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.240636082 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.239956352 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.24055531 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.239556894 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238796953 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.240470185 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.238488407 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240753015 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238472826 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.242545116 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241581826 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.238898644 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241095357 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.241843168 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24019757 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.238968922 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.241759091 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.238631385 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.239914731 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.241630948 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241687308 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.239342595 seconds)
  done (took 28.44686368 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241060796 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.242889319 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.238711846 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.241735988 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.239324457 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.244211827 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.23798515 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.239521669 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238339066 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236209479 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23598762 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238278991 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.239053012 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236124628 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236595776 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.238351316 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238615602 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.239647506 seconds)
  done (took 23.465191836 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.236595232 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.236638292 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.238522034 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.238062637 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.23726566 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.239377488 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236440445 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.239237241 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.241336357 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.238272445 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.239244853 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239775152 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.239083826 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23659507 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239183684 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.236695856 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.237661564 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235653151 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238862742 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237926595 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.23687694 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.239475602 seconds)
  done (took 28.399154411 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238835127 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.240406578 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.237374592 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.237532695 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.237669692 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.238437996 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.238808217 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.235274721 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.239522261 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.239210617 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237153503 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.238669906 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.238782517 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.236075128 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.236758083 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236053423 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.239630737 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.236738323 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23929087 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.236768695 seconds)
  done (took 25.918874137 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239862686 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241086233 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.242417664 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241201338 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239782072 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.241249528 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241551617 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.243200806 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240075544 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.240470103 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.240001413 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240079993 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241352927 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.240126845 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23932144 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243050448 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240553863 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240434926 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.240211732 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240062073 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.241414624 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.241026078 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240888834 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.242540591 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.241219341 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.241130406 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241093856 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.242016163 seconds)
  done (took 35.911694524 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240666432 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.24280462 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.238838209 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.238177271 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.23807481 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.238794914 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.238258538 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.238192473 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.241411471 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.238676923 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.240264468 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.240372816 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.241018185 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.240460913 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.241692726 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.240719835 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241969463 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.238844939 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239040708 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239813742 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.240484169 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241403095 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.241896914 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.239302717 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239190947 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.241473983 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239041565 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.240715128 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241968924 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.239609661 seconds)
  done (took 38.36542796 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.280068639 seconds)
    (2/2) benchmarking "in"...
    done (took 1.281884586 seconds)
  done (took 3.724409868 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.239847335 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243527856 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.243927364 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.241607884 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.240939699 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.242937908 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.242852794 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238955972 seconds)
  done (took 11.098757682 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.24290928 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.242525511 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.243135073 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.243218805 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.244124468 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.242790697 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248408141 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.263260321 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.24295529 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.243880843 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.250469483 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.250555831 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.245210847 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243776727 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.243475513 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245297873 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.243913914 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.244065081 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.244790668 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.244381969 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244136575 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244941848 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.245263774 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.241212808 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.24597143 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.254274788 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.247625746 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.245343461 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243943699 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.247778267 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.243132712 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.242397317 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.244704189 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.245367341 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.244782794 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.246233707 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252240624 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267945006 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.250115154 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245385388 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246765801 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.241700987 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.246815816 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.246092944 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246494617 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.24515135 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.244686248 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.244113713 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.245692951 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.249366689 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.252043753 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24556188 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.24247542 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247599538 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.245991773 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252106304 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.2677183 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.249150348 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.255369385 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.257109368 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.259956064 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.271101371 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248636697 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.246245654 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257914455 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.269328935 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253608956 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.264786108 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.24491455 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.247008961 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.252749007 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259780153 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.27477789 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.249499473 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248885253 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.247204719 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247596532 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248386198 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25394264 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.270920776 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.248977053 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249155816 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259470841 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270035149 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.246732997 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.248333752 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.249284611 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.249063656 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.248853945 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258835579 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.269243698 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.249320009 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.247119246 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.248618301 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.24966589 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.249973837 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.248976612 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249396339 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.246751211 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.248964428 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24993895 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25230757 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.257245849 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.250260091 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250803107 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.256490721 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.249576234 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.247995983 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.255066455 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.249736078 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249847523 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.250707959 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.256946329 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.248062227 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25336116 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.258337925 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.2501563 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.251019405 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.251017013 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.251682392 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260660127 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.276578623 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.249836423 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.250570629 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.254746232 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.261946986 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250138134 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.252193296 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.250789723 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.24734229 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.248140514 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.251075191 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.250228905 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.251564206 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250981925 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25267888 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.249650837 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.250521349 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.250626154 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.251783435 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.250737236 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.250962641 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.251397715 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.253255535 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.253354978 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.250045896 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.256419713 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.249959192 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.251566 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.249812207 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.246754672 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251904286 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.25280924 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.252703001 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.249323206 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251364258 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.250723389 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.251203687 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251133757 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.251993087 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252197177 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.251703777 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254754687 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.252246523 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.253944681 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.250860925 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.24912242 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.251379539 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.252281788 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.249803179 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.252705134 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.249022962 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.253697299 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.260438647 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.249410661 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.249461093 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.252776511 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249351005 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251766122 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250426038 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.252978165 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.258362151 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.251255948 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.25672901 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.252744518 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251431186 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.250956115 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.251349034 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.249169806 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250175959 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.254359194 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.259622531 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26368265 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275948375 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.251176953 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.254847948 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.251609233 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.256045463 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.252884726 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.250945629 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.251856461 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249645763 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249207939 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.250471469 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.252154205 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.251663964 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.25081786 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.251831918 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.253602984 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.252887999 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252015408 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.252067451 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25192915 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.248357023 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252693036 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251529157 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.252641122 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.250809345 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.249589621 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.250941103 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.252295949 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.251895322 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.257264431 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.250481328 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255190374 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251933169 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.25145025 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.252089667 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.252383014 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255480726 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.25059024 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260422266 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.27156704 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.252541705 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258103454 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.271025142 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.251034767 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.255034212 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.252538014 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.250546859 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.257683934 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.261324439 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.25176232 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.253677507 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.252880221 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252733664 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252896396 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.258326054 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.249832833 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.279707674 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.267287032 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.251774247 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.250630148 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.252514985 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.253223179 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.253540688 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253878794 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.253586638 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.252526694 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251835071 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.253745771 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.253333333 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.254191104 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257706828 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.261415781 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.25640075 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.2524043 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.253895713 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.25159826 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.257117592 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.252501735 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.252773966 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.25306992 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264755406 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.277851325 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25892278 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.271651235 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.253037547 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258187087 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.273613521 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.256233186 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252153457 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251842473 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.251838238 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.251147845 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.250996587 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25418677 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.254095286 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253221937 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.253648614 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.257391571 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.253548452 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.251948784 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.253538482 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.253899071 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.254899674 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.251959903 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.253635021 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.256045773 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255329942 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.251057156 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.254028128 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260869848 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271811676 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.2553635 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.253917033 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.252573435 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.255096525 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.254231524 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.254240919 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.25744883 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.262621833 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.257174813 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.263250147 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.255310265 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262105117 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.254964038 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.257474047 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.262130261 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.252068018 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.252940796 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.254085811 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.256067329 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260286296 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.274038048 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.257306339 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.259785859 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255225738 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.255155239 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.255468858 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.255106915 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255121929 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.255393901 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26233006 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.277086561 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.258475947 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255975288 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.252199254 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.255891819 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.25596547 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.254425583 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258977262 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.256216249 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.256226908 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.255439077 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.254800866 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.256432083 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.257454488 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.257332624 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.253373778 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.255483594 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262686492 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.277203335 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261628593 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.256257784 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.262566416 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256324365 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26315302 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.276480784 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.256570504 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.25793576 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.257752122 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.259075071 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.256672792 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.257390081 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.258139544 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.25663754 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.261238331 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.2589429 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.260077696 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.258220342 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.258573163 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.258364561 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268123672 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282588826 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.259038403 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261885977 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.255780132 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.259325645 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.262682511 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.260605542 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.258653814 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.261762778 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27138908 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267257283 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.256980756 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.260262357 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257625206 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258551449 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.25770314 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.258828871 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.260811984 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.258180832 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.257713843 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.258467042 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258840446 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.258525868 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.258040851 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260234614 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.260278351 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.266477742 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.25825419 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.258889823 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259944568 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.260157738 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.257633189 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.258634815 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.259427124 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259247845 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259420406 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.259571355 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265854625 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.263916783 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.259490035 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.25917828 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.259709288 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.256696168 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.258492621 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258464535 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.2583771 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258758716 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.258998176 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.260295454 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.258136855 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.255735315 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.257491978 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.258387611 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257367004 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260326924 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.265110228 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259294009 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.256566752 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.256705165 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258534429 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.257051486 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.258620523 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.263821167 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261472859 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.269718822 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.266728407 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.261714339 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.258405063 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261451821 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.267242272 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.256311759 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.258816407 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.259798399 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.258855195 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.259788944 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.263435716 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259582437 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.264149461 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.25899536 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.258061701 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26807075 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.280217021 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259742347 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.261536377 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.263192983 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.259381546 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.259458964 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.261470555 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.259844186 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267100518 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.280319178 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260342573 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261178265 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.259708817 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.262273516 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.265816076 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260949507 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.261521112 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.258149805 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.262366026 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260513927 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260809166 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.257435721 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.260005328 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.260531168 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.26463085 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.268093581 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.25900688 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262638958 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.261891675 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.261403458 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26234976 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26192521 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.259538363 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.258580172 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.259240355 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263026567 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.262425879 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.263280775 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.2602188 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.263065953 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.262684968 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263372993 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26521978 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.272429569 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.270204279 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.259441923 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.260760548 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.263060994 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.26399111 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.261810951 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.262931585 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263605059 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.262782602 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.26217968 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262797716 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.263784745 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.265908195 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27796383 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.284836179 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263267836 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.26278906 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265973625 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.262599092 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.26009823 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.263100426 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.26404487 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.266075361 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.270786659 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.263630062 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269830117 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.281712359 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.265520381 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.268551326 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.266746032 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.270175702 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.265662233 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264186969 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.26513447 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.268688638 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.280505751 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265176538 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274937024 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.293746978 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.282592299 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.264440013 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.26508079 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265563418 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.265720201 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.265806338 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.266321308 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.265733184 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265832982 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.265507647 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.267094637 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271807712 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.266081467 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.267665269 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.265613629 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.26364537 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.265335672 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.263321493 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.268117188 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.264687293 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.265981491 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.266615207 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.267273468 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.265348526 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278638892 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.291820357 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.2655568 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.267411313 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.264638103 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.26872849 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.268854397 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276390873 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.274797032 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.26779765 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.267086261 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.267037592 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.267576588 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.267391197 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.267739976 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.266466325 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267964227 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.26498077 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.27926507 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.292873076 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.270365305 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.265899505 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268604969 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.268078159 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266938858 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.26909206 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26730853 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.26831567 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.271008443 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272311261 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.267375386 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.268528154 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.272055139 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.274805256 seconds)
  done (took 750.728017439 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.266603195 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264985668 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.265357262 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.26675303 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263759907 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265305934 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26540902 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.266175357 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.266329565 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26602854 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.266550415 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268159583 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.266168458 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267625384 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266458238 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.266665661 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268075006 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.267052228 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.266248143 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267426546 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.266762899 seconds)
  done (took 27.780333001 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.270699181 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.267341255 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.268148743 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.270589005 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269097753 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.270976336 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.26832988 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271659595 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.270518931 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268073784 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.272479678 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271248649 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.268605374 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.268674684 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268110215 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270420584 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.270898292 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.268411582 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.27088782 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.269669246 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.272033058 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.26952834 seconds)
  done (took 29.124281824 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.273170122 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.272300843 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.270669776 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.268136744 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.270420184 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.269695599 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.274465526 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.272114026 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.273359428 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.270258441 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.269448897 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.272532374 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.278131258 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.276398853 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.272344632 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.272869081 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.271935471 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.274024154 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.272943654 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.270455362 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.276546276 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.289007743 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.271114601 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.271799396 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.274468567 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.273874985 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.273336382 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.273413644 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.273850185 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.278014766 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.273091559 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.271961925 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.274100802 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.271610457 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.273574719 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.277278385 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.273896517 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.271396229 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.273378933 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.28332292 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.29354965 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.274187356 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.279009007 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.293414959 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.273490897 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.276789342 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.281915058 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.271008557 seconds)
  done (took 62.377652735 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.2741817 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.27389439 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.27205716 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.274382579 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.274588495 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.275688863 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.274049299 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.274919579 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.273029843 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.272854597 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.276695343 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.271700529 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.273339386 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.275780313 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.275732137 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.273619064 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.273674473 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.273596021 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.274009231 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.272849565 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.27456153 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.275984934 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.276680774 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.273740518 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.275927146 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.273267981 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.273630122 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.277277289 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.274192575 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.273890573 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.276419396 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.276355246 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.276508549 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.275145842 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.274787096 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.276443399 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.277352101 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.273706755 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.277117455 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.273995197 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.276462001 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.278499761 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.276810808 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.276185613 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.275199276 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.274691778 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.276132714 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.275027924 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.274971734 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.277955531 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.278451491 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.274988951 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.278134489 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.275452537 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.277630152 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.27765259 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.274889999 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.275363431 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.277673952 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.275318715 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.275273822 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.278506498 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.276244299 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.277625724 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.278410665 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.276172048 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.276529617 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.277762242 seconds)
  done (took 87.925825667 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27857797 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.278209856 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279660783 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280857962 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277931246 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.280924938 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.279521204 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.278467797 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279904848 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.279185311 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280134188 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.28176773 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.279422459 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.281455309 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.278696302 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.279798575 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.28094701 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.280293169 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.280199617 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280308955 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.280898539 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.281223669 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.27997408 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.280673269 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.280204884 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.279749257 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.281104192 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.280810995 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282350672 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279624752 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.280407495 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.281288479 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.280770019 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.280465301 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.281799108 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.280271964 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280823634 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281456305 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.282074724 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.281492857 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.281914689 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281043172 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28129888 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.279962567 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.282194336 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280296422 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.281475433 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.281513705 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.281080989 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.281656782 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.281633622 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.279338028 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282411093 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281590598 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.281105847 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.281101388 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282260441 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282816784 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281115145 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.282501172 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283030226 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.281841724 seconds)
  done (took 80.602580891 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282420315 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.28134213 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.280595546 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.280731691 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.282140396 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.279219281 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.28086222 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.28231001 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.281857032 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.283444882 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283744357 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280279375 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282207413 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284226563 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.279967158 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280986906 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280420388 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.281114649 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.283277909 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.280536655 seconds)
  done (took 26.831224864 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.280238909 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283860612 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.282110577 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281322253 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.283894335 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.280849224 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.283039907 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283960014 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281624512 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28339323 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284848009 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284097385 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282827508 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282625861 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.285160764 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.282374893 seconds)
  done (took 21.72445377 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.282502646 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.284307364 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.284481653 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.28625339 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.283419213 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.282510057 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.285551351 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.281803769 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.283200566 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.285582054 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.284598045 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.28417025 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.285516709 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.285476044 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.283933687 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.287078333 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.283588527 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.282624991 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.287292118 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.28705553 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.283777567 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.283653504 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.286713459 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.285597111 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.28336597 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.28410232 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.282574212 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.283321825 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.285196289 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.285869779 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.283794166 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.284896796 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.283118898 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.284813609 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.28604111 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.284227276 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.286577781 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.287388519 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.286608166 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.285835185 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.287358635 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.284168365 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.287316617 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.287709893 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.284236188 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.287219891 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.284838146 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.285059461 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.286071891 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.285916948 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.28801007 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.287262468 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.287950392 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.288678838 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.287393255 seconds)
  done (took 71.889913253 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28679938 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.288613971 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.28571992 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.288557714 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.289217304 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.284728965 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.288303496 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.288327682 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286325995 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.28810882 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.287543377 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.289954872 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286348817 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289099954 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286516098 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288131185 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.287318432 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28633492 seconds)
  done (took 24.378563466 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.28749892 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.286890893 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.28918307 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.286818744 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.286002058 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.290448069 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286859352 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.290377859 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289427963 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.28818414 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287344352 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.291336396 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289288085 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.290496074 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.28751018 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287204165 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.289495949 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290050863 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.287623409 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289432007 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.290778598 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288987044 seconds)
  done (took 29.556397754 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.288502669 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.288636674 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.287754979 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.306458913 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.30812223 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.288834368 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.28777166 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.289231361 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.312071035 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.340946632 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.335351509 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.309584448 seconds)
  done (took 16.849237052 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28823651 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292734509 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289892265 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290271824 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29248705 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290471488 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289628952 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289137647 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292321151 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2896274 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29042608 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291766533 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292478322 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290691136 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291700845 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290819496 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28906461 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289965528 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289849107 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292713441 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290766977 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292466586 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28940526 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290228006 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290964599 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290328268 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293571895 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291328702 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291054365 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293805641 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294327295 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291433722 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292901243 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290311202 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293973647 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295087264 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291389975 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294981282 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296137525 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29146308 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292608983 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295983134 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29356513 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29301609 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294770801 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292617589 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291989815 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291506128 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293153097 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295415497 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294249883 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292925096 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294458287 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295346236 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295136729 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295038014 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294965391 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292220549 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295781082 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291767611 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29306733 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2949825 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294070386 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292408344 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29559897 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293028686 seconds)
  done (took 86.508860369 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294746521 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293446601 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293400901 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293052876 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29435482 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293726376 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292873531 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293578262 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29398078 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29436742 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296616194 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293790638 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29286568 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294345397 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293995927 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292469351 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293399036 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294923913 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293528192 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297588787 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293438725 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294575829 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295083503 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294437625 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295415096 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298047105 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295212488 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293317147 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295738258 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292792292 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294091179 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293844703 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295524722 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29425744 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296758348 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295333483 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294895097 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29541823 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295698566 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297716448 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294810459 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29873181 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295324394 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295742839 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296176045 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294772094 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295539243 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296808742 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296098074 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295933624 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297557038 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297550472 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297158963 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295402736 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297104328 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297460124 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296562075 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296550678 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296819723 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298121769 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296922211 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297571307 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299232627 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297111987 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298726719 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297157311 seconds)
  done (took 86.711747052 seconds)
done (took 1758.801719296 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.46223411 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.414514883 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.303252515 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.306403636 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.303377886 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.325543308 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.314878999 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.302402023 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.302575319 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.302217656 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.302009959 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.48894708 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.296374459 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.304024682 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.302681098 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.397925717 seconds)
  done (took 26.646677466 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.330020274 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.308954874 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.421298003 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.324253451 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.331128384 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.496628287 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.360597619 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.307593872 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.477417552 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.34913085 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.30120803 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.332965594 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.308307817 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.310571863 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.326042366 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.493958185 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.550260328 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.300080437 seconds)
  done (took 28.84931701 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.751369961 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.305393708 seconds)
  done (took 5.276518933 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.327689543 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.309109666 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.309214711 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.307179704 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.300840299 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.298459862 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.305799115 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.301788982 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.2993231 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.445890099 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.308547972 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.318573428 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.327298826 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.30869551 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.306216149 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.346490628 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.475207339 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.305870651 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.304262305 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.311767316 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.308402482 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.413587655 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.347948778 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.30607501 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.429550495 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.299036464 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.312682549 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.314975481 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.441929655 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.305367492 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.306446464 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.307848692 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.309050167 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.197887517 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.757537504 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.298600218 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.349714515 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.316015856 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.305479908 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.47034276 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.309118261 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.315987818 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.300548554 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.746546246 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.43773039 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.423190337 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.328717192 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.309842125 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.310358113 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.371594536 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.308860962 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.310281368 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.353064001 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.099056471 seconds)
  done (took 83.773010448 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.317345656 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.302464123 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479862533 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.326601935 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.301460406 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.302030767 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.319439529 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.58674669 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.323858449 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.302468352 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.581233743 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.850269237 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.329505011 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.339976588 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.190824771 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.362646568 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.307652095 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.302081635 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.304029527 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.306568415 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.848065808 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.304354 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.303572801 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.461205698 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.34205813 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.797107343 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.303199459 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.304220266 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.30471446 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.302930025 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.80705723 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.330729672 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.356596938 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.304953143 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.562485152 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.674157817 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.640028886 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.309282675 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.313491039 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.305259203 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.31299637 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.793547569 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.657889484 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.304014032 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.320604685 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.797553302 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.303231746 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.307119316 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.314469773 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.550965633 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.303057682 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.308846015 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.306232095 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.305118493 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.30171088 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.312983206 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.370670563 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.796035084 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.302260916 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.30591979 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.341583809 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.305179232 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.310562674 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.304047557 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.30495956 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.656107952 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.438466657 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.304751664 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.654198032 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.799117798 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.321012908 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.886802754 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.320870292 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.307222199 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.374576923 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.303991407 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.323232071 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.793169369 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.318367004 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.304898286 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.640406873 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.307411798 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.582537108 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.323545234 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.307620707 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.856881468 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.315387831 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.391498034 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.306062163 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.334481362 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.307864596 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.306538451 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.56961745 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.36903555 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.304732971 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.304891009 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.319378061 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.305304126 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.305134996 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.306558551 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.865937817 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.32378779 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.307545014 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.307401201 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.304091396 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.304019668 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.309320143 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.307183869 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.566760159 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.305350222 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.31247544 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.306624786 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.315598652 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.306519341 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.452547777 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.312078243 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.603190521 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.307649109 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.30351464 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.310106329 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.305308527 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.321198581 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305353811 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.310063618 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.190993576 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.562872043 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.322358769 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.304022707 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.303934969 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.313257239 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.304170615 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.305210184 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.332115882 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.306991205 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041596311 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.321572811 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.31406158 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.305571448 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.308355221 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.307043931 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.31330338 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.30776624 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.594880515 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.566455293 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.439089229 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.309840333 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.306179462 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.042756773 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.344928433 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.484930431 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.322920997 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.306258677 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.548572144 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.461499998 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.307708003 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.305804469 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.305550424 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.562729888 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.308083903 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.624493442 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.827146136 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.322407367 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.312890011 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.042822285 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.006855714 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.309848568 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.314840556 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.577902618 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.328692767 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.306760465 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.3072476 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.313408106 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.307243996 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.326455015 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.31459599 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.307457006 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.307833562 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.527638538 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.497213277 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.325011977 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.317578656 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.790941832 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.326453231 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.306376526 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.309859866 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.309171702 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.308072942 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.362425089 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.312071015 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.315151042 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.309259596 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.313577539 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.812253068 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.308047409 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.316279449 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.498152526 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.967712067 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.325274044 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.316707988 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.309091621 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.196153293 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.817497999 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.344544898 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.607299281 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.310193161 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.347503898 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.309838817 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.387793461 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.814378503 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.31255827 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.309959945 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.941760871 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.325470638 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.974207436 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.309319834 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.324031186 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.868956162 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.326255706 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.31044238 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.30897639 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.311248548 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.60150515 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.309962804 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.34537678 seconds)
  done (took 491.573047845 seconds)
done (took 637.333137412 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.310759924 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.313125449 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.299902931 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.313011068 seconds)
  done (took 10.467977986 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.321431318 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.316984132 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.319045726 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.317392944 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.317800322 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.317121307 seconds)
  done (took 9.142102058 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.310926715 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.313125574 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.313338946 seconds)
  done (took 8.170158638 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.513408625 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.340935022 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.632605312 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.339580651 seconds)
  done (took 9.058995452 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.318631216 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.317412775 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.316812288 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.31772314 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.319241147 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.321307997 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.319630921 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.318478807 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.319850762 seconds)
  done (took 13.096872033 seconds)
done (took 51.166398861 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.302527777 seconds)
    (2/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.457221396 seconds)
    (3/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.421403936 seconds)
    (4/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.335980274 seconds)
    (5/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.119624142 seconds)
    (6/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.29593275 seconds)
    (7/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.393498666 seconds)
    (8/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.433662616 seconds)
    (9/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.05081362 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.579523094 seconds)
    (11/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.437238604 seconds)
    (12/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.338603067 seconds)
    (13/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.296742776 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.353031244 seconds)
    (15/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.309992712 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.33836185 seconds)
    (17/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.309303183 seconds)
    (18/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.452961425 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.695238508 seconds)
    (20/286) benchmarking ("sort", Int8, false)...
    done (took 2.328189796 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.178943971 seconds)
    (22/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.815916466 seconds)
    (23/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.373600821 seconds)
    (24/286) benchmarking ("sort", Float64, true)...
    done (took 2.312074538 seconds)
    (25/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.312034103 seconds)
    (26/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.413797058 seconds)
    (27/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.29962994 seconds)
    (28/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.354187742 seconds)
    (29/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.147848334 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.114717945 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.117356908 seconds)
    (32/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.130736881 seconds)
    (33/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.44481379 seconds)
    (34/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.450523103 seconds)
    (35/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.338770887 seconds)
    (36/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.317265796 seconds)
    (37/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.514500566 seconds)
    (38/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.31605071 seconds)
    (39/286) benchmarking ("sort", Int64, true)...
    done (took 2.312422709 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.634469965 seconds)
    (41/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.318229625 seconds)
    (42/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.2070426 seconds)
    (43/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.376565948 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.178323353 seconds)
    (45/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.422577085 seconds)
    (46/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.303896336 seconds)
    (47/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.301085982 seconds)
    (48/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.323164832 seconds)
    (49/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.420709441 seconds)
    (50/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.302825926 seconds)
    (51/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.651962458 seconds)
    (52/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.301832856 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.424590178 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.578783843 seconds)
    (55/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.338759158 seconds)
    (56/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.325018359 seconds)
    (57/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.301087783 seconds)
    (58/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.315983383 seconds)
    (59/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.314025257 seconds)
    (60/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.301543324 seconds)
    (61/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.315828377 seconds)
    (62/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.442897679 seconds)
    (63/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.308945323 seconds)
    (64/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.314167916 seconds)
    (65/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.308750964 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.37452164 seconds)
    (67/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.129111506 seconds)
    (68/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.321889355 seconds)
    (69/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.881932906 seconds)
    (70/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.318861991 seconds)
    (71/286) benchmarking ("sort", Float32, false)...
    done (took 2.37283961 seconds)
    (72/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.043674159 seconds)
    (73/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.31591749 seconds)
    (74/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.417534086 seconds)
    (75/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.566863717 seconds)
    (76/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.31937939 seconds)
    (77/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.317081045 seconds)
    (78/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.400119158 seconds)
    (79/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.230654963 seconds)
    (80/286) benchmarking ("sort", BigInt, true)...
    done (took 2.315108439 seconds)
    (81/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.303661879 seconds)
    (82/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.323129393 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.70658196 seconds)
    (84/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.375888343 seconds)
    (85/286) benchmarking ("sort", Int64, false)...
    done (took 2.315074037 seconds)
    (86/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.303239731 seconds)
    (87/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.31496978 seconds)
    (88/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.24609736 seconds)
    (89/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.315861763 seconds)
    (90/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.330209475 seconds)
    (91/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.644208102 seconds)
    (92/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.650707934 seconds)
    (93/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.344208144 seconds)
    (94/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.32882455 seconds)
    (95/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.426541844 seconds)
    (96/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.30303861 seconds)
    (97/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.826188622 seconds)
    (98/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.313734136 seconds)
    (99/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.30660704 seconds)
    (100/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.054390459 seconds)
    (101/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.335146581 seconds)
    (102/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.112874961 seconds)
    (103/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.331791569 seconds)
    (104/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.347219925 seconds)
    (105/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.422690458 seconds)
    (106/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.655927136 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.327437174 seconds)
    (108/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.307690072 seconds)
    (109/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.749942414 seconds)
    (110/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.304541485 seconds)
    (111/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.319088695 seconds)
    (112/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.309453387 seconds)
    (113/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.359319693 seconds)
    (114/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.342778879 seconds)
    (115/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.892564931 seconds)
    (116/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.529899649 seconds)
    (117/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.315218156 seconds)
    (118/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.426163047 seconds)
    (119/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.459658218 seconds)
    (120/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.328909881 seconds)
    (121/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.302911598 seconds)
    (122/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.385219781 seconds)
    (123/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.332964883 seconds)
    (124/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.307122364 seconds)
    (125/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.509321735 seconds)
    (126/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.308842823 seconds)
    (127/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.337818669 seconds)
    (128/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.335815129 seconds)
    (129/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.309273124 seconds)
    (130/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.152645558 seconds)
    (131/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.309967109 seconds)
    (132/286) benchmarking ("sort", Bool, false)...
    done (took 1.834363701 seconds)
    (133/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.342867679 seconds)
    (134/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.418007995 seconds)
    (135/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.574818068 seconds)
    (136/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.915371945 seconds)
    (137/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.320941045 seconds)
    (138/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.223073082 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.720599363 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.064230541 seconds)
    (141/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.576483167 seconds)
    (142/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.322486337 seconds)
    (143/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.227941266 seconds)
    (144/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.463319874 seconds)
    (145/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.33892974 seconds)
    (146/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.349377105 seconds)
    (147/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.431460532 seconds)
    (148/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.329205502 seconds)
    (149/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.347636373 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.923097132 seconds)
    (151/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.307055693 seconds)
    (152/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.318865374 seconds)
    (153/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.312456845 seconds)
    (154/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.070082138 seconds)
    (155/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.347679454 seconds)
    (156/286) benchmarking ("sort", Float32, true)...
    done (took 2.3204265 seconds)
    (157/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.318624886 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.325959874 seconds)
    (159/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.313671847 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.331965738 seconds)
    (161/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.319239521 seconds)
    (162/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.342817354 seconds)
    (163/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.38449089 seconds)
    (164/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.30738773 seconds)
    (165/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.328929361 seconds)
    (166/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.314854287 seconds)
    (167/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.335885123 seconds)
    (168/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.661456095 seconds)
    (169/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.349863605 seconds)
    (170/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.385419385 seconds)
    (171/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.320062046 seconds)
    (172/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.33585056 seconds)
    (173/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.308123806 seconds)
    (174/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.406394628 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.189276714 seconds)
    (176/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.893522429 seconds)
    (177/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.312224081 seconds)
    (178/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.343230149 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.347445118 seconds)
    (180/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.494901826 seconds)
    (181/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.366770454 seconds)
    (182/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.341809487 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.641187289 seconds)
    (184/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.382590097 seconds)
    (185/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.328372784 seconds)
    (186/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.347619515 seconds)
    (187/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.194713504 seconds)
    (188/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.347446667 seconds)
    (189/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.336324762 seconds)
    (190/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.155867115 seconds)
    (191/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.310082836 seconds)
    (192/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.308862866 seconds)
    (193/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.322588234 seconds)
    (194/286) benchmarking ("sort", Bool, true)...
    done (took 2.322357023 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.37906998 seconds)
    (196/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.315791407 seconds)
    (197/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.312699192 seconds)
    (198/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.408684227 seconds)
    (199/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.024514331 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.713327315 seconds)
    (201/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.820877384 seconds)
    (202/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.328143186 seconds)
    (203/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.309780639 seconds)
    (204/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.351337722 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.32423335 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.525651397 seconds)
    (207/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.275170463 seconds)
    (208/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.310888035 seconds)
    (209/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.814301373 seconds)
    (210/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.333677473 seconds)
    (211/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.315062501 seconds)
    (212/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.337456995 seconds)
    (213/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.31343588 seconds)
    (214/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.062513468 seconds)
    (215/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.345738786 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.350328898 seconds)
    (217/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.31005881 seconds)
    (218/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.313249488 seconds)
    (219/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.406383993 seconds)
    (220/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.364249017 seconds)
    (221/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.32327259 seconds)
    (222/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.357131437 seconds)
    (223/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.354300737 seconds)
    (224/286) benchmarking ("sort", Int8, true)...
    done (took 2.326811845 seconds)
    (225/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.323903975 seconds)
    (226/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.058461091 seconds)
    (227/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.452887469 seconds)
    (228/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.3129539 seconds)
    (229/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.329167727 seconds)
    (230/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.341341378 seconds)
    (231/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.313306871 seconds)
    (232/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.337979183 seconds)
    (233/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.331705207 seconds)
    (234/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.343282368 seconds)
    (235/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.348922705 seconds)
    (236/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.414159197 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.529650105 seconds)
    (238/286) benchmarking ("sort", Float64, false)...
    done (took 2.345857505 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.933131923 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.351913299 seconds)
    (241/286) benchmarking ("sort", BigInt, false)...
    done (took 2.326556835 seconds)
    (242/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.327358964 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.715956778 seconds)
    (244/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.325403805 seconds)
    (245/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.314557828 seconds)
    (246/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.329647018 seconds)
    (247/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.337361154 seconds)
    (248/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.344567654 seconds)
    (249/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.564800629 seconds)
    (250/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.328705677 seconds)
    (251/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.649531764 seconds)
    (252/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.317600426 seconds)
    (253/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.586840796 seconds)
    (254/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.34291407 seconds)
    (255/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.35020659 seconds)
    (256/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.324741072 seconds)
    (257/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.442684223 seconds)
    (258/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.815373826 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.41090165 seconds)
    (260/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.312652393 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.427462487 seconds)
    (262/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.424261351 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.44274598 seconds)
    (264/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.411503828 seconds)
    (265/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.316145106 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.32747581 seconds)
    (267/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.31417128 seconds)
    (268/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.412292217 seconds)
    (269/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.076637474 seconds)
    (270/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.357533569 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.370751165 seconds)
    (272/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.31388284 seconds)
    (273/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.80743969 seconds)
    (274/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.149951816 seconds)
    (275/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.450230993 seconds)
    (276/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.326581672 seconds)
    (277/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.328849087 seconds)
    (278/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.393761178 seconds)
    (279/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.327885455 seconds)
    (280/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.336726284 seconds)
    (281/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.321197742 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.350356709 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.867368918 seconds)
    (284/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.313595846 seconds)
    (285/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.038372904 seconds)
    (286/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.332396041 seconds)
  done (took 561.117967081 seconds)
done (took 562.349302191 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.36052822 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369559595 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.340401455 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.360869164 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.450843918 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.515109337 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.349510679 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.341286859 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.388940398 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.388532481 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.337526965 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.51601484 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.340165481 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.337983535 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.339769741 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367991927 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.328152914 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.342796577 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.354455917 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.349089883 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.355429072 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.336648313 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.389363551 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.513881544 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.343515197 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.343259914 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.342474338 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.35903173 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.451716999 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.342445691 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.346566049 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.351044375 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.3341643 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.338451695 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.336178591 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.359746913 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.350512043 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.351678054 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.345363651 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.372216471 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.339893464 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.340445503 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.340359367 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.343299992 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.341367909 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.344557936 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.342202957 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.349475162 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369550325 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368734819 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.340797838 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.355351468 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.344567887 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.343872986 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.353140242 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.340815141 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.347289716 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373192546 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.36191026 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37484395 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.341677971 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.346531009 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.344626703 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.357935893 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.34946239 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.331128615 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.340686389 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.346458208 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.330704148 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.353202415 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.341297407 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.351104377 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.344308913 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.355555145 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.373625438 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.332238907 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.342444115 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.344638634 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.350406372 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.341192673 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.354238504 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37179669 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.350798432 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.344927612 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371615466 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.521085127 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.355235976 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.344403329 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.354692464 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.364221069 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.351611297 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.353680273 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.348404577 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.34073488 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.355023195 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.34993257 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.346332101 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.347725206 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.349693915 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.356472492 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.332678511 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378205628 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.343043671 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.342212612 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.344751507 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.358401978 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.334053199 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.344452491 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.367620212 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.39307735 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.348857564 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.346641476 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.349124646 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378072571 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.356166794 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.350211451 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.341780103 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.348704248 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.341523938 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.361575907 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.349164528 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.345044666 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376205695 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.348914918 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.34309402 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.335380116 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.350110578 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375540128 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.466287298 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.357273103 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.37665602 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.344523109 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.350733734 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.376859994 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377707099 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.37809521 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.351953937 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37876733 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.361832946 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.344912698 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.356942987 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.358435748 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.349012613 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.353386326 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.342239764 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.377538759 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376264159 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376222046 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.36994604 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.466929335 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.34623169 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.335643121 seconds)
done (took 223.923093997 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.408051195 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.343783887 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.431434744 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.343737052 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.444965322 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.444659069 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.344731373 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.343864919 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.341875841 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.72504423 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.342483739 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.343699591 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.344285101 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.342529786 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.428797592 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.346854018 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.343300894 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.710258282 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.345862894 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.416924801 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.343161232 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.343773976 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.34556278 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.730889835 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.34439677 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.340536588 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.416902389 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.346729542 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.694024045 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.339912893 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.344018293 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.694807679 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.435829017 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.36399147 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.357409025 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.354538365 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.445885369 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.364758431 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.427195153 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.427864669 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.433418022 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.386918164 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.339878922 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.345807579 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.348473182 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.348060377 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.346001941 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.375024335 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.346265828 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.346661653 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.712152639 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.356858807 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.355522697 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.345735242 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.345394257 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.369248281 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.346081283 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.348157569 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.438887187 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.349759281 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.410532759 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.733715926 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.731994669 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.348173437 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.345435845 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.347001178 seconds)
  done (took 105.358011709 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.414362727 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.422357375 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.460097373 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.36572078 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.399873984 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.463793585 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.366747908 seconds)
  done (took 11.151446663 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.356492483 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.350962349 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.399504282 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.399991769 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.34914613 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.565524345 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.350742669 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.362464665 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.347369548 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.425670522 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.352029433 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.352190923 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.357191099 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.34667642 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.399097321 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.362348946 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.464920347 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.351742208 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.352978186 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.501163684 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348492934 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.358384022 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.425222238 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.362293717 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.352705286 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.358048764 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.260511387 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.35061042 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349056782 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.351557921 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348049472 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.449581504 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.351902708 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.347233334 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.348321331 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.510834842 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.352305586 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349040671 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.352647917 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.351588424 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.353099607 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.352467885 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.35187363 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.348236846 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.352767083 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.375744379 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.352845225 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.352960779 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.352913649 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.352901419 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.427055554 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.353067494 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.350854651 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.351047575 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.42809102 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.360892114 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.354707662 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.349181234 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.354742304 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35183217 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.503628504 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.401118358 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.352676004 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.400177515 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.355096763 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.354324808 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.353116131 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.353609109 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.445029061 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.355317705 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.401025659 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.352883856 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.577012821 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.378368045 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356408436 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.357561986 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.357107348 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354917462 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.349710716 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.360442906 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.352937163 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.354335408 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.36067481 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35259735 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35216574 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.539962791 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.511005693 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.352732074 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.366955503 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.362035309 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.352905812 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.429325663 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.356122326 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.353374852 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.406585344 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.470045647 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.431444111 seconds)
  done (took 139.941514684 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.361273695 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.363908772 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.35882308 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.37773597 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.35644456 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.355133957 seconds)
  done (took 9.439130144 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.357661684 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.357628795 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.355443943 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.356271075 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.355603828 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.356972084 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.356485077 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.356846346 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.360054458 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.35811486 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.35752962 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.359672768 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.358041726 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.357340618 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.35732942 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.357743211 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.357930317 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.355557251 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.357929566 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358777699 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.355725904 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.356453315 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.358365059 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.358475457 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.362815286 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.359729934 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.366230465 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.358477387 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.357665472 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.364622597 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.378951876 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.359887305 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.358346762 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.363971066 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.363889377 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.359627308 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363883756 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.361201947 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.356684827 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.359711726 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.361823551 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359949949 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.359074128 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.363502891 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.36143057 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.363822139 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.3666441 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.367747984 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.361150869 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.362688189 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.362595518 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.361516676 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.360830782 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.362798038 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.362572746 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380582935 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.365570339 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.362708594 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.36161996 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.36240145 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.363482634 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.362786406 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.361067922 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.364219444 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.359474539 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.362333266 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.36230151 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.36500151 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361830327 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.3614166 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.363725345 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.358846593 seconds)
  done (took 100.258111771 seconds)
done (took 367.404070955 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.786403699 seconds)
  done (took 4.058998651 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.445107473 seconds)
  done (took 3.718789825 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.214980049 seconds)
  done (took 22.494772943 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.422435574 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.390923702 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.368463068 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.354572101 seconds)
  done (took 10.807498307 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.580730663 seconds)
  done (took 3.851461855 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.354541408 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.354485589 seconds)
  done (took 5.982259425 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.657629105 seconds)
  done (took 3.930935918 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.760958217 seconds)
  done (took 4.04276444 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.38190551 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.370623752 seconds)
  done (took 6.034224595 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.347993482 seconds)
  done (took 3.620929052 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.246977004 seconds)
  done (took 16.521105896 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.354443915 seconds)
  done (took 3.631181303 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.395552726 seconds)
  done (took 3.669226603 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.881957493 seconds)
  done (took 6.153767758 seconds)
done (took 99.790374231 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.355372887 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.358893655 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.355041019 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.355757757 seconds)
  done (took 10.698346817 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.396227312 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.396836945 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.398700177 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.407817528 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.401187826 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.395975439 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.390641099 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.389433719 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.408366653 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.400724537 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.399244684 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.399874682 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.402578786 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.390162234 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.399252213 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.398781469 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.408146433 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.417025833 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.390821241 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.401160937 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.365583849 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.409627047 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.40061849 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.365802729 seconds)
  done (took 34.808662378 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.884226083 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.435292935 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.518650467 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.417495443 seconds)
  done (took 7.529432129 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.417994932 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.417498445 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.429666814 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.468586187 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.504498871 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.429727368 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.39292085 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.387552474 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.37260153 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.419443668 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.494370866 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.432156022 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.509314144 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.365674813 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.564377355 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.365811459 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.365364346 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.41803768 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.469534176 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.482605814 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.365293019 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.417022537 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.421707014 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.435740325 seconds)
  done (took 35.622483863 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.366338072 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.386460965 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.365239247 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.363978497 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.372849545 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.364865868 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.366615606 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.366572977 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.366101824 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.372115945 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.365382694 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.378376414 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.364624498 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.36686596 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.371810766 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.36841878 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.372784223 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.365999736 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.366412821 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.373031555 seconds)
  done (took 28.660446305 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.359214621 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.359909069 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.712533157 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.616035642 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.358892157 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.361172416 seconds)
  done (took 14.044751231 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.43528591 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.592162272 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.368342996 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.714735345 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.800806088 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.372531515 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.367800482 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.610122945 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.922681581 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.906043458 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.426488855 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.434884899 seconds)
  done (took 20.230427877 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.372250594 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.366453487 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.371655003 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.383236495 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.421576999 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.386627709 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.376277581 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.361506246 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.424361482 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.442819629 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.389734689 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.422755123 seconds)
  done (took 21.998871888 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450470061 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.364371259 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.374165221 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36362945 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363036349 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.576692113 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381999969 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.073067905 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.388447119 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640355487 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379943946 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456695289 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.623634783 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3764908 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370630384 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.368180228 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59361075 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853044736 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369015461 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365744564 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409753073 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365952305 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380868047 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.580722245 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.370639917 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365498654 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.628058429 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.36664888 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649897388 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381359122 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378091982 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367929496 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641612596 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028037685 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483535868 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.579538835 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370645172 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369853741 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.378914446 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.3690724 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395530824 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37106883 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379581297 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368620031 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.368434917 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369179878 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088785733 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.393504954 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.366731515 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368899625 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627068802 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466358776 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.373092406 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370216245 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437583691 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369783442 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.374954871 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465918669 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945374447 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368971138 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374060919 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.374824315 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372359532 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372357506 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007433882 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.375945558 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.373983503 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.373951488 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370579738 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370589526 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406187122 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371293891 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.397192313 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37117162 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066123156 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381017493 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373585127 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918268248 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38541271 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.375019102 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598731305 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37211329 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371549166 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.371272363 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371377898 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077867192 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381039637 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.358704398 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413548051 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.099060355 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.606375994 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39308706 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394944429 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.595540078 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.358554621 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372974032 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.385378517 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374903177 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39553208 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.087521081 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392108685 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.375786181 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629009014 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.586367683 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37819849 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.361985121 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853222102 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390980151 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.409063727 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372363116 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.591074173 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.957607935 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389606785 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373395583 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394651887 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373098213 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121273721 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374887176 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.478207956 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372963281 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66271023 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.161287188 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375094806 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441188268 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378634701 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374163688 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373201753 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379675155 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37422839 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.58036643 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401638054 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.388379746 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.375434334 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374618994 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.371452287 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376450402 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.375726685 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.598890435 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375368402 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655473004 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375034703 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373909222 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374459287 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.599493376 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.381740059 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.712548532 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634844398 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381800259 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389893579 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390825403 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394135479 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480400637 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39840227 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.376075078 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.635839866 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.379553386 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.379913695 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37597085 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38270033 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38413985 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.381807579 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377708797 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959868311 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35717017 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380019925 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.266024369 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.391411239 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444785921 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.383564716 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593210539 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.379031354 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383782872 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.383354795 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.374229689 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601424193 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387799789 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.376342909 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46234971 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.856070389 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.97768722 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392396444 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.378281349 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.374753464 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.376058167 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378332088 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379778818 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378224835 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591908427 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396806062 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378131795 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.981389496 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380665774 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379230931 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.38815586 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.392259022 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.385944645 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380200911 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.384800501 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380863495 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386684104 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.394781944 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522814701 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.393652477 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379442454 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.896250228 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384783073 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380057103 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37992708 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413845307 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379283634 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193901522 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639111007 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388002653 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636781967 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380854943 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.414103243 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.378645878 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391152539 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38168684 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.402342301 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406045968 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.392103815 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380204281 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386439403 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948220397 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109399872 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916664101 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382443638 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.383281124 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385117629 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.10083017 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400988883 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381029274 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616784078 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.116458452 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400334801 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863176654 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.410799324 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139640975 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641478491 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612174703 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380936689 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.382791555 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643382063 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598188733 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417467481 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388596437 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389645732 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.367230268 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942680424 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40959055 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461267913 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101559978 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403322376 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384937211 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.381776559 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.384556494 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81462547 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402326446 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383073276 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389466789 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389718244 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194576163 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386455288 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385191772 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007389089 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387074911 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.87052529 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404161527 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.60079208 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.400530094 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.389861938 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.382402097 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.387106472 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.643271576 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644018444 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386078985 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387177256 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930119203 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.240145636 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.390856947 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384880201 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131715715 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387606778 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673500371 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.387300528 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.395525132 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390311183 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383879924 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384684277 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.384045406 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387831193 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362946501 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876477428 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.391461198 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405535649 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388031596 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23594611 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642598831 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.40041525 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.971537065 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61266013 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3854042 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410052473 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.389340943 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386761057 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.374663663 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387039655 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623739236 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407023158 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.612343105 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.38825578 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.395517993 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.416673841 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600897164 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388525369 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403514876 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633066635 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.39086194 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.391752539 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111936399 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415460425 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38908698 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390824067 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408921583 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411909474 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458358679 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607159499 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.404686448 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.399078352 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801919139 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409163058 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406457509 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.402590706 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483646498 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389151492 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.3972613 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.165903794 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978574847 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122898834 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.980716156 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650237326 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393098053 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39213509 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390357389 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54283862 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391431536 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663964477 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389156539 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.39611101 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413634717 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389723804 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394146759 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608021159 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665825832 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389492615 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397792953 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39684496 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.389538759 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402318077 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.601913762 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884154319 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946217095 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394127381 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389856368 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.116546566 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684767928 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390124856 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390539697 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390426277 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.396155114 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.41170757 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.397676615 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390771871 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555980481 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650184459 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060213862 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.420814539 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.417389985 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.168585616 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39180171 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647988172 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389978637 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610909799 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984507909 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.097637915 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661137861 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463215949 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609299107 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.396152097 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541538119 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.395464121 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395221904 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392558471 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238811418 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.390413185 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.402601339 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987313679 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658421135 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.397409396 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.39718615 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419385135 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.40454215 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.616511086 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113399335 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621439861 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404331364 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395129047 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394584086 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98556161 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656955016 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39628727 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.399175768 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637637087 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399584247 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41964488 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.846462457 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.392755954 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950194333 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.366313105 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416663446 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407264031 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.106173739 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986692941 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.393280692 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909949566 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398244996 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395354876 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678166801 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.401534994 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405777015 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679990562 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.398938067 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.396692344 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621619295 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.98659898 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163180856 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.399199572 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419440274 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.399037508 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394567806 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454393827 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396056455 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404327483 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.827250263 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415602772 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396866584 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406491635 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.405715678 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41152418 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.400024028 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396323227 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.402352625 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.394447626 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.384320197 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410789063 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497980031 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965041802 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418801526 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.070366178 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.7267972 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.654115728 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403197471 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.388345154 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.403511921 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398218861 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399558683 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398378232 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398483088 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958411797 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.408288977 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.413546687 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403288348 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.61558169 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611170946 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39877549 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618195168 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410106619 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419445418 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.385126542 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399705319 seconds)
  done (took 978.167438594 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.421017724 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.439059505 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.438109146 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.42087045 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.439424455 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.446995586 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.475507798 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.421176247 seconds)
  done (took 20.815135386 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.39999532 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.408673217 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.412226268 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.409753038 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.412039279 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.879421749 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.431085152 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.40991107 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.411608979 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.401750263 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.409617556 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.085761898 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.427216965 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.403564031 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.398626804 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.409012679 seconds)
  done (took 33.030595274 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.333044475 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.537639753 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.273028091 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.440871514 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.448403305 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.404923727 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.624821955 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.420468333 seconds)
  done (took 26.796810209 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.413650133 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.412373912 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.413124327 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.41365393 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.413078347 seconds)
  done (took 8.380593694 seconds)
done (took 1242.057609069 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.405549818 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.408454574 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.405224717 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.408510907 seconds)
  done (took 6.94234057 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.387969659 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.389954922 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.390743225 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.407580723 seconds)
  done (took 9.892160344 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.107486943 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.046184993 seconds)
  done (took 5.467009209 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.405429122 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.168676527 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.141947485 seconds)
  done (took 8.033449291 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.710645865 seconds)
  done (took 3.027883528 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.814651968 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.771264145 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.601380448 seconds)
  done (took 6.505411444 seconds)
done (took 41.181471477 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.411274087 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.654645471 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.561238161 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.402750867 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.564818732 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.560113943 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.142846125 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.415914473 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.404865722 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.40350703 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.404447891 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.564146579 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.124999689 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.655620097 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.125448601 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.654141962 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.566113609 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.404009303 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.406235907 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.404676115 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.143313147 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.406670302 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.405011647 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.414578359 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.565896187 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.550330258 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.417231983 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.656838601 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.40620704 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.421935304 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.551243369 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.408789839 seconds)
  done (took 83.499064124 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.404896736 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.406662573 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.407525376 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.405516914 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.416400549 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.405686061 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.406447508 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.404959774 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.41312855 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.407385035 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.406069661 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.409612116 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.408001003 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.41721642 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.407278427 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.417153982 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.405360123 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.405086989 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.406138861 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.424154611 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.405567603 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.40582909 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.422370693 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.406015358 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.406909389 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.422146829 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.406632522 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.414434347 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.406626182 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.408111823 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.406682562 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.424222075 seconds)
  done (took 78.441648087 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.410160783 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.405721114 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.410004687 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.407525913 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.407651392 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.408166961 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.408864813 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.406105368 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.411616817 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.411162615 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.406327325 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.424591827 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.409171364 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.419719263 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.407977412 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.418776895 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.409405616 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.419027481 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.408716519 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.410152911 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.425994799 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.411138975 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.410203884 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.41564155 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.408936069 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.411668648 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.409138205 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.409588694 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.419661073 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.409624054 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.40929502 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.408772085 seconds)
  done (took 78.492202681 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.604913298 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.417178697 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.419097711 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.369157365 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.417143831 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.416581423 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.409338775 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.614516717 seconds)
  done (took 14.989710052 seconds)
done (took 256.740874221 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.424188791 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.419666944 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.618837105 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.439310871 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.410055159 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.437251859 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.43852826 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.632516377 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.404789696 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.651884878 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.4381852 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.439801692 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.416325711 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.436109345 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.689419018 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.56121691 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.332596805 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.413580606 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.767269206 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.435536919 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.682450403 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.411737594 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.69924397 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.379468449 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.432247411 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.422430763 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.420152531 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.325650433 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.455258685 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.756368819 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.418211313 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.399875373 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.500086589 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.51895413 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.6282103 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.571118615 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.423454713 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.496966918 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.639968729 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.415224557 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.413136816 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.199662974 seconds)
  done (took 84.741040909 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.41876886 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.541595803 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.422036878 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.420035876 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.422739788 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.545225975 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.516386732 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.421099934 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.420838985 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.418038557 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.419787991 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.420903139 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.421999225 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.421750755 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.421357563 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.419346818 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.421033249 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.422049558 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.421580364 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.465958572 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.546876935 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.444775239 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.415334638 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.421886512 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.525142785 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.561907252 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.420755894 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.415506694 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.465217975 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.423499163 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.425758528 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.468466605 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.423323116 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.424512455 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.540965317 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.525368037 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.446212786 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.421110117 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.54124219 seconds)
  done (took 57.987445731 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.425079262 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.667644265 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.840983497 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.430801356 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.422500237 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.428777862 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.501433893 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.42626322 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.426218772 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.428186843 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.581837041 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.427907791 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.457608068 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.865842366 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.429545219 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.424631309 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.425872965 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.425544506 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.679514545 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.434407121 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.524197193 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.427181381 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.503189458 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.435976227 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.447374862 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.426053459 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.429084411 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.998489858 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.429786056 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.582897838 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.209227942 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.504688791 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.975153869 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.87732423 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.209656509 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.432419742 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.426097157 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.582107499 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.428841268 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.425831236 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.503043883 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.428727497 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.854170839 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.106519018 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.445332486 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.428068479 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.022256574 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.584171455 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.667506949 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.435254503 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.875424919 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.431039705 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.428344273 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.427276242 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.667092897 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.433556594 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.425775624 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.041992224 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.450758883 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.503849505 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.428588283 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.429204297 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.694900882 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.428583616 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.676377936 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.42895555 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.435828945 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.449033818 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.858670408 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.431057197 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.130553145 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.446877422 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.428301826 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.582127032 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.67554632 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.052346089 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.432046486 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.693956684 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.989209801 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.503564732 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.432966153 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.988654049 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.509293521 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.433800817 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.43157834 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.432129606 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.428894391 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.476369518 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.504126544 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.071864929 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.135097742 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.068648125 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.524771329 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.443679294 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.431178178 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.042933704 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.448682242 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.429544764 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.850340516 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.132870788 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.448974971 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.436461948 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.135371605 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.449692458 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.508030619 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.435834454 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.866523649 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.432144939 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.475612549 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.431705808 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.437362351 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.455649151 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.509415977 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.434664097 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.43110993 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.108643724 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.607266122 seconds)
  done (took 187.935809806 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.434819515 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.425439351 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.433902177 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.424814411 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.424694668 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.433714823 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.425029628 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.424160414 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.432129889 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.424017519 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.425991828 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.426086086 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.425862091 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.436429697 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.437685813 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.434843036 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.425489652 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.425457688 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.425682611 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.42534092 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.425122404 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.446150143 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.425813088 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.426436409 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.427638903 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.426901006 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.434933518 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.428273362 seconds)
  done (took 65.349043985 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.433240818 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.984424678 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.436271642 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.563040201 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.456890838 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.430742887 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.559707676 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.489769849 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.436351583 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.431987265 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.431567495 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.7300393 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.435471093 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.937622585 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.624638893 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.586877001 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.939004059 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.452956484 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.43286834 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.432442623 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.56462811 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.448589384 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.732383841 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.989605084 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.437003642 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.995917372 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.431691401 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.437067887 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.435331979 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.997447335 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.438094737 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.733240984 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.511701107 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.495899886 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.990750504 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.941605352 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.958486151 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.58272328 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.438529796 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.432567853 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.434518076 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.426338998 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.992906188 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.437701559 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.435227984 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.98679578 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.451674376 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.435312135 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.44137912 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.432549243 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.493465137 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.495830773 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.735377839 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.996909872 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.511100856 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.445302006 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.563734798 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.810799091 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.438607918 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.938712843 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.440529596 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.996234461 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.454273464 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.424070032 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.435623037 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.439752029 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.582013276 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.567591002 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.94548424 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.452648709 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.942288503 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.602582225 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.43554807 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.433115772 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.436897118 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.994229935 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.950121246 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.603358017 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.568664139 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.629854909 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.428054372 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.43479683 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.427802341 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.512541762 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.436182382 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.997311213 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.963929097 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.457163009 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.438497307 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.437669766 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.438566055 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.612304913 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.014024559 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.515915722 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.939352122 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.756142603 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.740371825 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.43940639 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.495607272 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.453035604 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.737451047 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.439192588 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.493592146 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.899018629 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.740684083 seconds)
  done (took 170.048976747 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.674237983 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.457566807 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.532161729 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.589282844 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.027803611 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.031882472 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.431291688 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.559271833 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.548108926 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.692217663 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.433347456 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.529579346 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.649159354 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.515731502 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.146758391 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.508134124 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.532113963 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.582156328 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.581219484 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.433395883 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.076865169 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.744778036 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.619932082 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.452713126 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.541255577 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.191970718 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.016436542 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.960734794 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.609555903 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.433791444 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.958069287 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.449951236 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.373173688 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.11166207 seconds)
  done (took 66.338424332 seconds)
done (took 633.724196511 seconds)
SAVING RESULT...
DONE!
